id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1151,Integrability,message,messages,1151,"precated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1940,Integrability,message,messages,1940,"iption; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to dec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2029,Integrability,message,messages,2029," (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2397,Integrability,message,messages,2397,"ds. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:686,Modifiability,extend,extends,686,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:791,Modifiability,inherit,inherited,791,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:844,Modifiability,extend,extends,844,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1583,Modifiability,inherit,inherited,1583,"er.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1746,Modifiability,inherit,inherited,1746,"s Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public sta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1694,Security,hash,hashCode,1694,".LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:389,Testability,log,logging,389,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:500,Testability,log,logging,500,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:731,Testability,log,log,731,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:938,Testability,log,log,938,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:965,Testability,log,logging,965,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1007,Testability,log,logging,1007," 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of m",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1071,Testability,log,logging,1071,"    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1104,Testability,log,logging,1104,"s. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info loggin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1126,Testability,log,logging,1126,"precated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1173,Testability,log,logging,1173," Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if someth",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1915,Testability,log,logging,1915,"iption; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to dec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2011,Testability,log,logging,2011," (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2097,Testability,log,logging,2097,"urn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2173,Testability,log,logging,2173," something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum cla",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2286,Testability,log,logging,2286,"ds. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2393,Testability,log,log,2393,"ds. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2466,Testability,log,logging,2466,"ds. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:473,Integrability,interface,interface,473,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:17,Testability,log,logging,17,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:334,Testability,log,logging,334,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:366,Testability,log,logging,366,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:387,Testability,log,logging,387,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:580,Testability,log,logging,580,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html:627,Testability,log,log,627,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html:17,Testability,log,logging,17,". qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.logging. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.logging.LogManager. Interface Hierarchy. qupath.lib.gui.logging.TextAppendable. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.logging.LogManager.LogLevel. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html:227,Testability,log,logging,227,". qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.logging. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.logging.LogManager. Interface Hierarchy. qupath.lib.gui.logging.TextAppendable. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.logging.LogManager.LogLevel. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html:322,Testability,log,logging,322,". qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.logging. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.logging.LogManager. Interface Hierarchy. qupath.lib.gui.logging.TextAppendable. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.logging.LogManager.LogLevel. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html:378,Testability,log,logging,378,". qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.logging. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.logging.LogManager. Interface Hierarchy. qupath.lib.gui.logging.TextAppendable. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.logging.LogManager.LogLevel. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html:565,Testability,log,logging,565,". qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.logging. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.logging.LogManager. Interface Hierarchy. qupath.lib.gui.logging.TextAppendable. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.logging.LogManager.LogLevel. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html:511,Integrability,interface,interface,511,". TextAppendable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Interface TextAppendable. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface TextAppendable; Interface to indicate anything for which text can be appended. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. Method Details. appendText; void appendText(String text); Append the specified text to the appendable. Parameters:; text - the text to be appended. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html:352,Testability,log,logging,352,". TextAppendable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Interface TextAppendable. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface TextAppendable; Interface to indicate anything for which text can be appended. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. Method Details. appendText; void appendText(String text); Append the specified text to the appendable. Parameters:; text - the text to be appended. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:3217,Deployability,update,updateMeasurementList,3217," an ImageData. String; getStringValue(PathObject pathObject,; String column). Get a string representation of the value. String; getStringValue(PathObject pathObject,; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:4772,Deployability,update,updateMeasurementList,4772," a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live measurements.; ; Note that this method is subject to change (in location and behavior). Parameters:; imageData - ; layerServer - server to return the pixel layer data; if null, the property will be removed. getPixelLayer; public static ImageServer<BufferedImage> getPixelLayer(ImageData<?> imageData); Request the pixel layer from an ImageData.; ; Note that this method is subject to change (in location and behavior). Parameters:; imageData - ; Returns:. updateMeasurementList; public void updateMeasurementList(); Update the entire measurement list for the current objects. See Also:. setImageData(ImageData, Collection). setPredicate; public void setPredicate(Predicate<? super PathObject> predicate); Set a predicate used to filter the rows of the table. Parameters:; predicate - . refreshEntries; public void refreshEntries(); Refresh the measurement values. createNumericMeasurement; @Deprecated; public Binding<Number> createNumericMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific numeric measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. createStringMeasurement; @Deprecated; public Binding<String> createStringMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific String measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or d",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:4807,Deployability,update,updateMeasurementList,4807," a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live measurements.; ; Note that this method is subject to change (in location and behavior). Parameters:; imageData - ; layerServer - server to return the pixel layer data; if null, the property will be removed. getPixelLayer; public static ImageServer<BufferedImage> getPixelLayer(ImageData<?> imageData); Request the pixel layer from an ImageData.; ; Note that this method is subject to change (in location and behavior). Parameters:; imageData - ; Returns:. updateMeasurementList; public void updateMeasurementList(); Update the entire measurement list for the current objects. See Also:. setImageData(ImageData, Collection). setPredicate; public void setPredicate(Predicate<? super PathObject> predicate); Set a predicate used to filter the rows of the table. Parameters:; predicate - . refreshEntries; public void refreshEntries(); Refresh the measurement values. createNumericMeasurement; @Deprecated; public Binding<Number> createNumericMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific numeric measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. createStringMeasurement; @Deprecated; public Binding<String> createStringMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific String measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or d",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:5405,Deployability,update,update,5405,"eData - ; layerServer - server to return the pixel layer data; if null, the property will be removed. getPixelLayer; public static ImageServer<BufferedImage> getPixelLayer(ImageData<?> imageData); Request the pixel layer from an ImageData.; ; Note that this method is subject to change (in location and behavior). Parameters:; imageData - ; Returns:. updateMeasurementList; public void updateMeasurementList(); Update the entire measurement list for the current objects. See Also:. setImageData(ImageData, Collection). setPredicate; public void setPredicate(Predicate<? super PathObject> predicate); Set a predicate used to filter the rows of the table. Parameters:; predicate - . refreshEntries; public void refreshEntries(); Refresh the measurement values. createNumericMeasurement; @Deprecated; public Binding<Number> createNumericMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific numeric measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. createStringMeasurement; @Deprecated; public Binding<String> createStringMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific String measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyLi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:5756,Deployability,update,update,5756,"updateMeasurementList; public void updateMeasurementList(); Update the entire measurement list for the current objects. See Also:. setImageData(ImageData, Collection). setPredicate; public void setPredicate(Predicate<? super PathObject> predicate); Set a predicate used to filter the rows of the table. Parameters:; predicate - . refreshEntries; public void refreshEntries(); Refresh the measurement values. createNumericMeasurement; @Deprecated; public Binding<Number> createNumericMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific numeric measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. createStringMeasurement; @Deprecated; public Binding<String> createStringMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific String measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double va",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:6486,Integrability,interface,interface,6486," object or data. Parameters:; pathObject - ; column - ; Returns:. createStringMeasurement; @Deprecated; public Binding<String> createStringMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific String measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:6593,Integrability,interface,interface,6593,"reateStringMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific String measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries p",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:6729,Integrability,interface,interface,6729,"rning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:6826,Integrability,interface,interface,6826,"ers:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllN",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7008,Integrability,interface,interface,7008," String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7135,Integrability,interface,interface,7135,"blic boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified b",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7301,Integrability,interface,interface,7301,"ment name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7415,Integrability,interface,interface,7415,"rapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; G",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7704,Integrability,interface,interface,7704,"om interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; Get a string value, converting to a fixed number of decimal places if the column is numeric. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; decimalPlaces - ; Returns:. getMetadataNames; public ReadOnlyListWrapper<String> getMetadataNames(); ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7852,Integrability,interface,interface,7852,"etDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; Get a string value, converting to a fixed number of decimal places if the column is numeric. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; decimalPlaces - ; Returns:. getMetadataNames; public ReadOnlyListWrapper<String> getMetadataNames(); Get the names of all columns corresponding to metadata (String) values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:8008,Integrability,interface,interface,8008,"etDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; Get a string value, converting to a fixed number of decimal places if the column is numeric. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; decimalPlaces - ; Returns:. getMetadataNames; public ReadOnlyListWrapper<String> getMetadataNames(); Get the names of all columns corresponding to metadata (String) values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:8182,Integrability,interface,interface,8182,"etDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; Get a string value, converting to a fixed number of decimal places if the column is numeric. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; decimalPlaces - ; Returns:. getMetadataNames; public ReadOnlyListWrapper<String> getMetadataNames(); Get the names of all columns corresponding to metadata (String) values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:8397,Integrability,interface,interface,8397,"etDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; Get a string value, converting to a fixed number of decimal places if the column is numeric. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; decimalPlaces - ; Returns:. getMetadataNames; public ReadOnlyListWrapper<String> getMetadataNames(); Get the names of all columns corresponding to metadata (String) values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:8549,Integrability,interface,interface,8549,"etDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; Get a string value, converting to a fixed number of decimal places if the column is numeric. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; decimalPlaces - ; Returns:. getMetadataNames; public ReadOnlyListWrapper<String> getMetadataNames(); Get the names of all columns corresponding to metadata (String) values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:589,Modifiability,extend,extends,589,". ObservableMeasurementTableData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.measure; Class ObservableMeasurementTableData. java.lang.Object; qupath.lib.gui.measure.ObservableMeasurementTableData. All Implemented Interfaces:; PathTableData<PathObject>. public class ObservableMeasurementTableData; extends Object; implements PathTableData<PathObject>; A table data model to supply observable measurements of PathObjects.; ; This includes dynamically-calculated summaries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; NAME_OBJECT_ID. The name used for the Object ID column. Constructor Summary; Constructors. Constructor; Description; ObservableMeasurementTableData();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Binding<Number>; createNumericMeasurement(PathObject pathObject,; String column). Deprecated. Binding<String>; createStringMeasurement(PathObject pathObject,; String column). Deprecated. List<String>; getAllNames(). Return an ordered list of all names, including both numeric measurements and String values. ObservableList<PathObject>; getBackingListEntries(). Access the underlying entries, for which getEntries provides a filtered view. double[]; getDoubleValues(String column). Get all double values for all items. ObservableList<PathObject>; getItems(). Get internal list of the items used to provide measurements. ReadOnlyListWrapper<String>; getMeasurementNames(). Get the names of all numeric measurements. ReadOnlyListWrapper<String>; getMetadataNames(). Get the names of all columns corresponding to metadata (String) values. double; g",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:2848,Modifiability,extend,extends,2848," names of all numeric measurements. ReadOnlyListWrapper<String>; getMetadataNames(). Get the names of all columns corresponding to metadata (String) values. double; getNumericValue(PathObject pathObject,; String column). Get the numeric value from an object for the specific measurement. static ImageServer<BufferedImage>; getPixelLayer(ImageData<?> imageData). Request the pixel layer from an ImageData. String; getStringValue(PathObject pathObject,; String column). Get a string representation of the value. String; getStringValue(PathObject pathObject,; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:3310,Modifiability,inherit,inherited,3310,"presentation of the value. String; getStringValue(PathObject pathObject,; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live mea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:3776,Modifiability,extend,extends,3776," values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live measurements.; ; Note that this method is subject to change (in location and behavior). Parameters:; imageData - ; layerServer - server to return the pixel layer data; if null, the property will be removed. getPixelLayer; public static ImageServer<BufferedImage> getPixelLayer(ImageData<?> imageData); Request the pixel layer from an ImageData.; ; Note that this method is subject to change (in location and behavior). Parameters:; imageData - ; Returns:. updateMeasu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:3384,Security,hash,hashCode,3384,"; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live measurements.; ; Note that this method is subject to change (in location an",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/package-summary.html:524,Integrability,interface,interface,524,". qupath.lib.gui.measure (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.measure. package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html:484,Integrability,interface,interface,484,". PathTableData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.measure; Interface PathTableData<T>. Type Parameters:; T - . All Known Implementing Classes:; ObservableMeasurementTableData. public interface PathTableData<T>; Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate).; ; This can be thought of a table, where items (often PathObject correspond to rows and named columns either return ; numeric or String data.; ; This provides a useful method of wrapping one or more objects, and providing access to metadata, stored measurements and dynamically computed values ; in a way that is amenable to display within a table. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<String>; getAllNames(). Return an ordered list of all names, including both numeric measurements and String values. double[]; getDoubleValues(String column). Get all double values for all items. List<T>; getItems(). Get internal list of the items used to provide measurements. List<String>; getMeasurementNames(). Get the names of all numeric measurements. double; getNumericValue(T pathObject,; String column). Get the numeric value from an object for the specific measurement. String; getStringValue(T item,; String name). Get a string representation of the value. String; getStringValue(T item,; String name,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. Method Details. getAllNames; List<String> getAllNames(); Return an ordered list of all names, including both numeric measurements and String values. Returns:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/PathTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html:813,Integrability,wrap,wrapping,813,". PathTableData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.measure; Interface PathTableData<T>. Type Parameters:; T - . All Known Implementing Classes:; ObservableMeasurementTableData. public interface PathTableData<T>; Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate).; ; This can be thought of a table, where items (often PathObject correspond to rows and named columns either return ; numeric or String data.; ; This provides a useful method of wrapping one or more objects, and providing access to metadata, stored measurements and dynamically computed values ; in a way that is amenable to display within a table. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<String>; getAllNames(). Return an ordered list of all names, including both numeric measurements and String values. double[]; getDoubleValues(String column). Get all double values for all items. List<T>; getItems(). Get internal list of the items used to provide measurements. List<String>; getMeasurementNames(). Get the names of all numeric measurements. double; getNumericValue(T pathObject,; String column). Get the numeric value from an object for the specific measurement. String; getStringValue(T item,; String name). Get a string representation of the value. String; getStringValue(T item,; String name,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. Method Details. getAllNames; List<String> getAllNames(); Return an ordered list of all names, including both numeric measurements and String values. Returns:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/PathTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html:857,Security,access,access,857,". PathTableData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.measure; Interface PathTableData<T>. Type Parameters:; T - . All Known Implementing Classes:; ObservableMeasurementTableData. public interface PathTableData<T>; Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate).; ; This can be thought of a table, where items (often PathObject correspond to rows and named columns either return ; numeric or String data.; ; This provides a useful method of wrapping one or more objects, and providing access to metadata, stored measurements and dynamically computed values ; in a way that is amenable to display within a table. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<String>; getAllNames(). Return an ordered list of all names, including both numeric measurements and String values. double[]; getDoubleValues(String column). Get all double values for all items. List<T>; getItems(). Get internal list of the items used to provide measurements. List<String>; getMeasurementNames(). Get the names of all numeric measurements. double; getNumericValue(T pathObject,; String column). Get the numeric value from an object for the specific measurement. String; getStringValue(T item,; String name). Get a string representation of the value. String; getStringValue(T item,; String name,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. Method Details. getAllNames; List<String> getAllNames(); Return an ordered list of all names, including both numeric measurements and String values. Returns:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/PathTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:985,Deployability,update,updates,985,". AnnotationPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class AnnotationPane. java.lang.Object; qupath.lib.gui.panes.AnnotationPane. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class AnnotationPane; extends Object; implements PathObjectSelectionListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Component for displaying annotations within the active image.; ; Also shows the PathClass list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherite",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:1595,Deployability,update,updates,1595,"nPane; extends Object; implements PathObjectSelectionListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Component for displaying annotations within the active image.; ; Also shows the PathClass list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:2242,Deployability,update,updates,2242,"ge>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChange",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:2366,Deployability,update,updated,2366,"; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:2941,Deployability,update,updates,2941,"<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Speci",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:3065,Deployability,update,updated,3065,"e, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEven",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:3380,Integrability,interface,interface,3380," event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:3510,Integrability,interface,interface,3510," event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:3933,Integrability,interface,interface,3933," event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:4089,Integrability,interface,interface,4089," event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:4226,Integrability,interface,interface,4226," event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:609,Modifiability,extend,extends,609,". AnnotationPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class AnnotationPane. java.lang.Object; qupath.lib.gui.panes.AnnotationPane. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class AnnotationPane; extends Object; implements PathObjectSelectionListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Component for displaying annotations within the active image.; ; Also shows the PathClass list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherite",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:1389,Modifiability,extend,extends,1389,"All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class AnnotationPane; extends Object; implements PathObjectSelectionListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Component for displaying annotations within the active image.; ; Also shows the PathClass list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:1993,Modifiability,inherit,inherited,1993," hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:3784,Modifiability,extend,extends,3784," event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:2325,Performance,perform,performance,2325,"; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:3024,Performance,perform,performance,3024,"e, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEven",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:2067,Security,hash,hashCode,2067," Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:2516,Integrability,interface,interface,2516,"isplaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:2746,Integrability,interface,interface,2746,"isplaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:583,Modifiability,extend,extends,583,". ImageDetailsPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ImageDetailsPane. java.lang.Object; qupath.lib.gui.panes.ImageDetailsPane. All Implemented Interfaces:; PropertyChangeListener, EventListener, ChangeListener<ImageData<BufferedImage>>. public class ImageDetailsPane; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PropertyChangeListener; A panel used for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:1188,Modifiability,extend,extends,1188,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ImageDetailsPane. java.lang.Object; qupath.lib.gui.panes.ImageDetailsPane. All Implemented Interfaces:; PropertyChangeListener, EventListener, ChangeListener<ImageData<BufferedImage>>. public class ImageDetailsPane; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PropertyChangeListener; A panel used for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the defaul",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:1607,Modifiability,inherit,inherited,1607,"eListener<ImageData<BufferedImage>>, PropertyChangeListener; A panel used for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<B",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:2597,Modifiability,extend,extends,2597,"isplaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:1681,Security,hash,hashCode,1681,"d for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageDat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html:937,Deployability,update,updateMeasurements,937,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html:1419,Deployability,update,updateMeasurements,1419,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html:1451,Deployability,update,updateMeasurements,1451,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html:481,Modifiability,extend,extends,481,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html:1023,Modifiability,inherit,inherited,1023,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html:553,Safety,detect,detection,553,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html:1097,Security,hash,hashCode,1097,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html:635,Availability,avail,available,635,". ObjectDescriptionPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectDescriptionPane<T>. java.lang.Object; qupath.lib.gui.panes.ObjectDescriptionPane<T>. Type Parameters:; T - generic parameter for ImageData. public class ObjectDescriptionPane<T>; extends Object; Wraps a pane used to display an object description, if one is available. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData);  ; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell);  ; static <T> Stage; createWindow(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData). createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell). createWindow; public static <T> Stage createWindow(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html:557,Modifiability,extend,extends,557,". ObjectDescriptionPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectDescriptionPane<T>. java.lang.Object; qupath.lib.gui.panes.ObjectDescriptionPane<T>. Type Parameters:; T - generic parameter for ImageData. public class ObjectDescriptionPane<T>; extends Object; Wraps a pane used to display an object description, if one is available. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData);  ; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell);  ; static <T> Stage; createWindow(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData). createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell). createWindow; public static <T> Stage createWindow(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html:1014,Modifiability,inherit,inherited,1014,". ObjectDescriptionPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectDescriptionPane<T>. java.lang.Object; qupath.lib.gui.panes.ObjectDescriptionPane<T>. Type Parameters:; T - generic parameter for ImageData. public class ObjectDescriptionPane<T>; extends Object; Wraps a pane used to display an object description, if one is available. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData);  ; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell);  ; static <T> Stage; createWindow(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData). createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell). createWindow; public static <T> Stage createWindow(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html:1088,Security,hash,hashCode,1088,". ObjectDescriptionPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectDescriptionPane<T>. java.lang.Object; qupath.lib.gui.panes.ObjectDescriptionPane<T>. Type Parameters:; T - generic parameter for ImageData. public class ObjectDescriptionPane<T>; extends Object; Wraps a pane used to display an object description, if one is available. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData);  ; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell);  ; static <T> Stage; createWindow(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData). createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell). createWindow; public static <T> Stage createWindow(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:477,Modifiability,extend,extends,477,". ObjectTreeBrowser (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provide",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:1154,Modifiability,inherit,inherited,1154,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElement, ; an attempt will be made to convert it using GsonTools.; Re",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:1121,Security,access,accessed,1121,"links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElem",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:1228,Security,hash,hashCode,1228,"tail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElement, ; an attempt will be made to convert it using GsonTools.; Returns:; a view depicting element fields. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:1554,Security,access,accessed,1554,"tail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElement, ; an attempt will be made to convert it using GsonTools.; Returns:; a view depicting element fields. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:932,Availability,avail,available,932,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:417,Integrability,interface,interface,417,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:505,Integrability,interface,interface,505,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:777,Safety,detect,detection,777,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:2134,Testability,log,logged,2134,"; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. WorkflowCommandLogView. Show logged commands, and optionally generate a script. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:1962,Usability,simpl,simple,1962,"; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. WorkflowCommandLogView. Show logged commands, and optionally generate a script. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:2044,Usability,simpl,simple,2044,"; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. WorkflowCommandLogView. Show logged commands, and optionally generate a script. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-tree.html:2286,Modifiability,plugin,plugins,2286,"s.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); qupath.lib.gui.panes.ImageDetailsPane (implements javafx.beans.value.ChangeListener<T>, java.beans.PropertyChangeListener); qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.panes.ObjectDescriptionPane<T>; qupath.lib.gui.panes.ObjectTreeBrowser; qupath.lib.gui.panes.PathObjectHierarchyView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); qupath.lib.gui.panes.PreferencePane; qupath.lib.gui.panes.PreferencePane.AppearancePreferences; qupath.lib.gui.panes.PreferencePane.DrawingPreferences; qupath.lib.gui.panes.PreferencePane.ExtensionPreferences; qupath.lib.gui.panes.PreferencePane.GeneralPreferences; qupath.lib.gui.panes.PreferencePane.InputOutputPreferences; qupath.lib.gui.panes.PreferencePane.LocalePreferences; qupath.lib.gui.panes.PreferencePane.MeasurementPreferences; qupath.lib.gui.panes.PreferencePane.ObjectPreferences; qupath.lib.gui.panes.PreferencePane.ScriptingPreferences; qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences; qupath.lib.gui.panes.PreferencePane.ViewerPreferences; qupath.lib.gui.panes.ProjectBrowser (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.panes.SelectedMeasurementTableView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener, java.beans.PropertyChangeListener); qupath.lib.gui.panes.ServerSelector; qupath.lib.gui.panes.SimpleImageViewer; qupath.lib.gui.panes.SlideLabelView (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.panes.WorkflowCommandLogView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.plugins.workflow.WorkflowListener). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:990,Deployability,update,updates,990,". PathObjectHierarchyView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PathObjectHierarchyView. java.lang.Object; qupath.lib.gui.panes.PathObjectHierarchyView. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class PathObjectHierarchyView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectSelectionListener, PathObjectHierarchyListener; Component for showing a tree-based view of the object hierarchy. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have ch",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:1618,Deployability,update,updates,1618,"bjectHierarchyView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectSelectionListener, PathObjectHierarchyListener; Component for showing a tree-based view of the object hierarchy. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:2265,Deployability,update,updates,2265,"ge>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:2390,Deployability,update,updated,2390," void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:3079,Deployability,update,updates,3079,"ect; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedIma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:3204,Deployability,update,updated,3204,"anProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyLis",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:3451,Integrability,interface,interface,3451," by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:3581,Integrability,interface,interface,3581," by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:4004,Integrability,interface,interface,4004," by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:4160,Integrability,interface,interface,4160," by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:4297,Integrability,interface,interface,4297," by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:645,Modifiability,extend,extends,645,". PathObjectHierarchyView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PathObjectHierarchyView. java.lang.Object; qupath.lib.gui.panes.PathObjectHierarchyView. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class PathObjectHierarchyView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectSelectionListener, PathObjectHierarchyListener; Component for showing a tree-based view of the object hierarchy. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have ch",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:1412,Modifiability,extend,extends,1412,"ew. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class PathObjectHierarchyView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectSelectionListener, PathObjectHierarchyListener; Component for showing a tree-based view of the object hierarchy. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableU",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:2016,Modifiability,inherit,inherited,2016,"ction change event. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:3855,Modifiability,extend,extends,3855," by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:2348,Performance,perform,performance,2348," void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:3162,Performance,perform,performance,3162,"anProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyLis",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:2090,Security,hash,hashCode,2090,"ription; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every h",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html:629,Modifiability,extend,extends,629,". PreferencePane.AppearancePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.AppearancePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.AppearancePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Appearance""); public static class PreferencePane.AppearancePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<QuPathStyleManager.Fonts>; autoUpdate;  ; final BooleanProperty; badges;  ; final ObjectProperty<QuPathStyleManager.StyleOption>; theme;  . Constructor Summary; Constructors. Constructor; Description; AppearancePreferences();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final ObservableList<QuPathStyleManager.StyleOption>; getStyles();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. theme; @Pref(value=""Prefs.Appearance.theme"",; type=StyleOption.class,; choiceMethod=""getStyles""); public final ObjectProperty<QuPathStyleManager.StyleOption> theme. autoUpdate; @Pref(value=""Prefs.Appearance.font"",; type=Fonts.class); public final ObjectProperty<QuPathStyleManager.Fonts> autoUpdate. badges; @BooleanPref(""Prefs.Appearance.badges""); public final BooleanProperty badges. Constructor Details. AppearancePreferences; public AppearancePreferences(). Method Details. getStyles; public final ObservableList<QuPathStyleManager.StyleOption> getStyles(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html:1136,Modifiability,inherit,inherited,1136,". PreferencePane.AppearancePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.AppearancePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.AppearancePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Appearance""); public static class PreferencePane.AppearancePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<QuPathStyleManager.Fonts>; autoUpdate;  ; final BooleanProperty; badges;  ; final ObjectProperty<QuPathStyleManager.StyleOption>; theme;  . Constructor Summary; Constructors. Constructor; Description; AppearancePreferences();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final ObservableList<QuPathStyleManager.StyleOption>; getStyles();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. theme; @Pref(value=""Prefs.Appearance.theme"",; type=StyleOption.class,; choiceMethod=""getStyles""); public final ObjectProperty<QuPathStyleManager.StyleOption> theme. autoUpdate; @Pref(value=""Prefs.Appearance.font"",; type=Fonts.class); public final ObjectProperty<QuPathStyleManager.Fonts> autoUpdate. badges; @BooleanPref(""Prefs.Appearance.badges""); public final BooleanProperty badges. Constructor Details. AppearancePreferences; public AppearancePreferences(). Method Details. getStyles; public final ObservableList<QuPathStyleManager.StyleOption> getStyles(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html:1210,Security,hash,hashCode,1210,". PreferencePane.AppearancePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.AppearancePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.AppearancePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Appearance""); public static class PreferencePane.AppearancePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<QuPathStyleManager.Fonts>; autoUpdate;  ; final BooleanProperty; badges;  ; final ObjectProperty<QuPathStyleManager.StyleOption>; theme;  . Constructor Summary; Constructors. Constructor; Description; AppearancePreferences();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final ObservableList<QuPathStyleManager.StyleOption>; getStyles();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. theme; @Pref(value=""Prefs.Appearance.theme"",; type=StyleOption.class,; choiceMethod=""getStyles""); public final ObjectProperty<QuPathStyleManager.StyleOption> theme. autoUpdate; @Pref(value=""Prefs.Appearance.font"",; type=Fonts.class); public final ObjectProperty<QuPathStyleManager.Fonts> autoUpdate. badges; @BooleanPref(""Prefs.Appearance.badges""); public final BooleanProperty badges. Constructor Details. AppearancePreferences; public AppearancePreferences(). Method Details. getStyles; public final ObservableList<QuPathStyleManager.StyleOption> getStyles(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html:614,Modifiability,extend,extends,614,". PreferencePane.DrawingPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.DrawingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.DrawingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Drawing""); public static class PreferencePane.DrawingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; brushDiameter;  ; final BooleanProperty; brushScaleByMag;  ; final BooleanProperty; clipROIsForHierarchy;  ; final BooleanProperty; pixelSnapping;  ; final IntegerProperty; pointRadius;  ; final BooleanProperty; returnToMove;  ; final BooleanProperty; tileBrush;  ; final BooleanProperty; useMultipoint;  . Constructor Summary; Constructors. Constructor; Description; DrawingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. returnToMove; @BooleanPref(""Prefs.Drawing.returnToMove""); public final BooleanProperty returnToMove. pixelSnapping; @BooleanPref(""Prefs.Drawing.pixelSnapping""); public final BooleanProperty pixelSnapping. clipROIsForHierarchy; @BooleanPref(""Prefs.Drawing.clipROIsForHierarchy""); public final BooleanProperty clipROIsForHierarchy. brushDiameter; @IntegerPref(""Prefs.Drawing.brushDiameter""); public final IntegerProperty brushDiameter. tileBrush; @BooleanPref(""Prefs.Drawing.tileBrush""); public final BooleanProperty tileBrush. brushScaleByMag; @BooleanPref(""Prefs.Drawing.brushScaleByMag""); public final BooleanProperty brushScaleByMag. useMultipoint; @BooleanPref(""Prefs.Drawing.useMultipoint""); public final BooleanPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html:1132,Modifiability,inherit,inherited,1132,"lass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.DrawingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.DrawingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Drawing""); public static class PreferencePane.DrawingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; brushDiameter;  ; final BooleanProperty; brushScaleByMag;  ; final BooleanProperty; clipROIsForHierarchy;  ; final BooleanProperty; pixelSnapping;  ; final IntegerProperty; pointRadius;  ; final BooleanProperty; returnToMove;  ; final BooleanProperty; tileBrush;  ; final BooleanProperty; useMultipoint;  . Constructor Summary; Constructors. Constructor; Description; DrawingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. returnToMove; @BooleanPref(""Prefs.Drawing.returnToMove""); public final BooleanProperty returnToMove. pixelSnapping; @BooleanPref(""Prefs.Drawing.pixelSnapping""); public final BooleanProperty pixelSnapping. clipROIsForHierarchy; @BooleanPref(""Prefs.Drawing.clipROIsForHierarchy""); public final BooleanProperty clipROIsForHierarchy. brushDiameter; @IntegerPref(""Prefs.Drawing.brushDiameter""); public final IntegerProperty brushDiameter. tileBrush; @BooleanPref(""Prefs.Drawing.tileBrush""); public final BooleanProperty tileBrush. brushScaleByMag; @BooleanPref(""Prefs.Drawing.brushScaleByMag""); public final BooleanProperty brushScaleByMag. useMultipoint; @BooleanPref(""Prefs.Drawing.useMultipoint""); public final BooleanProperty useMultipoint. pointRadius; @IntegerPref(""Prefs.Drawing.pointRadius""); public final IntegerProperty pointRadius. Constructor Details. Draw",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html:1206,Security,hash,hashCode,1206," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.DrawingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.DrawingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Drawing""); public static class PreferencePane.DrawingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; brushDiameter;  ; final BooleanProperty; brushScaleByMag;  ; final BooleanProperty; clipROIsForHierarchy;  ; final BooleanProperty; pixelSnapping;  ; final IntegerProperty; pointRadius;  ; final BooleanProperty; returnToMove;  ; final BooleanProperty; tileBrush;  ; final BooleanProperty; useMultipoint;  . Constructor Summary; Constructors. Constructor; Description; DrawingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. returnToMove; @BooleanPref(""Prefs.Drawing.returnToMove""); public final BooleanProperty returnToMove. pixelSnapping; @BooleanPref(""Prefs.Drawing.pixelSnapping""); public final BooleanProperty pixelSnapping. clipROIsForHierarchy; @BooleanPref(""Prefs.Drawing.clipROIsForHierarchy""); public final BooleanProperty clipROIsForHierarchy. brushDiameter; @IntegerPref(""Prefs.Drawing.brushDiameter""); public final IntegerProperty brushDiameter. tileBrush; @BooleanPref(""Prefs.Drawing.tileBrush""); public final BooleanProperty tileBrush. brushScaleByMag; @BooleanPref(""Prefs.Drawing.brushScaleByMag""); public final BooleanProperty brushScaleByMag. useMultipoint; @BooleanPref(""Prefs.Drawing.useMultipoint""); public final BooleanProperty useMultipoint. pointRadius; @IntegerPref(""Prefs.Drawing.pointRadius""); public final IntegerProperty pointRadius. Constructor Details. DrawingPreferences; public DrawingPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html:625,Modifiability,extend,extends,625,". PreferencePane.ExtensionPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ExtensionPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ExtensionPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Extensions""); public static class PreferencePane.ExtensionPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final Property<String>; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ExtensionPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Extensions.userPath""); public final Property<String> scriptsPath. Constructor Details. ExtensionPreferences; public ExtensionPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html:855,Modifiability,inherit,inherited,855,". PreferencePane.ExtensionPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ExtensionPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ExtensionPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Extensions""); public static class PreferencePane.ExtensionPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final Property<String>; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ExtensionPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Extensions.userPath""); public final Property<String> scriptsPath. Constructor Details. ExtensionPreferences; public ExtensionPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html:929,Security,hash,hashCode,929,". PreferencePane.ExtensionPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ExtensionPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ExtensionPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Extensions""); public static class PreferencePane.ExtensionPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final Property<String>; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ExtensionPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Extensions.userPath""); public final Property<String> scriptsPath. Constructor Details. ExtensionPreferences; public ExtensionPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:1042,Availability,mask,maskImageNames,1042,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2734,Availability,mask,maskImageNames,2734,"quals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2778,Availability,mask,maskImageNames,2778,"String, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2825,Availability,mask,maskImageNames,2825,"String, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:614,Modifiability,extend,extends,614,". PreferencePane.GeneralPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Pref",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:1704,Modifiability,inherit,inherited,1704,"<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:1778,Security,hash,hashCode,1778,"inderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskIma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:1006,Testability,log,logLevel,1006,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2885,Testability,log,logFiles,2885,"); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2942,Testability,log,logLevel,2942,"age. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2979,Testability,log,logLevel,2979,"lue=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class); public final ObjectProperty<PathP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:3062,Testability,log,logLevel,3062,"c final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public final BooleanProperty showDeprecatedCommands. hierarchyDisplayMode; @Pref(value=""Prefs.General.hierarchyDisplay"",; type=DetectionTreeDisplayModes.class); public final ObjectProperty<PathPrefs.DetectionTreeDisplayModes> hierarchyDisplayMode. Constructor Deta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:3596,Deployability,update,updated,3596,"ropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors are regenerated.; This is useful if the Locale has changed, and so the text may need to be updated. addPropertyPreference; @Deprecated; public <T> void addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; name - ; category - ; description - . addColorPropertyPreference; @Deprecated; public void addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new color preference based on a specified IntegerProperty (storing a packed RGBA value). Parameters:; prop - ; name - ; category - ; description - . addDirectoryPropertyPreference; @Deprecated; public void addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new directory preference based on a specified S",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:465,Modifiability,extend,extends,465,". PreferencePane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane. java.lang.Object; qupath.lib.gui.panes.PreferencePane. public class PreferencePane; extends Object; QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PreferencePane.AppearancePreferences;  ; static class ; PreferencePane.DrawingPreferences;  ; static class ; PreferencePane.ExtensionPreferences;  ; static class ; PreferencePane.GeneralPreferences;  ; static class ; PreferencePane.InputOutputPreferences;  ; static class ; PreferencePane.LocalePreferences;  ; static class ; PreferencePane.MeasurementPreferences;  ; static class ; PreferencePane.ObjectPreferences;  ; static class ; PreferencePane.ScriptingPreferences;  ; static class ; PreferencePane.UndoRedoPreferences;  ; static class ; PreferencePane.ViewerPreferences;  . Constructor Summary; Constructors. Constructor; Description; PreferencePane();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; Str",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:1578,Modifiability,extend,extends,1578,"roperties within PathPrefs. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PreferencePane.AppearancePreferences;  ; static class ; PreferencePane.DrawingPreferences;  ; static class ; PreferencePane.ExtensionPreferences;  ; static class ; PreferencePane.GeneralPreferences;  ; static class ; PreferencePane.InputOutputPreferences;  ; static class ; PreferencePane.LocalePreferences;  ; static class ; PreferencePane.MeasurementPreferences;  ; static class ; PreferencePane.ObjectPreferences;  ; static class ; PreferencePane.ScriptingPreferences;  ; static class ; PreferencePane.UndoRedoPreferences;  ; static class ; PreferencePane.ViewerPreferences;  . Constructor Summary; Constructors. Constructor; Description; PreferencePane();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). De",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:1787,Modifiability,extend,extends,1787,"ic class ; PreferencePane.ExtensionPreferences;  ; static class ; PreferencePane.GeneralPreferences;  ; static class ; PreferencePane.InputOutputPreferences;  ; static class ; PreferencePane.LocalePreferences;  ; static class ; PreferencePane.MeasurementPreferences;  ; static class ; PreferencePane.ObjectPreferences;  ; static class ; PreferencePane.ScriptingPreferences;  ; static class ; PreferencePane.UndoRedoPreferences;  ; static class ; PreferencePane.ViewerPreferences;  . Constructor Summary; Constructors. Constructor; Description; PreferencePane();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the pro",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:2302,Modifiability,extend,extends,2302,"onstructor; Description; PreferencePane();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the p",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:2527,Modifiability,extend,extends,2527,"PropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:2826,Modifiability,inherit,inherited,2826,"; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors are regenerated.; This is useful if the Locale has changed, and so the text may need to be updated. addPropertyPreference; @Deprecated; public <T> void addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new pre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:3706,Modifiability,extend,extends,3706," property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors are regenerated.; This is useful if the Locale has changed, and so the text may need to be updated. addPropertyPreference; @Deprecated; public <T> void addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; name - ; category - ; description - . addColorPropertyPreference; @Deprecated; public void addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new color preference based on a specified IntegerProperty (storing a packed RGBA value). Parameters:; prop - ; name - ; category - ; description - . addDirectoryPropertyPreference; @Deprecated; public void addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new directory preference based on a specified StringProperty. Parameters:; prop - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:4779,Modifiability,extend,extends,4779,"gory,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; name - ; category - ; description - . addColorPropertyPreference; @Deprecated; public void addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new color preference based on a specified IntegerProperty (storing a packed RGBA value). Parameters:; prop - ; name - ; category - ; description - . addDirectoryPropertyPreference; @Deprecated; public void addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new directory preference based on a specified StringProperty. Parameters:; prop - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from a list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from an optionally searchable list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - ; makeSearchable - make the choice item's editor searchable (useful for long lists). createPropertySheetItem; @Deprecated; public static <T>; org.controlsfx.control.PropertySheet.Item createPropertySheetItem(Property<T> property,; Class<? extends T> cls",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:5185,Modifiability,extend,extends,5185,"orPropertyPreference(IntegerProperty prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new color preference based on a specified IntegerProperty (storing a packed RGBA value). Parameters:; prop - ; name - ; category - ; description - . addDirectoryPropertyPreference; @Deprecated; public void addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new directory preference based on a specified StringProperty. Parameters:; prop - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from a list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from an optionally searchable list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - ; makeSearchable - make the choice item's editor searchable (useful for long lists). createPropertySheetItem; @Deprecated; public static <T>; org.controlsfx.control.PropertySheet.Item createPropertySheetItem(Property<T> property,; Class<? extends T> cls); Deprecated.; use PropertyItemBuilder instead. Create a default PropertySheet.Item for a generic property. Type Parameters:; T - type of the property; Parameters:; property - the property; cls - the property type; Returns:; a new PropertySheet.Item. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:5735,Modifiability,extend,extends,5735,"orPropertyPreference(IntegerProperty prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new color preference based on a specified IntegerProperty (storing a packed RGBA value). Parameters:; prop - ; name - ; category - ; description - . addDirectoryPropertyPreference; @Deprecated; public void addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new directory preference based on a specified StringProperty. Parameters:; prop - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from a list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from an optionally searchable list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - ; makeSearchable - make the choice item's editor searchable (useful for long lists). createPropertySheetItem; @Deprecated; public static <T>; org.controlsfx.control.PropertySheet.Item createPropertySheetItem(Property<T> property,; Class<? extends T> cls); Deprecated.; use PropertyItemBuilder instead. Create a default PropertySheet.Item for a generic property. Type Parameters:; T - type of the property; Parameters:; property - the property; cls - the property type; Returns:; a new PropertySheet.Item. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:2900,Security,hash,hashCode,2900,"yItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors are regenerated.; This is useful if the Locale has changed, and so the text may need to be updated. addPropertyPreference; @Deprecated; public <T> void addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; nam",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html:634,Modifiability,extend,extends,634,". PreferencePane.InputOutputPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.InputOutputPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.InputOutputPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.InputOutput""); public static class PreferencePane.InputOutputPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; minimumPyramidDimension;  ; final DoubleProperty; tmaExportDownsample;  . Constructor Summary; Constructors. Constructor; Description; InputOutputPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. minimumPyramidDimension; @IntegerPref(""Prefs.InputOutput.minPyramidDimension""); public final IntegerProperty minimumPyramidDimension. tmaExportDownsample; @DoublePref(""Prefs.InputOutput.tmaExportDownsample""); public final DoubleProperty tmaExportDownsample. Constructor Details. InputOutputPreferences; public InputOutputPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html:923,Modifiability,inherit,inherited,923,". PreferencePane.InputOutputPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.InputOutputPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.InputOutputPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.InputOutput""); public static class PreferencePane.InputOutputPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; minimumPyramidDimension;  ; final DoubleProperty; tmaExportDownsample;  . Constructor Summary; Constructors. Constructor; Description; InputOutputPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. minimumPyramidDimension; @IntegerPref(""Prefs.InputOutput.minPyramidDimension""); public final IntegerProperty minimumPyramidDimension. tmaExportDownsample; @DoublePref(""Prefs.InputOutput.tmaExportDownsample""); public final DoubleProperty tmaExportDownsample. Constructor Details. InputOutputPreferences; public InputOutputPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html:997,Security,hash,hashCode,997,". PreferencePane.InputOutputPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.InputOutputPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.InputOutputPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.InputOutput""); public static class PreferencePane.InputOutputPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; minimumPyramidDimension;  ; final DoubleProperty; tmaExportDownsample;  . Constructor Summary; Constructors. Constructor; Description; InputOutputPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. minimumPyramidDimension; @IntegerPref(""Prefs.InputOutput.minPyramidDimension""); public final IntegerProperty minimumPyramidDimension. tmaExportDownsample; @DoublePref(""Prefs.InputOutput.tmaExportDownsample""); public final DoubleProperty tmaExportDownsample. Constructor Details. InputOutputPreferences; public InputOutputPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html:1143,Availability,avail,availableLanguagesOnly,1143,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html:1282,Availability,avail,availableLanguagesOnly,1282,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html:609,Modifiability,extend,extends,609,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html:939,Modifiability,inherit,inherited,939,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html:1013,Security,hash,hashCode,1013,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html:635,Modifiability,extend,extends,635,". PreferencePane.MeasurementPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.MeasurementPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.MeasurementPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Measurements""); public static class PreferencePane.MeasurementPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; showMeasurementTableObjectIDs;  ; final BooleanProperty; showMeasurementTableThumbnails;  . Constructor Summary; Constructors. Constructor; Description; MeasurementPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. showMeasurementTableThumbnails; @BooleanPref(""Prefs.Measurements.thumbnails""); public final BooleanProperty showMeasurementTableThumbnails. showMeasurementTableObjectIDs; @BooleanPref(""Prefs.Measurements.ids""); public final BooleanProperty showMeasurementTableObjectIDs. Constructor Details. MeasurementPreferences; public MeasurementPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html:942,Modifiability,inherit,inherited,942,". PreferencePane.MeasurementPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.MeasurementPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.MeasurementPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Measurements""); public static class PreferencePane.MeasurementPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; showMeasurementTableObjectIDs;  ; final BooleanProperty; showMeasurementTableThumbnails;  . Constructor Summary; Constructors. Constructor; Description; MeasurementPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. showMeasurementTableThumbnails; @BooleanPref(""Prefs.Measurements.thumbnails""); public final BooleanProperty showMeasurementTableThumbnails. showMeasurementTableObjectIDs; @BooleanPref(""Prefs.Measurements.ids""); public final BooleanProperty showMeasurementTableObjectIDs. Constructor Details. MeasurementPreferences; public MeasurementPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html:1016,Security,hash,hashCode,1016,". PreferencePane.MeasurementPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.MeasurementPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.MeasurementPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Measurements""); public static class PreferencePane.MeasurementPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; showMeasurementTableObjectIDs;  ; final BooleanProperty; showMeasurementTableThumbnails;  . Constructor Summary; Constructors. Constructor; Description; MeasurementPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. showMeasurementTableThumbnails; @BooleanPref(""Prefs.Measurements.thumbnails""); public final BooleanProperty showMeasurementTableThumbnails. showMeasurementTableObjectIDs; @BooleanPref(""Prefs.Measurements.ids""); public final BooleanProperty showMeasurementTableObjectIDs. Constructor Details. MeasurementPreferences; public MeasurementPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:610,Modifiability,extend,extends,610,". PreferencePane.ObjectPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @C",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:1150,Modifiability,inherit,inherited,1150,"ted; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:802,Safety,detect,detectonStrokeThickness,802,". PreferencePane.ObjectPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @C",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:1544,Safety,detect,detectonStrokeThickness,1544,"Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final IntegerProperty tmaMissingColor. Constructor Details. ObjectPreferences; public ObjectPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:1596,Safety,detect,detectionLineThickness,1596,"Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final IntegerProperty tmaMissingColor. Constructor Details. ObjectPreferences; public ObjectPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:1650,Safety,detect,detectonStrokeThickness,1650,"Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final IntegerProperty tmaMissingColor. Constructor Details. ObjectPreferences; public ObjectPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:1224,Security,hash,hashCode,1224,"d; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final IntegerProperty tmaMissingColor. Constructor Details. ObjectPreferences;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html:624,Modifiability,extend,extends,624,". PreferencePane.ScriptingPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ScriptingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ScriptingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Scripting""); public static class PreferencePane.ScriptingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final StringProperty; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ScriptingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Scripting.scriptsPath""); public final StringProperty scriptsPath. Constructor Details. ScriptingPreferences; public ScriptingPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html:852,Modifiability,inherit,inherited,852,". PreferencePane.ScriptingPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ScriptingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ScriptingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Scripting""); public static class PreferencePane.ScriptingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final StringProperty; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ScriptingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Scripting.scriptsPath""); public final StringProperty scriptsPath. Constructor Details. ScriptingPreferences; public ScriptingPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html:926,Security,hash,hashCode,926,". PreferencePane.ScriptingPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ScriptingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ScriptingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Scripting""); public static class PreferencePane.ScriptingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final StringProperty; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ScriptingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Scripting.scriptsPath""); public final StringProperty scriptsPath. Constructor Details. ScriptingPreferences; public ScriptingPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html:615,Modifiability,extend,extends,615,". PreferencePane.UndoRedoPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.UndoRedoPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Undo""); public static class PreferencePane.UndoRedoPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; maxUndoHierarchySize;  ; final IntegerProperty; maxUndoLevels;  . Constructor Summary; Constructors. Constructor; Description; UndoRedoPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxUndoLevels; @IntegerPref(""Prefs.Undo.maxUndoLevels""); public final IntegerProperty maxUndoLevels. maxUndoHierarchySize; @IntegerPref(""Prefs.Undo.maxUndoHierarchySize""); public final IntegerProperty maxUndoHierarchySize. Constructor Details. UndoRedoPreferences; public UndoRedoPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html:893,Modifiability,inherit,inherited,893,". PreferencePane.UndoRedoPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.UndoRedoPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Undo""); public static class PreferencePane.UndoRedoPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; maxUndoHierarchySize;  ; final IntegerProperty; maxUndoLevels;  . Constructor Summary; Constructors. Constructor; Description; UndoRedoPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxUndoLevels; @IntegerPref(""Prefs.Undo.maxUndoLevels""); public final IntegerProperty maxUndoLevels. maxUndoHierarchySize; @IntegerPref(""Prefs.Undo.maxUndoHierarchySize""); public final IntegerProperty maxUndoHierarchySize. Constructor Details. UndoRedoPreferences; public UndoRedoPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html:967,Security,hash,hashCode,967,". PreferencePane.UndoRedoPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.UndoRedoPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Undo""); public static class PreferencePane.UndoRedoPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; maxUndoHierarchySize;  ; final IntegerProperty; maxUndoLevels;  . Constructor Summary; Constructors. Constructor; Description; UndoRedoPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxUndoLevels; @IntegerPref(""Prefs.Undo.maxUndoLevels""); public final IntegerProperty maxUndoLevels. maxUndoHierarchySize; @IntegerPref(""Prefs.Undo.maxUndoHierarchySize""); public final IntegerProperty maxUndoHierarchySize. Constructor Details. UndoRedoPreferences; public UndoRedoPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html:609,Modifiability,extend,extends,609,". PreferencePane.ViewerPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ViewerPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ViewerPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Viewer""); public static class PreferencePane.ViewerPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; alwaysPaintSelected;  ; final DoubleProperty; autoSaturationPercent;  ; final IntegerProperty; backgroundColor;  ; final BooleanProperty; calibratedLocationString;  ; final BooleanProperty; doubleClickToZoom;  ; final BooleanProperty; enableFreehand;  ; final BooleanProperty; gridScaleMicrons;  ; final DoubleProperty; gridSpacingX;  ; final DoubleProperty; gridSpacingY;  ; final BooleanProperty; interpolateBilinear;  ; final BooleanProperty; invertScrolling;  ; final BooleanProperty; invertZSlider;  ; final BooleanProperty; iseScrollGestures;  ; final BooleanProperty; keepDisplaySettings;  ; final ObjectProperty<PathPrefs.FontSize>; locationFontSize;  ; final BooleanProperty; navigationAcceleration;  ; final IntegerProperty; navigationSpeed;  ; final ObjectProperty<PathPrefs.FontSize>; scalebarFontSize;  ; final ObjectProperty<FontWeight>; scalebarFontWeight;  ; final DoubleProperty; scalebarLineWidth;  ; final IntegerProperty; scrollSpeed;  ; final BooleanProperty; skipMissingCores;  ; final BooleanProperty; useRotateGestures;  ; final BooleanProperty; useZoomGestures;  . Constructor Summary; Constructors. Constructor; Description; ViewerPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html:1909,Modifiability,inherit,inherited,1909,";  ; final BooleanProperty; enableFreehand;  ; final BooleanProperty; gridScaleMicrons;  ; final DoubleProperty; gridSpacingX;  ; final DoubleProperty; gridSpacingY;  ; final BooleanProperty; interpolateBilinear;  ; final BooleanProperty; invertScrolling;  ; final BooleanProperty; invertZSlider;  ; final BooleanProperty; iseScrollGestures;  ; final BooleanProperty; keepDisplaySettings;  ; final ObjectProperty<PathPrefs.FontSize>; locationFontSize;  ; final BooleanProperty; navigationAcceleration;  ; final IntegerProperty; navigationSpeed;  ; final ObjectProperty<PathPrefs.FontSize>; scalebarFontSize;  ; final ObjectProperty<FontWeight>; scalebarFontWeight;  ; final DoubleProperty; scalebarLineWidth;  ; final IntegerProperty; scrollSpeed;  ; final BooleanProperty; skipMissingCores;  ; final BooleanProperty; useRotateGestures;  ; final BooleanProperty; useZoomGestures;  . Constructor Summary; Constructors. Constructor; Description; ViewerPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. backgroundColor; @ColorPref(""Prefs.Viewer.backgroundColor""); public final IntegerProperty backgroundColor. alwaysPaintSelected; @BooleanPref(""Prefs.Viewer.alwaysPaintSelected""); public final BooleanProperty alwaysPaintSelected. keepDisplaySettings; @BooleanPref(""Prefs.Viewer.keepDisplaySettings""); public final BooleanProperty keepDisplaySettings. interpolateBilinear; @BooleanPref(""Prefs.Viewer.interpolateBilinear""); public final BooleanProperty interpolateBilinear. autoSaturationPercent; @DoublePref(""Prefs.Viewer.autoSaturationPercent""); public final DoubleProperty autoSaturationPercent. invertZSlider; @BooleanPref(""Prefs.Viewer.invertZSlider""); public final BooleanProperty invertZSlider. scrollSpeed; @IntegerPref(""Prefs.Viewer.scrollSpeed""); public final IntegerProperty scrollSpeed. navigationSpeed; @IntegerPref(""Prefs.Viewer.navigationSpeed""); publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html:1983,Security,hash,hashCode,1983,"idScaleMicrons;  ; final DoubleProperty; gridSpacingX;  ; final DoubleProperty; gridSpacingY;  ; final BooleanProperty; interpolateBilinear;  ; final BooleanProperty; invertScrolling;  ; final BooleanProperty; invertZSlider;  ; final BooleanProperty; iseScrollGestures;  ; final BooleanProperty; keepDisplaySettings;  ; final ObjectProperty<PathPrefs.FontSize>; locationFontSize;  ; final BooleanProperty; navigationAcceleration;  ; final IntegerProperty; navigationSpeed;  ; final ObjectProperty<PathPrefs.FontSize>; scalebarFontSize;  ; final ObjectProperty<FontWeight>; scalebarFontWeight;  ; final DoubleProperty; scalebarLineWidth;  ; final IntegerProperty; scrollSpeed;  ; final BooleanProperty; skipMissingCores;  ; final BooleanProperty; useRotateGestures;  ; final BooleanProperty; useZoomGestures;  . Constructor Summary; Constructors. Constructor; Description; ViewerPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. backgroundColor; @ColorPref(""Prefs.Viewer.backgroundColor""); public final IntegerProperty backgroundColor. alwaysPaintSelected; @BooleanPref(""Prefs.Viewer.alwaysPaintSelected""); public final BooleanProperty alwaysPaintSelected. keepDisplaySettings; @BooleanPref(""Prefs.Viewer.keepDisplaySettings""); public final BooleanProperty keepDisplaySettings. interpolateBilinear; @BooleanPref(""Prefs.Viewer.interpolateBilinear""); public final BooleanProperty interpolateBilinear. autoSaturationPercent; @DoublePref(""Prefs.Viewer.autoSaturationPercent""); public final DoubleProperty autoSaturationPercent. invertZSlider; @BooleanPref(""Prefs.Viewer.invertZSlider""); public final BooleanProperty invertZSlider. scrollSpeed; @IntegerPref(""Prefs.Viewer.scrollSpeed""); public final IntegerProperty scrollSpeed. navigationSpeed; @IntegerPref(""Prefs.Viewer.navigationSpeed""); public final IntegerProperty navigationSpeed. navigationAcceleration; @Boolea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1393,Availability,error,error,1393,"g.Object; qupath.lib.gui.panes.ProjectBrowser. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1821,Availability,error,error,1821,"tors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1399,Integrability,message,message,1399,"g.Object; qupath.lib.gui.panes.ProjectBrowser. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1827,Integrability,message,message,1827,"tors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:2686,Integrability,interface,interface,2686,"tors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:536,Modifiability,extend,extends,536,". ProjectBrowser (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ProjectBrowser. java.lang.Object; qupath.lib.gui.panes.ProjectBrowser. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:964,Modifiability,extend,extends,964,". ProjectBrowser (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ProjectBrowser. java.lang.Object; qupath.lib.gui.panes.ProjectBrowser. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1430,Modifiability,inherit,inherited,1430,"l Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:2537,Modifiability,extend,extends,2537,"tors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1504,Security,hash,hashCode,1504,"lic class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:2317,Integrability,interface,interface,2317,"ata<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). property",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:2454,Integrability,interface,interface,2454,"yEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:2712,Integrability,interface,interface,2712,"yEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:2950,Integrability,interface,interface,2950,"yEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:3080,Integrability,interface,interface,3080,"yEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:3409,Integrability,interface,interface,3409,"yEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:689,Modifiability,extend,extends,689,". SelectedMeasurementTableView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SelectedMeasurementTableView. java.lang.Object; qupath.lib.gui.panes.SelectedMeasurementTableView. All Implemented Interfaces:; PropertyChangeListener, EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class SelectedMeasurementTableView; extends Object; implements PathObjectSelectionListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PropertyChangeListener; Component to show measurements for a currently-selected object. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<Buff",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:1226,Modifiability,extend,extends,1226,"Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SelectedMeasurementTableView. java.lang.Object; qupath.lib.gui.panes.SelectedMeasurementTableView. All Implemented Interfaces:; PropertyChangeListener, EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class SelectedMeasurementTableView; extends Object; implements PathObjectSelectionListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PropertyChangeListener; Component to show measurements for a currently-selected object. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:1753,Modifiability,inherit,inherited,1753,"mageData<BufferedImage>>, PathObjectHierarchyListener, PropertyChangeListener; Component to show measurements for a currently-selected object. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:2563,Modifiability,extend,extends,2563,"yEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:1827,Security,hash,hashCode,1827,"tener; Component to show measurements for a currently-selected object. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathO",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:465,Modifiability,extend,extends,465,". ServerSelector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:704,Modifiability,extend,extends,704,". ServerSelector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:808,Modifiability,extend,extends,808,". ServerSelector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:1122,Modifiability,inherit,inherited,1122,"e; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; public List<ImageServer<BufferedImage>> promptToSelectImages(String prompt); Prompt to select multiple ImageServers. Parameters:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:1350,Modifiability,extend,extends,1350,"nstr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; public List<ImageServer<BufferedImage>> promptToSelectImages(String prompt); Prompt to select multiple ImageServers. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; Returns:; the selected servers, or empty list if no servers were selected. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:1475,Modifiability,extend,extends,1475,"nstr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; public List<ImageServer<BufferedImage>> promptToSelectImages(String prompt); Prompt to select multiple ImageServers. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; Returns:; the selected servers, or empty list if no servers were selected. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:1196,Security,hash,hashCode,1196,"ail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; public List<ImageServer<BufferedImage>> promptToSelectImages(String prompt); Prompt to select multiple ImageServers. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Ope",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:1466,Availability,avail,available,1466,"ublic class SimpleImageViewer; extends Object; A simple viewer for a single image, with options to save or copy.; ; This is primarily intended for RGB images, but can also be used for other types after; applying automatic brightness/contrast settings.; . This stores (and can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). BufferedImage; getBufferedImage(). Get the buffered image. boolean; getExpandToWindow(). Query whether the image is allowed to expand beyond its preferred width and height to fill the window. Image; getImage(). Get the JavaFX image. String; getName(). Get the name of the image. String; getPlaceholderText(). Get the placeholder tex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:2472,Availability,avail,available,2472,f no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). BufferedImage; getBufferedImage(). Get the buffered image. boolean; getExpandToWindow(). Query whether the image is allowed to expand beyond its preferred width and height to fill the window. Image; getImage(). Get the JavaFX image. String; getName(). Get the name of the image. String; getPlaceholderText(). Get the placeholder text to show if no image is available. double; getSaturationPercent(). Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Stage; getStage(). Get the stage used to display the image. ReadOnlyObjectProperty<String>; imageNameProperty(). Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationP,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:2977,Availability,avail,available,2977,"ooleanProperty; expandToWindowProperty(). Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). BufferedImage; getBufferedImage(). Get the buffered image. boolean; getExpandToWindow(). Query whether the image is allowed to expand beyond its preferred width and height to fill the window. Image; getImage(). Get the JavaFX image. String; getName(). Get the name of the image. String; getPlaceholderText(). Get the placeholder text to show if no image is available. double; getSaturationPercent(). Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Stage; getStage(). Get the stage used to display the image. ReadOnlyObjectProperty<String>; imageNameProperty(). Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderT",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:3422,Availability,avail,available,3422,"getPlaceholderText(). Get the placeholder text to show if no image is available. double; getSaturationPercent(). Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Stage; getStage(). Get the stage used to display the image. ReadOnlyObjectProperty<String>; imageNameProperty(). Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:4019,Availability,avail,available,4019," image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only proper",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:5504,Availability,avail,available,5504,"property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only property representing the JavaFX image. See Also:. getImage(); imageProperty(). bufferedImage; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty; Get a read-only property representing the buffered image. See Also:. getBufferedImage(); bufferedImageProperty(). Constructor Details. SimpleImageViewer; public SimpleImageViewer(); Create a new simple image viewer.; The stage will be created, but not shown. Method Details. getPlaceholderText; public String getPlaceholderText(); Get the placeholder text to show if no image is available. Returns:. setPlaceholderText; public void setPlaceholderText(String placeholder); Set the placeholder text to show if no image is available. Parameters:; placeholder - . placeholderTextProperty; public StringProperty placeholderTextProperty(); Get the placeholder text to show if no image is available. Returns:; See Also:. getPlaceholderText(); setPlaceholderText(String). saturationPercentProperty; public DoubleProperty saturationPercentProperty(); Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Returns:; See Also:. getSaturationPercent(); setSaturationPercent(double). getSaturationPercent; public double getSaturationPercent(); Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Returns:. setSaturationPercent; public void setSaturationPercent(double percent); Set the percentage of pixels to use when applying auto contrast settings ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:5645,Availability,avail,available,5645," grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only property representing the JavaFX image. See Also:. getImage(); imageProperty(). bufferedImage; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty; Get a read-only property representing the buffered image. See Also:. getBufferedImage(); bufferedImageProperty(). Constructor Details. SimpleImageViewer; public SimpleImageViewer(); Create a new simple image viewer.; The stage will be created, but not shown. Method Details. getPlaceholderText; public String getPlaceholderText(); Get the placeholder text to show if no image is available. Returns:. setPlaceholderText; public void setPlaceholderText(String placeholder); Set the placeholder text to show if no image is available. Parameters:; placeholder - . placeholderTextProperty; public StringProperty placeholderTextProperty(); Get the placeholder text to show if no image is available. Returns:; See Also:. getPlaceholderText(); setPlaceholderText(String). saturationPercentProperty; public DoubleProperty saturationPercentProperty(); Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Returns:; See Also:. getSaturationPercent(); setSaturationPercent(double). getSaturationPercent; public double getSaturationPercent(); Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Returns:. setSaturationPercent; public void setSaturationPercent(double percent); Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Parameters:; percent - . expandToWindowProperty; public BooleanProperty expandToWindowProperty(); Get the prope",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:5807,Availability,avail,available,5807,"OnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only property representing the JavaFX image. See Also:. getImage(); imageProperty(). bufferedImage; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty; Get a read-only property representing the buffered image. See Also:. getBufferedImage(); bufferedImageProperty(). Constructor Details. SimpleImageViewer; public SimpleImageViewer(); Create a new simple image viewer.; The stage will be created, but not shown. Method Details. getPlaceholderText; public String getPlaceholderText(); Get the placeholder text to show if no image is available. Returns:. setPlaceholderText; public void setPlaceholderText(String placeholder); Set the placeholder text to show if no image is available. Parameters:; placeholder - . placeholderTextProperty; public StringProperty placeholderTextProperty(); Get the placeholder text to show if no image is available. Returns:; See Also:. getPlaceholderText(); setPlaceholderText(String). saturationPercentProperty; public DoubleProperty saturationPercentProperty(); Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Returns:; See Also:. getSaturationPercent(); setSaturationPercent(double). getSaturationPercent; public double getSaturationPercent(); Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Returns:. setSaturationPercent; public void setSaturationPercent(double percent); Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Parameters:; percent - . expandToWindowProperty; public BooleanProperty expandToWindowProperty(); Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:725,Deployability,update,updated,725,". SimpleImageViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SimpleImageViewer. java.lang.Object; qupath.lib.gui.panes.SimpleImageViewer. public class SimpleImageViewer; extends Object; A simple viewer for a single image, with options to save or copy.; ; This is primarily intended for RGB images, but can also be used for other types after; applying automatic brightness/contrast settings.; . This stores (and can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:3578,Deployability,update,updateImage,3578,"8-bit image. Stage; getStage(). Get the stage used to display the image. ReadOnlyObjectProperty<String>; imageNameProperty(). Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:3671,Deployability,update,updateImage,3671,"perty<String>; imageNameProperty(). Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:7451,Deployability,update,updateImage,7451,". expandToWindowProperty; public BooleanProperty expandToWindowProperty(); Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. Returns:; See Also:. getExpandToWindow(); setExpandToWindow(boolean). getExpandToWindow; public boolean getExpandToWindow(); Query whether the image is allowed to expand beyond its preferred width and height to fill the window.; If false, the image will grow no larger than its preferred width and height. Returns:. setExpandToWindow; public void setExpandToWindow(boolean limit); Control whether the image should be allowed to expand beyond its preferred width and height to fill the window.; If false, the image will grow no larger than its preferred width and height. Parameters:; limit - . getStage; public Stage getStage(); Get the stage used to display the image. Returns:. updateImage; public void updateImage(String name,; Image image); Update the image using a JavaFX image. Parameters:; name - ; image - . resetImage; public void resetImage(); Remove the image. updateImage; public void updateImage(String name,; BufferedImage img); Update the image using a buffered image. Parameters:; name - ; img - . imageNameProperty; public ReadOnlyObjectProperty<String> imageNameProperty(); Get a read-only property indicating the name of the image. Returns:. getName; public String getName(); Get the name of the image. Returns:. imageProperty; public ReadOnlyObjectProperty<Image> imageProperty(); Get a read-only property representing the JavaFX image. Returns:; See Also:. getImage(). getImage; public Image getImage(); Get the JavaFX image. Returns:. bufferedImageProperty; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty(); Get a read-only property representing the buffered image. Returns:; See Also:. getBufferedImage(). getBufferedImage; public BufferedImage getBufferedImage(); Get the buffered image.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:7476,Deployability,update,updateImage,7476,". expandToWindowProperty; public BooleanProperty expandToWindowProperty(); Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. Returns:; See Also:. getExpandToWindow(); setExpandToWindow(boolean). getExpandToWindow; public boolean getExpandToWindow(); Query whether the image is allowed to expand beyond its preferred width and height to fill the window.; If false, the image will grow no larger than its preferred width and height. Returns:. setExpandToWindow; public void setExpandToWindow(boolean limit); Control whether the image should be allowed to expand beyond its preferred width and height to fill the window.; If false, the image will grow no larger than its preferred width and height. Parameters:; limit - . getStage; public Stage getStage(); Get the stage used to display the image. Returns:. updateImage; public void updateImage(String name,; Image image); Update the image using a JavaFX image. Parameters:; name - ; image - . resetImage; public void resetImage(); Remove the image. updateImage; public void updateImage(String name,; BufferedImage img); Update the image using a buffered image. Parameters:; name - ; img - . imageNameProperty; public ReadOnlyObjectProperty<String> imageNameProperty(); Get a read-only property indicating the name of the image. Returns:. getName; public String getName(); Get the name of the image. Returns:. imageProperty; public ReadOnlyObjectProperty<Image> imageProperty(); Get a read-only property representing the JavaFX image. Returns:; See Also:. getImage(). getImage; public Image getImage(); Get the JavaFX image. Returns:. bufferedImageProperty; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty(); Get a read-only property representing the buffered image. Returns:; See Also:. getBufferedImage(). getBufferedImage; public BufferedImage getBufferedImage(); Get the buffered image.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:7643,Deployability,update,updateImage,7643,"indowProperty; public BooleanProperty expandToWindowProperty(); Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. Returns:; See Also:. getExpandToWindow(); setExpandToWindow(boolean). getExpandToWindow; public boolean getExpandToWindow(); Query whether the image is allowed to expand beyond its preferred width and height to fill the window.; If false, the image will grow no larger than its preferred width and height. Returns:. setExpandToWindow; public void setExpandToWindow(boolean limit); Control whether the image should be allowed to expand beyond its preferred width and height to fill the window.; If false, the image will grow no larger than its preferred width and height. Parameters:; limit - . getStage; public Stage getStage(); Get the stage used to display the image. Returns:. updateImage; public void updateImage(String name,; Image image); Update the image using a JavaFX image. Parameters:; name - ; image - . resetImage; public void resetImage(); Remove the image. updateImage; public void updateImage(String name,; BufferedImage img); Update the image using a buffered image. Parameters:; name - ; img - . imageNameProperty; public ReadOnlyObjectProperty<String> imageNameProperty(); Get a read-only property indicating the name of the image. Returns:. getName; public String getName(); Get the name of the image. Returns:. imageProperty; public ReadOnlyObjectProperty<Image> imageProperty(); Get a read-only property representing the JavaFX image. Returns:; See Also:. getImage(). getImage; public Image getImage(); Get the JavaFX image. Returns:. bufferedImageProperty; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty(); Get a read-only property representing the buffered image. Returns:; See Also:. getBufferedImage(). getBufferedImage; public BufferedImage getBufferedImage(); Get the buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:7668,Deployability,update,updateImage,7668,"indowProperty; public BooleanProperty expandToWindowProperty(); Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. Returns:; See Also:. getExpandToWindow(); setExpandToWindow(boolean). getExpandToWindow; public boolean getExpandToWindow(); Query whether the image is allowed to expand beyond its preferred width and height to fill the window.; If false, the image will grow no larger than its preferred width and height. Returns:. setExpandToWindow; public void setExpandToWindow(boolean limit); Control whether the image should be allowed to expand beyond its preferred width and height to fill the window.; If false, the image will grow no larger than its preferred width and height. Parameters:; limit - . getStage; public Stage getStage(); Get the stage used to display the image. Returns:. updateImage; public void updateImage(String name,; Image image); Update the image using a JavaFX image. Parameters:; name - ; image - . resetImage; public void resetImage(); Remove the image. updateImage; public void updateImage(String name,; BufferedImage img); Update the image using a buffered image. Parameters:; name - ; img - . imageNameProperty; public ReadOnlyObjectProperty<String> imageNameProperty(); Get a read-only property indicating the name of the image. Returns:. getName; public String getName(); Get the name of the image. Returns:. imageProperty; public ReadOnlyObjectProperty<Image> imageProperty(); Get a read-only property representing the JavaFX image. Returns:; See Also:. getImage(). getImage; public Image getImage(); Get the JavaFX image. Returns:. bufferedImageProperty; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty(); Get a read-only property representing the buffered image. Returns:; See Also:. getBufferedImage(). getBufferedImage; public BufferedImage getBufferedImage(); Get the buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:477,Modifiability,extend,extends,477,". SimpleImageViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SimpleImageViewer. java.lang.Object; qupath.lib.gui.panes.SimpleImageViewer. public class SimpleImageViewer; extends Object; A simple viewer for a single image, with options to save or copy.; ; This is primarily intended for RGB images, but can also be used for other types after; applying automatic brightness/contrast settings.; . This stores (and can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:3758,Modifiability,inherit,inherited,3758,"e of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:3832,Security,hash,hashCode,3832,"ad-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the nam",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:495,Usability,simpl,simple,495,". SimpleImageViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SimpleImageViewer. java.lang.Object; qupath.lib.gui.panes.SimpleImageViewer. public class SimpleImageViewer; extends Object; A simple viewer for a single image, with options to save or copy.; ; This is primarily intended for RGB images, but can also be used for other types after; applying automatic brightness/contrast settings.; . This stores (and can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:1712,Usability,simpl,simple,1712,"nd can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). BufferedImage; getBufferedImage(). Get the buffered image. boolean; getExpandToWindow(). Query whether the image is allowed to expand beyond its preferred width and height to fill the window. Image; getImage(). Get the JavaFX image. String; getName(). Get the name of the image. String; getPlaceholderText(). Get the placeholder text to show if no image is available. double; getSaturationPercent(). Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Stage; getStage(). Get the stage used to display the image. ReadOnlyObjectProperty<String>; imageNameProp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:5320,Usability,simpl,simple,5320,":. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only property representing the JavaFX image. See Also:. getImage(); imageProperty(). bufferedImage; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty; Get a read-only property representing the buffered image. See Also:. getBufferedImage(); bufferedImageProperty(). Constructor Details. SimpleImageViewer; public SimpleImageViewer(); Create a new simple image viewer.; The stage will be created, but not shown. Method Details. getPlaceholderText; public String getPlaceholderText(); Get the placeholder text to show if no image is available. Returns:. setPlaceholderText; public void setPlaceholderText(String placeholder); Set the placeholder text to show if no image is available. Parameters:; placeholder - . placeholderTextProperty; public StringProperty placeholderTextProperty(); Get the placeholder text to show if no image is available. Returns:; See Also:. getPlaceholderText(); setPlaceholderText(String). saturationPercentProperty; public DoubleProperty saturationPercentProperty(); Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Returns:; See Also:. getSaturationPercent(); setSaturationPercent(double). getSaturationPercent; public double getSaturationPercent(); Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:2107,Integrability,interface,interface,2107,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:536,Modifiability,extend,extends,536,". SlideLabelView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:1085,Modifiability,extend,extends,1085,"ee; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:1322,Modifiability,inherit,inherited,1322,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:1958,Modifiability,extend,extends,1958,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:1396,Security,hash,hashCode,1396,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:607,Usability,simpl,simple,607,". SlideLabelView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:1659,Deployability,update,updated,1659,"Listener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public voi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:2791,Deployability,update,updated,2791,"Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:2222,Integrability,depend,dependent,2222,"Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:2726,Integrability,interface,interface,2726,"Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:2872,Integrability,interface,interface,2872,"Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:3122,Integrability,interface,interface,3122,"Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:586,Modifiability,extend,extends,586,". WorkflowCommandLogView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class WorkflowCommandLogView. java.lang.Object; qupath.lib.gui.panes.WorkflowCommandLogView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, WorkflowListener. public class WorkflowCommandLogView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, WorkflowListener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-act",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:1227,Modifiability,extend,extends,1227," Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class WorkflowCommandLogView. java.lang.Object; qupath.lib.gui.panes.WorkflowCommandLogView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, WorkflowListener. public class WorkflowCommandLogView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, WorkflowListener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:1714,Modifiability,inherit,inherited,1714,"cript. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied fr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:2973,Modifiability,extend,extends,2973,"Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:1788,Security,hash,hashCode,1788,"uctor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been upda",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:678,Testability,log,logged,678,". WorkflowCommandLogView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class WorkflowCommandLogView. java.lang.Object; qupath.lib.gui.panes.WorkflowCommandLogView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, WorkflowListener. public class WorkflowCommandLogView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, WorkflowListener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-act",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html:466,Integrability,interface,interface,466,. qupath.lib.gui.prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.prefs. package qupath.lib.gui.prefs. Custom preferences. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html:765,Safety,detect,detections,765,. qupath.lib.gui.prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.prefs. package qupath.lib.gui.prefs. Custom preferences. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1075,Deployability,release,releases,1075," is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static fi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1112,Deployability,update,updates,1112,"verview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check f",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1231,Deployability,update,updates,1231,"um Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; C",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:2001,Deployability,update,updates,2001,"nstant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.AutoUpdateType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:2280,Deployability,release,releases,2280,". Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.AutoUpdateType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:2368,Deployability,update,updates,2368,"crete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.AutoUpdateType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathPrefs.AutoUpdateType>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:857,Integrability,interface,interfaces,857,". PathPrefs.AutoUpdateType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:711,Modifiability,extend,extends,711,". PathPrefs.AutoUpdateType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:868,Modifiability,inherit,inherited,868,". PathPrefs.AutoUpdateType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:921,Modifiability,extend,extends,921,". PathPrefs.AutoUpdateType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1651,Modifiability,inherit,inherited,1651,"Prefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. val",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1804,Modifiability,inherit,inherited,1804,"nsions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.AutoUpdateType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must matc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1762,Security,hash,hashCode,1762,"UpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.AutoUpdateType valueOf(String name); Returns the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1015,Integrability,interface,interfaces,1015,"DisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:777,Modifiability,extend,extends,777,". PathPrefs.DetectionTreeDisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static fin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1026,Modifiability,inherit,inherited,1026,"DisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1079,Modifiability,extend,extends,1079,"ur browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICON",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1716,Modifiability,inherit,inherited,1716,"lic static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1869,Modifiability,inherit,inherited,1869,"splayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). P",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:857,Safety,detect,detections,857,". PathPrefs.DetectionTreeDisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static fin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:942,Safety,detect,detectionTreeDisplayModeProperty,942,". PathPrefs.DetectionTreeDisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static fin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1182,Safety,detect,detections,1182,"mmary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without R",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1211,Safety,detect,detections,1211,"ethod. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1258,Safety,detect,detections,1258,"ummary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:2058,Safety,detect,detections,2058,"class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:2161,Safety,detect,detections,2161,"escription; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:2276,Safety,detect,detections,2276,"S. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathPrefs.DetectionTreeDisplayModes>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1827,Security,hash,hashCode,1827,"ectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:773,Integrability,interface,interfaces,773,". PathPrefs.FontSize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.FontSize. java.lang.Object; java.lang.Enum<PathPrefs.FontSize>; qupath.lib.gui.prefs.PathPrefs.FontSize. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:675,Modifiability,extend,extends,675,". PathPrefs.FontSize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.FontSize. java.lang.Object; java.lang.Enum<PathPrefs.FontSize>; qupath.lib.gui.prefs.PathPrefs.FontSize. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:784,Modifiability,inherit,inherited,784,". PathPrefs.FontSize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.FontSize. java.lang.Object; java.lang.Enum<PathPrefs.FontSize>; qupath.lib.gui.prefs.PathPrefs.FontSize. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:837,Modifiability,extend,extends,837,". PathPrefs.FontSize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.FontSize. java.lang.Object; java.lang.Enum<PathPrefs.FontSize>; qupath.lib.gui.prefs.PathPrefs.FontSize. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:1434,Modifiability,inherit,inherited,1434,"; java.lang.Enum<PathPrefs.FontSize>; qupath.lib.gui.prefs.PathPrefs.FontSize. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static PathPrefs.FontSize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.FontSize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:1587,Modifiability,inherit,inherited,1587," Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static PathPrefs.FontSize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.FontSize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant wi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:1545,Security,hash,hashCode,1545,"All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static PathPrefs.FontSize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.FontSize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:1795,Availability,down,downsample,1795,"rcentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Ca",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:4770,Availability,mask,maskImageNames,4770,"lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSetting. Specify how setting the image type should be handled for images when they are opened for the first time. static BooleanProperty; invertScrolling. Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSlider. Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettings. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSize. Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNames. Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMB. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboard. The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySize. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevels. The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimension. Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointTool. Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAcceleration. Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:8400,Availability,avail,available,8400,"nt tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessage. Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptions. Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadges. Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCores. Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScript. Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiter. Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentage. Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGestures. Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPath. A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGestures. Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:8494,Availability,down,downsample,8494,". Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessage. Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptions. Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadges. Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCores. Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScript. Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiter. Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentage. Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGestures. Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPath. A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGestures. Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGestures. Support zoom gestures for touchscree",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:9379,Availability,avail,available,9379,"ted percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGestures. Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPath. A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGestures. Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGestures. Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColor. Color to paint behind any image. static DoubleProperty; viewerGamma. Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinear. Request that images are displayed in viewers using bilinear interpolation. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. static enum ; PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. static enum ; PathPrefs.FontSize. Enum to control font size. static enum ; PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. Constructor Summary; Constructors. Co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:11735,Availability,down,downsample,11735,"erty; alwaysPaintSelectedObjectsProperty(). Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThicknessProperty(). Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercentProperty(). Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClassProperty(). Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheckProperty(). Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjectsProperty(). Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameterProperty(). Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMagProperty(). Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchyProperty(). Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjectsProperty(). The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObjectProperty(). The default color used to display selected objects. static IntegerProperty; colorTileProperty(). The default color used to display tile objects. static IntegerProperty; colorTMAMissingProperty(). The default color used to display missing TMA core objects. static IntegerProperty; colorTMAProperty(). The default color used to display TMA core objects. static BooleanProperty; createPersistentPreference(String name,; boolean defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user pre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:16089,Availability,avail,available,16089,"eferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; getRecentScriptsList(). Get a list of the most recent scripts that were opened. static double; getScaledNavigationSpeed(). Get navigation speed scaled as a proportion and forced to be in the range 0-1. static double; getScaledScrollSpeed(). Get scroll speed scaled as a proportion and forced to be in the range 0-1. static String; getSerializationExtension(). File extension used for serialization of ImageData (without the dot). static boolean; getShowAllRGBTransforms(). Request that all available color transforms are shown for RGB images. static boolean; getSkipMissingCoresProperty(). Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. static Preferences; getUserPreferences(). Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). static BooleanProperty; gridScaleMicronsProperty(). Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingXProperty(). Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingYProperty(). Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartXProperty(). Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartYProperty(). Starting y coordinate for any counting grid (usually 0). static boolean; hasJavaPreferences(). Attempt to load user JVM defaults - may fail ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:18006,Availability,mask,maskImageNamesProperty,18006,"rid (usually 0). static boolean; hasJavaPreferences(). Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSettingProperty(). Specify how setting the image type should be handled for images when they are opened for the first time. static void; importPreferences(InputStream stream). Import preferences from a stream. static BooleanProperty; invertScrollingProperty(). Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSliderProperty(). Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMBProperty(). Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboardProperty(). The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySizeProperty(). The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevelsProperty(). The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimensionProperty(). Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointToolProperty(). Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAccelerationProperty(). Apply acceleration/decelerati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:22087,Availability,avail,available,22087,"tTableThumbnailsProperty(). Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHullsProperty(). Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessageProperty(). Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptionsProperty(). Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadgesProperty(). Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCoresProperty(). Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScriptProperty(). Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiterProperty(). Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentageProperty(). Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsampleProperty(). Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationStringProperty(). Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnappingProperty(). If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGesturesProperty(). Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPathProperty(). A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushPr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:22191,Availability,down,downsample,22191,"c BooleanProperty; showPointHullsProperty(). Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessageProperty(). Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptionsProperty(). Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadgesProperty(). Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCoresProperty(). Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScriptProperty(). Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiterProperty(). Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentageProperty(). Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsampleProperty(). Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationStringProperty(). Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnappingProperty(). If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGesturesProperty(). Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPathProperty(). A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as norma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:23156,Availability,avail,available,23156,"rtDownsampleProperty(). Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationStringProperty(). Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnappingProperty(). If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGesturesProperty(). Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPathProperty(). A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGesturesProperty(). Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColorProperty(). Color to paint behind any image. static DoubleProperty; viewerGammaProperty(). Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinearProperty(). Request that images are displayed in viewers using bilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useSystemMenubar; @Deprecated; public static BooleanProperty useSystemMenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandTh",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:24832,Availability,mask,maskImageNames,24832,"MenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates when launching QuPath, if possible. See Also:. autoUpdateCheckProperty(). maskImageNames; public static BooleanProperty maskImageNamesProperty; Request that image names are hidden within the user interface. See Also:. maskImageNamesProperty(). defaultLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to ma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:24878,Availability,mask,maskImageNamesProperty,24878,"MenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates when launching QuPath, if possible. See Also:. autoUpdateCheckProperty(). maskImageNames; public static BooleanProperty maskImageNamesProperty; Request that image names are hidden within the user interface. See Also:. maskImageNamesProperty(). defaultLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to ma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:24976,Availability,mask,maskImageNamesProperty,24976,"for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates when launching QuPath, if possible. See Also:. autoUpdateCheckProperty(). maskImageNames; public static BooleanProperty maskImageNamesProperty; Request that image names are hidden within the user interface. See Also:. maskImageNamesProperty(). defaultLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleDisplayProperty(). showStartupMessage; public static BooleanP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:27955,Availability,avail,available,27955,"erty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. See Also:. scrollSpeedProperty(). navigationSpeed; public static IntegerProperty navigationSpeedProperty; Percentage to scale navigation speed. See Also:. navigationSpeedProperty(). navigationAcceleration; public static BooleanProperty navigationAccelerationProperty; Apply acceleration/deceleration effects when holding and releasing navigation key. See Also:. navigationAccelerationProperty(). skipMissingCores; public static BooleanProperty skipMissingCoresProperty; Skip ('jump over') missing cores when navigating through TMA grids. See Also:. skipMissingCoresProperty(). scriptsPath; public static StringProperty scriptsPathProperty; Path to a directory containing scripts for quick-access through the user interface. See Also:. scriptsPathProperty(). useTileBrush; public static BooleanProperty useTileBrushProperty; Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. See Also:. useTileBrushProperty(). selectionMode; public static BooleanProperty selectionModeProperty; Convert drawing tools to select objects, rather than creating new objects. See Also:. selectionModeProperty(). clipROIsForHierarchy; public static BooleanProperty clipROIsForHierarchyProperty; Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:34922,Availability,down,downsample,34922,"arted by dragging, then it will end by lifting the mouse (rather than requiring a double-click). See Also:. enableFreehandToolsProperty(). useZoomGestures; public static BooleanProperty useZoomGesturesProperty; Support zoom gestures for touchscreens and trackpads. See Also:. useZoomGesturesProperty(). useRotateGestures; public static BooleanProperty useRotateGesturesProperty; Support rotate gestures for touchscreens and trackpads. See Also:. useRotateGesturesProperty(). useScrollGestures; public static BooleanProperty useScrollGesturesProperty; Support scroll gestures for touchscreens and trackpads. See Also:. useScrollGesturesProperty(). brushCreateNewObjects; public static BooleanProperty brushCreateNewObjectsProperty; Create new objects by default when drawing with the Brush tool. The alternative is to append (discontinuous) regions to existing annotations. See Also:. brushCreateNewObjectsProperty(). brushScaleByMag; public static BooleanProperty brushScaleByMagProperty; Optionally scale the default brush tool diameter by the viewer magnification (downsample value). See Also:. brushScaleByMagProperty(). brushDiameter; public static IntegerProperty brushDiameterProperty; Default brush tool diameter, in pixels. See Also:. brushDiameterProperty(). returnToMoveMode; public static BooleanProperty returnToMoveModeProperty; Request that the GUI returns to using the PAN tool after a ROI is drawn.; This helps keep errant clicking under control, but not permitting new ROIs to be made without; explicitly activating a ROI too. See Also:. returnToMoveModeProperty(). tileCachePercentage; public static DoubleProperty tileCachePercentageProperty; Requested percentage of available memory to use for tile caching. See Also:. tileCachePercentageProperty(). useCalibratedLocationString; public static BooleanProperty useCalibratedLocationStringProperty; Show the cursor location on a viewer in calibrated units, rather than pixels. See Also:. useCalibratedLocationStringProperty(). useSele",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:35541,Availability,avail,available,35541,"eateNewObjects; public static BooleanProperty brushCreateNewObjectsProperty; Create new objects by default when drawing with the Brush tool. The alternative is to append (discontinuous) regions to existing annotations. See Also:. brushCreateNewObjectsProperty(). brushScaleByMag; public static BooleanProperty brushScaleByMagProperty; Optionally scale the default brush tool diameter by the viewer magnification (downsample value). See Also:. brushScaleByMagProperty(). brushDiameter; public static IntegerProperty brushDiameterProperty; Default brush tool diameter, in pixels. See Also:. brushDiameterProperty(). returnToMoveMode; public static BooleanProperty returnToMoveModeProperty; Request that the GUI returns to using the PAN tool after a ROI is drawn.; This helps keep errant clicking under control, but not permitting new ROIs to be made without; explicitly activating a ROI too. See Also:. returnToMoveModeProperty(). tileCachePercentage; public static DoubleProperty tileCachePercentageProperty; Requested percentage of available memory to use for tile caching. See Also:. tileCachePercentageProperty(). useCalibratedLocationString; public static BooleanProperty useCalibratedLocationStringProperty; Show the cursor location on a viewer in calibrated units, rather than pixels. See Also:. useCalibratedLocationStringProperty(). useSelectedColor; public static BooleanProperty useSelectedColorProperty; Use a specified color for highlighting selected objects in the viewer. See Also:. useSelectedColorProperty(). showPointHulls; public static BooleanProperty showPointHullsProperty; Show the convex hull for point annotations within the viewer. See Also:. showPointHullsProperty(). multipointTool; public static BooleanProperty multipointToolProperty; Create multiple points within the same annotation when using the counting tool.; The alternative is to create a new annotation for each new point. See Also:. multipointToolProperty(). tmaExportDownsample; public static DoubleProperty tmaE",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:36543,Availability,down,downsample,36543,"ed percentage of available memory to use for tile caching. See Also:. tileCachePercentageProperty(). useCalibratedLocationString; public static BooleanProperty useCalibratedLocationStringProperty; Show the cursor location on a viewer in calibrated units, rather than pixels. See Also:. useCalibratedLocationStringProperty(). useSelectedColor; public static BooleanProperty useSelectedColorProperty; Use a specified color for highlighting selected objects in the viewer. See Also:. useSelectedColorProperty(). showPointHulls; public static BooleanProperty showPointHullsProperty; Show the convex hull for point annotations within the viewer. See Also:. showPointHullsProperty(). multipointTool; public static BooleanProperty multipointToolProperty; Create multiple points within the same annotation when using the counting tool.; The alternative is to create a new annotation for each new point. See Also:. multipointToolProperty(). tmaExportDownsample; public static DoubleProperty tmaExportDownsampleProperty; Default downsample factor to use when exporting TMA cores. See Also:. tmaExportDownsampleProperty(). viewerGamma; public static DoubleProperty viewerGammaProperty; Requested gamma value applied to the image in each viewer (for display only). See Also:. viewerGammaProperty(). viewerBackgroundColor; public static IntegerProperty viewerBackgroundColorProperty; Color to paint behind any image. See Also:. viewerBackgroundColorProperty(). colorDefaultObjects; public static IntegerProperty colorDefaultObjectsProperty; The default color used to display objects of any type, where a default has not otherwise been specified. See Also:. colorDefaultObjectsProperty(). colorSelectedObject; public static IntegerProperty colorSelectedObjectProperty; The default color used to display selected objects. See Also:. colorSelectedObjectProperty(). colorTMA; public static IntegerProperty colorTMAProperty; The default color used to display TMA core objects. See Also:. colorTMAProperty(). colorTMAMi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:39159,Availability,down,down,39159,"roperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the viewer. See Also:. scalebarFontWeightProperty(). scalebarLineWidth; public static DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be no",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40246,Availability,robust,robust,40246,"(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the viewer. See Also:. scalebarFontWeightProperty(). scalebarLineWidth; public static DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:43675,Availability,mask,maskImageNamesProperty,43675,"ences(OutputStream); then it may be worthwhile to resetPreferences() first to handle the fact that preferences may not have been; saved because their default values were unchanged. Parameters:; stream - ; Throws:; IOException; InvalidPreferencesFormatException; See Also:. exportPreferences(OutputStream). numCommandThreadsProperty; public static IntegerProperty numCommandThreadsProperty(); Property specifying the preferred number of threads QuPath should use for multithreaded commands. Returns:. showImageNameInTitleProperty; public static BooleanProperty showImageNameInTitleProperty(); Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. Returns:. autoUpdateCheckProperty; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty(); Check for updates when launching QuPath, if possible. Returns:. maskImageNamesProperty; public static BooleanProperty maskImageNamesProperty(); Request that image names are hidden within the user interface. Returns:. defaultLocaleProperty; public static ObjectProperty<Locale> defaultLocaleProperty(); Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Returns:; an object property to control the locale; Since:; v0.4.0. defaultLocaleFormatProperty; public static ObjectProperty<Locale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:43729,Availability,mask,maskImageNamesProperty,43729,"ences(OutputStream); then it may be worthwhile to resetPreferences() first to handle the fact that preferences may not have been; saved because their default values were unchanged. Parameters:; stream - ; Throws:; IOException; InvalidPreferencesFormatException; See Also:. exportPreferences(OutputStream). numCommandThreadsProperty; public static IntegerProperty numCommandThreadsProperty(); Property specifying the preferred number of threads QuPath should use for multithreaded commands. Returns:. showImageNameInTitleProperty; public static BooleanProperty showImageNameInTitleProperty(); Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. Returns:. autoUpdateCheckProperty; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty(); Check for updates when launching QuPath, if possible. Returns:. maskImageNamesProperty; public static BooleanProperty maskImageNamesProperty(); Request that image names are hidden within the user interface. Returns:. defaultLocaleProperty; public static ObjectProperty<Locale> defaultLocaleProperty(); Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Returns:; an object property to control the locale; Since:; v0.4.0. defaultLocaleFormatProperty; public static ObjectProperty<Locale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:48646,Availability,avail,available,48646,"ledNavigationSpeed(); Get navigation speed scaled as a proportion and forced to be in the range 0-1. For example, 100% becomes 1. Returns:; speed. navigationAccelerationProperty; public static BooleanProperty navigationAccelerationProperty(); Apply acceleration/deceleration effects when holding and releasing navigation key. Returns:; navigationAccelerationProperty. getNavigationAccelerationProperty; public static boolean getNavigationAccelerationProperty(); Get whether to apply the navigation acceleration (& deceleration) effects or not. Returns:. skipMissingCoresProperty; public static BooleanProperty skipMissingCoresProperty(); Skip ('jump over') missing cores when navigating through TMA grids. Returns:; skipMissingCoresProperty. getSkipMissingCoresProperty; public static boolean getSkipMissingCoresProperty(); Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. Returns:. getShowAllRGBTransforms; public static boolean getShowAllRGBTransforms(); Request that all available color transforms are shown for RGB images. Returns:. scriptsPathProperty; public static StringProperty scriptsPathProperty(); Path to a directory containing scripts for quick-access through the user interface. Returns:. useTileBrushProperty; public static BooleanProperty useTileBrushProperty(); Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. Returns:. selectionModeProperty; public static BooleanProperty selectionModeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:49003,Availability,avail,available,49003,"tionAccelerationProperty. getNavigationAccelerationProperty; public static boolean getNavigationAccelerationProperty(); Get whether to apply the navigation acceleration (& deceleration) effects or not. Returns:. skipMissingCoresProperty; public static BooleanProperty skipMissingCoresProperty(); Skip ('jump over') missing cores when navigating through TMA grids. Returns:; skipMissingCoresProperty. getSkipMissingCoresProperty; public static boolean getSkipMissingCoresProperty(); Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. Returns:. getShowAllRGBTransforms; public static boolean getShowAllRGBTransforms(); Request that all available color transforms are shown for RGB images. Returns:. scriptsPathProperty; public static StringProperty scriptsPathProperty(); Path to a directory containing scripts for quick-access through the user interface. Returns:. useTileBrushProperty; public static BooleanProperty useTileBrushProperty(); Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. Returns:. selectionModeProperty; public static BooleanProperty selectionModeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:55814,Availability,down,downsample,55814,"he mouse (rather than requiring a double-click). Returns:. getSerializationExtension; public static String getSerializationExtension(); File extension used for serialization of ImageData (without the dot). Returns:. useZoomGesturesProperty; public static BooleanProperty useZoomGesturesProperty(); Support zoom gestures for touchscreens and trackpads. Returns:. useRotateGesturesProperty; public static BooleanProperty useRotateGesturesProperty(); Support rotate gestures for touchscreens and trackpads. Returns:. useScrollGesturesProperty; public static BooleanProperty useScrollGesturesProperty(); Support scroll gestures for touchscreens and trackpads. Returns:. brushCreateNewObjectsProperty; public static BooleanProperty brushCreateNewObjectsProperty(); Create new objects by default when drawing with the Brush tool. The alternative is to append (discontinuous) regions to existing annotations. Returns:. brushScaleByMagProperty; public static BooleanProperty brushScaleByMagProperty(); Optionally scale the default brush tool diameter by the viewer magnification (downsample value). Returns:. brushDiameterProperty; public static IntegerProperty brushDiameterProperty(); Default brush tool diameter, in pixels. Returns:. returnToMoveModeProperty; public static BooleanProperty returnToMoveModeProperty(); Request that the GUI returns to using the PAN tool after a ROI is drawn.; This helps keep errant clicking under control, but not permitting new ROIs to be made without; explicitly activating a ROI too. Returns:. tileCachePercentageProperty; public static DoubleProperty tileCachePercentageProperty(); Requested percentage of available memory to use for tile caching. Returns:. useCalibratedLocationStringProperty; public static BooleanProperty useCalibratedLocationStringProperty(); Show the cursor location on a viewer in calibrated units, rather than pixels. Returns:. useSelectedColorProperty; public static BooleanProperty useSelectedColorProperty(); Use a specified color for highlig",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:56380,Availability,avail,available,56380,"upport scroll gestures for touchscreens and trackpads. Returns:. brushCreateNewObjectsProperty; public static BooleanProperty brushCreateNewObjectsProperty(); Create new objects by default when drawing with the Brush tool. The alternative is to append (discontinuous) regions to existing annotations. Returns:. brushScaleByMagProperty; public static BooleanProperty brushScaleByMagProperty(); Optionally scale the default brush tool diameter by the viewer magnification (downsample value). Returns:. brushDiameterProperty; public static IntegerProperty brushDiameterProperty(); Default brush tool diameter, in pixels. Returns:. returnToMoveModeProperty; public static BooleanProperty returnToMoveModeProperty(); Request that the GUI returns to using the PAN tool after a ROI is drawn.; This helps keep errant clicking under control, but not permitting new ROIs to be made without; explicitly activating a ROI too. Returns:. tileCachePercentageProperty; public static DoubleProperty tileCachePercentageProperty(); Requested percentage of available memory to use for tile caching. Returns:. useCalibratedLocationStringProperty; public static BooleanProperty useCalibratedLocationStringProperty(); Show the cursor location on a viewer in calibrated units, rather than pixels. Returns:. useSelectedColorProperty; public static BooleanProperty useSelectedColorProperty(); Use a specified color for highlighting selected objects in the viewer. Returns:. showPointHullsProperty; public static BooleanProperty showPointHullsProperty(); Show the convex hull for point annotations within the viewer. Returns:. multipointToolProperty; public static BooleanProperty multipointToolProperty(); Create multiple points within the same annotation when using the counting tool.; The alternative is to create a new annotation for each new point. Returns:. tmaExportDownsampleProperty; public static DoubleProperty tmaExportDownsampleProperty(); Default downsample factor to use when exporting TMA cores. Returns:. viewer",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:57277,Availability,down,downsample,57277,"oo. Returns:. tileCachePercentageProperty; public static DoubleProperty tileCachePercentageProperty(); Requested percentage of available memory to use for tile caching. Returns:. useCalibratedLocationStringProperty; public static BooleanProperty useCalibratedLocationStringProperty(); Show the cursor location on a viewer in calibrated units, rather than pixels. Returns:. useSelectedColorProperty; public static BooleanProperty useSelectedColorProperty(); Use a specified color for highlighting selected objects in the viewer. Returns:. showPointHullsProperty; public static BooleanProperty showPointHullsProperty(); Show the convex hull for point annotations within the viewer. Returns:. multipointToolProperty; public static BooleanProperty multipointToolProperty(); Create multiple points within the same annotation when using the counting tool.; The alternative is to create a new annotation for each new point. Returns:. tmaExportDownsampleProperty; public static DoubleProperty tmaExportDownsampleProperty(); Default downsample factor to use when exporting TMA cores. Returns:. viewerGammaProperty; public static DoubleProperty viewerGammaProperty(); Requested gamma value applied to the image in each viewer (for display only). Returns:. viewerBackgroundColorProperty; public static IntegerProperty viewerBackgroundColorProperty(); Color to paint behind any image. Returns:. colorDefaultObjectsProperty; public static IntegerProperty colorDefaultObjectsProperty(); The default color used to display objects of any type, where a default has not otherwise been specified. Returns:. colorSelectedObjectProperty; public static IntegerProperty colorSelectedObjectProperty(); The default color used to display selected objects. Returns:. colorTMAProperty; public static IntegerProperty colorTMAProperty(); The default color used to display TMA core objects. Returns:. colorTMAMissingProperty; public static IntegerProperty colorTMAMissingProperty(); The default color used to display missing TMA co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59639,Availability,down,down,59639,"SelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWidthProperty(); Preferred line width for the scalebar. Returns:. allredMinPercentagePositiveProperty; public static DoubleProperty allredMinPercentagePositiveProperty(); The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:60623,Availability,robust,robust,60623," freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWidthProperty(); Preferred line width for the scalebar. Returns:. allredMinPercentagePositiveProperty; public static DoubleProperty allredMinPercentagePositiveProperty(); The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. Returns:. minPyramidDimensionProperty; public static IntegerProperty minPyramidDimensionProperty(); Minimum image width or height before pyramidalizing (if required). Returns:. pointRadiusProperty; public static IntegerProperty pointRadiusProperty(); Radius of the circle used to draw individual points in a point annotation (in pixels). Returns:. createPersistentPreference; public static BooleanProperty createPersistentPreference(String name,; boolean defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static IntegerProperty createPersistentPreference(String name,; int defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public stat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:1442,Deployability,update,updates,1442,"t; Central storage of QuPath preferences.; ; Most of these are 'persistent', and stored in a platform-dependent way using ; Java's Preferences API. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; allredMinPercentagePositive. The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:11352,Deployability,update,updates,11352,"nstructors. Constructor; Description; PathPrefs();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static DoubleProperty; allredMinPercentagePositiveProperty(). The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjectsProperty(). Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThicknessProperty(). Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercentProperty(). Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClassProperty(). Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheckProperty(). Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjectsProperty(). Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameterProperty(). Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMagProperty(). Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchyProperty(). Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjectsProperty(). The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObjectProperty(). The default color used to display selected objects. static IntegerProperty; colorTileProperty(). The default color used to display tile objects. static IntegerProperty; colorTMAMissingProperty()",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:24750,Deployability,update,updates,24750,"lass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useSystemMenubar; @Deprecated; public static BooleanProperty useSystemMenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates when launching QuPath, if possible. See Also:. autoUpdateCheckProperty(). maskImageNames; public static BooleanProperty maskImageNamesProperty; Request that image names are hidden within the user interface. See Also:. maskImageNamesProperty(). defaultLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayPr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:25231,Deployability,update,update,25231,"hreads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates when launching QuPath, if possible. See Also:. autoUpdateCheckProperty(). maskImageNames; public static BooleanProperty maskImageNamesProperty; Request that image names are hidden within the user interface. See Also:. maskImageNamesProperty(). defaultLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleDisplayProperty(). showStartupMessage; public static BooleanProperty showStartupMessageProperty; Show a startup message when QuPath is launched. See Also:. showStartupMessageProperty(). startupScript; public static StringProperty startupScriptProperty; Path to a startup script that should be run immediately after QuPath's launch. See Also:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:43621,Deployability,update,updates,43621,"ption; Import preferences from a stream.; ; Note that if the plan is to re-import preferences previously exported by exportPreferences(OutputStream); then it may be worthwhile to resetPreferences() first to handle the fact that preferences may not have been; saved because their default values were unchanged. Parameters:; stream - ; Throws:; IOException; InvalidPreferencesFormatException; See Also:. exportPreferences(OutputStream). numCommandThreadsProperty; public static IntegerProperty numCommandThreadsProperty(); Property specifying the preferred number of threads QuPath should use for multithreaded commands. Returns:. showImageNameInTitleProperty; public static BooleanProperty showImageNameInTitleProperty(); Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. Returns:. autoUpdateCheckProperty; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty(); Check for updates when launching QuPath, if possible. Returns:. maskImageNamesProperty; public static BooleanProperty maskImageNamesProperty(); Request that image names are hidden within the user interface. Returns:. defaultLocaleProperty; public static ObjectProperty<Locale> defaultLocaleProperty(); Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Returns:; an object property to control the locale; Since:; v0.4.0. defaultLocaleFormatProperty; public static ObjectProperty<Locale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:44067,Deployability,update,update,44067,"rty numCommandThreadsProperty(); Property specifying the preferred number of threads QuPath should use for multithreaded commands. Returns:. showImageNameInTitleProperty; public static BooleanProperty showImageNameInTitleProperty(); Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. Returns:. autoUpdateCheckProperty; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty(); Check for updates when launching QuPath, if possible. Returns:. maskImageNamesProperty; public static BooleanProperty maskImageNamesProperty(); Request that image names are hidden within the user interface. Returns:. defaultLocaleProperty; public static ObjectProperty<Locale> defaultLocaleProperty(); Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Returns:; an object property to control the locale; Since:; v0.4.0. defaultLocaleFormatProperty; public static ObjectProperty<Locale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. showStartupMessageProperty; public static BooleanProperty showStartupMessageProperty(); Show a startup message when QuPath is launched. Returns:. startupScriptProperty; public static StringProperty startupScriptProperty(); Path to a startup script tha",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40989,Energy Efficiency,adapt,adapt,40989,"llredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; a bound boolean property, which is ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:63619,Energy Efficiency,adapt,adapt,63619,"loaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. Returns:. annotationStrokeThicknessProperty; public static DoubleProperty annotationStrokeThicknessProperty(); Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. Returns:. usePixelSnappingProperty; public static BooleanProperty usePixelSnappingProperty(); If true, pixels should be snapped to integer coordinates when using the drawing tools. Returns:. getDefaultQuPathUserDirectory; public static Path getDefaultQuPathUserDirectory(); Get the default location for extensions.; ; This is platform and user-specific. It isn't necessarily used (and doesn't necessarily exist). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:560,Integrability,depend,dependent,560,". PathPrefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class PathPrefs. java.lang.Object; qupath.lib.gui.prefs.PathPrefs. public class PathPrefs; extends Object; Central storage of QuPath preferences.; ; Most of these are 'persistent', and stored in a platform-dependent way using ; Java's Preferences API. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; allredMinPercentagePositive. The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created acciden",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:4838,Integrability,interface,interface,4838," gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSetting. Specify how setting the image type should be handled for images when they are opened for the first time. static BooleanProperty; invertScrolling. Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSlider. Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettings. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSize. Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNames. Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMB. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboard. The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySize. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevels. The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimension. Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointTool. Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAcceleration. Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:6715,Integrability,interface,interface,6715,"eleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanProperty; returnToMoveMode. Request that the GUI returns to using the PAN tool after a ROI is drawn. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSize. Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeight. Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidth. Preferred line width for the scalebar. static StringProperty; scriptsPath. Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeed. Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionMode. Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptions. Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitle. Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptions. Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDs. Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:7760,Integrability,message,message,7760,"ntage to scale scroll speed for zooming etc. static BooleanProperty; selectionMode. Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptions. Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitle. Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptions. Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDs. Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessage. Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptions. Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadges. Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCores. Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScript. Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiter. Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentage. Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coord",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:18084,Integrability,interface,interface,18084,"ttempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSettingProperty(). Specify how setting the image type should be handled for images when they are opened for the first time. static void; importPreferences(InputStream stream). Import preferences from a stream. static BooleanProperty; invertScrollingProperty(). Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSliderProperty(). Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMBProperty(). Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboardProperty(). The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySizeProperty(). The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevelsProperty(). The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimensionProperty(). Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointToolProperty(). Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAccelerationProperty(). Apply acceleration/deceleration effects when holding and releasing navigation key. sta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:20252,Integrability,interface,interface,20252,"g the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBoundsProperty(). Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadiusProperty(). Radius of the circle used to draw individual points in a point annotation (in pixels). static void; resetPreferences(). Reset the preferences to their defaults. static BooleanProperty; returnToMoveModeProperty(). Request that the GUI returns to using the PAN tool after a ROI is drawn. static boolean; savePreferences(). Save the preferences. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSizeProperty(). Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeightProperty(). Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidthProperty(). Preferred line width for the scalebar. static StringProperty; scriptsPathProperty(). Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeedProperty(). Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionModeProperty(). Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptionsProperty(). Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitleProperty(). Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptionsProperty(). Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDsProperty(). Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnailsProperty(). Specify whether measurement tables should show thumbnail images by default or not. static Boolean",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:21387,Integrability,message,message,21387,"deProperty(). Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptionsProperty(). Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitleProperty(). Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptionsProperty(). Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDsProperty(). Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnailsProperty(). Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHullsProperty(). Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessageProperty(). Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptionsProperty(). Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadgesProperty(). Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCoresProperty(). Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScriptProperty(). Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiterProperty(). Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentageProperty(). Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsampleProperty(). Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationStringProperty(). Show the cursor location on a viewer in calibrated units, rather than pixels. static Boole",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:24954,Integrability,interface,interface,24954,"MenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates when launching QuPath, if possible. See Also:. autoUpdateCheckProperty(). maskImageNames; public static BooleanProperty maskImageNamesProperty; Request that image names are hidden within the user interface. See Also:. maskImageNamesProperty(). defaultLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to ma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:26039,Integrability,message,message,26039,"tLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleDisplayProperty(). showStartupMessage; public static BooleanProperty showStartupMessageProperty; Show a startup message when QuPath is launched. See Also:. showStartupMessageProperty(). startupScript; public static StringProperty startupScriptProperty; Path to a startup script that should be run immediately after QuPath's launch. See Also:. startupScriptProperty(). showToolBarBadges; public static BooleanProperty showToolBarBadgesProperty; Show badges on the toolbar, e.g. to provide messages or warnings. See Also:. showToolBarBadgesProperty(). maxMemoryMB; public static IntegerProperty maxMemoryMBProperty; Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. See Also:. maxMemoryMBProperty(). scrollSpeed; public static IntegerProperty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:26415,Integrability,message,messages,26415,"tic ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleDisplayProperty(). showStartupMessage; public static BooleanProperty showStartupMessageProperty; Show a startup message when QuPath is launched. See Also:. showStartupMessageProperty(). startupScript; public static StringProperty startupScriptProperty; Path to a startup script that should be run immediately after QuPath's launch. See Also:. startupScriptProperty(). showToolBarBadges; public static BooleanProperty showToolBarBadgesProperty; Show badges on the toolbar, e.g. to provide messages or warnings. See Also:. showToolBarBadgesProperty(). maxMemoryMB; public static IntegerProperty maxMemoryMBProperty; Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. See Also:. maxMemoryMBProperty(). scrollSpeed; public static IntegerProperty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. See Also:. scrollSpeedProperty(). navigationSpeed; public static IntegerProperty navigationSpeedProperty; Percentage to scale navigation speed. See Also:. navigationSpeedProperty(). navigationAcceleration; public static BooleanProperty navigationAccelerationProperty; Apply acceleration/deceleration effects when holding and releasing navig",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:27793,Integrability,interface,interface,27793," the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. See Also:. maxMemoryMBProperty(). scrollSpeed; public static IntegerProperty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. See Also:. scrollSpeedProperty(). navigationSpeed; public static IntegerProperty navigationSpeedProperty; Percentage to scale navigation speed. See Also:. navigationSpeedProperty(). navigationAcceleration; public static BooleanProperty navigationAccelerationProperty; Apply acceleration/deceleration effects when holding and releasing navigation key. See Also:. navigationAccelerationProperty(). skipMissingCores; public static BooleanProperty skipMissingCoresProperty; Skip ('jump over') missing cores when navigating through TMA grids. See Also:. skipMissingCoresProperty(). scriptsPath; public static StringProperty scriptsPathProperty; Path to a directory containing scripts for quick-access through the user interface. See Also:. scriptsPathProperty(). useTileBrush; public static BooleanProperty useTileBrushProperty; Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. See Also:. useTileBrushProperty(). selectionMode; public static BooleanProperty selectionModeProperty; Convert drawing tools to select objects, rather than creating new objects. See Also:. selectionModeProperty(). clipROIsForHierarchy; public static BooleanProperty clipROIsForHierarchyProperty; Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOpt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:30738,Integrability,depend,depends,30738,"rProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartYProperty(). gridSpacingX; public static DoubleProperty gridSpacingXProperty; Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingXProperty(). gridSpacingY; public static DoubleProperty gridSpacingYProperty; Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingYProperty(). gridScaleMicrons; public static BooleanProperty gridScaleMicronsProperty; Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. See Also:. gridScaleMicronsProperty(). autoBrightnessContrastSaturationPercent; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty; Controls pe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:30935,Integrability,depend,depends,30935,", whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartYProperty(). gridSpacingX; public static DoubleProperty gridSpacingXProperty; Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingXProperty(). gridSpacingY; public static DoubleProperty gridSpacingYProperty; Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingYProperty(). gridScaleMicrons; public static BooleanProperty gridScaleMicronsProperty; Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. See Also:. gridScaleMicronsProperty(). autoBrightnessContrastSaturationPercent; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty; Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. See Also:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:31135,Integrability,depend,depends,31135,"gProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartYProperty(). gridSpacingX; public static DoubleProperty gridSpacingXProperty; Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingXProperty(). gridSpacingY; public static DoubleProperty gridSpacingYProperty; Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingYProperty(). gridScaleMicrons; public static BooleanProperty gridScaleMicronsProperty; Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. See Also:. gridScaleMicronsProperty(). autoBrightnessContrastSaturationPercent; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty; Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. See Also:. autoBrightnessContrastSaturationPercentProperty(). keepDisplaySettings; public static BooleanProperty keepDisplaySettingsProperty; Retain display settings (channel colors, brightness/contrast) when ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:31335,Integrability,depend,depends,31335,"e is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartYProperty(). gridSpacingX; public static DoubleProperty gridSpacingXProperty; Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingXProperty(). gridSpacingY; public static DoubleProperty gridSpacingYProperty; Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingYProperty(). gridScaleMicrons; public static BooleanProperty gridScaleMicronsProperty; Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. See Also:. gridScaleMicronsProperty(). autoBrightnessContrastSaturationPercent; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty; Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. See Also:. autoBrightnessContrastSaturationPercentProperty(). keepDisplaySettings; public static BooleanProperty keepDisplaySettingsProperty; Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). See Also:. keepDisplaySettingsProperty(). doubleClickToZoom; public static BooleanProperty doubleClickToZoomPr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:43807,Integrability,interface,interface,43807,"ences(OutputStream); then it may be worthwhile to resetPreferences() first to handle the fact that preferences may not have been; saved because their default values were unchanged. Parameters:; stream - ; Throws:; IOException; InvalidPreferencesFormatException; See Also:. exportPreferences(OutputStream). numCommandThreadsProperty; public static IntegerProperty numCommandThreadsProperty(); Property specifying the preferred number of threads QuPath should use for multithreaded commands. Returns:. showImageNameInTitleProperty; public static BooleanProperty showImageNameInTitleProperty(); Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. Returns:. autoUpdateCheckProperty; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty(); Check for updates when launching QuPath, if possible. Returns:. maskImageNamesProperty; public static BooleanProperty maskImageNamesProperty(); Request that image names are hidden within the user interface. Returns:. defaultLocaleProperty; public static ObjectProperty<Locale> defaultLocaleProperty(); Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Returns:; an object property to control the locale; Since:; v0.4.0. defaultLocaleFormatProperty; public static ObjectProperty<Locale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:44956,Integrability,message,message,44956,"roperty for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Returns:; an object property to control the locale; Since:; v0.4.0. defaultLocaleFormatProperty; public static ObjectProperty<Locale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. showStartupMessageProperty; public static BooleanProperty showStartupMessageProperty(); Show a startup message when QuPath is launched. Returns:. startupScriptProperty; public static StringProperty startupScriptProperty(); Path to a startup script that should be run immediately after QuPath's launch. Returns:. showToolBarBadgesProperty; public static BooleanProperty showToolBarBadgesProperty(); Show badges on the toolbar, e.g. to provide messages or warnings. Returns:. hasJavaPreferences; public static boolean hasJavaPreferences(); Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get prop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:45295,Integrability,message,messages,45295,"ocale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. showStartupMessageProperty; public static BooleanProperty showStartupMessageProperty(); Show a startup message when QuPath is launched. Returns:. startupScriptProperty; public static StringProperty startupScriptProperty(); Path to a startup script that should be run immediately after QuPath's launch. Returns:. showToolBarBadgesProperty; public static BooleanProperty showToolBarBadgesProperty(); Show badges on the toolbar, e.g. to provide messages or warnings. Returns:. hasJavaPreferences; public static boolean hasJavaPreferences(); Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUser",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:48855,Integrability,interface,interface,48855,"elerationProperty; public static BooleanProperty navigationAccelerationProperty(); Apply acceleration/deceleration effects when holding and releasing navigation key. Returns:; navigationAccelerationProperty. getNavigationAccelerationProperty; public static boolean getNavigationAccelerationProperty(); Get whether to apply the navigation acceleration (& deceleration) effects or not. Returns:. skipMissingCoresProperty; public static BooleanProperty skipMissingCoresProperty(); Skip ('jump over') missing cores when navigating through TMA grids. Returns:; skipMissingCoresProperty. getSkipMissingCoresProperty; public static boolean getSkipMissingCoresProperty(); Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. Returns:. getShowAllRGBTransforms; public static boolean getShowAllRGBTransforms(); Request that all available color transforms are shown for RGB images. Returns:. scriptsPathProperty; public static StringProperty scriptsPathProperty(); Path to a directory containing scripts for quick-access through the user interface. Returns:. useTileBrushProperty; public static BooleanProperty useTileBrushProperty(); Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. Returns:. selectionModeProperty; public static BooleanProperty selectionModeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:51859,Integrability,depend,depends,51859,"archy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingXProperty; public static DoubleProperty gridSpacingXProperty(); Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingYProperty; public static DoubleProperty gridSpacingYProperty(); Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridScaleMicronsProperty; public static BooleanProperty gridScaleMicronsProperty(); Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. Returns:. autoBrightnessContrastSaturationPercentProperty; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty(); Controls percentage of saturated pixels to apply when automatically setting brightness",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:52043,Integrability,depend,depends,52043, performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingXProperty; public static DoubleProperty gridSpacingXProperty(); Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingYProperty; public static DoubleProperty gridSpacingYProperty(); Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridScaleMicronsProperty; public static BooleanProperty gridScaleMicronsProperty(); Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. Returns:. autoBrightnessContrastSaturationPercentProperty; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty(); Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. Returns:. keepDisplaySettingsProperty; public static BooleanProperty ke,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:52230,Integrability,depend,depends,52230,"lingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingXProperty; public static DoubleProperty gridSpacingXProperty(); Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingYProperty; public static DoubleProperty gridSpacingYProperty(); Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridScaleMicronsProperty; public static BooleanProperty gridScaleMicronsProperty(); Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. Returns:. autoBrightnessContrastSaturationPercentProperty; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty(); Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. Returns:. keepDisplaySettingsProperty; public static BooleanProperty keepDisplaySettingsProperty(); Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). R",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:52415,Integrability,depend,depends,52415,"on feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingXProperty; public static DoubleProperty gridSpacingXProperty(); Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingYProperty; public static DoubleProperty gridSpacingYProperty(); Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridScaleMicronsProperty; public static BooleanProperty gridScaleMicronsProperty(); Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. Returns:. autoBrightnessContrastSaturationPercentProperty; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty(); Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. Returns:. keepDisplaySettingsProperty; public static BooleanProperty keepDisplaySettingsProperty(); Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). Returns:. doubleClickToZoomProperty; public static BooleanProperty doubleClickToZoomProperty(); Request that double-clicking the viewer can be used to zoom in. Returns:. imageTypeSetting",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:445,Modifiability,extend,extends,445,". PathPrefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class PathPrefs. java.lang.Object; qupath.lib.gui.prefs.PathPrefs. public class PathPrefs; extends Object; Central storage of QuPath preferences.; ; Most of these are 'persistent', and stored in a platform-dependent way using ; Java's Preferences API. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; allredMinPercentagePositive. The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created acciden",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:13467,Modifiability,extend,extends,13467,"objects. static BooleanProperty; createPersistentPreference(String name,; boolean defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static DoubleProperty; createPersistentPreference(String name,; double defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static IntegerProperty; createPersistentPreference(String name,; int defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static LongProperty; createPersistentPreference(String name,; long defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static StringProperty; createPersistentPreference(String name,; String defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T extends Enum<T>>ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Class<T> enumType). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTree",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:15227,Modifiability,config,config,15227,"for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; getRecentScriptsList(). Get a list of the most recent scripts that were opened. static double; getScaledNavigationSpeed(). Get navigation speed scaled as a proportion and forced to be in the range 0-1. static double; getScaledScrollSpeed(). Get scroll speed scaled as a proportion and forced to be in the range 0-1. static String; getSerializationExtension(). File extension used for serialization of ImageData (without the dot). static boolean; getShowAllRGBTransforms(). Request that all available color transforms are shown for RGB images. static boolean; getSkipMissingCoresProperty(). Return whether the viewer skip",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:23678,Modifiability,inherit,inherited,23678,"th where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGesturesProperty(). Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColorProperty(). Color to paint behind any image. static DoubleProperty; viewerGammaProperty(). Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinearProperty(). Request that images are displayed in viewers using bilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useSystemMenubar; @Deprecated; public static BooleanProperty useSystemMenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40989,Modifiability,adapt,adapt,40989,"llredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; a bound boolean property, which is ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:45628,Modifiability,config,config,45628," public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. showStartupMessageProperty; public static BooleanProperty showStartupMessageProperty(); Show a startup message when QuPath is launched. Returns:. startupScriptProperty; public static StringProperty startupScriptProperty(); Path to a startup script that should be run immediately after QuPath's launch. Returns:. showToolBarBadgesProperty; public static BooleanProperty showToolBarBadgesProperty(); Show badges on the toolbar, e.g. to provide messages or warnings. Returns:. hasJavaPreferences; public static boolean hasJavaPreferences(); Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUserPreferences(); Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). Get the Preferences object for storing user preferences.; ; Note that the preferences object returned by this method must n",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:62458,Modifiability,extend,extends,62458,"ser preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static DoubleProperty createPersistentPreference(String name,; double defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static LongProperty createPersistentPreference(String name,; long defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static StringProperty createPersistentPreference(String name,; String defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:63619,Modifiability,adapt,adapt,63619,"loaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. Returns:. annotationStrokeThicknessProperty; public static DoubleProperty annotationStrokeThicknessProperty(); Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. Returns:. usePixelSnappingProperty; public static BooleanProperty usePixelSnappingProperty(); If true, pixels should be snapped to integer coordinates when using the drawing tools. Returns:. getDefaultQuPathUserDirectory; public static Path getDefaultQuPathUserDirectory(); Get the default location for extensions.; ; This is platform and user-specific. It isn't necessarily used (and doesn't necessarily exist). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:17072,Performance,load,load,17072,"available color transforms are shown for RGB images. static boolean; getSkipMissingCoresProperty(). Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. static Preferences; getUserPreferences(). Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). static BooleanProperty; gridScaleMicronsProperty(). Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingXProperty(). Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingYProperty(). Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartXProperty(). Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartYProperty(). Starting y coordinate for any counting grid (usually 0). static boolean; hasJavaPreferences(). Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSettingProperty(). Specify how setting the image type should be handled for images when they are opened for the first time. static void; importPreferences(InputStream stream). Import preferences from a stream. static BooleanProperty; invertScrollingProperty(). Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSliderProperty(). Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:30029,Performance,perform,performance,30029," static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProper",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38756,Performance,perform,performance,38756,"ed to display tile objects. See Also:. colorTileProperty(). autoSetAnnotationClass; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:45402,Performance,load,load,45402,"Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. showStartupMessageProperty; public static BooleanProperty showStartupMessageProperty(); Show a startup message when QuPath is launched. Returns:. startupScriptProperty; public static StringProperty startupScriptProperty(); Path to a startup script that should be run immediately after QuPath's launch. Returns:. showToolBarBadgesProperty; public static BooleanProperty showToolBarBadgesProperty(); Show badges on the toolbar, e.g. to provide messages or warnings. Returns:. hasJavaPreferences; public static boolean hasJavaPreferences(); Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUserPreferences(); Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:51061,Performance,perform,performance,51061,"cy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59263,Performance,perform,performance,59263,"s:. colorTileProperty; public static IntegerProperty colorTileProperty(); The default color used to display tile objects. Returns:. autoSetAnnotationClassProperty; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty(); Classification that should automatically be applied to all new annotations. May be null. Returns:. alwaysPaintSelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWid",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:2896,Safety,detect,detectionStrokeThickness,2896,"ted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static Doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:2969,Safety,detect,detections,2969,"o prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any cou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:3046,Safety,detect,detectionTreeDisplayMode,3046,"tObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any cou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:3083,Safety,detect,detections,3083,"ype, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.Imag",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:10119,Safety,detect,detections,10119,"ic BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGestures. Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColor. Color to paint behind any image. static DoubleProperty; viewerGamma. Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinear. Request that images are displayed in viewers using bilinear interpolation. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. static enum ; PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. static enum ; PathPrefs.FontSize. Enum to control font size. static enum ; PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. Constructor Summary; Constructors. Constructor; Description; PathPrefs();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static DoubleProperty; allredMinPercentagePositiveProperty(). The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjectsProperty(). Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThicknessProperty(). Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercentProperty(). Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14373,Safety,detect,detectionStrokeThicknessProperty,14373,"operty, which is one that will be saved to/reloaded from the user preferences. static <T extends Enum<T>>ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Class<T> enumType). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty().",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14456,Safety,detect,detections,14456,"ser preferences. static <T extends Enum<T>>ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Class<T> enumType). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& decelera",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14533,Safety,detect,detectionTreeDisplayModeProperty,14533,"name,; T defaultValue,; Class<T> enumType). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14580,Safety,detect,detections,14580,"roperty, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; get",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:16354,Safety,avoid,avoid,16354,"navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; getRecentScriptsList(). Get a list of the most recent scripts that were opened. static double; getScaledNavigationSpeed(). Get navigation speed scaled as a proportion and forced to be in the range 0-1. static double; getScaledScrollSpeed(). Get scroll speed scaled as a proportion and forced to be in the range 0-1. static String; getSerializationExtension(). File extension used for serialization of ImageData (without the dot). static boolean; getShowAllRGBTransforms(). Request that all available color transforms are shown for RGB images. static boolean; getSkipMissingCoresProperty(). Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. static Preferences; getUserPreferences(). Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). static BooleanProperty; gridScaleMicronsProperty(). Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingXProperty(). Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingYProperty(). Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartXProperty(). Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartYProperty(). Starting y coordinate for any counting grid (usually 0). static boolean; hasJavaPreferences(). Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSettingProperty(). Specify how setting the image type should be handled for images when they are opened for the first time. static void; importPreferences(InputStream stream). I",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38491,Safety,detect,detectionTreeDisplayMode,38491,"issing; public static IntegerProperty colorTMAMissingProperty; The default color used to display missing TMA core objects. See Also:. colorTMAMissingProperty(). colorTile; public static IntegerProperty colorTileProperty; The default color used to display tile objects. See Also:. colorTileProperty(). autoSetAnnotationClass; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize>",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38583,Safety,detect,detectionTreeDisplayModeProperty,38583," missing TMA core objects. See Also:. colorTMAMissingProperty(). colorTile; public static IntegerProperty colorTileProperty; The default color used to display tile objects. See Also:. colorTileProperty(). autoSetAnnotationClass; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. lo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38628,Safety,detect,detections,38628," missing TMA core objects. See Also:. colorTMAMissingProperty(). colorTile; public static IntegerProperty colorTileProperty; The default color used to display tile objects. See Also:. colorTileProperty(). autoSetAnnotationClass; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. lo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38699,Safety,detect,detections,38699,"ed to display tile objects. See Also:. colorTileProperty(). autoSetAnnotationClass; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38857,Safety,detect,detectionTreeDisplayModeProperty,38857,"ty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the viewer. See Also:. scalebarFontWeightProperty(). scalebarLineWidth; public static DoubleProperty scalebarLineW",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:39063,Safety,avoid,avoid,39063,"roperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the viewer. See Also:. scalebarFontWeightProperty(). scalebarLineWidth; public static DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be no",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40288,Safety,detect,detection,40288,"(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the viewer. See Also:. scalebarFontWeightProperty(). scalebarLineWidth; public static DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40766,Safety,detect,detectionStrokeThickness,40766,"atic DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This shoul",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40821,Safety,detect,detectionStrokeThicknessProperty,40821,"atic DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This shoul",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40902,Safety,detect,detections,40902,"atic DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This shoul",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:41031,Safety,detect,detectionStrokeThicknessProperty,41031,"tiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; a bound boolean property, which is true whenever systemMenubarProperty() is set to ALL_WINDOWS. exportPreferences;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:46343,Safety,avoid,avoid,46343,"empt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUserPreferences(); Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). Get the Preferences object for storing user preferences.; ; Note that the preferences object returned by this method must not be retained and reused,; because it may be invalidated by a call to resetPreferences().; Rather, as far as possible other methods of this class should be used rather than accessing the; Preferences directly.; . Returns:. savePreferences; public static boolean savePreferences(); Save the preferences. Returns:. resetPreferences; public static void resetPreferences(); Reset the preferences to their defaults. This requires QuPath to be restarted. scrollSpeedProperty; public static IntegerProperty scrollSpeedProperty(); Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. Returns:. getScaledScrollSpeed; public static double getScaledScrollSpeed(); Get scroll speed scaled as a proportion and forced to be in the range 0-1. For example, 100",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:58988,Safety,detect,detectionTreeDisplayModeProperty,58988," IntegerProperty colorTMAProperty(); The default color used to display TMA core objects. Returns:. colorTMAMissingProperty; public static IntegerProperty colorTMAMissingProperty(); The default color used to display missing TMA core objects. Returns:. colorTileProperty; public static IntegerProperty colorTileProperty(); The default color used to display tile objects. Returns:. autoSetAnnotationClassProperty; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty(); Classification that should automatically be applied to all new annotations. May be null. Returns:. alwaysPaintSelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59088,Safety,detect,detectionTreeDisplayModeProperty,59088,"lorTMAMissingProperty; public static IntegerProperty colorTMAMissingProperty(); The default color used to display missing TMA core objects. Returns:. colorTileProperty; public static IntegerProperty colorTileProperty(); The default color used to display tile objects. Returns:. autoSetAnnotationClassProperty; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty(); Classification that should automatically be applied to all new annotations. May be null. Returns:. alwaysPaintSelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> sca",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59135,Safety,detect,detections,59135,"lorTMAMissingProperty; public static IntegerProperty colorTMAMissingProperty(); The default color used to display missing TMA core objects. Returns:. colorTileProperty; public static IntegerProperty colorTileProperty(); The default color used to display tile objects. Returns:. autoSetAnnotationClassProperty; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty(); Classification that should automatically be applied to all new annotations. May be null. Returns:. alwaysPaintSelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> sca",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59206,Safety,detect,detections,59206,"s:. colorTileProperty; public static IntegerProperty colorTileProperty(); The default color used to display tile objects. Returns:. autoSetAnnotationClassProperty; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty(); Classification that should automatically be applied to all new annotations. May be null. Returns:. alwaysPaintSelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWid",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59543,Safety,avoid,avoid,59543,"SelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWidthProperty(); Preferred line width for the scalebar. Returns:. allredMinPercentagePositiveProperty; public static DoubleProperty allredMinPercentagePositiveProperty(); The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:60665,Safety,detect,detection,60665," freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWidthProperty(); Preferred line width for the scalebar. Returns:. allredMinPercentagePositiveProperty; public static DoubleProperty allredMinPercentagePositiveProperty(); The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. Returns:. minPyramidDimensionProperty; public static IntegerProperty minPyramidDimensionProperty(); Minimum image width or height before pyramidalizing (if required). Returns:. pointRadiusProperty; public static IntegerProperty pointRadiusProperty(); Radius of the circle used to draw individual points in a point annotation (in pixels). Returns:. createPersistentPreference; public static BooleanProperty createPersistentPreference(String name,; boolean defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static IntegerProperty createPersistentPreference(String name,; int defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public stat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:63386,Safety,detect,detectionStrokeThicknessProperty,63386,"loaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. Returns:. annotationStrokeThicknessProperty; public static DoubleProperty annotationStrokeThicknessProperty(); Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. Returns:. usePixelSnappingProperty; public static BooleanProperty usePixelSnappingProperty(); If true, pixels should be snapped to integer coordinates when using the drawing tools. Returns:. getDefaultQuPathUserDirectory; public static Path getDefaultQuPathUserDirectory(); Get the default location for extensions.; ; This is platform and user-specific. It isn't necessarily used (and doesn't necessarily exist). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:63449,Safety,detect,detectionStrokeThicknessProperty,63449,"loaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. Returns:. annotationStrokeThicknessProperty; public static DoubleProperty annotationStrokeThicknessProperty(); Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. Returns:. usePixelSnappingProperty; public static BooleanProperty usePixelSnappingProperty(); If true, pixels should be snapped to integer coordinates when using the drawing tools. Returns:. getDefaultQuPathUserDirectory; public static Path getDefaultQuPathUserDirectory(); Get the default location for extensions.; ; This is platform and user-specific. It isn't necessarily used (and doesn't necessarily exist). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:63532,Safety,detect,detections,63532,"loaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. Returns:. annotationStrokeThicknessProperty; public static DoubleProperty annotationStrokeThicknessProperty(); Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. Returns:. usePixelSnappingProperty; public static BooleanProperty usePixelSnappingProperty(); If true, pixels should be snapped to integer coordinates when using the drawing tools. Returns:. getDefaultQuPathUserDirectory; public static Path getDefaultQuPathUserDirectory(); Get the default location for extensions.; ; This is platform and user-specific. It isn't necessarily used (and doesn't necessarily exist). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:6691,Security,access,access,6691,"eleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanProperty; returnToMoveMode. Request that the GUI returns to using the PAN tool after a ROI is drawn. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSize. Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeight. Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidth. Preferred line width for the scalebar. static StringProperty; scriptsPath. Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeed. Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionMode. Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptions. Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitle. Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptions. Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDs. Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:20228,Security,access,access,20228,"g the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBoundsProperty(). Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadiusProperty(). Radius of the circle used to draw individual points in a point annotation (in pixels). static void; resetPreferences(). Reset the preferences to their defaults. static BooleanProperty; returnToMoveModeProperty(). Request that the GUI returns to using the PAN tool after a ROI is drawn. static boolean; savePreferences(). Save the preferences. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSizeProperty(). Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeightProperty(). Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidthProperty(). Preferred line width for the scalebar. static StringProperty; scriptsPathProperty(). Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeedProperty(). Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionModeProperty(). Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptionsProperty(). Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitleProperty(). Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptionsProperty(). Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDsProperty(). Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnailsProperty(). Specify whether measurement tables should show thumbnail images by default or not. static Boolean",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:23752,Security,hash,hashCode,23752,"s. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGesturesProperty(). Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColorProperty(). Color to paint behind any image. static DoubleProperty; viewerGammaProperty(). Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinearProperty(). Request that images are displayed in viewers using bilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useSystemMenubar; @Deprecated; public static BooleanProperty useSystemMenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:27769,Security,access,access,27769," the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. See Also:. maxMemoryMBProperty(). scrollSpeed; public static IntegerProperty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. See Also:. scrollSpeedProperty(). navigationSpeed; public static IntegerProperty navigationSpeedProperty; Percentage to scale navigation speed. See Also:. navigationSpeedProperty(). navigationAcceleration; public static BooleanProperty navigationAccelerationProperty; Apply acceleration/deceleration effects when holding and releasing navigation key. See Also:. navigationAccelerationProperty(). skipMissingCores; public static BooleanProperty skipMissingCoresProperty; Skip ('jump over') missing cores when navigating through TMA grids. See Also:. skipMissingCoresProperty(). scriptsPath; public static StringProperty scriptsPathProperty; Path to a directory containing scripts for quick-access through the user interface. See Also:. scriptsPathProperty(). useTileBrush; public static BooleanProperty useTileBrushProperty; Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. See Also:. useTileBrushProperty(). selectionMode; public static BooleanProperty selectionModeProperty; Convert drawing tools to select objects, rather than creating new objects. See Also:. selectionModeProperty(). clipROIsForHierarchy; public static BooleanProperty clipROIsForHierarchyProperty; Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOpt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:46748,Security,access,accessing,46748,"ting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUserPreferences(); Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). Get the Preferences object for storing user preferences.; ; Note that the preferences object returned by this method must not be retained and reused,; because it may be invalidated by a call to resetPreferences().; Rather, as far as possible other methods of this class should be used rather than accessing the; Preferences directly.; . Returns:. savePreferences; public static boolean savePreferences(); Save the preferences. Returns:. resetPreferences; public static void resetPreferences(); Reset the preferences to their defaults. This requires QuPath to be restarted. scrollSpeedProperty; public static IntegerProperty scrollSpeedProperty(); Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. Returns:. getScaledScrollSpeed; public static double getScaledScrollSpeed(); Get scroll speed scaled as a proportion and forced to be in the range 0-1. For example, 100% becomes 1. Returns:. navigationSpeedProperty; public static IntegerProperty navigationSpeedProperty(); Percentage to scale navigation speed. Returns:; navigationSpeedProperty. getScaledNavigationSpeed; public static double getScaledNavigationSpeed(); Get navigation speed scaled as a proportion and forced to be in the range 0-",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:48831,Security,access,access,48831,"elerationProperty; public static BooleanProperty navigationAccelerationProperty(); Apply acceleration/deceleration effects when holding and releasing navigation key. Returns:; navigationAccelerationProperty. getNavigationAccelerationProperty; public static boolean getNavigationAccelerationProperty(); Get whether to apply the navigation acceleration (& deceleration) effects or not. Returns:. skipMissingCoresProperty; public static BooleanProperty skipMissingCoresProperty(); Skip ('jump over') missing cores when navigating through TMA grids. Returns:; skipMissingCoresProperty. getSkipMissingCoresProperty; public static boolean getSkipMissingCoresProperty(); Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. Returns:. getShowAllRGBTransforms; public static boolean getShowAllRGBTransforms(); Request that all available color transforms are shown for RGB images. Returns:. scriptsPathProperty; public static StringProperty scriptsPathProperty(); Path to a directory containing scripts for quick-access through the user interface. Returns:. useTileBrushProperty; public static BooleanProperty useTileBrushProperty(); Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. Returns:. selectionModeProperty; public static BooleanProperty selectionModeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:3191,Testability,log,log,3191,"ject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSetting. Specify how setting the image type should be handled for ima",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:9013,Testability,log,log,9013,"arBadges. Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCores. Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScript. Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiter. Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentage. Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGestures. Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPath. A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGestures. Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGestures. Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColor. Color to paint behind any image. static DoubleProperty; viewerGamma. Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinear. Request that images are displayed in viewers using bilinear interpolation. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathPrefs.AutoUpdateType. Options for au",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14698,Testability,log,log,14698,"y<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; getRecentScriptsList(). Get a list of the most recent scripts that were opened. static double; getScaledNa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:22750,Testability,log,log,22750,"y(). Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScriptProperty(). Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiterProperty(). Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentageProperty(). Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsampleProperty(). Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationStringProperty(). Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnappingProperty(). If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGesturesProperty(). Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPathProperty(). A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGesturesProperty(). Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColorProperty(). Color to paint behind any image. static DoubleProperty; viewerGammaProperty(). Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinearProperty(). Request that images are displayed in viewers using bilinear interpolation. Methods inherited from class java.lang.Object; clon",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29239,Testability,log,log,29239,"ionModeProperty(). clipROIsForHierarchy; public static BooleanProperty clipROIsForHierarchyProperty; Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse ap",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29495,Testability,log,log,29495,"ng created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static Bool",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:50170,Testability,log,log,50170,"odeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(); Flag to indicate that the legacy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static Observabl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:50407,Testability,log,log,50407,"to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(); Flag to indicate that the legacy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling d",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:5259,Usability,undo,undo,5259,"ed for the first time. static BooleanProperty; invertScrolling. Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSlider. Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettings. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSize. Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNames. Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMB. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboard. The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySize. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevels. The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimension. Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointTool. Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAcceleration. Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:5341,Usability,undo,undo,5341,"iewer. static BooleanProperty; invertZSlider. Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettings. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSize. Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNames. Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMB. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboard. The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySize. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevels. The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimension. Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointTool. Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAcceleration. Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanProperty; returnToMoveMode. Request that the GUI returns to using the PAN tool after a ROI is drawn. static ObjectProperty<Pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:18535,Usability,undo,undo,18535," the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSliderProperty(). Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMBProperty(). Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboardProperty(). The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySizeProperty(). The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevelsProperty(). The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimensionProperty(). Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointToolProperty(). Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAccelerationProperty(). Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeedProperty(). Percentage to scale navigation speed. static IntegerProperty; numCommandThreadsProperty(). Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBoundsProperty(). Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadiusProperty(). Radius of the circle u",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:18627,Usability,undo,undo,18627,"the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMBProperty(). Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboardProperty(). The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySizeProperty(). The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevelsProperty(). The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimensionProperty(). Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointToolProperty(). Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAccelerationProperty(). Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeedProperty(). Percentage to scale navigation speed. static IntegerProperty; numCommandThreadsProperty(). Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBoundsProperty(). Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadiusProperty(). Radius of the circle used to draw individual points in a point annotation (in pixels). static void; resetPreferences(). Reset the preferences to their defau",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29637,Usability,undo,undo,29637," that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderPro",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29882,Usability,undo,undo,29882,"cate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMAOptionsProperty(). showLegacyOptions; public static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXPr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:29980,Usability,undo,undo,29980," static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProper",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:50685,Usability,undo,undo,50685,"shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(); Flag to indicate that the legacy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:50914,Usability,undo,undo,50914,"elevant when working with Tissue Microarrays. Returns:. showLegacyOptionsProperty; public static BooleanProperty showLegacyOptionsProperty(); Flag to indicate that the legacy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:51012,Usability,undo,undo,51012,"cy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:877,Integrability,interface,interfaces,877,". PathPrefs.ImageTypeSetting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.ImageTypeSetting. java.lang.Object; java.lang.Enum<PathPrefs.ImageTypeSetting>; qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.ImageTypeSetting>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageType",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:723,Modifiability,extend,extends,723,". PathPrefs.ImageTypeSetting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.ImageTypeSetting. java.lang.Object; java.lang.Enum<PathPrefs.ImageTypeSetting>; qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.ImageTypeSetting>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageType",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:888,Modifiability,inherit,inherited,888,". PathPrefs.ImageTypeSetting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.ImageTypeSetting. java.lang.Object; java.lang.Enum<PathPrefs.ImageTypeSetting>; qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.ImageTypeSetting>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageType",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:941,Modifiability,extend,extends,941,". PathPrefs.ImageTypeSetting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.ImageTypeSetting. java.lang.Object; java.lang.Enum<PathPrefs.ImageTypeSetting>; qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.ImageTypeSetting>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageType",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:1576,Modifiability,inherit,inherited,1576,"rializable, Comparable<PathPrefs.ImageTypeSetting>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageTypeSetting PROMPT; Prompt the user to specified the image type. NONE; public static final PathPrefs.ImageTypeSetting NONE; Do not set the image type. Method Details. values; public static PathPrefs.ImageTypeSetting[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.ImageTypeSetting valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:1729,Modifiability,inherit,inherited,1729,"athPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageTypeSetting PROMPT; Prompt the user to specified the image type. NONE; public static final PathPrefs.ImageTypeSetting NONE; Do not set the image type. Method Details. values; public static PathPrefs.ImageTypeSetting[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.ImageTypeSetting valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:1687,Security,hash,hashCode,1687,"; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageTypeSetting PROMPT; Prompt the user to specified the image type. NONE; public static final PathPrefs.ImageTypeSetting NONE; Do not set the image type. Method Details. values; public static PathPrefs.ImageTypeSetting[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.ImageTypeSetting valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous white",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:822,Integrability,interface,interfaces,822,". QuPathStyleManager.Fonts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class QuPathStyleManager.Fonts. java.lang.Object; java.lang.Enum<QuPathStyleManager.Fonts>; qupath.lib.gui.prefs.QuPathStyleManager.Fonts. All Implemented Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:720,Modifiability,extend,extends,720,". QuPathStyleManager.Fonts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class QuPathStyleManager.Fonts. java.lang.Object; java.lang.Enum<QuPathStyleManager.Fonts>; qupath.lib.gui.prefs.QuPathStyleManager.Fonts. All Implemented Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:833,Modifiability,inherit,inherited,833,". QuPathStyleManager.Fonts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class QuPathStyleManager.Fonts. java.lang.Object; java.lang.Enum<QuPathStyleManager.Fonts>; qupath.lib.gui.prefs.QuPathStyleManager.Fonts. All Implemented Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:886,Modifiability,extend,extends,886,". QuPathStyleManager.Fonts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class QuPathStyleManager.Fonts. java.lang.Object; java.lang.Enum<QuPathStyleManager.Fonts>; qupath.lib.gui.prefs.QuPathStyleManager.Fonts. All Implemented Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:1470,Modifiability,inherit,inherited,1470,"tyleManager.Fonts>; qupath.lib.gui.prefs.QuPathStyleManager.Fonts. All Implemented Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; public static final QuPathStyleManager.Fonts SERIF; Preferred serif font. Method Details. values; public static QuPathStyleManager.Fonts[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static QuPathStyleManager.Fonts valueOf(String name); Returns the enum constant of this class with the specified name.; The str",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:1623,Modifiability,inherit,inherited,1623,"able. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; public static final QuPathStyleManager.Fonts SERIF; Preferred serif font. Method Details. values; public static QuPathStyleManager.Fonts[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static QuPathStyleManager.Fonts valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:1581,Security,hash,hashCode,1581,"ted Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; public static final QuPathStyleManager.Fonts SERIF; Preferred serif font. Method Details. values; public static QuPathStyleManager.Fonts[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static QuPathStyleManager.Fonts valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:784,Availability,avail,availableFonts,784,. QuPathStyleManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS fi,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:814,Availability,avail,available,814,. QuPathStyleManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS fi,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:886,Availability,avail,availableStyles,886,. QuPathStyleManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS fi,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:919,Availability,avail,available,919,. QuPathStyleManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS fi,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1632,Availability,avail,availableFontsProperty,1632,"s restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1672,Availability,avail,available,1672,"ad. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1744,Availability,avail,availableStylesProperty,1744,"leList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1787,Availability,avail,available,1787,". Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManage",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2345,Availability,avail,available,2345,"ace defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2531,Availability,avail,availableStyles,2531,"ethod; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2609,Availability,avail,availableStylesProperty,2609,"ontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvai",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2650,Availability,avail,available,2650,"ontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvai",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2831,Availability,avail,availableStylesProperty,2831,"perty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3025,Availability,avail,availableFonts,3025,"; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh()",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3096,Availability,avail,availableFontsProperty,3096,"static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be requi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3134,Availability,avail,available,3134,"static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be requi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3346,Availability,avail,availableFontsProperty,3346,"les is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default sty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3683,Availability,avail,available,3683,"available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:4387,Availability,avail,availableStylesProperty,4387,"a css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty(); Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. Returns:; list of available fonts. fontProperty; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty(); Get the current selected font. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:4473,Availability,avail,availableStylesProperty,4473,"a css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty(); Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. Returns:; list of available fonts. fontProperty; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty(); Get the current selected font. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:4516,Availability,avail,available,4516,"a css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty(); Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. Returns:; list of available fonts. fontProperty; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty(); Get the current selected font. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:4847,Availability,avail,availableFontsProperty,4847,"a css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty(); Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. Returns:; list of available fonts. fontProperty; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty(); Get the current selected font. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:4926,Availability,avail,availableFontsProperty,4926,"a css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty(); Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. Returns:; list of available fonts. fontProperty; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty(); Get the current selected font. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:4966,Availability,avail,available,4966,"a css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty(); Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. Returns:; list of available fonts. fontProperty; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty(); Get the current selected font. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:5185,Availability,avail,available,5185,"a css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty(); Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. Returns:; list of available fonts. fontProperty; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty(); Get the current selected font. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1939,Deployability,install,installStyles,1939,"ble list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStylePr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1984,Deployability,install,installing,1984,"font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedS",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2295,Deployability,update,updateAvailableStyles,2295,"rface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-gr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2365,Deployability,update,updated,2365,"ace defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3591,Deployability,update,updateAvailableStyles,3591,"available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3633,Deployability,update,updateAvailableStyles,3633,"available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3703,Deployability,update,updated,3703,"available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3831,Deployability,install,installStyles,3831,"y<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3868,Deployability,install,installStyles,3868,"y<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3913,Deployability,install,installing,3913,"y<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1296,Integrability,interface,interface,1296,onstr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailab,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:481,Modifiability,extend,extends,481,. QuPathStyleManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS fi,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2382,Modifiability,inherit,inherited,2382,"QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3820,Performance,perform,performed,3820,"files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.Styl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2456,Security,hash,hashCode,2456,"athStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html:469,Integrability,interface,interface,469,. QuPathStyleManager.StyleOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Interface QuPathStyleManager.StyleOption. Enclosing class:; QuPathStyleManager. public static interface QuPathStyleManager.StyleOption; Interface defining a style that may be applied to QuPath. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a user-friendly description of the style. String; getName(). Get a user-friendly name for the style. void; setStyle(). Set the style for the QuPath application. Method Details. setStyle; void setStyle(); Set the style for the QuPath application. getDescription; String getDescription(); Get a user-friendly description of the style. Returns:. getName; String getName(); Get a user-friendly name for the style. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html:702,Usability,user-friendly,user-friendly,702,. QuPathStyleManager.StyleOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Interface QuPathStyleManager.StyleOption. Enclosing class:; QuPathStyleManager. public static interface QuPathStyleManager.StyleOption; Interface defining a style that may be applied to QuPath. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a user-friendly description of the style. String; getName(). Get a user-friendly name for the style. void; setStyle(). Set the style for the QuPath application. Method Details. setStyle; void setStyle(); Set the style for the QuPath application. getDescription; String getDescription(); Get a user-friendly description of the style. Returns:. getName; String getName(); Get a user-friendly name for the style. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html:767,Usability,user-friendly,user-friendly,767,. QuPathStyleManager.StyleOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Interface QuPathStyleManager.StyleOption. Enclosing class:; QuPathStyleManager. public static interface QuPathStyleManager.StyleOption; Interface defining a style that may be applied to QuPath. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a user-friendly description of the style. String; getName(). Get a user-friendly name for the style. void; setStyle(). Set the style for the QuPath application. Method Details. setStyle; void setStyle(); Set the style for the QuPath application. getDescription; String getDescription(); Get a user-friendly description of the style. Returns:. getName; String getName(); Get a user-friendly name for the style. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html:993,Usability,user-friendly,user-friendly,993,. QuPathStyleManager.StyleOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Interface QuPathStyleManager.StyleOption. Enclosing class:; QuPathStyleManager. public static interface QuPathStyleManager.StyleOption; Interface defining a style that may be applied to QuPath. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a user-friendly description of the style. String; getName(). Get a user-friendly name for the style. void; setStyle(). Set the style for the QuPath application. Method Details. setStyle; void setStyle(); Set the style for the QuPath application. getDescription; String getDescription(); Get a user-friendly description of the style. Returns:. getName; String getName(); Get a user-friendly name for the style. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html:1076,Usability,user-friendly,user-friendly,1076,. QuPathStyleManager.StyleOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Interface QuPathStyleManager.StyleOption. Enclosing class:; QuPathStyleManager. public static interface QuPathStyleManager.StyleOption; Interface defining a style that may be applied to QuPath. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a user-friendly description of the style. String; getName(). Get a user-friendly name for the style. void; setStyle(). Set the style for the QuPath application. Method Details. setStyle; void setStyle(); Set the style for the QuPath application. getDescription; String getDescription(); Get a user-friendly description of the style. Returns:. getName; String getName(); Get a user-friendly name for the style. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.StyleOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:461,Modifiability,extend,extends,461,". SystemMenuBar (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class SystemMenuBar. java.lang.Object; qupath.lib.gui.prefs.SystemMenuBar. public class SystemMenuBar; extends Object; Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value.; ; The original plan was to make it easier to control if all windows, the main window only, or no windows should; use the system menubar.; . Alas, that doesn't work well - at least on macOS.; If a system menubar is set for the main window only, then its accelerators are still triggered even when; another window with a non-system menubar is active.; . For this reason, there is no option to use the system menubar for the main window only.; This will be reinstated in the future, if a workaround can be found.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; static BooleanProperty; overrideSystemMenuBar. Property requesting that the system menubar should never be used for managed menubars. static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar. Property used to specify whether the system menubar should be used for the main QuPath stage. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. Constructor Summary; Constructors. Constructor; Description; SystemMenuBar();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; getOverrideSystemMenuBar(). Get the current value of the override property, which specifies whether the system menubar should not be used; by any win",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:2955,Modifiability,inherit,inherited,2955,"menubar should not be used; by any window - no matter what the value of systemMenubarProperty(). static void; manageChildMenuBar(MenuBar menuBar). Request that a menubar is managed as a child menubar. static void; manageMainMenuBar(MenuBar menuBar). Request that a menubar is managed as a main menubar. static BooleanProperty; overrideSystemMenuBarProperty(). Property requesting that the system menubar should never be used for managed menubars. static void; setOverrideSystemMenuBar(boolean doOverride). Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of systemMenubarProperty(). static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubarProperty(). Property used to specify whether the system menubar should be used for the main QuPath stage. static void; unmanageMenuBar(MenuBar menuBar). Do not manage the system menubar status for the given menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. systemMenubar; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty; Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Since:; v0.5.0; See Also:. systemMenubarProperty(). overrideSystemMenuBar; public static BooleanProperty overrideSystemMenuBarProperty; Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean); overrideSystemM",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:3029,Security,hash,hashCode,3029,"systemMenubarProperty(). static void; manageChildMenuBar(MenuBar menuBar). Request that a menubar is managed as a child menubar. static void; manageMainMenuBar(MenuBar menuBar). Request that a menubar is managed as a main menubar. static BooleanProperty; overrideSystemMenuBarProperty(). Property requesting that the system menubar should never be used for managed menubars. static void; setOverrideSystemMenuBar(boolean doOverride). Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of systemMenubarProperty(). static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubarProperty(). Property used to specify whether the system menubar should be used for the main QuPath stage. static void; unmanageMenuBar(MenuBar menuBar). Do not manage the system menubar status for the given menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. systemMenubar; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty; Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Since:; v0.5.0; See Also:. systemMenubarProperty(). overrideSystemMenuBar; public static BooleanProperty overrideSystemMenuBarProperty; Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean); overrideSystemMenuBarProperty(). Constructor Details. SystemMenuBar; public SystemMenuB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:3659,Security,access,access,3659,"perty(). static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubarProperty(). Property used to specify whether the system menubar should be used for the main QuPath stage. static void; unmanageMenuBar(MenuBar menuBar). Do not manage the system menubar status for the given menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. systemMenubar; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty; Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Since:; v0.5.0; See Also:. systemMenubarProperty(). overrideSystemMenuBar; public static BooleanProperty overrideSystemMenuBarProperty; Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean); overrideSystemMenuBarProperty(). Constructor Details. SystemMenuBar; public SystemMenuBar(). Method Details. systemMenubarProperty; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty(); Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; Since:; v0.5.0. manageMainMenuBar; public static void manageMainMenuBar(MenuBar menuBar); Request that a menubar is managed as a main menubar.; This means it is treated as a system menubar if #systemMenubarProperty() is set to ALL_WINDOWS or MAIN_WINDOW. Parameters:; menuBar - . manag",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:5286,Security,access,access,5286,"QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; Since:; v0.5.0. manageMainMenuBar; public static void manageMainMenuBar(MenuBar menuBar); Request that a menubar is managed as a main menubar.; This means it is treated as a system menubar if #systemMenubarProperty() is set to ALL_WINDOWS or MAIN_WINDOW. Parameters:; menuBar - . manageChildMenuBar; public static void manageChildMenuBar(MenuBar menuBar); Request that a menubar is managed as a child menubar.; This means it is treated as a system menubar if #systemMenubarProperty() is set to ALL_WINDOWS only. Parameters:; menuBar - . unmanageMenuBar; public static void unmanageMenuBar(MenuBar menuBar); Do not manage the system menubar status for the given menubar. Parameters:; menuBar - . overrideSystemMenuBarProperty; public static BooleanProperty overrideSystemMenuBarProperty(); Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. Returns:; See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean). getOverrideSystemMenuBar; public static boolean getOverrideSystemMenuBar(); Get the current value of the override property, which specifies whether the system menubar should not be used; by any window - no matter what the value of systemMenubarProperty(). Returns:; See Also:. overrideSystemMenuBarProperty(). setOverrideSystemMenuBar; public static void setOverrideSystemMenuBar(boolean doOverride); Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of systemMenubarProperty(). Parameters:; doOverride - ; See Also:. overrideSystemMenuBarProperty(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1124,Integrability,interface,interfaces,1124,"age; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:769,Modifiability,extend,extends,769,". SystemMenuBar.SystemMenuBarOption (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1135,Modifiability,inherit,inherited,1135,"age; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1188,Modifiability,extend,extends,1188,"ed; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1764,Modifiability,inherit,inherited,1764,"ends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMenuBar.SystemMenuBarOption NEVER; Don't use the system menubar for any windows. Method Details. values; public static SystemMenuBar.SystemMenuBarOption[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SystemMenuBar.SystemMenuBarOption valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1927,Modifiability,inherit,inherited,1927,"rom the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMenuBar.SystemMenuBarOption NEVER; Don't use the system menubar for any windows. Method Details. values; public static SystemMenuBar.SystemMenuBarOption[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SystemMenuBar.SystemMenuBarOption valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1875,Security,hash,hashCode,1875,"tem menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMenuBar.SystemMenuBarOption NEVER; Don't use the system menubar for any windows. Method Details. values; public static SystemMenuBar.SystemMenuBarOption[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SystemMenuBar.SystemMenuBarOption valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:8183,Integrability,interface,interface,8183,"ion.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action insertPixelClassifiersAction. insertObjectClassifiersAction; protected org.controlsfx.control.action.Action insertObjectClassifiersAction. insertDetectionMeasurementsAction; protected org.controlsfx.control.action.Action insertDetectionMeasurementsAction. findAction; protected org.controlsfx.control.action.Action findAction. smartEditingAction; protected org.controlsfx.control.action.Action smartEditingAction. smartEditing; protected BooleanProperty smartEditing. Constructor Details. DefaultScriptEditor; public DefaultScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. supportsFile; public boolean supportsFile(File file); Query whether a file represents a supported script.; Currently, this test looks at the file extension only. Specified by:; supportsFile in interface ScriptEditor; Parameters:; file - the file to test; Returns:; true if the file is likely to contain a supported script, false otherwise. getStage; public Stage getStage(); Get the stage for this script editor. Returns:. scriptRunning; public ObservableValue<Boolean> scriptRunning(); Observable value indicating whether a script is currently running or not.; This can be used (for example) to determine whether a user action should be blocked until the script has completed. Returns:. promptToSetFontSize; protected void promptToSetFontSize(); Update the font size for the script editor and console. addNewScript; public void addNewScript(String script,; ScriptLanguage language,; boolean doSelect); Create a new script in the specified language. Parameters:; script - text of the script to add; language - language of the script; doSelect - if true, select the script when it is added. getNewConsole; protected ScriptEditorControl<?> getNewConsole(). getNewEditor; protected ScriptEditorControl<?> getNewEditor(). currentLanguageProperty; protect",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:10847,Integrability,interface,interface,10847,"ty; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name - name of the script to show; script - content of the script. showScript; public void showScript(File file); Description copied from interface: ScriptEditor; Show the script editor, opening an existing script file. Specified by:; showScript in interface ScriptEditor; Parameters:; file - the script file. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:10925,Integrability,interface,interface,10925,"ty; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name - name of the script to show; script - content of the script. showScript; public void showScript(File file); Description copied from interface: ScriptEditor; Show the script editor, opening an existing script file. Specified by:; showScript in interface ScriptEditor; Parameters:; file - the script file. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:11038,Integrability,interface,interface,11038,"ty; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name - name of the script to show; script - content of the script. showScript; public void showScript(File file); Description copied from interface: ScriptEditor; Show the script editor, opening an existing script file. Specified by:; showScript in interface ScriptEditor; Parameters:; file - the script file. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:11164,Integrability,interface,interface,11164,"ty; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name - name of the script to show; script - content of the script. showScript; public void showScript(File file); Description copied from interface: ScriptEditor; Show the script editor, opening an existing script file. Specified by:; showScript in interface ScriptEditor; Parameters:; file - the script file. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:11339,Integrability,interface,interface,11339,"ty; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name - name of the script to show; script - content of the script. showScript; public void showScript(File file); Description copied from interface: ScriptEditor; Show the script editor, opening an existing script file. Specified by:; showScript in interface ScriptEditor; Parameters:; file - the script file. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:11450,Integrability,interface,interface,11450,"ty; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name - name of the script to show; script - content of the script. showScript; public void showScript(File file); Description copied from interface: ScriptEditor; Show the script editor, opening an existing script file. Specified by:; showScript in interface ScriptEditor; Parameters:; file - the script file. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:580,Modifiability,extend,extends,580,". DefaultScriptEditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class DefaultScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor. All Implemented Interfaces:; ScriptEditor. Direct Known Subclasses:; RichScriptEditor. public class DefaultScriptEditor; extends Object; implements ScriptEditor; Default multilingual script editor.; ; Lacks syntax highlighting and other pleasant features, unfortunately. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguage;  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntax;  ; protected ObservableBooleanValue; sendLogToConsole. Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Field Summary; Fields. Modifier and Type; Field; Description; protected org.controlsfx.control.action.Action; beautifySourceAction;  ; protected KeyCombination; comboPasteEscape;  ; protected final KeyCodeCombination; completionCodeCombination;  ; protected org.controlsfx.control.action.Action; compressSourceAction;  ; protected org.controlsfx.control.action.Action; copyAction;  ; protected org.controlsfx.control.action.Action; cutAction;  ; protected org.controlsfx.control.action.Action; findAction;  ; protected org.controlsfx.control.action.Action; insertAllDefaultImportAction;  ; protected org.controlsfx.control.action.Action; insertDetectionMeasurementsAction;  ; protected org.controlsfx.control.action.Action; insertMuAction;  ; protected org.controlsfx.control.action.Action; insertObjectClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertPixel",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:3534,Modifiability,extend,extends,3534,"ion; runProjectScriptAction;  ; protected org.controlsfx.control.action.Action; runProjectScriptNoSaveAction;  ; protected org.controlsfx.control.action.Action; runScriptAction;  ; protected org.controlsfx.control.action.Action; runSelectedAction;  ; protected BooleanProperty; smartEditing;  ; protected org.controlsfx.control.action.Action; smartEditingAction;  ; protected org.controlsfx.control.action.Action; undoAction;  . Constructor Summary; Constructors. Constructor; Description; DefaultScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addNewScript(String script,; ScriptLanguage language,; boolean doSelect). Create a new script in the specified language. protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguageProperty();  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntaxProperty();  ; protected static String; getClipboardText(boolean escapeCharacters);  ; protected ScriptEditorControl<? extends Region>; getCurrentConsoleControl();  ; protected ScriptEditorControl<? extends Region>; getCurrentEditorControl();  ; protected ScriptLanguage; getCurrentLanguage(). Gets the value of the currentLanguage property. protected ScriptTab; getCurrentScriptTab();  ; protected ScriptSyntax; getCurrentSyntax(). Gets the value of the currentSyntax property. protected String; getCurrentText();  ; protected ScriptEditorControl<?>; getNewConsole();  ; protected ScriptEditorControl<?>; getNewEditor();  ; protected String; getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:3614,Modifiability,extend,extends,3614,"ion; runProjectScriptAction;  ; protected org.controlsfx.control.action.Action; runProjectScriptNoSaveAction;  ; protected org.controlsfx.control.action.Action; runScriptAction;  ; protected org.controlsfx.control.action.Action; runSelectedAction;  ; protected BooleanProperty; smartEditing;  ; protected org.controlsfx.control.action.Action; smartEditingAction;  ; protected org.controlsfx.control.action.Action; undoAction;  . Constructor Summary; Constructors. Constructor; Description; DefaultScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addNewScript(String script,; ScriptLanguage language,; boolean doSelect). Create a new script in the specified language. protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguageProperty();  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntaxProperty();  ; protected static String; getClipboardText(boolean escapeCharacters);  ; protected ScriptEditorControl<? extends Region>; getCurrentConsoleControl();  ; protected ScriptEditorControl<? extends Region>; getCurrentEditorControl();  ; protected ScriptLanguage; getCurrentLanguage(). Gets the value of the currentLanguage property. protected ScriptTab; getCurrentScriptTab();  ; protected ScriptSyntax; getCurrentSyntax(). Gets the value of the currentSyntax property. protected String; getCurrentText();  ; protected ScriptEditorControl<?>; getNewConsole();  ; protected ScriptEditorControl<?>; getNewEditor();  ; protected String; getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:4978,Modifiability,inherit,inherited,4978," protected ScriptEditorControl<?>; getNewEditor();  ; protected String; getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; sendLogToConsoleProperty(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:10113,Modifiability,extend,extends,10113,"ScriptEditorControl<?> getNewConsole(). getNewEditor; protected ScriptEditorControl<?> getNewEditor(). currentLanguageProperty; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty(). Returns:; the currentLanguage property; See Also:. getCurrentLanguage(). currentSyntaxProperty; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty(). Returns:; the currentSyntax property; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new sc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:10214,Modifiability,extend,extends,10214,". currentLanguageProperty; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty(). Returns:; the currentLanguage property; See Also:. getCurrentLanguage(). currentSyntaxProperty; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty(). Returns:; the currentSyntax property; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:5052,Security,hash,hashCode,5052,"getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; sendLogToConsoleProperty(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:1068,Testability,log,log,1068,"ed on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class DefaultScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor. All Implemented Interfaces:; ScriptEditor. Direct Known Subclasses:; RichScriptEditor. public class DefaultScriptEditor; extends Object; implements ScriptEditor; Default multilingual script editor.; ; Lacks syntax highlighting and other pleasant features, unfortunately. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguage;  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntax;  ; protected ObservableBooleanValue; sendLogToConsole. Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Field Summary; Fields. Modifier and Type; Field; Description; protected org.controlsfx.control.action.Action; beautifySourceAction;  ; protected KeyCombination; comboPasteEscape;  ; protected final KeyCodeCombination; completionCodeCombination;  ; protected org.controlsfx.control.action.Action; compressSourceAction;  ; protected org.controlsfx.control.action.Action; copyAction;  ; protected org.controlsfx.control.action.Action; cutAction;  ; protected org.controlsfx.control.action.Action; findAction;  ; protected org.controlsfx.control.action.Action; insertAllDefaultImportAction;  ; protected org.controlsfx.control.action.Action; insertDetectionMeasurementsAction;  ; protected org.controlsfx.control.action.Action; insertMuAction;  ; protected org.controlsfx.control.action.Action; insertObjectClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertPixelClassifiersAction;  ; protected org.controlsfx.control.ac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:4586,Testability,log,log,4586,");  ; protected ScriptEditorControl<? extends Region>; getCurrentEditorControl();  ; protected ScriptLanguage; getCurrentLanguage(). Gets the value of the currentLanguage property. protected ScriptTab; getCurrentScriptTab();  ; protected ScriptSyntax; getCurrentSyntax(). Gets the value of the currentSyntax property. protected String; getCurrentText();  ; protected ScriptEditorControl<?>; getNewConsole();  ; protected ScriptEditorControl<?>; getNewEditor();  ; protected String; getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; sendLogToConsoleProperty(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:5563,Testability,log,log,5563,"y(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action copyAction. cutAction; protected org.controlsfx.control.action.Action cutAction. pasteAction; protected org.controlsfx.control.action.Action pasteAction. pasteAndEscapeAction; protected org.controlsfx.control.action.Action pasteAndEscapeAction. undoAction; protected org.controlsfx.control.action.Action undoAction. redoAction; protected org.controlsfx.control.action.Action redoAction. runScriptAction; protected org.controlsfx.control.action.Action runScri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:8113,Testability,test,test,8113,"lsfx.control.action.Action insertQPExImportAction. insertAllDefaultImportAction; protected org.controlsfx.control.action.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action insertPixelClassifiersAction. insertObjectClassifiersAction; protected org.controlsfx.control.action.Action insertObjectClassifiersAction. insertDetectionMeasurementsAction; protected org.controlsfx.control.action.Action insertDetectionMeasurementsAction. findAction; protected org.controlsfx.control.action.Action findAction. smartEditingAction; protected org.controlsfx.control.action.Action smartEditingAction. smartEditing; protected BooleanProperty smartEditing. Constructor Details. DefaultScriptEditor; public DefaultScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. supportsFile; public boolean supportsFile(File file); Query whether a file represents a supported script.; Currently, this test looks at the file extension only. Specified by:; supportsFile in interface ScriptEditor; Parameters:; file - the file to test; Returns:; true if the file is likely to contain a supported script, false otherwise. getStage; public Stage getStage(); Get the stage for this script editor. Returns:. scriptRunning; public ObservableValue<Boolean> scriptRunning(); Observable value indicating whether a script is currently running or not.; This can be used (for example) to determine whether a user action should be blocked until the script has completed. Returns:. promptToSetFontSize; protected void promptToSetFontSize(); Update the font size for the script editor and console. addNewScript; public void addNewScript(String script,; ScriptLanguage language,; boolean doSelect); Create a new script in the specified language. Parameters:; script - text of the script to add; language - language of the script; doSelect - if true, select the script when it is added. getNewConsole; protected ScriptEditorContro",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:8239,Testability,test,test,8239,"ion.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action insertPixelClassifiersAction. insertObjectClassifiersAction; protected org.controlsfx.control.action.Action insertObjectClassifiersAction. insertDetectionMeasurementsAction; protected org.controlsfx.control.action.Action insertDetectionMeasurementsAction. findAction; protected org.controlsfx.control.action.Action findAction. smartEditingAction; protected org.controlsfx.control.action.Action smartEditingAction. smartEditing; protected BooleanProperty smartEditing. Constructor Details. DefaultScriptEditor; public DefaultScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. supportsFile; public boolean supportsFile(File file); Query whether a file represents a supported script.; Currently, this test looks at the file extension only. Specified by:; supportsFile in interface ScriptEditor; Parameters:; file - the file to test; Returns:; true if the file is likely to contain a supported script, false otherwise. getStage; public Stage getStage(); Get the stage for this script editor. Returns:. scriptRunning; public ObservableValue<Boolean> scriptRunning(); Observable value indicating whether a script is currently running or not.; This can be used (for example) to determine whether a user action should be blocked until the script has completed. Returns:. promptToSetFontSize; protected void promptToSetFontSize(); Update the font size for the script editor and console. addNewScript; public void addNewScript(String script,; ScriptLanguage language,; boolean doSelect); Create a new script in the specified language. Parameters:; script - text of the script to add; language - language of the script; doSelect - if true, select the script when it is added. getNewConsole; protected ScriptEditorControl<?> getNewConsole(). getNewEditor; protected ScriptEditorControl<?> getNewEditor(). currentLanguageProperty; protect",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:10516,Testability,log,log,10516,"taxProperty(). Returns:; the currentSyntax property; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name - name of the script to show; script - content of the script. showScript; public void showScript(File file); Description copied from interface: ScriptEditor; Show the script editor, opening an existing script file. Specified by:; showScript in interface Scr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:2904,Usability,undo,undoAction,2904," insertObjectClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertPixelClassifiersAction;  ; protected org.controlsfx.control.action.Action; insertQPExImportAction;  ; protected org.controlsfx.control.action.Action; insertQPImportAction;  ; protected org.controlsfx.control.action.Action; killRunningScriptAction;  ; protected org.controlsfx.control.action.Action; pasteAction;  ; protected org.controlsfx.control.action.Action; pasteAndEscapeAction;  ; protected org.controlsfx.control.action.Action; redoAction;  ; protected org.controlsfx.control.action.Action; runProjectScriptAction;  ; protected org.controlsfx.control.action.Action; runProjectScriptNoSaveAction;  ; protected org.controlsfx.control.action.Action; runScriptAction;  ; protected org.controlsfx.control.action.Action; runSelectedAction;  ; protected BooleanProperty; smartEditing;  ; protected org.controlsfx.control.action.Action; smartEditingAction;  ; protected org.controlsfx.control.action.Action; undoAction;  . Constructor Summary; Constructors. Constructor; Description; DefaultScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addNewScript(String script,; ScriptLanguage language,; boolean doSelect). Create a new script in the specified language. protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguageProperty();  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntaxProperty();  ; protected static String; getClipboardText(boolean escapeCharacters);  ; protected ScriptEditorControl<? extends Region>; getCurrentConsoleControl();  ; protected ScriptEditorControl<? extends Region>; getCurrentEditorControl();  ; protected ScriptLanguage; getCurrentLanguage(). Gets the value of the currentLanguage property. protected ScriptTab; getCurrentScriptTab();  ; protected ScriptSyntax; getCurrentSyntax(). Gets the value of the currentSyntax property. protected Str",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:6302,Usability,undo,undoAction,6302,"ectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action copyAction. cutAction; protected org.controlsfx.control.action.Action cutAction. pasteAction; protected org.controlsfx.control.action.Action pasteAction. pasteAndEscapeAction; protected org.controlsfx.control.action.Action pasteAndEscapeAction. undoAction; protected org.controlsfx.control.action.Action undoAction. redoAction; protected org.controlsfx.control.action.Action redoAction. runScriptAction; protected org.controlsfx.control.action.Action runScriptAction. runSelectedAction; protected org.controlsfx.control.action.Action runSelectedAction. runProjectScriptAction; protected org.controlsfx.control.action.Action runProjectScriptAction. runProjectScriptNoSaveAction; protected org.controlsfx.control.action.Action runProjectScriptNoSaveAction. killRunningScriptAction; protected org.controlsfx.control.action.Action killRunningScriptAction. insertMuAction; protected org.controlsfx.control.action.Action insertMuAction. insertQPImportAction; protected org.controlsfx.control.action.Action insertQPImportAction. insertQPExImportAction; protected org.controlsfx.control.action.Action insertQPExImportAction. insertAllDefaultImportAction; protected org.controlsfx.control.action.Action insertAllDefaultImportAction. insertPixelClassifiersAction; prot",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:6361,Usability,undo,undoAction,6361,"See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action copyAction. cutAction; protected org.controlsfx.control.action.Action cutAction. pasteAction; protected org.controlsfx.control.action.Action pasteAction. pasteAndEscapeAction; protected org.controlsfx.control.action.Action pasteAndEscapeAction. undoAction; protected org.controlsfx.control.action.Action undoAction. redoAction; protected org.controlsfx.control.action.Action redoAction. runScriptAction; protected org.controlsfx.control.action.Action runScriptAction. runSelectedAction; protected org.controlsfx.control.action.Action runSelectedAction. runProjectScriptAction; protected org.controlsfx.control.action.Action runProjectScriptAction. runProjectScriptNoSaveAction; protected org.controlsfx.control.action.Action runProjectScriptNoSaveAction. killRunningScriptAction; protected org.controlsfx.control.action.Action killRunningScriptAction. insertMuAction; protected org.controlsfx.control.action.Action insertMuAction. insertQPImportAction; protected org.controlsfx.control.action.Action insertQPImportAction. insertQPExImportAction; protected org.controlsfx.control.action.Action insertQPExImportAction. insertAllDefaultImportAction; protected org.controlsfx.control.action.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action inser",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:509,Integrability,interface,interface,509,". EditableText (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface EditableText. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface EditableText; Interface for objects that manage editable text, including a caret position and selection.; This is used to define some useful scripting functionality independently of any particular user interface. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text. void; clear(). Request clear the contents of the control. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. default void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Get the current caret position. String; getSelectedText(). Get the selected text as a string. int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionLength(). Get the selection length, or 0 if there is no selection. int; getSelectionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Deta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:721,Integrability,interface,interface,721,". EditableText (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface EditableText. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface EditableText; Interface for objects that manage editable text, including a caret position and selection.; This is used to define some useful scripting functionality independently of any particular user interface. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text. void; clear(). Request clear the contents of the control. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. default void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Get the current caret position. String; getSelectedText(). Get the selected text as a string. int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionLength(). Get the selection length, or 0 if there is no selection. int; getSelectionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Deta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:952,Usability,clear,clear,952,". EditableText (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface EditableText. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface EditableText; Interface for objects that manage editable text, including a caret position and selection.; This is used to define some useful scripting functionality independently of any particular user interface. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text. void; clear(). Request clear the contents of the control. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. default void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Get the current caret position. String; getSelectedText(). Get the selected text as a string. int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionLength(). Get the selection length, or 0 if there is no selection. int; getSelectionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Deta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:969,Usability,clear,clear,969,". EditableText (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface EditableText. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface EditableText; Interface for objects that manage editable text, including a caret position and selection.; This is used to define some useful scripting functionality independently of any particular user interface. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text. void; clear(). Request clear the contents of the control. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. default void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Get the current caret position. String; getSelectedText(). Get the selected text as a string. int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionLength(). Get the selection length, or 0 if there is no selection. int; getSelectionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Deta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:2435,Usability,clear,clear,2435,"electionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Details. setText; void setText(String text); Set all the text in the editor. Parameters:; text - . getText; String getText(); Get all the text in the editor;. Returns:. appendText; void appendText(String text); Append the specified text. Parameters:; text - the text to be appended. replaceSelection; void replaceSelection(String text); Insert the specified text, replacing any existing selection. Parameters:; text - the text to insert. clear; void clear(); Request clear the contents of the control. getCaretPosition; int getCaretPosition(); Get the current caret position. Returns:. insertText; void insertText(int pos,; String text); Request inserting the specified text. Parameters:; pos - position to insert the text; text - the text to insert. deleteText; void deleteText(int startIdx,; int endIdx); Request deleting the text within the specified range. Parameters:; startIdx - ; endIdx - . positionCaret; void positionCaret(int index); Set the caret position to the specified index. Parameters:; index - . deselect; default void deselect(); Deselect any currently-selected text. getSelectedText; String getSelectedText(); Get the selected text as a string. Returns:. selectRange; void selectRange(int startIdx,; int endIdx); Set the range of the selected text. Parameters:; startIdx - ; endIdx - . getSelectionStart; int getSelectionStart(); Get the starting position for any selection (inclusive). Returns:. getSelectionEnd; int getSelectionEnd(); Get the endi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:2447,Usability,clear,clear,2447,"electionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Details. setText; void setText(String text); Set all the text in the editor. Parameters:; text - . getText; String getText(); Get all the text in the editor;. Returns:. appendText; void appendText(String text); Append the specified text. Parameters:; text - the text to be appended. replaceSelection; void replaceSelection(String text); Insert the specified text, replacing any existing selection. Parameters:; text - the text to insert. clear; void clear(); Request clear the contents of the control. getCaretPosition; int getCaretPosition(); Get the current caret position. Returns:. insertText; void insertText(int pos,; String text); Request inserting the specified text. Parameters:; pos - position to insert the text; text - the text to insert. deleteText; void deleteText(int startIdx,; int endIdx); Request deleting the text within the specified range. Parameters:; startIdx - ; endIdx - . positionCaret; void positionCaret(int index); Set the caret position to the specified index. Parameters:; index - . deselect; default void deselect(); Deselect any currently-selected text. getSelectedText; String getSelectedText(); Get the selected text as a string. Returns:. selectRange; void selectRange(int startIdx,; int endIdx); Set the range of the selected text. Parameters:; startIdx - ; endIdx - . getSelectionStart; int getSelectionStart(); Get the starting position for any selection (inclusive). Returns:. getSelectionEnd; int getSelectionEnd(); Get the endi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html:2464,Usability,clear,clear,2464,"electionStart(). Get the starting position for any selection (inclusive). String; getText(). Get all the text in the editor;. void; insertText(int pos,; String text). Request inserting the specified text. void; positionCaret(int index). Set the caret position to the specified index. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setText(String text). Set all the text in the editor. Method Details. setText; void setText(String text); Set all the text in the editor. Parameters:; text - . getText; String getText(); Get all the text in the editor;. Returns:. appendText; void appendText(String text); Append the specified text. Parameters:; text - the text to be appended. replaceSelection; void replaceSelection(String text); Insert the specified text, replacing any existing selection. Parameters:; text - the text to insert. clear; void clear(); Request clear the contents of the control. getCaretPosition; int getCaretPosition(); Get the current caret position. Returns:. insertText; void insertText(int pos,; String text); Request inserting the specified text. Parameters:; pos - position to insert the text; text - the text to insert. deleteText; void deleteText(int startIdx,; int endIdx); Request deleting the text within the specified range. Parameters:; startIdx - ; endIdx - . positionCaret; void positionCaret(int index); Set the caret position to the specified index. Parameters:; index - . deselect; default void deselect(); Deselect any currently-selected text. getSelectedText; String getSelectedText(); Get the selected text as a string. Returns:. selectRange; void selectRange(int startIdx,; int endIdx); Set the range of the selected text. Parameters:; startIdx - ; endIdx - . getSelectionStart; int getSelectionStart(); Get the starting position for any selection (inclusive). Returns:. getSelectionEnd; int getSelectionEnd(); Get the endi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/EditableText.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/EditableText.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html:410,Integrability,interface,interface,410,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html:498,Integrability,interface,interface,498,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html:1324,Integrability,interface,interface,1324,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html:1399,Modifiability,extend,extends,1399,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html:1278,Security,access,access,1278,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html:717,Modifiability,extend,extends,717,. qupath.lib.gui.scripting Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.scripting. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor); qupath.lib.scripting.QP. qupath.lib.gui.scripting.QPEx. qupath.lib.gui.scripting.ScriptTab; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>). Interface Hierarchy. qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html:897,Modifiability,extend,extends,897,. qupath.lib.gui.scripting Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.scripting. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor); qupath.lib.scripting.QP. qupath.lib.gui.scripting.QPEx. qupath.lib.gui.scripting.ScriptTab; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>). Interface Hierarchy. qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html:740,Testability,log,logging,740,. qupath.lib.gui.scripting Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.scripting. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor); qupath.lib.scripting.QP. qupath.lib.gui.scripting.QPEx. qupath.lib.gui.scripting.ScriptTab; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>). Interface Hierarchy. qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html:819,Testability,log,logging,819,. qupath.lib.gui.scripting Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.scripting. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor); qupath.lib.scripting.QP. qupath.lib.gui.scripting.QPEx. qupath.lib.gui.scripting.ScriptTab; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>). Interface Hierarchy. qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:1744,Availability,down,downsampleFactor,1744,"E, BRIGHTFIELD_OTHER, FLUORESCENCE, OTHER, PROJECT_BASE_DIR, VERSION. Constructor Summary; Constructors. Constructor; Description; QPEx();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static QuPathViewer; getCurrentViewer(). Get the active viewer in the current QuPath instance. static QuPathGUI; getQuPath(). Get the current QuPath instance. static Window; getWindow(String title). Access a window currently open within QuPath by its title. static ImageDisplaySettings; loadDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static F",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:1895,Availability,down,downsampleFactor,1895,"Ex();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static QuPathViewer; getCurrentViewer(). Get the active viewer in the current QuPath instance. static QuPathGUI; getQuPath(). Get the current QuPath instance. static Window; getWindow(String title). Access a window currently open within QuPath by its title. static ImageDisplaySettings; loadDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String cla",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12552,Availability,down,downsampleFactor,12552,"ctedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSpecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12688,Availability,down,downsampleFactor,12688,"pecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12707,Availability,down,downsample,12707,"pecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12878,Availability,down,downsampleFactor,12878,"ensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:13069,Availability,down,downsampleFactor,13069,"lize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:13088,Availability,down,downsample,13088,"lize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:13775,Availability,avail,available,13775,"Exception. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). r",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:14397,Availability,avail,available,14397,"ewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException. Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException. Throws:; InterruptedException. createTaskRunner; public static TaskRunner createTaskRunner(); Create a task runner with the default number of threads defined by ThreadTools.getParallelism().; This will either be interactive (if QuPath is running, and the current image is open or headless. Returns:. createTaskRunner; public static TaskRunner createTaskRunner",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:13965,Deployability,update,update,13965," data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException. Throws:; InterruptedException. runPlugin; pub",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:14652,Deployability,update,update,14652,"ch depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException. Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException. Throws:; InterruptedException. createTaskRunner; public static TaskRunner createTaskRunner(); Create a task runner with the default number of threads defined by ThreadTools.getParallelism().; This will either be interactive (if QuPath is running, and the current image is open or headless. Returns:. createTaskRunner; public static TaskRunner createTaskRunner(int nThreads); Create a task runner with the specified number of threads.; This will either be interactive (if QuPath is running, and the current image is open or headless. Parameters:; nThreads - number of",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:458,Modifiability,extend,extends,458,". QPEx (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class QPEx. java.lang.Object; qupath.lib.scripting.QP; qupath.lib.gui.scripting.QPEx. public class QPEx; extends QP; Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.scripting.QP; BRIGHTFIELD_H_DAB, BRIGHTFIELD_H_E, BRIGHTFIELD_OTHER, FLUORESCENCE, OTHER, PROJECT_BASE_DIR, VERSION. Constructor Summary; Constructors. Constructor; Description; QPEx();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreCl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:649,Modifiability,inherit,inherited,649,". QPEx (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class QPEx. java.lang.Object; qupath.lib.scripting.QP; qupath.lib.gui.scripting.QPEx. public class QPEx; extends QP; Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.scripting.QP; BRIGHTFIELD_H_DAB, BRIGHTFIELD_H_E, BRIGHTFIELD_OTHER, FLUORESCENCE, OTHER, PROJECT_BASE_DIR, VERSION. Constructor Summary; Constructors. Constructor; Description; QPEx();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreCl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:3879,Modifiability,extend,extends,3879,"  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurements for the current image. static void; saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save detection measurements for the specified image. static void; saveImageMeasurements(String path,; String... includeColumns). Save whole image measurements for the current image. static void; saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save whole image measurements for the specified image. static void; saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the current image for objects of a fixed type. static void; saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the specified image for objects of a fixed type. static void; saveTMAMeasurements(String path,; String... includeColumns). Save TMA measurements for the current image. static void; saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save TMA measurements for the specified image. static void; setChannelDisplayRange(int channel,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the current ImageData for a channel identified by number. static void; setChannelDisplayRange(String channelName,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the current ImageData for a channel identified by name. static b",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:4079,Modifiability,extend,extends,4079,"measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurements for the current image. static void; saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save detection measurements for the specified image. static void; saveImageMeasurements(String path,; String... includeColumns). Save whole image measurements for the current image. static void; saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save whole image measurements for the specified image. static void; saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the current image for objects of a fixed type. static void; saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the specified image for objects of a fixed type. static void; saveTMAMeasurements(String path,; String... includeColumns). Save TMA measurements for the current image. static void; saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save TMA measurements for the specified image. static void; setChannelDisplayRange(int channel,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the current ImageData for a channel identified by number. static void; setChannelDisplayRange(String channelName,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the current ImageData for a channel identified by name. static boolean; setChannelDisplayRange(ImageData<BufferedImage> imageData,; int channel,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the specified Image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6060,Modifiability,inherit,inherited,6060,"geData for a channel identified by number. static void; setChannelDisplayRange(ImageData<BufferedImage> imageData,; String channelName,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the specified ImageData for a channel identified by name. static void; writeImage(Image image,; String path). Write a JavaFX image to the specified path. static void; writeRenderedImage(QuPathViewer viewer,; String path). Write a rendered image for the current viewer to the specified path. static void; writeRenderedImage(ImageData<BufferedImage> imageData,; String path). Write a rendered image to the specified path. static void; writeRenderedImageRegion(QuPathViewer viewer,; RegionRequest request,; String path). Write a rendered image region for the current viewer to the specified path. static void; writeRenderedImageRegion(ImageData<BufferedImage> imageData,; RegionRequest request,; String path). Write a rendered image region to the specified path. Methods inherited from class qupath.lib.scripting.QP; addObject, addObjects, addObjects, addPixelClassifierMeasurements, addPixelClassifierMeasurements, addShapeMeasurements, addShapeMeasurements, addShapeMeasurements, buildFilePath, buildPathInProject, buildServer, buildServer, buildServer, checkMinVersion, checkVersionRange, classifyDetectionsByCentroid, classifyDetectionsByCentroid, classifySelected, classifySelected, clearAllObjects, clearAllObjects, clearAnnotationMeasurements, clearAnnotationMeasurements, clearAnnotations, clearCellMeasurements, clearCellMeasurements, clearDetectionMeasurements, clearDetectionMeasurements, clearDetections, clearMeasurements, clearMeasurements, clearMeasurements, clearMeasurements, clearMeasurements, clearRootMeasurements, clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, cop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12000,Modifiability,inherit,inherited,12000,"ames, setChannels, setChannels, setColorDeconvolutionStains, setDefaultImageData, setDefaultProject, setDetectionIntensityClassifications, setDetectionIntensityClassifications, setImageType, setImageType, setIntensityClassifications, setIntensityClassifications, setIntensityClassifications, setIntensityClassificationsForSelected, setPixelSizeMicrons, setPixelSizeMicrons, setPixelSizeMicrons, setSelectedObject, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSpecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:16111,Modifiability,layers,layers,16111,"); Create a task runner with the default number of threads defined by ThreadTools.getParallelism().; This will either be interactive (if QuPath is running, and the current image is open or headless. Returns:. createTaskRunner; public static TaskRunner createTaskRunner(int nThreads); Create a task runner with the specified number of threads.; This will either be interactive (if QuPath is running, and the current image is open or headless. Parameters:; nThreads - number of threads for the task runner to use; Returns:. promptForFile; public static File promptForFile(String... extensions); Prompt the user to select a file from a file chooser. Parameters:; extensions - valid file extensions, or null if any file may be chosen.; Returns:; the file chosen by the user, or null if the dialog was cancelled. writeRenderedImage; public static void writeRenderedImage(ImageData<BufferedImage> imageData,; String path); throws IOException; Write a rendered image to the specified path. No overlay layers will be included. Parameters:; imageData - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(QuPathViewer, String). writeRenderedImage; public static void writeRenderedImage(QuPathViewer viewer,; String path); throws IOException; Write a rendered image for the current viewer to the specified path. Parameters:; viewer - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). writeRenderedImageRegion; public static void writeRenderedImageRegion(ImageData<BufferedImage> imageData,; RegionRequest request,; String path); throws IOException; Write a rendered image region to the specified path. No overlay layers will be included. Parameters:; imageData - ; request - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(QuPathViewer, String). writeRenderedImageRegion; public static void writeRenderedImageRegion(QuPathViewer viewer,; RegionRequest request,; String path); throws IOException; Write a rendered image region for the current viewer to",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:16764,Modifiability,layers,layers,16764,"ters:; extensions - valid file extensions, or null if any file may be chosen.; Returns:; the file chosen by the user, or null if the dialog was cancelled. writeRenderedImage; public static void writeRenderedImage(ImageData<BufferedImage> imageData,; String path); throws IOException; Write a rendered image to the specified path. No overlay layers will be included. Parameters:; imageData - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(QuPathViewer, String). writeRenderedImage; public static void writeRenderedImage(QuPathViewer viewer,; String path); throws IOException; Write a rendered image for the current viewer to the specified path. Parameters:; viewer - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). writeRenderedImageRegion; public static void writeRenderedImageRegion(ImageData<BufferedImage> imageData,; RegionRequest request,; String path); throws IOException; Write a rendered image region to the specified path. No overlay layers will be included. Parameters:; imageData - ; request - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(QuPathViewer, String). writeRenderedImageRegion; public static void writeRenderedImageRegion(QuPathViewer viewer,; RegionRequest request,; String path); throws IOException; Write a rendered image region for the current viewer to the specified path. Parameters:; viewer - ; request - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). writeImage; public static void writeImage(Image image,; String path); throws IOException; Write a JavaFX image to the specified path. Parameters:; image - the image to write; path - the path to write the image; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). setChannelDisplayRange; public static void setChannelDisplayRange(int channel,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the current ImageData for a channel identified by number. Paramete",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:21970,Modifiability,extend,extends,21970,"ata; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveTMAMeasurements; public static void saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save TMA measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveDetectionMeasurements; public static void saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save detection measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the current image for objects of a fixed type. Parameters:; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:22411,Modifiability,extend,extends,22411,"e results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveDetectionMeasurements; public static void saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save detection measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the current image for objects of a fixed type. Parameters:; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:2368,Performance,load,loadDisplaySettings,2368," static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static QuPathViewer; getCurrentViewer(). Get the active viewer in the current QuPath instance. static QuPathGUI; getQuPath(). Get the current QuPath instance. static Window; getWindow(String title). Access a window currently open within QuPath by its title. static ImageDisplaySettings; loadDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String className,; String args);  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurem",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:8975,Performance,load,loadDensityMap,8975,"plicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, isTMADearrayed, loadDensityMap, loadImageData, loadObjectClassifier, loadPixelClassifier, makeARGB, makeFileInProject, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makePathInProject, makeRGB, measurement, mergeAnnotations, mergeAnnotations, mergePointsForAllClasses, mergePointsForSelectedObjectClasses, mergeSelectedAnnotations, mergeSelectedAnnotations, mkdirs, nObjects, refreshDuplicateIDs, refreshDuplicateIDs, refreshIDs, refreshIDs, relabelTMAGrid, relabelTMAGrid, removeMeasurements, removeMeasurements, removeObject, removeObjects, removeObjects, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeOrClipObjectsOutsideImage, removeOrClipObjectsOutsideImage, replaceClassification, replaceClassification, replaceClassification, replaceClassification, resetBatchProjectAndImage, resetClassifications, resetClassifications, resetDetectionClassifications, resetIntensityClassifications,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:8991,Performance,load,loadImageData,8991,"nnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, isTMADearrayed, loadDensityMap, loadImageData, loadObjectClassifier, loadPixelClassifier, makeARGB, makeFileInProject, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makePathInProject, makeRGB, measurement, mergeAnnotations, mergeAnnotations, mergePointsForAllClasses, mergePointsForSelectedObjectClasses, mergeSelectedAnnotations, mergeSelectedAnnotations, mkdirs, nObjects, refreshDuplicateIDs, refreshDuplicateIDs, refreshIDs, refreshIDs, relabelTMAGrid, relabelTMAGrid, removeMeasurements, removeMeasurements, removeObject, removeObjects, removeObjects, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeOrClipObjectsOutsideImage, removeOrClipObjectsOutsideImage, replaceClassification, replaceClassification, replaceClassification, replaceClassification, resetBatchProjectAndImage, resetClassifications, resetClassifications, resetDetectionClassifications, resetIntensityClassifications, resetIntensity",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:9006,Performance,load,loadObjectClassifier,9006,"ateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, isTMADearrayed, loadDensityMap, loadImageData, loadObjectClassifier, loadPixelClassifier, makeARGB, makeFileInProject, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makePathInProject, makeRGB, measurement, mergeAnnotations, mergeAnnotations, mergePointsForAllClasses, mergePointsForSelectedObjectClasses, mergeSelectedAnnotations, mergeSelectedAnnotations, mkdirs, nObjects, refreshDuplicateIDs, refreshDuplicateIDs, refreshIDs, refreshIDs, relabelTMAGrid, relabelTMAGrid, removeMeasurements, removeMeasurements, removeObject, removeObjects, removeObjects, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeOrClipObjectsOutsideImage, removeOrClipObjectsOutsideImage, replaceClassification, replaceClassification, replaceClassification, replaceClassification, resetBatchProjectAndImage, resetClassifications, resetClassifications, resetDetectionClassifications, resetIntensityClassifications, resetIntensityClassifications, re",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:9028,Performance,load,loadPixelClassifier,9028,", exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, isTMADearrayed, loadDensityMap, loadImageData, loadObjectClassifier, loadPixelClassifier, makeARGB, makeFileInProject, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makePathInProject, makeRGB, measurement, mergeAnnotations, mergeAnnotations, mergePointsForAllClasses, mergePointsForSelectedObjectClasses, mergeSelectedAnnotations, mergeSelectedAnnotations, mkdirs, nObjects, refreshDuplicateIDs, refreshDuplicateIDs, refreshIDs, refreshIDs, relabelTMAGrid, relabelTMAGrid, removeMeasurements, removeMeasurements, removeObject, removeObjects, removeObjects, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeOrClipObjectsOutsideImage, removeOrClipObjectsOutsideImage, replaceClassification, replaceClassification, replaceClassification, replaceClassification, resetBatchProjectAndImage, resetClassifications, resetClassifications, resetDetectionClassifications, resetIntensityClassifications, resetIntensityClassifications, resetIntensityClassific",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:23069,Performance,perform,perform,23069,"rs:; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Parameters:; name - ; Returns:; the settings if they could be read, or null otherwise. applyDisplaySettings; public static boolean applyDisplaySettings(String name); Apply the display settings with the specified name or file path to the current version.; This provides a convenient alternative to; . var settings = loadDisplaySettings(name);; var viewer = getCurrentViewer();; if (settings != null); applyDisplaySettings(viewer, settings);; ; . Parameters:; name - ; Returns:; See Also:. loadDisplaySettings(String). applyDisplaySettings; public static boolean applyDisplaySettings(ImageDisplaySettings settings); Apply the display settings to the current viewer. Parameters:; settings - ; Returns:. applyDisplaySettings; publ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:23222,Performance,load,loadDisplaySettings,23222,"should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Parameters:; name - ; Returns:; the settings if they could be read, or null otherwise. applyDisplaySettings; public static boolean applyDisplaySettings(String name); Apply the display settings with the specified name or file path to the current version.; This provides a convenient alternative to; . var settings = loadDisplaySettings(name);; var viewer = getCurrentViewer();; if (settings != null); applyDisplaySettings(viewer, settings);; ; . Parameters:; name - ; Returns:; See Also:. loadDisplaySettings(String). applyDisplaySettings; public static boolean applyDisplaySettings(ImageDisplaySettings settings); Apply the display settings to the current viewer. Parameters:; settings - ; Returns:. applyDisplaySettings; public static boolean applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings); Apply the display settings to the specified viewer. Parameters:; viewer - ; settings - ; Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:23278,Performance,load,loadDisplaySettings,23278,"should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Parameters:; name - ; Returns:; the settings if they could be read, or null otherwise. applyDisplaySettings; public static boolean applyDisplaySettings(String name); Apply the display settings with the specified name or file path to the current version.; This provides a convenient alternative to; . var settings = loadDisplaySettings(name);; var viewer = getCurrentViewer();; if (settings != null); applyDisplaySettings(viewer, settings);; ; . Parameters:; name - ; Returns:; See Also:. loadDisplaySettings(String). applyDisplaySettings; public static boolean applyDisplaySettings(ImageDisplaySettings settings); Apply the display settings to the current viewer. Parameters:; settings - ; Returns:. applyDisplaySettings; public static boolean applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings); Apply the display settings to the specified viewer. Parameters:; viewer - ; settings - ; Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:23704,Performance,load,loadDisplaySettings,23704,"uld be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Parameters:; name - ; Returns:; the settings if they could be read, or null otherwise. applyDisplaySettings; public static boolean applyDisplaySettings(String name); Apply the display settings with the specified name or file path to the current version.; This provides a convenient alternative to; . var settings = loadDisplaySettings(name);; var viewer = getCurrentViewer();; if (settings != null); applyDisplaySettings(viewer, settings);; ; . Parameters:; name - ; Returns:; See Also:. loadDisplaySettings(String). applyDisplaySettings; public static boolean applyDisplaySettings(ImageDisplaySettings settings); Apply the display settings to the current viewer. Parameters:; settings - ; Returns:. applyDisplaySettings; public static boolean applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings); Apply the display settings to the specified viewer. Parameters:; viewer - ; settings - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:23877,Performance,load,loadDisplaySettings,23877,"uld be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Parameters:; name - ; Returns:; the settings if they could be read, or null otherwise. applyDisplaySettings; public static boolean applyDisplaySettings(String name); Apply the display settings with the specified name or file path to the current version.; This provides a convenient alternative to; . var settings = loadDisplaySettings(name);; var viewer = getCurrentViewer();; if (settings != null); applyDisplaySettings(viewer, settings);; ; . Parameters:; name - ; Returns:; See Also:. loadDisplaySettings(String). applyDisplaySettings; public static boolean applyDisplaySettings(ImageDisplaySettings settings); Apply the display settings to the current viewer. Parameters:; settings - ; Returns:. applyDisplaySettings; public static boolean applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings); Apply the display settings to the specified viewer. Parameters:; viewer - ; settings - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:3352,Safety,detect,detection,3352,"dDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String className,; String args);  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurements for the current image. static void; saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save detection measurements for the specified image. static void; saveImageMeasurements(String path,; String... includeColumns). Save whole image measurements for the current image. static void; saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save whole image measurements for the specified image. static void; saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the current image for objects of a fixed type. static void; saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the specified image for objects of a fixed type. static void; saveTMAMeasurements(String path,; String... includeColumns). Save TMA measurements for the current image. static void; saveTMAMeasurements(Im",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:3508,Safety,detect,detection,3508,"ate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String className,; String args);  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurements for the current image. static void; saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save detection measurements for the specified image. static void; saveImageMeasurements(String path,; String... includeColumns). Save whole image measurements for the current image. static void; saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save whole image measurements for the specified image. static void; saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the current image for objects of a fixed type. static void; saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the specified image for objects of a fixed type. static void; saveTMAMeasurements(String path,; String... includeColumns). Save TMA measurements for the current image. static void; saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save TMA measurements for the specified image. static void; setChannelDisplayRange(int channe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7724,Safety,detect,detectionCentroidDistances,7724,"ments, clearMeasurements, clearMeasurements, clearMeasurements, clearRootMeasurements, clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProj",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7752,Safety,detect,detectionCentroidDistances,7752,"earMeasurements, clearMeasurements, clearRootMeasurements, clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getPro",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7780,Safety,detect,detectionCentroidDistances,7780,"ements, clearRootMeasurements, clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getS",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7808,Safety,detect,detectionToAnnotationDistances,7808," clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObje",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7840,Safety,detect,detectionToAnnotationDistances,7840,"ectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObje",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7872,Safety,detect,detectionToAnnotationDistances,7872,"ts, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurem",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7904,Safety,detect,detectionToAnnotationDistancesSigned,7904,"eMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertO",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7942,Safety,detect,detectionToAnnotationDistancesSigned,7942,"s, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, is",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:19781,Safety,detect,detection,19781,"ay,; double maxDisplay); Set the minimum and maximum display range for the specified ImageData for a channel identified by name. Parameters:; imageData - ; channelName - ; minDisplay - ; maxDisplay - . saveAnnotationMeasurements; public static void saveAnnotationMeasurements(String path,; String... includeColumns); Save annotation measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveTMAMeasurements; public static void saveTMAMeasurements(String path,; String... includeColumns); Save TMA measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveDetectionMeasurements; public static void saveDetectionMeasurements(String path,; String... includeColumns); Save detection measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveImageMeasurements; public static void saveImageMeasurements(String path,; String... includeColumns); Save whole image measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveImageMeasurements; public static void saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save whole image measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveAnnotationMeasurements; public static void saveAnnotatio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:21654,Safety,detect,detection,21654,"e, or empty to indicate that all measurements should be exported. saveAnnotationMeasurements; public static void saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save annotation measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveTMAMeasurements; public static void saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save TMA measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveDetectionMeasurements; public static void saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save detection measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the current image for objects of a fixed type. Parameters:; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:579,Security,access,access,579,". QPEx (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class QPEx. java.lang.Object; qupath.lib.scripting.QP; qupath.lib.gui.scripting.QPEx. public class QPEx; extends QP; Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.scripting.QP; BRIGHTFIELD_H_DAB, BRIGHTFIELD_H_E, BRIGHTFIELD_OTHER, FLUORESCENCE, OTHER, PROJECT_BASE_DIR, VERSION. Constructor Summary; Constructors. Constructor; Description; QPEx();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreCl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12074,Security,hash,hashCode,12074,"mageData, setDefaultProject, setDetectionIntensityClassifications, setDetectionIntensityClassifications, setImageType, setImageType, setIntensityClassifications, setIntensityClassifications, setIntensityClassifications, setIntensityClassificationsForSelected, setPixelSizeMicrons, setPixelSizeMicrons, setPixelSizeMicrons, setSelectedObject, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSpecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:18320,Security,access,accessed,18320,"ows IOException; Write a JavaFX image to the specified path. Parameters:; image - the image to write; path - the path to write the image; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). setChannelDisplayRange; public static void setChannelDisplayRange(int channel,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the current ImageData for a channel identified by number. Parameters:; channel - channel number (0-based index); minDisplay - ; maxDisplay - . setChannelDisplayRange; public static boolean setChannelDisplayRange(ImageData<BufferedImage> imageData,; int channel,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the specified ImageData for a channel identified by number. Parameters:; imageData - ; channel - channel number (0-based index); minDisplay - ; maxDisplay - ; Returns:; true if it was possible to set the display range, false otherwise (e.g. if the image could not be accessed,; or the channel was out of range). setChannelDisplayRange; public static void setChannelDisplayRange(String channelName,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the current ImageData for a channel identified by name. Parameters:; channelName - ; minDisplay - ; maxDisplay - . setChannelDisplayRange; public static void setChannelDisplayRange(ImageData<BufferedImage> imageData,; String channelName,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the specified ImageData for a channel identified by name. Parameters:; imageData - ; channelName - ; minDisplay - ; maxDisplay - . saveAnnotationMeasurements; public static void saveAnnotationMeasurements(String path,; String... includeColumns); Save annotation measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6477,Usability,clear,clearAllObjects,6477,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6494,Usability,clear,clearAllObjects,6494,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6511,Usability,clear,clearAnnotationMeasurements,6511,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6540,Usability,clear,clearAnnotationMeasurements,6540,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6569,Usability,clear,clearAnnotations,6569,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6587,Usability,clear,clearCellMeasurements,6587,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6610,Usability,clear,clearCellMeasurements,6610,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6633,Usability,clear,clearDetectionMeasurements,6633,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6661,Usability,clear,clearDetectionMeasurements,6661,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6689,Usability,clear,clearDetections,6689,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6706,Usability,clear,clearMeasurements,6706,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6725,Usability,clear,clearMeasurements,6725,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6744,Usability,clear,clearMeasurements,6744,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6763,Usability,clear,clearMeasurements,6763,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6782,Usability,clear,clearMeasurements,6782,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6801,Usability,clear,clearRootMeasurements,6801,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6824,Usability,clear,clearRootMeasurements,6824,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6847,Usability,clear,clearSelectedObjects,6847,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6869,Usability,clear,clearSelectedObjects,6869,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6891,Usability,clear,clearTileMeasurements,6891,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6914,Usability,clear,clearTileMeasurements,6914,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6937,Usability,clear,clearTMACoreMeasurements,6937,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6963,Usability,clear,clearTMACoreMeasurements,6963,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6989,Usability,clear,clearTMAGrid,6989,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html:464,Integrability,interface,interface,464,". ScriptEditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditor. All Known Implementing Classes:; DefaultScriptEditor, RichScriptEditor. public interface ScriptEditor; Minimal interface for a script editor that the GUI can call. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Check if the script editor supports a particular file. Method Details. showEditor; void showEditor(); Show the script editor. showScript; void showScript(String name,; String script); Show the script editor, including a new script with the specified name. Parameters:; name - name of the script to show; script - content of the script. showScript; void showScript(File file); Show the script editor, opening an existing script file. Parameters:; file - the script file. supportsFile; boolean supportsFile(File file); Check if the script editor supports a particular file. Parameters:; file - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html:496,Integrability,interface,interface,496,". ScriptEditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditor. All Known Implementing Classes:; DefaultScriptEditor, RichScriptEditor. public interface ScriptEditor; Minimal interface for a script editor that the GUI can call. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Check if the script editor supports a particular file. Method Details. showEditor; void showEditor(); Show the script editor. showScript; void showScript(String name,; String script); Show the script editor, including a new script with the specified name. Parameters:; name - name of the script to show; script - content of the script. showScript; void showScript(File file); Show the script editor, opening an existing script file. Parameters:; file - the script file. supportsFile; boolean supportsFile(File file); Check if the script editor supports a particular file. Parameters:; file - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:605,Integrability,interface,interface,605,". ScriptEditorControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditorControl<T extends Region>. Type Parameters:; T - the tile of component used for display. All Superinterfaces:; EditableText, TextAppendable. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface ScriptEditorControl<T extends Region>; extends TextAppendable, EditableText; Basic script editor control using JavaFX.; The reason for its existence is to enable custom script editors to be implemented that provide additional functionality ; (e.g. syntax highlighting), but do not rely upon subclassing any specific JavaFX control.; ; Note: This is rather cumbersome, and may be removed in the future if the script editor design is revised. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending positi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:1383,Integrability,wrap,wrapText,1383,"ScriptEditorControl<T extends Region>. Type Parameters:; T - the tile of component used for display. All Superinterfaces:; EditableText, TextAppendable. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface ScriptEditorControl<T extends Region>; extends TextAppendable, EditableText; Basic script editor control using JavaFX.; The reason for its existence is to enable custom script editors to be implemented that provide additional functionality ; (e.g. syntax highlighting), but do not rely upon subclassing any specific JavaFX control.; ; Note: This is rather cumbersome, and may be removed in the future if the script editor design is revised. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; r",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2834,Integrability,wrap,wrapTextProperty,2834,"control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelect",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2895,Integrability,interface,interface,2895,"lection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3139,Integrability,interface,interface,3139,"isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelecti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3460,Integrability,wrap,wrapText,3460,"Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3486,Integrability,wrap,wrapTextProperty,3486,"Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3533,Integrability,wrap,wrapTextProperty,3533,"e. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; Observabl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3974,Integrability,interface,interface,3974,"eselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4092,Integrability,interface,interface,4092,"on, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4198,Integrability,interface,interface,4198,"roperty Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. req",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4415,Integrability,interface,interface,4415,"r control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:5116,Integrability,wrap,wrapTextProperty,5116,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:5150,Integrability,wrap,wrapTextProperty,5150,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:5412,Integrability,interface,interface,5412,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:400,Modifiability,extend,extends,400,". ScriptEditorControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditorControl<T extends Region>. Type Parameters:; T - the tile of component used for display. All Superinterfaces:; EditableText, TextAppendable. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface ScriptEditorControl<T extends Region>; extends TextAppendable, EditableText; Basic script editor control using JavaFX.; The reason for its existence is to enable custom script editors to be implemented that provide additional functionality ; (e.g. syntax highlighting), but do not rely upon subclassing any specific JavaFX control.; ; Note: This is rather cumbersome, and may be removed in the future if the script editor design is revised. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending positi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:637,Modifiability,extend,extends,637,". ScriptEditorControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditorControl<T extends Region>. Type Parameters:; T - the tile of component used for display. All Superinterfaces:; EditableText, TextAppendable. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface ScriptEditorControl<T extends Region>; extends TextAppendable, EditableText; Basic script editor control using JavaFX.; The reason for its existence is to enable custom script editors to be implemented that provide additional functionality ; (e.g. syntax highlighting), but do not rely upon subclassing any specific JavaFX control.; ; Note: This is rather cumbersome, and may be removed in the future if the script editor design is revised. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending positi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:654,Modifiability,extend,extends,654,". ScriptEditorControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Interface ScriptEditorControl<T extends Region>. Type Parameters:; T - the tile of component used for display. All Superinterfaces:; EditableText, TextAppendable. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface ScriptEditorControl<T extends Region>; extends TextAppendable, EditableText; Basic script editor control using JavaFX.; The reason for its existence is to enable custom script editors to be implemented that provide additional functionality ; (e.g. syntax highlighting), but do not rely upon subclassing any specific JavaFX control.; ; Note: This is rather cumbersome, and may be removed in the future if the script editor design is revised. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending positi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2880,Modifiability,inherit,inherited,2880,"lection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3124,Modifiability,inherit,inherited,3124,"isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelecti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:5397,Modifiability,extend,extending,5397,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3164,Testability,log,logging,3164,"do' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionE",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2243,Usability,undo,undo,2243,"dText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. ContextMenu; getContextMenu(). Get the context menu for the control. T; getRegion(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2795,Usability,undo,undo,2795,"on(). Get the region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2811,Usability,undo,undo,2811,"region representing this control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2956,Usability,clear,clear,2956,"(exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting positio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4689,Usability,undo,undo,4689,"roperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4943,Usability,undo,undo,4943,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4954,Usability,undo,undo,4954,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4970,Usability,undo,undo,4970,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html:453,Modifiability,extend,extends,453,". ScriptTab (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public S",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html:1235,Modifiability,inherit,inherited,1235,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html:1113,Safety,detect,detected,1113,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html:1526,Safety,detect,detected,1526,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html:1309,Security,hash,hashCode,1309,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1032,Integrability,wrap,wrapText,1032,".5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1200,Integrability,wrap,wrap,1200,"ethod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSele",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1302,Integrability,wrap,wrap,1302,"ARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1333,Integrability,wrap,wrap,1333,"ARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3369,Integrability,wrap,wrapTextProperty,3369," property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3569,Integrability,interface,interface,3569,"s true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). C",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3661,Integrability,interface,interface,3661," clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3864,Integrability,interface,interface,3864,"; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Cons",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4076,Integrability,interface,interface,4076,"ge of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4181,Integrability,wrap,wrapText,4181,"ring text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4214,Integrability,wrap,wrapTextProperty,4214,"ring text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4247,Integrability,wrap,wrapTextProperty,4247,"rty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorContr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4267,Integrability,interface,interface,4267,"rty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorContr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4329,Integrability,wrap,wrapTextProperty,4329,"Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getT",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4458,Integrability,interface,interface,4458," finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4689,Integrability,wrap,wrap,4689,"ited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the val",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4890,Integrability,wrap,wrap,4890,"ce ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public Observa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4921,Integrability,wrap,wrap,4921,"ce ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public Observa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4992,Integrability,wrap,wrap,4992,"ue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the edito",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5152,Integrability,interface,interface,5152,"dText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getS",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5253,Integrability,interface,interface,5253,"ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getS",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5468,Integrability,interface,interface,5468,"See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEdito",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5703,Integrability,interface,interface,5703,"ble - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5937,Integrability,interface,interface,5937," it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6055,Integrability,interface,interface,6055,"tProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6292,Integrability,interface,interface,6292,"lso:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Descript",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6488,Integrability,interface,interface,6488,"ption:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from inte",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6621,Integrability,interface,interface,6621,"tText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextAre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6737,Integrability,interface,interface,6737,"n:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selecti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6852,Integrability,interface,interface,6852,"ic ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied f",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6968,Integrability,interface,interface,6968,"rently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface Scrip",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7083,Integrability,interface,interface,7083,">; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7184,Integrability,interface,interface,7184,"ublic String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendTex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7253,Integrability,interface,interface,7253,"cified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7344,Integrability,interface,interface,7344,"turns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendTex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7413,Integrability,interface,interface,7413,"). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendab",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7504,Integrability,interface,interface,7504,"ontrol; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosit",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7595,Integrability,interface,interface,7595,by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in int,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7684,Integrability,interface,interface,7684,oolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition prope,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7773,Integrability,interface,interface,7773," if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; Str",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7866,Integrability,interface,interface,7866,"ontrol<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified te",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7963,Integrability,interface,interface,7963,"terface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8056,Integrability,interface,interface,8056," by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8148,Integrability,interface,interface,8148,"void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8245,Integrability,interface,interface,8245,"; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; star",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8346,Integrability,interface,interface,8346,"ecified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specifie",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8399,Integrability,interface,interface,8399,"ecified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specifie",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8600,Integrability,interface,interface,8600,"cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEdi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8817,Integrability,interface,interface,8817,"tArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the sel",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8909,Integrability,interface,interface,8909,"ified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanPr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9095,Integrability,interface,interface,9095,"lear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface S",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9203,Integrability,interface,interface,9203,"); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9322,Integrability,interface,interface,9322,"ied by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9412,Integrability,interface,interface,9412,"TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9508,Integrability,interface,interface,9508,"ition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specifie",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9617,Integrability,interface,interface,9617,"operty description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; te",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9757,Integrability,interface,interface,9757,"xt; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9848,Integrability,interface,interface,9848,"e specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorC",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9909,Integrability,wrap,wrapTextProperty,9909,"text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied f",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9950,Integrability,wrap,wrapTextProperty,9950,"text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied f",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9994,Integrability,interface,interface,9994,"text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied f",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10059,Integrability,wrap,wrapTextProperty,10059,"terface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface Scrip",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10079,Integrability,interface,interface,10079,"terface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface Scrip",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10134,Integrability,wrap,wrapText,10134,"terface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface Scrip",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10230,Integrability,interface,interface,10230," Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorCont",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10334,Integrability,interface,interface,10334,"eText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10466,Integrability,interface,interface,10466,"ge getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEdito",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10587,Integrability,interface,interface,10587," getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Ret",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10737,Integrability,interface,interface,10737," selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10840,Integrability,interface,interface,10840," selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10980,Integrability,interface,interface,10980," selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:11083,Integrability,interface,interface,11083," selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:11200,Integrability,interface,interface,11200," selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:11300,Integrability,interface,interface,11300," selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:11444,Integrability,interface,interface,11444," selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:11557,Integrability,interface,interface,11557," selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:567,Modifiability,extend,extends,567,". TextAreaControl (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPositio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3415,Modifiability,inherit,inherited,3415,"quest inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specif",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3554,Modifiability,inherit,inherited,3554,"s true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). C",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3646,Modifiability,inherit,inherited,3646," clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3489,Security,hash,hashCode,3489,"if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1637,Usability,clear,clear,1637,"area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1654,Usability,clear,clear,1654,"sic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:2576,Usability,undo,undo,2576,"y(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSelection(). Get the range of the currently-selected text. String; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3330,Usability,undo,undo,3330,"; getText(). Gets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3346,Usability,undo,undo,3346,"ets the value of the text property. void; insertText(int pos,; String text). Request inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6786,Usability,undo,undo,6786,"n:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selecti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7134,Usability,undo,undo,7134,"ublic String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendTex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7152,Usability,undo,undo,7152,"ublic String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendTex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7224,Usability,undo,undo,7224,"ublic String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendTex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7245,Usability,undo,undo,7245,"cified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8004,Usability,clear,clear,8004," by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8023,Usability,clear,clear,8023," by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8089,Usability,clear,clear,8089," by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8139,Usability,clear,clear,8139,"void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/package-summary.html:505,Integrability,interface,interface,505,". qupath.lib.gui.tma (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tma. package qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; QuPathTMAViewer. Standalone viewer for looking at TMA summary results. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMASummaryViewer; Deprecated.; since v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html:633,Integrability,interface,interfaces,633,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html:497,Modifiability,extend,extends,497,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html:644,Modifiability,inherit,inherited,644,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html:743,Modifiability,inherit,inherited,743,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html:1063,Modifiability,inherit,inherited,1063,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html:1249,Modifiability,inherit,inherited,1249,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html:1323,Security,hash,hashCode,1323,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:1211,Availability,down,downsampleFactor,1211," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMADataIO. java.lang.Object; qupath.lib.gui.tma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:2017,Availability,down,downsampleFactor,2017,"ummary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0, no cores are exported.; Throws:; IOException. importDearrayedTMAData; public static TMAGrid importDearrayedTMAData(File file); Import a TMA grid from an exported TMA analysis file, i.e. with extension "".qptma"". Parameters:; file - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:2196,Availability,down,downsampleFactor,2196,"ummary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0, no cores are exported.; Throws:; IOException. importDearrayedTMAData; public static TMAGrid importDearrayedTMAData(File file); Import a TMA grid from an exported TMA analysis file, i.e. with extension "".qptma"". Parameters:; file - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:2219,Availability,down,downsample,2219,"ummary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0, no cores are exported.; Throws:; IOException. importDearrayedTMAData; public static TMAGrid importDearrayedTMAData(File file); Import a TMA grid from an exported TMA analysis file, i.e. with extension "".qptma"". Parameters:; file - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:2282,Availability,down,downsample,2282,"ummary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0, no cores are exported.; Throws:; IOException. importDearrayedTMAData; public static TMAGrid importDearrayedTMAData(File file); Import a TMA grid from an exported TMA analysis file, i.e. with extension "".qptma"". Parameters:; file - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:441,Modifiability,extend,extends,441,". TMADataIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMADataIO. java.lang.Object; qupath.lib.gui.tma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayO",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:1323,Modifiability,inherit,inherited,1323," qupath.lib.gui.tma; Class TMADataIO. java.lang.Object; qupath.lib.gui.tma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:1397,Security,hash,hashCode,1397,"ma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0, no cores are exported.; Throws:; IOException. importDearrayedTMAData; p",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html:1419,Integrability,interface,interface,1419,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html:488,Modifiability,extend,extends,488,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html:1090,Modifiability,inherit,inherited,1090,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html:1164,Security,hash,hashCode,1164,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html:770,Usability,simpl,simply,770,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html:629,Deployability,release,released,629,". TMASummaryViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html:482,Modifiability,extend,extends,482,". TMASummaryViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html:1348,Modifiability,inherit,inherited,1348,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; imageData - . setInputFile; public void setInputFile(File file); Deprecated.; Set the input file for the summary viewer. Parameters:; file - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html:1422,Security,hash,hashCode,1422,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; imageData - . setInputFile; public void setInputFile(File file); Deprecated.; Set the input file for the summary viewer. Parameters:; file - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:457,Modifiability,extend,extends,457,". ColorToolsFX (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class ColorToolsFX. java.lang.Object; qupath.lib.gui.tools.ColorToolsFX. public class ColorToolsFX; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:2443,Modifiability,inherit,inherited,2443,"chedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits ar",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:1479,Performance,cache,cached,1479,"ss for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:1559,Performance,cache,cached,1559,"s for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAN",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:3380,Performance,cache,cached,3380,"a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getRGB; public static int getRGB(Color color); Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Parameters:; color - ; Returns:. getARGB; public static int getARGB(Color color); Get a packed int (ARGB) representation of a Color object. Parameters:; color - ; Returns:. getDisplayedColor; public static Color getDisplayedColor(PathObject pathObject); Get a Color appropriate for displaying an object. Parameters:; pathObject - ; Returns:; See Also:. getDisplayedColorARGB(PathObject). getPathClassColor; public static Color getPathClassColor(PathClass pathClass); Get a Color appropriate for displaying a PathClas",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:3583,Performance,cache,cached,3583,"ield Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getRGB; public static int getRGB(Color color); Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Parameters:; color - ; Returns:. getARGB; public static int getARGB(Color color); Get a packed int (ARGB) representation of a Color object. Parameters:; color - ; Returns:. getDisplayedColor; public static Color getDisplayedColor(PathObject pathObject); Get a Color appropriate for displaying an object. Parameters:; pathObject - ; Returns:; See Also:. getDisplayedColorARGB(PathObject). getPathClassColor; public static Color getPathClassColor(PathClass pathClass); Get a Color appropriate for displaying a PathClass. Parameters:; pathClass - ; Returns:. getColorWithOpacityFX; public static Color getColorWithOpacityFX(Integer rgb,; double opacity); Get a Color from a packed RGB value, setting the alpha component to match the desired o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:1219,Safety,avoid,avoid,1219,"onstr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class ColorToolsFX. java.lang.Object; qupath.lib.gui.tools.ColorToolsFX. public class ColorToolsFX; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:1384,Safety,avoid,avoid,1384,"va.lang.Object; qupath.lib.gui.tools.ColorToolsFX. public class ColorToolsFX; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) represen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:2996,Safety,avoid,avoid,2996,"acity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getRGB; public static int getRGB(Color color); Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Parameters:; color - ; Returns:. getARGB; public static int getARGB(Color color); Get a packed int (ARGB) represen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:3222,Safety,avoid,avoid,3222," as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getRGB; public static int getRGB(Color color); Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Parameters:; color - ; Returns:. getARGB; public static int getARGB(Color color); Get a packed int (ARGB) representation of a Color object. Parameters:; color - ; Returns:. getDisplayedColor; public static Color getDisplayedColor(PathObject pathObject); Get a Color appropriate for displaying an object. Parameters:; pathObject - ; Returns:; Se",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:2517,Security,hash,hashCode,2517,"nteger rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:929,Integrability,interface,interfaces,929,". CommandFinderTools.CommandBarDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class CommandFinderTools.CommandBarDisplay. java.lang.Object; java.lang.Enum<CommandFinderTools.CommandBarDisplay>; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. All Implemented Interfaces:; Serializable, Comparable<CommandFinderTools.CommandBarDisplay>, Constable. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:792,Modifiability,extend,extends,792,". CommandFinderTools.CommandBarDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class CommandFinderTools.CommandBarDisplay. java.lang.Object; java.lang.Enum<CommandFinderTools.CommandBarDisplay>; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. All Implemented Interfaces:; Serializable, Comparable<CommandFinderTools.CommandBarDisplay>, Constable. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:940,Modifiability,inherit,inherited,940,". CommandFinderTools.CommandBarDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class CommandFinderTools.CommandBarDisplay. java.lang.Object; java.lang.Enum<CommandFinderTools.CommandBarDisplay>; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. All Implemented Interfaces:; Serializable, Comparable<CommandFinderTools.CommandBarDisplay>, Constable. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:993,Modifiability,extend,extends,993,". CommandFinderTools.CommandBarDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class CommandFinderTools.CommandBarDisplay. java.lang.Object; java.lang.Enum<CommandFinderTools.CommandBarDisplay>; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. All Implemented Interfaces:; Serializable, Comparable<CommandFinderTools.CommandBarDisplay>, Constable. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:1605,Modifiability,inherit,inherited,1605,"rfaces:; Serializable, Comparable<CommandFinderTools.CommandBarDisplay>, Constable. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools.CommandBarDisplay NEVER; Never display. HOVER; public static final CommandFinderTools.CommandBarDisplay HOVER; Display only when the cursor hovers nearby. Method Details. values; public static CommandFinderTools.CommandBarDisplay[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static CommandFinderTools.CommandBarDisplay valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:1758,Modifiability,inherit,inherited,1758,"rTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools.CommandBarDisplay NEVER; Never display. HOVER; public static final CommandFinderTools.CommandBarDisplay HOVER; Display only when the cursor hovers nearby. Method Details. values; public static CommandFinderTools.CommandBarDisplay[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static CommandFinderTools.CommandBarDisplay valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:1716,Security,hash,hashCode,1716,"ble. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools.CommandBarDisplay NEVER; Never display. HOVER; public static final CommandFinderTools.CommandBarDisplay HOVER; Display only when the cursor hovers nearby. Method Details. values; public static CommandFinderTools.CommandBarDisplay[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static CommandFinderTools.CommandBarDisplay valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous white",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:1527,Availability,avail,available,1527,"CommandFinderTools. public static class CommandFinderTools.CommandEntry; extends Object; Helper class to wrap summary data for a command to display in the list. Property Summary; Properties. Type; Property; Description; ReadOnlyStringProperty; acceleratorText. Property corresponding to getAcceleratorText(). ReadOnlyStringProperty; longText. Property corresponding to getLongText(). ReadOnlyStringProperty; menuPath. Property corresponding to getMenuPath(). ReadOnlyStringProperty; text. Property corresponding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:3192,Availability,avail,available,3192,"s. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextProperty; Property corresponding to getLongText(). See Also:. getLongText(); longTextProperty(). menuPath; public ReadOnlyStringProperty menuPathProperty; Property corresponding to getMenuPath(). See Also:. getMenuPath(); menuPathProperty(). Method Details. getMenuItem; public MenuItem getMenuItem(); Get the menu item corresponding to this command. Returns:. getCommandPath; public String getCommandPath(); Get a string representation of the menu path for this command, including the menu path and the text. Returns:. getText; public String getText(); Get the name of the command. Returns:. getLongText; public String getLongText(); Get the long text (description) for the command, if available.; This assumes an action property has been set, see ActionTools.putActionProperty(MenuItem, org.controlsfx.control.action.Action). Returns:; the long text for the command, or null if no such text is available. getAcceleratorText; public String getAcceleratorText(); Get a String representation of any accelerator for the command. Returns:. getMenuPath; public String getMenuPath(); Get a String representation of the menu containing this command. Returns:. acceleratorTextProperty; public ReadOnlyStringProperty acceleratorTextProperty(); Property corresponding to getAcceleratorText(). Returns:; See Also:. getAcceleratorText(). textProperty; public ReadOnlyStringProperty textProperty(); Property corresponding to getText(). Returns:; See Also:. getText(). longTextProperty; public ReadOnlyStringProperty longTextProperty(); Property corresponding to getLongText(). Returns:; See Also:. getLongText(). menuPathProperty; public ReadOnlyStringPrope",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:3401,Availability,avail,available,3401,"etAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextProperty; Property corresponding to getLongText(). See Also:. getLongText(); longTextProperty(). menuPath; public ReadOnlyStringProperty menuPathProperty; Property corresponding to getMenuPath(). See Also:. getMenuPath(); menuPathProperty(). Method Details. getMenuItem; public MenuItem getMenuItem(); Get the menu item corresponding to this command. Returns:. getCommandPath; public String getCommandPath(); Get a string representation of the menu path for this command, including the menu path and the text. Returns:. getText; public String getText(); Get the name of the command. Returns:. getLongText; public String getLongText(); Get the long text (description) for the command, if available.; This assumes an action property has been set, see ActionTools.putActionProperty(MenuItem, org.controlsfx.control.action.Action). Returns:; the long text for the command, or null if no such text is available. getAcceleratorText; public String getAcceleratorText(); Get a String representation of any accelerator for the command. Returns:. getMenuPath; public String getMenuPath(); Get a String representation of the menu containing this command. Returns:. acceleratorTextProperty; public ReadOnlyStringProperty acceleratorTextProperty(); Property corresponding to getAcceleratorText(). Returns:; See Also:. getAcceleratorText(). textProperty; public ReadOnlyStringProperty textProperty(); Property corresponding to getText(). Returns:; See Also:. getText(). longTextProperty; public ReadOnlyStringProperty longTextProperty(); Property corresponding to getLongText(). Returns:; See Also:. getLongText(). menuPathProperty; public ReadOnlyStringProperty menuPathProperty(); Property corresponding to getMenuPath(). Returns:; See Also:. getMenuPath(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:610,Integrability,wrap,wrap,610,". CommandFinderTools.CommandEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools.CommandEntry. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Enclosing class:; CommandFinderTools. public static class CommandFinderTools.CommandEntry; extends Object; Helper class to wrap summary data for a command to display in the list. Property Summary; Properties. Type; Property; Description; ReadOnlyStringProperty; acceleratorText. Property corresponding to getAcceleratorText(). ReadOnlyStringProperty; longText. Property corresponding to getLongText(). ReadOnlyStringProperty; menuPath. Property corresponding to getMenuPath(). ReadOnlyStringProperty; text. Property corresponding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Method",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:578,Modifiability,extend,extends,578,". CommandFinderTools.CommandEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools.CommandEntry. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Enclosing class:; CommandFinderTools. public static class CommandFinderTools.CommandEntry; extends Object; Helper class to wrap summary data for a command to display in the list. Property Summary; Properties. Type; Property; Description; ReadOnlyStringProperty; acceleratorText. Property corresponding to getAcceleratorText(). ReadOnlyStringProperty; longText. Property corresponding to getLongText(). ReadOnlyStringProperty; menuPath. Property corresponding to getMenuPath(). ReadOnlyStringProperty; text. Property corresponding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Method",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:2003,Modifiability,inherit,inherited,2003,"nding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextProperty; Property corresponding to getLongText(). See Also:. getLongText(); longTextProperty(). menuPath; public ReadOnlyStringProperty menuPathProperty; Property corresponding to getMenuPath(). See Also:. getMenuPath(); menuPathProperty(). Method Details. getMenuItem; public MenuItem getMenuItem(); Get the menu item corresponding to this command. Returns:. getCommandPath; public String getCommandPath(); Get a string representation of the menu path for this command, including the menu path and the tex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:2077,Security,hash,hashCode,2077,"Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextProperty; Property corresponding to getLongText(). See Also:. getLongText(); longTextProperty(). menuPath; public ReadOnlyStringProperty menuPathProperty; Property corresponding to getMenuPath(). See Also:. getMenuPath(); menuPathProperty(). Method Details. getMenuItem; public MenuItem getMenuItem(); Get the menu item corresponding to this command. Returns:. getCommandPath; public String getCommandPath(); Get a string representation of the menu path for this command, including the menu path and the text. Returns:. getText; public String getText(); Get the name of the comma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html:1098,Integrability,wrap,wrap,1098,"ckage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools. public class CommandFinderTools; extends Object; Helper tools for creating components that enable fast access to menu commands via a filtered list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay. Property specifying where the command bar should be displayed relative to the main viewer window. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. static class ; CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. Constructor Summary; Constructors. Constructor; Description; CommandFinderTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog showing a filtered list of recently-used commands, for fast selection. static String; menusToMarkdown(). Create a markdo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html:481,Modifiability,extend,extends,481,". CommandFinderTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools. public class CommandFinderTools; extends Object; Helper tools for creating components that enable fast access to menu commands via a filtered list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay. Property specifying where the command bar should be displayed relative to the main viewer window. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. static class ; CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. Constructor Summary; Constructors. Constructor; Description; CommandFinderTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog show",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html:2374,Modifiability,inherit,inherited,2374,"mmandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog showing a filtered list of recently-used commands, for fast selection. static String; menusToMarkdown(). Create a markdown representation of the menus for inclusion in the documentation, ; using the current QuPath instance. static void; menusToMarkdown(QuPathGUI qupath,; Writer writer). Write a markdown representation of the menus for inclusion in the documentation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. commandBarDisplay; public static ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplayProperty; Property specifying where the command bar should be displayed relative to the main viewer window. See Also:. commandBarDisplayProperty(). Constructor Details. CommandFinderTools; public CommandFinderTools(). Method Details. commandBarDisplayProperty; public static ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplayProperty(); Property specifying where the command bar should be displayed relative to the main viewer window. Returns:. createCommandFinderPane; public static org.controlsfx.control.HiddenSidesPane createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode); Create a component that contains a TextField for entering menu commands to run quickly.; ; T",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html:551,Security,access,access,551,". CommandFinderTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools. public class CommandFinderTools; extends Object; Helper tools for creating components that enable fast access to menu commands via a filtered list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay. Property specifying where the command bar should be displayed relative to the main viewer window. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. static class ; CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. Constructor Summary; Constructors. Constructor; Description; CommandFinderTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog show",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html:2448,Security,hash,hashCode,2448," the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog showing a filtered list of recently-used commands, for fast selection. static String; menusToMarkdown(). Create a markdown representation of the menus for inclusion in the documentation, ; using the current QuPath instance. static void; menusToMarkdown(QuPathGUI qupath,; Writer writer). Write a markdown representation of the menus for inclusion in the documentation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. commandBarDisplay; public static ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplayProperty; Property specifying where the command bar should be displayed relative to the main viewer window. See Also:. commandBarDisplayProperty(). Constructor Details. CommandFinderTools; public CommandFinderTools(). Method Details. commandBarDisplayProperty; public static ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplayProperty(); Property specifying where the command bar should be displayed relative to the main viewer window. Returns:. createCommandFinderPane; public static org.controlsfx.control.HiddenSidesPane createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode); Create a component that contains a TextField for entering menu commands to run quickly.; ; This component is a container that holds a main Node, and displays the Te",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html:1122,Integrability,interface,interface,1122,". DocGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class DocGenerator. java.lang.Object; qupath.lib.gui.tools.DocGenerator. All Implemented Interfaces:; Runnable. public class DocGenerator; extends Object; implements Runnable; Command line tool to export icons and markdown documentation for QuPath commands. Constructor Summary; Constructors. Constructor; Description; DocGenerator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DocGenerator; public DocGenerator(). Method Details. run; public void run(). Specified by:; run in interface Runnable. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html:496,Modifiability,extend,extends,496,". DocGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class DocGenerator. java.lang.Object; qupath.lib.gui.tools.DocGenerator. All Implemented Interfaces:; Runnable. public class DocGenerator; extends Object; implements Runnable; Command line tool to export icons and markdown documentation for QuPath commands. Constructor Summary; Constructors. Constructor; Description; DocGenerator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DocGenerator; public DocGenerator(). Method Details. run; public void run(). Specified by:; run in interface Runnable. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html:871,Modifiability,inherit,inherited,871,". DocGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class DocGenerator. java.lang.Object; qupath.lib.gui.tools.DocGenerator. All Implemented Interfaces:; Runnable. public class DocGenerator; extends Object; implements Runnable; Command line tool to export icons and markdown documentation for QuPath commands. Constructor Summary; Constructors. Constructor; Description; DocGenerator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DocGenerator; public DocGenerator(). Method Details. run; public void run(). Specified by:; run in interface Runnable. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html:945,Security,hash,hashCode,945,". DocGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class DocGenerator. java.lang.Object; qupath.lib.gui.tools.DocGenerator. All Implemented Interfaces:; Runnable. public class DocGenerator; extends Object; implements Runnable; Command line tool to export icons and markdown documentation for QuPath commands. Constructor Summary; Constructors. Constructor; Description; DocGenerator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DocGenerator; public DocGenerator(). Method Details. run; public void run(). Specified by:; run in interface Runnable. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:2747,Availability,down,down,2747,"I,String> menuitemText). Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph). Ensure that a Glyph is 'duplicatable', without losing its key properties. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill). Ensure that a Glyph is 'duplicatable', optionally retaining any fill. static ImageData.ImageType; estimateImageType(ImageServer<BufferedImage> server,; BufferedImage imgThumbnail). Make a semi-educated guess at the image type of a PathImageServer. static String; getMagnificationString(QuPathViewer viewer). Get an appropriate String to represent the magnification of the image currently in the viewer. static WritableImage; getScaledRGBInstance(BufferedImage img,; int targetWidth,; int targetHeight). Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. static void; installRangePrompt(Slider slider). Install a mouse click listener to prompt the user to input min/max values for a slider. static BufferedImage; makeFullScreenshot(). Make a BufferedImage snapshot of the full screen. static BufferedImage; makeSnapshot(). Make a BufferedImage snapshot of the current GUI. static BufferedImage; makeSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the active viewer within QuPath, as determined by the SnapshotType. static BufferedImage; makeSnapshot(QuPathGUI qupath,; QuPathViewer viewer,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the specified viewer, as determined by the SnapshotType. static WritableImage; makeSnapshotFX(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot as a JavaFX Image, using the current viewer i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5820,Availability,error,error,5820,"mptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5851,Availability,avail,available,5851,"mptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5917,Availability,error,error,5917,"ass<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5950,Availability,avail,available,5950,"ass<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7500,Availability,error,error,7500,"it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7531,Availability,avail,available,7531,"it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7721,Availability,error,error,7721,"ols; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7754,Availability,avail,available,7754,"ols; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:14902,Availability,down,down,14902,"tionsMenu(QuPathGUI qupath,; Menu menu); Populate a Menu with standard options to operate on selected annotation objects. Parameters:; qupath - ; menu - ; Returns:. populateAnnotationsMenu; public static ContextMenu populateAnnotationsMenu(QuPathGUI qupath,; ContextMenu menu); Populate a ContextMenu with standard options to operate on selected annotation objects. Parameters:; qupath - ; menu - ; Returns:. installRangePrompt; public static void installRangePrompt(Slider slider); Install a mouse click listener to prompt the user to input min/max values for a slider. Parameters:; slider - ; See Also:. promptForSliderRange(Slider). promptForSliderRange; public static boolean promptForSliderRange(Slider slider); Prompt the user to input min/max values for a slider. Parameters:; slider - ; Returns:; true if the user may have made changes, false if they cancelled the dialog. getScaledRGBInstance; public static WritableImage getScaledRGBInstance(BufferedImage img,; int targetWidth,; int targetHeight); Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount.; ; Code is based on https://today.java.net/article/2007/03/30/perils-imagegetscaledinstance. Parameters:; img - ; targetWidth - ; targetHeight - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer); Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. Parameters:; menuTitle - ; recentItems - ; consumer - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentO",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:2791,Deployability,install,installRangePrompt,2791," form of URIs, customizing the text displayed for the menu items. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph). Ensure that a Glyph is 'duplicatable', without losing its key properties. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill). Ensure that a Glyph is 'duplicatable', optionally retaining any fill. static ImageData.ImageType; estimateImageType(ImageServer<BufferedImage> server,; BufferedImage imgThumbnail). Make a semi-educated guess at the image type of a PathImageServer. static String; getMagnificationString(QuPathViewer viewer). Get an appropriate String to represent the magnification of the image currently in the viewer. static WritableImage; getScaledRGBInstance(BufferedImage img,; int targetWidth,; int targetHeight). Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. static void; installRangePrompt(Slider slider). Install a mouse click listener to prompt the user to input min/max values for a slider. static BufferedImage; makeFullScreenshot(). Make a BufferedImage snapshot of the full screen. static BufferedImage; makeSnapshot(). Make a BufferedImage snapshot of the current GUI. static BufferedImage; makeSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the active viewer within QuPath, as determined by the SnapshotType. static BufferedImage; makeSnapshot(QuPathGUI qupath,; QuPathViewer viewer,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the specified viewer, as determined by the SnapshotType. static WritableImage; makeSnapshotFX(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot as a JavaFX Image, using the current viewer if a viewer is required. static WritableImage; makeSnapshotFX(QuPathGUI qupath,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:14221,Deployability,install,installRangePrompt,14221,"ist(ListView<T> listView); Refresh a ListView in the Application thread. Type Parameters:; T - ; Parameters:; listView - . promptToSetActiveAnnotationProperties; public static boolean promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy); Prompt the user to set properties for the currently-selected annotation(s). Parameters:; hierarchy - current hierarchy; Returns:; true if changes to annotation properties were made, false otherwise. populateAnnotationsMenu; public static Menu populateAnnotationsMenu(QuPathGUI qupath,; Menu menu); Populate a Menu with standard options to operate on selected annotation objects. Parameters:; qupath - ; menu - ; Returns:. populateAnnotationsMenu; public static ContextMenu populateAnnotationsMenu(QuPathGUI qupath,; ContextMenu menu); Populate a ContextMenu with standard options to operate on selected annotation objects. Parameters:; qupath - ; menu - ; Returns:. installRangePrompt; public static void installRangePrompt(Slider slider); Install a mouse click listener to prompt the user to input min/max values for a slider. Parameters:; slider - ; See Also:. promptForSliderRange(Slider). promptForSliderRange; public static boolean promptForSliderRange(Slider slider); Prompt the user to input min/max values for a slider. Parameters:; slider - ; Returns:; true if the user may have made changes, false if they cancelled the dialog. getScaledRGBInstance; public static WritableImage getScaledRGBInstance(BufferedImage img,; int targetWidth,; int targetHeight); Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount.; ; Code is based on https://today.java.net/article/2007/03/30/perils-imagegetscaledinstance. Parameters:; img - ; targetWidth - ; targetHeight - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer); Create a menu that displays recent items, stored in the form of URIs,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:14260,Deployability,install,installRangePrompt,14260,"ist(ListView<T> listView); Refresh a ListView in the Application thread. Type Parameters:; T - ; Parameters:; listView - . promptToSetActiveAnnotationProperties; public static boolean promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy); Prompt the user to set properties for the currently-selected annotation(s). Parameters:; hierarchy - current hierarchy; Returns:; true if changes to annotation properties were made, false otherwise. populateAnnotationsMenu; public static Menu populateAnnotationsMenu(QuPathGUI qupath,; Menu menu); Populate a Menu with standard options to operate on selected annotation objects. Parameters:; qupath - ; menu - ; Returns:. populateAnnotationsMenu; public static ContextMenu populateAnnotationsMenu(QuPathGUI qupath,; ContextMenu menu); Populate a ContextMenu with standard options to operate on selected annotation objects. Parameters:; qupath - ; menu - ; Returns:. installRangePrompt; public static void installRangePrompt(Slider slider); Install a mouse click listener to prompt the user to input min/max values for a slider. Parameters:; slider - ; See Also:. promptForSliderRange(Slider). promptForSliderRange; public static boolean promptForSliderRange(Slider slider); Prompt the user to input min/max values for a slider. Parameters:; slider - ; Returns:; true if the user may have made changes, false if they cancelled the dialog. getScaledRGBInstance; public static WritableImage getScaledRGBInstance(BufferedImage img,; int targetWidth,; int targetHeight); Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount.; ; Code is based on https://today.java.net/article/2007/03/30/perils-imagegetscaledinstance. Parameters:; img - ; targetWidth - ; targetHeight - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer); Create a menu that displays recent items, stored in the form of URIs,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5826,Integrability,message,message,5826,"mptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5923,Integrability,message,message,5923,"ass<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7506,Integrability,message,message,7506,"it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7584,Integrability,message,message,7584,"ect; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableG",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7727,Integrability,message,message,7727,"ols; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7807,Integrability,message,message,7807,"extMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation te",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:16307,Integrability,message,messages,16307,"ntItems - ; consumer - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freely afterwards.; . Parameters:; stage - ; proportion - ; See Also:. showWithSizeConstraints(Stage, double, double). showWithSizeConstraints; public static void showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight); Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:441,Modifiability,extend,extends,441,". GuiTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class GuiTools. java.lang.Object; qupath.lib.gui.tools.GuiTools. public class GuiTools; extends Object; Assorted static methods to help with JavaFX and QuPath GUI-related tasks. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. Constructor Summary; Constructors. Constructor; Description; GuiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; browseDirectory(File file). Open the directory containing a file for browsing. static boolean; browseURI(URI uri). Try to open a URI in a web browser. static <T> org.controlsfx.control.ListSelectionView<T>; createListSelectionView(). Create a new ListSelectionView. static Button; createMoreButton(ContextMenu menu,; Side side). Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. static Menu; createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer). Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. static Menu; createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText). Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph). Ensure that a Glyph is 'duplicat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:4940,Modifiability,extend,extends,4940,"feredImage; makeViewerSnapshot(). Make a BufferedImage snapshot of the current viewer. static BufferedImage; makeViewerSnapshot(QuPathViewer viewer). Make a BufferedImage snapshot of the specified viewer. static boolean; openFile(File file). Try to open a file in the native application. static void; paintImage(Canvas canvas,; Image image). Paint an image centered within a canvas, scaled to be as large as possible while maintaining its aspect ratio. static void; paintImage(Canvas canvas,; Image image,; double scale). Paint an image centered within a canvas, scaled by the specified scale factor. static ContextMenu; populateAnnotationsMenu(QuPathGUI qupath,; ContextMenu menu). Populate a ContextMenu with standard options to operate on selected annotation objects. static Menu; populateAnnotationsMenu(QuPathGUI qupath,; Menu menu). Populate a Menu with standard options to operate on selected annotation objects. static boolean; promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(Stri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5027,Modifiability,plugin,plugin,5027,"Viewer viewer). Make a BufferedImage snapshot of the specified viewer. static boolean; openFile(File file). Try to open a file in the native application. static void; paintImage(Canvas canvas,; Image image). Paint an image centered within a canvas, scaled to be as large as possible while maintaining its aspect ratio. static void; paintImage(Canvas canvas,; Image image,; double scale). Paint an image centered within a canvas, scaled by the specified scale factor. static ContextMenu; populateAnnotationsMenu(QuPathGUI qupath,; ContextMenu menu). Populate a ContextMenu with standard options to operate on selected annotation objects. static Menu; populateAnnotationsMenu(QuPathGUI qupath,; Menu menu). Populate a Menu with standard options to operate on selected annotation objects. static boolean; promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList param",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:6544,Modifiability,inherit,inherited,6544,"operties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is inc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:15949,Modifiability,extend,extends,15949," based on https://today.java.net/article/2007/03/30/perils-imagegetscaledinstance. Parameters:; img - ; targetWidth - ; targetHeight - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer); Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. Parameters:; menuTitle - ; recentItems - ; consumer - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freel",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:16036,Modifiability,plugin,plugin,16036," based on https://today.java.net/article/2007/03/30/perils-imagegetscaledinstance. Parameters:; img - ; targetWidth - ; targetHeight - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer); Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. Parameters:; menuTitle - ; recentItems - ; consumer - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freel",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:16826,Safety,risk,risk,16826,"tle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freely afterwards.; . Parameters:; stage - ; proportion - ; See Also:. showWithSizeConstraints(Stage, double, double). showWithSizeConstraints; public static void showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight); Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Parameters:; stage - ; maxWidth - ; maxHeight - ; See Also:. showWithScreenSizeConstraints(Stage, double). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:6618,Security,hash,hashCode,6618,"es for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Paramete",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:8326,Testability,stub,stubbornly,8326,"w a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - ; Returns:; Since:; v0.4.0. ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill); Ensure that a Glyph is 'duplicatable', optionally retaining any fill.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:16165,Testability,log,logging,16165,"; ObservableList<URI> recentItems,; Consumer<URI> consumer); Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. Parameters:; menuTitle - ; recentItems - ; consumer - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freely afterwards.; . Parameters:; stage - ; proportion - ; See Also:. showWithSizeConstraints(Stage, double, double). showWithSizeConstraints; public static void showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeig",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:8192,Usability,simpl,simply,8192,"w a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - ; Returns:; Since:; v0.4.0. ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill); Ensure that a Glyph is 'duplicatable', optionally retaining any fill.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation tends to lose the fill color otherwise. Parameters:; glyph - the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:822,Integrability,interface,interfaces,822,". GuiTools.SnapshotType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class GuiTools.SnapshotType. java.lang.Object; java.lang.Enum<GuiTools.SnapshotType>; qupath.lib.gui.tools.GuiTools.SnapshotType. All Implemented Interfaces:; Serializable, Comparable<GuiTools.SnapshotType>, Constable. Enclosing class:; GuiTools. public static enum GuiTools.SnapshotType; extends Enum<GuiTools.SnapshotType>; Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer cont",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:692,Modifiability,extend,extends,692,". GuiTools.SnapshotType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class GuiTools.SnapshotType. java.lang.Object; java.lang.Enum<GuiTools.SnapshotType>; qupath.lib.gui.tools.GuiTools.SnapshotType. All Implemented Interfaces:; Serializable, Comparable<GuiTools.SnapshotType>, Constable. Enclosing class:; GuiTools. public static enum GuiTools.SnapshotType; extends Enum<GuiTools.SnapshotType>; Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer cont",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:833,Modifiability,inherit,inherited,833,". GuiTools.SnapshotType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class GuiTools.SnapshotType. java.lang.Object; java.lang.Enum<GuiTools.SnapshotType>; qupath.lib.gui.tools.GuiTools.SnapshotType. All Implemented Interfaces:; Serializable, Comparable<GuiTools.SnapshotType>, Constable. Enclosing class:; GuiTools. public static enum GuiTools.SnapshotType; extends Enum<GuiTools.SnapshotType>; Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer cont",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:886,Modifiability,extend,extends,886,". GuiTools.SnapshotType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class GuiTools.SnapshotType. java.lang.Object; java.lang.Enum<GuiTools.SnapshotType>; qupath.lib.gui.tools.GuiTools.SnapshotType. All Implemented Interfaces:; Serializable, Comparable<GuiTools.SnapshotType>, Constable. Enclosing class:; GuiTools. public static enum GuiTools.SnapshotType; extends Enum<GuiTools.SnapshotType>; Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer cont",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:1636,Modifiability,inherit,inherited,1636,"ools. public static enum GuiTools.SnapshotType; extends Enum<GuiTools.SnapshotType>; Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer content. MAIN_SCENE; public static final GuiTools.SnapshotType MAIN_SCENE; Snapshot of the full Scene of the main QuPath Window.; This excludes the titlebar and any overlapping windows. MAIN_WINDOW_SCREENSHOT; public static final GuiTools.SnapshotType MAIN_WINDOW_SCREENSHOT; Screenshot of the full QuPath window as it currently appears, including any overlapping windows. FULL_SCREENSHOT; public static final GuiTools.SnapshotType FULL_SCREENSHOT; Full screenshot, including items outside of QuPath. Method Details. values; public static GuiTools.SnapshotType[] values(); Returns an array containing the constants of this enum class, in; the order",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:1799,Modifiability,inherit,inherited,1799,"Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer content. MAIN_SCENE; public static final GuiTools.SnapshotType MAIN_SCENE; Snapshot of the full Scene of the main QuPath Window.; This excludes the titlebar and any overlapping windows. MAIN_WINDOW_SCREENSHOT; public static final GuiTools.SnapshotType MAIN_WINDOW_SCREENSHOT; Screenshot of the full QuPath window as it currently appears, including any overlapping windows. FULL_SCREENSHOT; public static final GuiTools.SnapshotType FULL_SCREENSHOT; Full screenshot, including items outside of QuPath. Method Details. values; public static GuiTools.SnapshotType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static GuiTools.SnapshotType va",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:1747,Security,hash,hashCode,1747," Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer content. MAIN_SCENE; public static final GuiTools.SnapshotType MAIN_SCENE; Snapshot of the full Scene of the main QuPath Window.; This excludes the titlebar and any overlapping windows. MAIN_WINDOW_SCREENSHOT; public static final GuiTools.SnapshotType MAIN_WINDOW_SCREENSHOT; Screenshot of the full QuPath window as it currently appears, including any overlapping windows. FULL_SCREENSHOT; public static final GuiTools.SnapshotType FULL_SCREENSHOT; Full screenshot, including items outside of QuPath. Method Details. values; public static GuiTools.SnapshotType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html:453,Modifiability,extend,extends,453,". IconFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class IconFactory. java.lang.Object; qupath.lib.gui.tools.IconFactory. public class IconFactory; extends Object; Factory class for creating icons. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; IconFactory.PathIcons. Default icons for QuPath commands. Constructor Summary; Constructors. Constructor; Description; IconFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Image; createIconImage(IconFactory.PathIcons icon,; int size). Create an image from a default icon glyph. static Node; createNode(int width,; int height,; IconFactory.PathIcons type). Create a node from a default icon glyph. static Node; createPathObjectIcon(PathObject pathObject,; int width,; int height). Create an icon depicting a PathObject. static Node; createROIIcon(ROI roi,; int width,; int height,; Color color). Create an icon depicting a ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IconFactory; public IconFactory(). Method Details. createPathObjectIcon; public static Node createPathObjectIcon(PathObject pathObject,; int width,; int height); Create an icon depicting a PathObject. Parameters:; pathObject - the region of interest; width - the preferred icon width; height - the preferred icon height; Returns:; a node that may be used as an icon resembling the shapes of an object's ROI(s). createROIIcon; public static Node createROIIcon(ROI roi,; int width,; int height,; Color color); Create an icon de",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html:1324,Modifiability,inherit,inherited,1324,"e qupath.lib.gui.tools; Class IconFactory. java.lang.Object; qupath.lib.gui.tools.IconFactory. public class IconFactory; extends Object; Factory class for creating icons. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; IconFactory.PathIcons. Default icons for QuPath commands. Constructor Summary; Constructors. Constructor; Description; IconFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Image; createIconImage(IconFactory.PathIcons icon,; int size). Create an image from a default icon glyph. static Node; createNode(int width,; int height,; IconFactory.PathIcons type). Create a node from a default icon glyph. static Node; createPathObjectIcon(PathObject pathObject,; int width,; int height). Create an icon depicting a PathObject. static Node; createROIIcon(ROI roi,; int width,; int height,; Color color). Create an icon depicting a ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IconFactory; public IconFactory(). Method Details. createPathObjectIcon; public static Node createPathObjectIcon(PathObject pathObject,; int width,; int height); Create an icon depicting a PathObject. Parameters:; pathObject - the region of interest; width - the preferred icon width; height - the preferred icon height; Returns:; a node that may be used as an icon resembling the shapes of an object's ROI(s). createROIIcon; public static Node createROIIcon(ROI roi,; int width,; int height,; Color color); Create an icon depicting a ROI. Parameters:; roi - the region of interest; width - the preferred icon width; height - the preferred icon height; color - the icon (line) color; Returns:; a node that may be used as an icon resembling the shape of the ROI. createNode; public static Node createNode(int width,; int height,; IconFactory.PathIcons type);",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html:1398,Security,hash,hashCode,1398,"gui.tools.IconFactory. public class IconFactory; extends Object; Factory class for creating icons. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; IconFactory.PathIcons. Default icons for QuPath commands. Constructor Summary; Constructors. Constructor; Description; IconFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Image; createIconImage(IconFactory.PathIcons icon,; int size). Create an image from a default icon glyph. static Node; createNode(int width,; int height,; IconFactory.PathIcons type). Create a node from a default icon glyph. static Node; createPathObjectIcon(PathObject pathObject,; int width,; int height). Create an icon depicting a PathObject. static Node; createROIIcon(ROI roi,; int width,; int height,; Color color). Create an icon depicting a ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IconFactory; public IconFactory(). Method Details. createPathObjectIcon; public static Node createPathObjectIcon(PathObject pathObject,; int width,; int height); Create an icon depicting a PathObject. Parameters:; pathObject - the region of interest; width - the preferred icon width; height - the preferred icon height; Returns:; a node that may be used as an icon resembling the shapes of an object's ROI(s). createROIIcon; public static Node createROIIcon(ROI roi,; int width,; int height,; Color color); Create an icon depicting a ROI. Parameters:; roi - the region of interest; width - the preferred icon width; height - the preferred icon height; color - the icon (line) color; Returns:; a node that may be used as an icon resembling the shape of the ROI. createNode; public static Node createNode(int width,; int height,; IconFactory.PathIcons type); Create a node from a default icon glyph. Parameters:; width - preferred",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:804,Integrability,interface,interfaces,804,". IconFactory.PathIcons (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class IconFactory.PathIcons. java.lang.Object; java.lang.Enum<IconFactory.PathIcons>; qupath.lib.gui.tools.IconFactory.PathIcons. All Implemented Interfaces:; Serializable, Comparable<IconFactory.PathIcons>, Constable. Enclosing class:; IconFactory. public static enum IconFactory.PathIcons; extends Enum<IconFactory.PathIcons>; Default icons for QuPath commands. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ACTIVE_SERVER;  ; ANNOTATIONS;  ; ANNOTATIONS_FILL;  ; ARROW_DOUBLE_TOOL;  ; ARROW_END_TOOL;  ; ARROW_START_TOOL;  ; BRUSH_TOOL;  ; CELL_NUCLEI_BOTH;  ; CELL_ONLY;  ; CENTROIDS_ONLY;  ; COG;  ; CONTRAST;  ; DETECTIONS;  ; DETECTIONS_FILL;  ; DOWNLOAD;  ; ELLIPSE_TOOL;  ; EXTRACT_REGION;  ; GITHUB;  ; GRID;  ; HELP;  ; INACTIVE_SERVER;  ; INFO;  ; LINE_TOOL;  ; LOCATION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; value",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:695,Modifiability,extend,extends,695,". IconFactory.PathIcons (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class IconFactory.PathIcons. java.lang.Object; java.lang.Enum<IconFactory.PathIcons>; qupath.lib.gui.tools.IconFactory.PathIcons. All Implemented Interfaces:; Serializable, Comparable<IconFactory.PathIcons>, Constable. Enclosing class:; IconFactory. public static enum IconFactory.PathIcons; extends Enum<IconFactory.PathIcons>; Default icons for QuPath commands. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ACTIVE_SERVER;  ; ANNOTATIONS;  ; ANNOTATIONS_FILL;  ; ARROW_DOUBLE_TOOL;  ; ARROW_END_TOOL;  ; ARROW_START_TOOL;  ; BRUSH_TOOL;  ; CELL_NUCLEI_BOTH;  ; CELL_ONLY;  ; CENTROIDS_ONLY;  ; COG;  ; CONTRAST;  ; DETECTIONS;  ; DETECTIONS_FILL;  ; DOWNLOAD;  ; ELLIPSE_TOOL;  ; EXTRACT_REGION;  ; GITHUB;  ; GRID;  ; HELP;  ; INACTIVE_SERVER;  ; INFO;  ; LINE_TOOL;  ; LOCATION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; value",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:815,Modifiability,inherit,inherited,815,". IconFactory.PathIcons (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class IconFactory.PathIcons. java.lang.Object; java.lang.Enum<IconFactory.PathIcons>; qupath.lib.gui.tools.IconFactory.PathIcons. All Implemented Interfaces:; Serializable, Comparable<IconFactory.PathIcons>, Constable. Enclosing class:; IconFactory. public static enum IconFactory.PathIcons; extends Enum<IconFactory.PathIcons>; Default icons for QuPath commands. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ACTIVE_SERVER;  ; ANNOTATIONS;  ; ANNOTATIONS_FILL;  ; ARROW_DOUBLE_TOOL;  ; ARROW_END_TOOL;  ; ARROW_START_TOOL;  ; BRUSH_TOOL;  ; CELL_NUCLEI_BOTH;  ; CELL_ONLY;  ; CENTROIDS_ONLY;  ; COG;  ; CONTRAST;  ; DETECTIONS;  ; DETECTIONS_FILL;  ; DOWNLOAD;  ; ELLIPSE_TOOL;  ; EXTRACT_REGION;  ; GITHUB;  ; GRID;  ; HELP;  ; INACTIVE_SERVER;  ; INFO;  ; LINE_TOOL;  ; LOCATION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; value",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:868,Modifiability,extend,extends,868,". IconFactory.PathIcons (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.tools; Enum Class IconFactory.PathIcons. java.lang.Object; java.lang.Enum<IconFactory.PathIcons>; qupath.lib.gui.tools.IconFactory.PathIcons. All Implemented Interfaces:; Serializable, Comparable<IconFactory.PathIcons>, Constable. Enclosing class:; IconFactory. public static enum IconFactory.PathIcons; extends Enum<IconFactory.PathIcons>; Default icons for QuPath commands. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ACTIVE_SERVER;  ; ANNOTATIONS;  ; ANNOTATIONS_FILL;  ; ARROW_DOUBLE_TOOL;  ; ARROW_END_TOOL;  ; ARROW_START_TOOL;  ; BRUSH_TOOL;  ; CELL_NUCLEI_BOTH;  ; CELL_ONLY;  ; CENTROIDS_ONLY;  ; COG;  ; CONTRAST;  ; DETECTIONS;  ; DETECTIONS_FILL;  ; DOWNLOAD;  ; ELLIPSE_TOOL;  ; EXTRACT_REGION;  ; GITHUB;  ; GRID;  ; HELP;  ; INACTIVE_SERVER;  ; INFO;  ; LINE_TOOL;  ; LOCATION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; value",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:2228,Modifiability,inherit,inherited,2228,"ION;  ; GITHUB;  ; GRID;  ; HELP;  ; INACTIVE_SERVER;  ; INFO;  ; LINE_TOOL;  ; LOCATION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; valueOf(String name). Returns the enum constant of this class with the specified name. static IconFactory.PathIcons[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ACTIVE_SERVER; public static final IconFactory.PathIcons ACTIVE_SERVER. ANNOTATIONS; public static final IconFactory.PathIcons ANNOTATIONS. ANNOTATIONS_FILL; public static final IconFactory.PathIcons ANNOTATIONS_FILL. ARROW_START_TOOL; public static final IconFactory.PathIcons ARROW_START_TOOL. ARROW_END_TOOL; public static final IconFactory.PathIcons ARROW_END_TOOL. ARROW_DOUBLE_TOOL; public static final IconFactory.PathIcons ARROW_DOUBLE_TOOL. BRUSH_TOOL; public static final IconFactory.PathIcons BRUSH_TOOL. CELL_NUCLEI_BOTH; public static final IconFactory.PathIcons CELL_NUCLEI_BOTH. CELL_ONLY; public static final IconFactory.PathIcons CELL_ONLY. CENTROIDS_ONLY; public static final IconFactory.PathIcons CENTROIDS_ONLY. COG; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:2391,Modifiability,inherit,inherited,2391,"RVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; valueOf(String name). Returns the enum constant of this class with the specified name. static IconFactory.PathIcons[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ACTIVE_SERVER; public static final IconFactory.PathIcons ACTIVE_SERVER. ANNOTATIONS; public static final IconFactory.PathIcons ANNOTATIONS. ANNOTATIONS_FILL; public static final IconFactory.PathIcons ANNOTATIONS_FILL. ARROW_START_TOOL; public static final IconFactory.PathIcons ARROW_START_TOOL. ARROW_END_TOOL; public static final IconFactory.PathIcons ARROW_END_TOOL. ARROW_DOUBLE_TOOL; public static final IconFactory.PathIcons ARROW_DOUBLE_TOOL. BRUSH_TOOL; public static final IconFactory.PathIcons BRUSH_TOOL. CELL_NUCLEI_BOTH; public static final IconFactory.PathIcons CELL_NUCLEI_BOTH. CELL_ONLY; public static final IconFactory.PathIcons CELL_ONLY. CENTROIDS_ONLY; public static final IconFactory.PathIcons CENTROIDS_ONLY. COG; public static final IconFactory.PathIcons COG. CONTRAST; public static final IconFactory.PathIcons CONTRAST. DETECTIONS; public static final IconFactory.PathIcons ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:2339,Security,hash,hashCode,2339,"TION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; valueOf(String name). Returns the enum constant of this class with the specified name. static IconFactory.PathIcons[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ACTIVE_SERVER; public static final IconFactory.PathIcons ACTIVE_SERVER. ANNOTATIONS; public static final IconFactory.PathIcons ANNOTATIONS. ANNOTATIONS_FILL; public static final IconFactory.PathIcons ANNOTATIONS_FILL. ARROW_START_TOOL; public static final IconFactory.PathIcons ARROW_START_TOOL. ARROW_END_TOOL; public static final IconFactory.PathIcons ARROW_END_TOOL. ARROW_DOUBLE_TOOL; public static final IconFactory.PathIcons ARROW_DOUBLE_TOOL. BRUSH_TOOL; public static final IconFactory.PathIcons BRUSH_TOOL. CELL_NUCLEI_BOTH; public static final IconFactory.PathIcons CELL_NUCLEI_BOTH. CELL_ONLY; public static final IconFactory.PathIcons CELL_ONLY. CENTROIDS_ONLY; public static final IconFactory.PathIcons CENTROIDS_ONLY. COG; public static final IconFactory.PathIcons COG. CONTRAST; public static final IconFac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:485,Modifiability,extend,extends,485,. MeasurementExporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MeasurementExporter. java.lang.Object; qupath.lib.gui.tools.MeasurementExporter. public class MeasurementExporter; extends Object; Helper class for exporting the measurements of one or more entries in a project. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExporter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; MeasurementExporter; excludeColumns(String... excludeColumns). Specify the columns that will be excluded during the export. void; exportMeasurements(File file). Exports the measurements of one or more entries in the project. void; exportMeasurements(OutputStream stream). Exports the measurements of one or more entries in the project. MeasurementExporter; exportType(Class<? extends PathObject> type). Specify what type of object should be exported. MeasurementExporter; filter(Predicate<PathObject> filter). Filter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. Measureme,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:1171,Modifiability,extend,extends,1171,Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MeasurementExporter. java.lang.Object; qupath.lib.gui.tools.MeasurementExporter. public class MeasurementExporter; extends Object; Helper class for exporting the measurements of one or more entries in a project. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExporter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; MeasurementExporter; excludeColumns(String... excludeColumns). Specify the columns that will be excluded during the export. void; exportMeasurements(File file). Exports the measurements of one or more entries in the project. void; exportMeasurements(OutputStream stream). Exports the measurements of one or more entries in the project. MeasurementExporter; exportType(Class<? extends PathObject> type). Specify what type of object should be exported. MeasurementExporter; filter(Predicate<PathObject> filter). Filter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:1767,Modifiability,extend,extends,1767,"od; Description; MeasurementExporter; excludeColumns(String... excludeColumns). Specify the columns that will be excluded during the export. void; exportMeasurements(File file). Exports the measurements of one or more entries in the project. void; exportMeasurements(OutputStream stream). Exports the measurements of one or more entries in the project. MeasurementExporter; exportType(Class<? extends PathObject> type). Specify what type of object should be exported. MeasurementExporter; filter(Predicate<PathObject> filter). Filter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns tha",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:2227,Modifiability,inherit,inherited,2227," exported. MeasurementExporter; filter(Predicate<PathObject> filter). Filter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator u",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:2504,Modifiability,extend,extends,2504,"y<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator used between measurement values.; To avoid unexpected behavior, it is recommended to; use either tab (\t), comma (,) or ; semicolon (;). Parameters:; sep - ; Returns:; this exporter. imageList; public MeasurementExporter imageList(List<ProjectImageEntry<BufferedImage>> imageLi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:4439,Modifiability,extend,extends,4439,"avior, it is recommended to; use either tab (\t), comma (,) or ; semicolon (;). Parameters:; sep - ; Returns:; this exporter. imageList; public MeasurementExporter imageList(List<ProjectImageEntry<BufferedImage>> imageList); Specify the list of images (ProjectImageEntry) to export. Parameters:; imageList - ; Returns:; this exporter. filter; public MeasurementExporter filter(Predicate<PathObject> filter); Filter the PathObjects before export (objects returning true for the predicate will be exported). Parameters:; filter - ; Returns:; this exporter; Since:; v0.3.2. getImageList; public List<ProjectImageEntry<BufferedImage>> getImageList(); Returns the list of images (ProjectImageEntry). Returns:; imageList. getExcludeColumns; public List<String> getExcludeColumns(); Returns the list of columns to exclude from export. Returns:; list of column names. getIncludeColumns; public List<String> getIncludeColumns(); Returns the list of columns to include in the export. Returns:; list of column names. getSeparator; public String getSeparator(); Returns the separator used in between measurements. Returns:; separator. getType; public Class<? extends PathObject> getType(); Returns the type of path objects used in the export. Returns:; path object. exportMeasurements; public void exportMeasurements(File file); Exports the measurements of one or more entries in the project.; This function first opens all the images in the project to store ; all the column names and values of the measurements.; Then, it loops through the maps containing the values to write; them to the given output file. Parameters:; file - . exportMeasurements; public void exportMeasurements(OutputStream stream); Exports the measurements of one or more entries in the project.; This function first opens all the images in the project to store ; all the column names and values of the measurements.; Then, it loops through the maps containing the values to write; them to the given output stream. Parameters:; stream - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:3272,Safety,avoid,avoid,3272,"notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator used between measurement values.; To avoid unexpected behavior, it is recommended to; use either tab (\t), comma (,) or ; semicolon (;). Parameters:; sep - ; Returns:; this exporter. imageList; public MeasurementExporter imageList(List<ProjectImageEntry<BufferedImage>> imageList); Specify the list of images (ProjectImageEntry) to export. Parameters:; imageList - ; Returns:; this exporter. filter; public MeasurementExporter filter(Predicate<PathObject> filter); Filter the PathObjects before export (objects returning true for the predicate will be exported). Parameters:; filter - ; Returns:; this exporter; Since:; v0.3.2. getImageList; public List<ProjectImageEntry<BufferedImage>> getImageList(); Returns the list of images (ProjectImageEntry). Returns:; imageList. getExcludeColumns; public List<String> getExcludeColumns(); Returns the list of columns to exclude from export. Returns:; list of column names. getIncludeColumns; public List<String> getIncludeColumns(); Returns the list of columns to include in the export. Returns:; list of column names. getSeparator; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:2301,Security,hash,hashCode,2301,"lter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator used between measurement values.; To avoid unexpected behavior, it is rec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html:477,Modifiability,extend,extends,477,". MeasurementMapper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MeasurementMapper. java.lang.Object; qupath.lib.gui.tools.MeasurementMapper. public class MeasurementMapper; extends Object; Helpers class that can be used to map an object's measurement to a color (packed RGB int).; ; By passing a collection of objects, the minimum and maximum of all the measurements are found; and these used to determine the lookup table scaling; alternative minimum and maximum values can also; be set to override these extrema. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Integer; getColorForObject(PathObject pathObject). Get the display color for a specified object, according to the settings of this mapper. ColorMaps.ColorMap; getColorMapper(). Get the color mapper, which is effectively a lookup table. double; getDataMaxValue(). Get the maximum measurement value from the objects passed to the constructor of this mapper. double; getDataMinValue(). Get the minimum measurement value from the objects passed to the constructor of this mapper. double; getDisplayMaxValue(). Get the measurement value that maps to the last color in the color mapper. double; getDisplayMinValue(). Get the measurement value that maps to the first color in the color mapper. boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html:984,Modifiability,extend,extends,984,". MeasurementMapper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MeasurementMapper. java.lang.Object; qupath.lib.gui.tools.MeasurementMapper. public class MeasurementMapper; extends Object; Helpers class that can be used to map an object's measurement to a color (packed RGB int).; ; By passing a collection of objects, the minimum and maximum of all the measurements are found; and these used to determine the lookup table scaling; alternative minimum and maximum values can also; be set to override these extrema. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Integer; getColorForObject(PathObject pathObject). Get the display color for a specified object, according to the settings of this mapper. ColorMaps.ColorMap; getColorMapper(). Get the color mapper, which is effectively a lookup table. double; getDataMaxValue(). Get the maximum measurement value from the objects passed to the constructor of this mapper. double; getDataMinValue(). Get the minimum measurement value from the objects passed to the constructor of this mapper. double; getDisplayMaxValue(). Get the measurement value that maps to the last color in the color mapper. double; getDisplayMinValue(). Get the measurement value that maps to the first color in the color mapper. boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html:2563,Modifiability,inherit,inherited,2563,"d to the constructor of this mapper. double; getDisplayMaxValue(). Get the measurement value that maps to the last color in the color mapper. double; getDisplayMinValue(). Get the measurement value that maps to the first color in the color mapper. boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. protected double; getUsefulValue(PathObject pathObject,; double nanValue);  ; boolean; isValid(). Query if the mapper is valid. void; setColorMapper(ColorMaps.ColorMap mapper). Set a new color mapper. void; setDisplayMaxValue(double maxValue). Set the measurement value that maps to the last color in the color mapper. void; setDisplayMinValue(double minValue). Set the measurement value that maps to the first color in the color mapper. void; setExcludeOutsideRange(boolean excludeOutsideRange). Specify whether out-of-range values should be excluded. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapper; public MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects); Constructor. Parameters:; mapper - color mapper (lookup table); measurement - the measurement to colorize; pathObjects - an initial collection of objects used to determine display ranges (i.e. find the min/max values of the specified measurement). Method Details. setColorMapper; public void setColorMapper(ColorMaps.ColorMap mapper); Set a new color mapper. Parameters:; mapper - . getExcludeOutsideRange; public boolean getExcludeOutsideRange(); Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. Returns:. setExcludeOutsideRange; public void setExcludeOutsideRange(boolean excludeOutsideRange); Specify whether out-of",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html:2821,Modifiability,extend,extends,2821," boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. protected double; getUsefulValue(PathObject pathObject,; double nanValue);  ; boolean; isValid(). Query if the mapper is valid. void; setColorMapper(ColorMaps.ColorMap mapper). Set a new color mapper. void; setDisplayMaxValue(double maxValue). Set the measurement value that maps to the last color in the color mapper. void; setDisplayMinValue(double minValue). Set the measurement value that maps to the first color in the color mapper. void; setExcludeOutsideRange(boolean excludeOutsideRange). Specify whether out-of-range values should be excluded. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapper; public MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects); Constructor. Parameters:; mapper - color mapper (lookup table); measurement - the measurement to colorize; pathObjects - an initial collection of objects used to determine display ranges (i.e. find the min/max values of the specified measurement). Method Details. setColorMapper; public void setColorMapper(ColorMaps.ColorMap mapper); Set a new color mapper. Parameters:; mapper - . getExcludeOutsideRange; public boolean getExcludeOutsideRange(); Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. Returns:. setExcludeOutsideRange; public void setExcludeOutsideRange(boolean excludeOutsideRange); Specify whether out-of-range values should be excluded. Parameters:; excludeOutsideRange - . isValid; public boolean isValid(); Query if the mapper is valid. This returns true if the mapper has been initialized with objects to ; determine an appropriate display range.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html:2637,Security,hash,hashCode,2637,"he measurement value that maps to the last color in the color mapper. double; getDisplayMinValue(). Get the measurement value that maps to the first color in the color mapper. boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. protected double; getUsefulValue(PathObject pathObject,; double nanValue);  ; boolean; isValid(). Query if the mapper is valid. void; setColorMapper(ColorMaps.ColorMap mapper). Set a new color mapper. void; setDisplayMaxValue(double maxValue). Set the measurement value that maps to the last color in the color mapper. void; setDisplayMinValue(double minValue). Set the measurement value that maps to the first color in the color mapper. void; setExcludeOutsideRange(boolean excludeOutsideRange). Specify whether out-of-range values should be excluded. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapper; public MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects); Constructor. Parameters:; mapper - color mapper (lookup table); measurement - the measurement to colorize; pathObjects - an initial collection of objects used to determine display ranges (i.e. find the min/max values of the specified measurement). Method Details. setColorMapper; public void setColorMapper(ColorMaps.ColorMap mapper); Set a new color mapper. Parameters:; mapper - . getExcludeOutsideRange; public boolean getExcludeOutsideRange(); Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. Returns:. setExcludeOutsideRange; public void setExcludeOutsideRange(boolean excludeOutsideRange); Specify whether out-of-range values should be excluded. Parameters:; excludeOutsideRange - . i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:445,Modifiability,extend,extends,445,". MenuTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MenuTools. java.lang.Object; qupath.lib.gui.tools.MenuTools. public class MenuTools; extends Object; Static methods to help with creating and populating JavaFX menus. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MenuTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated me",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:1280,Modifiability,extend,extends,1280," Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MenuTools. java.lang.Object; qupath.lib.gui.tools.MenuTools. public class MenuTools; extends Object; Static methods to help with creating and populating JavaFX menus. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MenuTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this met",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:1571,Modifiability,inherit,inherited,1571,"ctors. Constructor; Description; MenuTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this method can be nested inside other calls. addMenuItems; public static List<MenuItem> addMenuItems(List<MenuItem> menuItems,; Object... items); Add menu items to the specified list. This is similar to addMenuItems(Menu, Object...) but makes it; possible to work also with a ContextMenu in addition t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:3178,Modifiability,extend,extends,3178,"optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this method can be nested inside other calls. addMenuItems; public static List<MenuItem> addMenuItems(List<MenuItem> menuItems,; Object... items); Add menu items to the specified list. This is similar to addMenuItems(Menu, Object...) but makes it; possible to work also with a ContextMenu in addition to a standard Menu. Parameters:; menuItems - existing list to which items should be added, or null if a new list should be created; items - the items that should be provided (MenuItems or Actions); Returns:; the list containing the adding items (same as the original if provided). getMenu; public static Menu getMenu(List<Menu> menus,; String name,; boolean createMenu); Get a reference to an existing menu, optionally creating a new menu if it is not present. Parameters:; menus - ; name - ; createMenu - ; Returns:. getFlattenedMenuItems; public static List<MenuItem> getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators); Get a flattened list of all menu items recursively. Parameters:; menuItems - initial list of items (some may themselves be menus); excludeMenusAndSeparators - if true, exclude all items that are themselves either menus or separators; Returns:. getFlattenedMenuItems; public static List<MenuItem> getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items); Get a flattened list of all menu items recursively. Parameters:; excludeMenusAndSeparators - if true, exclude all items that are themselves either menus or separators; items - initial array of items (some may themselves be menus); Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:1645,Security,hash,hashCode,1645,"hodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this method can be nested inside other calls. addMenuItems; public static List<MenuItem> addMenuItems(List<MenuItem> menuItems,; Object... items); Add menu items to the specified list. This is similar to addMenuItems(Menu, Object...) but makes it; possible to work also with a ContextMenu in addition to a standard Menu. Parameters:; menuItems - existing list to which items",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html:408,Integrability,interface,interface,408,". qupath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a P",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html:496,Integrability,interface,interface,496,". qupath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a P",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html:984,Integrability,wrap,wrap,984,"upath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a Pat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html:804,Security,access,access,804,". qupath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a P",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:3402,Availability,avail,available,3402,"illHeight(Node, Boolean) property for specified nodes. static void; setFillWidth(Boolean doFill,; Node... nodes). Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. static void; setHGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. static void; setMaxHeight(double height,; Region... regions). Deprecated.; Set the max height property for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:3602,Availability,avail,available,3602," static void; setHGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. static void; setMaxHeight(double height,; Region... regions). Deprecated.; Set the max height property for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static voi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:6669,Availability,avail,available,6669,"uble width,; Region... regions); Deprecated.; Set the min width property for the specified regions.; This can be especially useful when setting the width to Region.USE_PREF_SIZE, indicating ; that the region should not be shrunk beyond its preferred size. Parameters:; width - ; regions - . setMinHeight; public static void setMinHeight(double height,; Region... regions); Deprecated.; Set the min height property for the specified regions.; This can be especially useful when setting the height to Region.USE_PREF_SIZE, indicating ; that the region should not be shrunk beyond its preferred size. Parameters:; height - ; regions - . setFillWidth; public static void setFillWidth(Boolean doFill,; Node... nodes); Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. Parameters:; doFill - ; nodes - . setToExpandGridPaneWidth; public static void setToExpandGridPaneWidth(Node... nodes); Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. Parameters:; nodes - . setToExpandGridPaneHeight; public static void setToExpandGridPaneHeight(Node... nodes); Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. Parameters:; nodes - . setFillHeight; public static void setFillHeight(Boolean doFill,; Node... nodes); Deprecated.; Set the GridPane.setFillHeight(Node, Boolean) property for specified nodes. Parameters:; doFill - ; nodes - . createRowGrid; public static GridPane createRowGrid(Node... nodes); Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). Parameters:; nodes - ; Returns:. createRowGridControls; public static GridPane createRowGridControls(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; while also resizing contained objects to have the corresponding widths",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:6928,Availability,avail,available,6928,"rameters:; width - ; regions - . setMinHeight; public static void setMinHeight(double height,; Region... regions); Deprecated.; Set the min height property for the specified regions.; This can be especially useful when setting the height to Region.USE_PREF_SIZE, indicating ; that the region should not be shrunk beyond its preferred size. Parameters:; height - ; regions - . setFillWidth; public static void setFillWidth(Boolean doFill,; Node... nodes); Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. Parameters:; doFill - ; nodes - . setToExpandGridPaneWidth; public static void setToExpandGridPaneWidth(Node... nodes); Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. Parameters:; nodes - . setToExpandGridPaneHeight; public static void setToExpandGridPaneHeight(Node... nodes); Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. Parameters:; nodes - . setFillHeight; public static void setFillHeight(Boolean doFill,; Node... nodes); Deprecated.; Set the GridPane.setFillHeight(Node, Boolean) property for specified nodes. Parameters:; doFill - ; nodes - . createRowGrid; public static GridPane createRowGrid(Node... nodes); Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). Parameters:; nodes - ; Returns:. createRowGridControls; public static GridPane createRowGridControls(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; while also resizing contained objects to have the corresponding widths. Parameters:; nodes - ; Returns:. createColumnGridControls; public static GridPane createColumnGridControls(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; where controls have their widths bo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:458,Modifiability,extend,extends,458,". PaneTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PaneTools. java.lang.Object; qupath.lib.gui.tools.PaneTools. @Deprecated; public class PaneTools; extends Object; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. Assorted static functions to help when working with a JavaFX panes. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PaneTools(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes). Deprecated.; Add a row of nodes. static GridPane; createColumnGrid(int nCols). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). static GridPane; createColumnGrid(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). static GridPane; createColumnGridControls(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; where controls have their widths bound to their parent. static GridPane; createRowGrid(Node... nodes). Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). static GridPane; createRowGridControls(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; while also resizing contained objects to have the corresponding widths. static Collection<Node>; getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive). Deprecated.; Get the nodes that are included within a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:2063,Modifiability,extend,extends,2063,"idLayout(). static GridPane; createColumnGrid(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). static GridPane; createColumnGridControls(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; where controls have their widths bound to their parent. static GridPane; createRowGrid(Node... nodes). Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). static GridPane; createRowGridControls(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; while also resizing contained objects to have the corresponding widths. static Collection<Node>; getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive). Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively. static <T extends Node>Collection<T>; getContentsOfType(Parent parent,; Class<T> cls,; boolean doRecursive). Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. static void; setFillHeight(Boolean doFill,; Node... nodes). Deprecated.; Set the GridPane.setFillHeight(Node, Boolean) property for specified nodes. static void; setFillWidth(Boolean doFill,; Node... nodes). Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. static void; setHGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. static void; setMaxHeight(double height,; Region... regions). Deprecated.; Set the max height property for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified re",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:3937,Modifiability,inherit,inherited,3937,"th property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static void setHGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setVGrowPriority; public static void setVGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. Parameters:; priorit",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:8976,Modifiability,extend,extends,8976,"milarly to Swing's GridLayout(),; where controls have their widths bound to their parent. Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(int nCols); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nCols - ; Returns:. getContents; public static Collection<Node> getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive); Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively.; Without the recursive search, this is similar to Parent.getChildrenUnmodifiable() in most cases, ; except that a separate collection is used. However in some cases getItems() must be used instead. ; Currently this applies only to SplitPane but this may be used elsewhere if appropriate. Parameters:; parent - ; collection - ; doRecursive - ; Returns:. getContentsOfType; public static <T extends Node> Collection<T> getContentsOfType(Parent parent,; Class<T> cls,; boolean doRecursive); Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. This can be helpful, for example, to extract all the Buttons or Regions within a pane ; in order to set some property of all of them. Type Parameters:; T - ; Parameters:; parent - ; cls - ; doRecursive - ; Returns:; See Also:. getContents(Parent, Collection, boolean). simplifyTitledPane; public static void simplifyTitledPane(TitledPane pane,; boolean boldTitle); Deprecated.; Simplify the appearance of a TitledPane using CSS.; This is useful if using a TitledPane to define expanded options, which should be displayed unobtrusively. Parameters:; pane - the pane to simplify; boldTitle - if true, the title should be displayed in bold. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:4011,Security,hash,hashCode,4011,"height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static void setHGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setVGrowPriority; public static void setVGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setMaxWidth; public static void setMaxWidth(double width",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:3808,Usability,simpl,simplifyTitledPane,3808," for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static void setHGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setVGrowPriority; public static void setVGrowPriority(Priority priority,; Node",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:9462,Usability,simpl,simplifyTitledPane,9462,"milarly to Swing's GridLayout(),; where controls have their widths bound to their parent. Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(int nCols); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nCols - ; Returns:. getContents; public static Collection<Node> getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive); Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively.; Without the recursive search, this is similar to Parent.getChildrenUnmodifiable() in most cases, ; except that a separate collection is used. However in some cases getItems() must be used instead. ; Currently this applies only to SplitPane but this may be used elsewhere if appropriate. Parameters:; parent - ; collection - ; doRecursive - ; Returns:. getContentsOfType; public static <T extends Node> Collection<T> getContentsOfType(Parent parent,; Class<T> cls,; boolean doRecursive); Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. This can be helpful, for example, to extract all the Buttons or Regions within a pane ; in order to set some property of all of them. Type Parameters:; T - ; Parameters:; parent - ; cls - ; doRecursive - ; Returns:; See Also:. getContents(Parent, Collection, boolean). simplifyTitledPane; public static void simplifyTitledPane(TitledPane pane,; boolean boldTitle); Deprecated.; Simplify the appearance of a TitledPane using CSS.; This is useful if using a TitledPane to define expanded options, which should be displayed unobtrusively. Parameters:; pane - the pane to simplify; boldTitle - if true, the title should be displayed in bold. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:9501,Usability,simpl,simplifyTitledPane,9501,"milarly to Swing's GridLayout(),; where controls have their widths bound to their parent. Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(int nCols); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nCols - ; Returns:. getContents; public static Collection<Node> getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive); Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively.; Without the recursive search, this is similar to Parent.getChildrenUnmodifiable() in most cases, ; except that a separate collection is used. However in some cases getItems() must be used instead. ; Currently this applies only to SplitPane but this may be used elsewhere if appropriate. Parameters:; parent - ; collection - ; doRecursive - ; Returns:. getContentsOfType; public static <T extends Node> Collection<T> getContentsOfType(Parent parent,; Class<T> cls,; boolean doRecursive); Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. This can be helpful, for example, to extract all the Buttons or Regions within a pane ; in order to set some property of all of them. Type Parameters:; T - ; Parameters:; parent - ; cls - ; doRecursive - ; Returns:; See Also:. getContents(Parent, Collection, boolean). simplifyTitledPane; public static void simplifyTitledPane(TitledPane pane,; boolean boldTitle); Deprecated.; Simplify the appearance of a TitledPane using CSS.; This is useful if using a TitledPane to define expanded options, which should be displayed unobtrusively. Parameters:; pane - the pane to simplify; boldTitle - if true, the title should be displayed in bold. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:9761,Usability,simpl,simplify,9761,"milarly to Swing's GridLayout(),; where controls have their widths bound to their parent. Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(int nCols); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nCols - ; Returns:. getContents; public static Collection<Node> getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive); Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively.; Without the recursive search, this is similar to Parent.getChildrenUnmodifiable() in most cases, ; except that a separate collection is used. However in some cases getItems() must be used instead. ; Currently this applies only to SplitPane but this may be used elsewhere if appropriate. Parameters:; parent - ; collection - ; doRecursive - ; Returns:. getContentsOfType; public static <T extends Node> Collection<T> getContentsOfType(Parent parent,; Class<T> cls,; boolean doRecursive); Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. This can be helpful, for example, to extract all the Buttons or Regions within a pane ; in order to set some property of all of them. Type Parameters:; T - ; Parameters:; parent - ; cls - ; doRecursive - ; Returns:; See Also:. getContents(Parent, Collection, boolean). simplifyTitledPane; public static void simplifyTitledPane(TitledPane pane,; boolean boldTitle); Deprecated.; Simplify the appearance of a TitledPane using CSS.; This is useful if using a TitledPane to define expanded options, which should be displayed unobtrusively. Parameters:; pane - the pane to simplify; boldTitle - if true, the title should be displayed in bold. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html:473,Modifiability,extend,extends,473,". PathObjectLabels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PathObjectLabels. java.lang.Object; qupath.lib.gui.tools.PathObjectLabels. public class PathObjectLabels; extends Object; Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a PathObject. Constructor Summary; Constructors. Constructor; Description; PathObjectLabels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ListCell<PathObject>; createListCell(). Create a ListCell for displaying a PathObject using the default PathObject.toString() method. static ListCell<PathObject>; createListCell(Function<PathObject,String> stringExtractor). Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. static PathObjectLabels.PathObjectMiniPane; createPane(). Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. static PathObjectLabels.PathObjectMiniPane; createPane(Function<PathObject,String> stringExtractor). Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. static TreeCell<PathObject>; createTreeCell(). Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. static TreeCell<PathObject>; createTreeCell(Function<PathObject,String> stringExtractor). Create a TreeCell for displaying",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html:2094,Modifiability,inherit,inherited,2094,"a PathObject using the default PathObject.toString() method. static ListCell<PathObject>; createListCell(Function<PathObject,String> stringExtractor). Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. static PathObjectLabels.PathObjectMiniPane; createPane(). Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. static PathObjectLabels.PathObjectMiniPane; createPane(Function<PathObject,String> stringExtractor). Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. static TreeCell<PathObject>; createTreeCell(). Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. static TreeCell<PathObject>; createTreeCell(Function<PathObject,String> stringExtractor). Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectLabels; public PathObjectLabels(). Method Details. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(); Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. Returns:. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(Function<PathObject,String> stringExtractor); Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. Parameters:; stringExtractor - ; Returns:. createListCell; public static ListCell<PathObject> createListCell(); Create a ListCell for displaying a PathObject using the default PathObject.toString() method. Returns:. createListCell; public static ListCell<PathObject> createListCell(Function<PathObject,String> stringExtractor); Create a ListCell for displaying a PathObject using a ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html:2168,Security,hash,hashCode,2168,"Cell<PathObject>; createListCell(Function<PathObject,String> stringExtractor). Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. static PathObjectLabels.PathObjectMiniPane; createPane(). Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. static PathObjectLabels.PathObjectMiniPane; createPane(Function<PathObject,String> stringExtractor). Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. static TreeCell<PathObject>; createTreeCell(). Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. static TreeCell<PathObject>; createTreeCell(Function<PathObject,String> stringExtractor). Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectLabels; public PathObjectLabels(). Method Details. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(); Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. Returns:. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(Function<PathObject,String> stringExtractor); Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. Parameters:; stringExtractor - ; Returns:. createListCell; public static ListCell<PathObject> createListCell(); Create a ListCell for displaying a PathObject using the default PathObject.toString() method. Returns:. createListCell; public static ListCell<PathObject> createListCell(Function<PathObject,String> stringExtractor); Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. Parameter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html:592,Modifiability,extend,extends,592,". PathObjectLabels.PathObjectMiniPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PathObjectLabels.PathObjectMiniPane. java.lang.Object; qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Enclosing class:; PathObjectLabels. public static class PathObjectLabels.PathObjectMiniPane; extends Object; Manage a small pane that can be used to display a PathObject.; Intended for use creating standardized list and tree cells. Constructor Summary; Constructors. Constructor; Description; PathObjectMiniPane(Function<PathObject,String> stringExtractor). Constructor using a custom string extraction function. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getNode(). Get the node to display. void; setPathObject(PathObject value). Set the PathObject to display (may be null). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectMiniPane; public PathObjectMiniPane(Function<PathObject,String> stringExtractor); Constructor using a custom string extraction function. Parameters:; stringExtractor - function to generate a String representation of the object. Method Details. setPathObject; public void setPathObject(PathObject value); Set the PathObject to display (may be null). Parameters:; value - . getNode; public Pane getNode(); Get the node to display. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html:1147,Modifiability,inherit,inherited,1147,". PathObjectLabels.PathObjectMiniPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PathObjectLabels.PathObjectMiniPane. java.lang.Object; qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Enclosing class:; PathObjectLabels. public static class PathObjectLabels.PathObjectMiniPane; extends Object; Manage a small pane that can be used to display a PathObject.; Intended for use creating standardized list and tree cells. Constructor Summary; Constructors. Constructor; Description; PathObjectMiniPane(Function<PathObject,String> stringExtractor). Constructor using a custom string extraction function. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getNode(). Get the node to display. void; setPathObject(PathObject value). Set the PathObject to display (may be null). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectMiniPane; public PathObjectMiniPane(Function<PathObject,String> stringExtractor); Constructor using a custom string extraction function. Parameters:; stringExtractor - function to generate a String representation of the object. Method Details. setPathObject; public void setPathObject(PathObject value); Set the PathObject to display (may be null). Parameters:; value - . getNode; public Pane getNode(); Get the node to display. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html:1221,Security,hash,hashCode,1221,". PathObjectLabels.PathObjectMiniPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PathObjectLabels.PathObjectMiniPane. java.lang.Object; qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Enclosing class:; PathObjectLabels. public static class PathObjectLabels.PathObjectMiniPane; extends Object; Manage a small pane that can be used to display a PathObject.; Intended for use creating standardized list and tree cells. Constructor Summary; Constructors. Constructor; Description; PathObjectMiniPane(Function<PathObject,String> stringExtractor). Constructor using a custom string extraction function. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getNode(). Get the node to display. void; setPathObject(PathObject value). Set the PathObject to display (may be null). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectMiniPane; public PathObjectMiniPane(Function<PathObject,String> stringExtractor); Constructor using a custom string extraction function. Parameters:; stringExtractor - function to generate a String representation of the object. Method Details. setPathObject; public void setPathObject(PathObject value); Set the PathObject to display (may be null). Parameters:; value - . getNode; public Pane getNode(); Get the node to display. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html:1327,Deployability,update,update,1327,". WebViews (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class WebViews. java.lang.Object; qupath.lib.gui.tools.WebViews. public class WebViews; extends Object; Helper class for creating a WebView in a standardized way. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WebViews();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindUserStylesheetToStyle(WebEngine engine). Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. static WebView; create(boolean bindStylesheetToStyle). Create a new WebView. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WebViews; public WebViews(). Method Details. create; public static WebView create(boolean bindStylesheetToStyle); Create a new WebView. Parameters:; bindStylesheetToStyle - if true, update the user stylesheet location for the WebEngine automatically based on; the current QuPath style (e.g. dark mode); Returns:; Since:; v0.4.0; See Also:. bindUserStylesheetToStyle(WebEngine). bindUserStylesheetToStyle; public static void bindUserStylesheetToStyle(WebEngine engine); Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. light or dark mode, serif or sans-serif fonts). Parameters:; engine - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/WebViews.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html:441,Modifiability,extend,extends,441,". WebViews (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class WebViews. java.lang.Object; qupath.lib.gui.tools.WebViews. public class WebViews; extends Object; Helper class for creating a WebView in a standardized way. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WebViews();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindUserStylesheetToStyle(WebEngine engine). Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. static WebView; create(boolean bindStylesheetToStyle). Create a new WebView. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WebViews; public WebViews(). Method Details. create; public static WebView create(boolean bindStylesheetToStyle); Create a new WebView. Parameters:; bindStylesheetToStyle - if true, update the user stylesheet location for the WebEngine automatically based on; the current QuPath style (e.g. dark mode); Returns:; Since:; v0.4.0; See Also:. bindUserStylesheetToStyle(WebEngine). bindUserStylesheetToStyle; public static void bindUserStylesheetToStyle(WebEngine engine); Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. light or dark mode, serif or sans-serif fonts). Parameters:; engine - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/WebViews.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html:993,Modifiability,inherit,inherited,993,". WebViews (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class WebViews. java.lang.Object; qupath.lib.gui.tools.WebViews. public class WebViews; extends Object; Helper class for creating a WebView in a standardized way. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WebViews();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindUserStylesheetToStyle(WebEngine engine). Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. static WebView; create(boolean bindStylesheetToStyle). Create a new WebView. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WebViews; public WebViews(). Method Details. create; public static WebView create(boolean bindStylesheetToStyle); Create a new WebView. Parameters:; bindStylesheetToStyle - if true, update the user stylesheet location for the WebEngine automatically based on; the current QuPath style (e.g. dark mode); Returns:; Since:; v0.4.0; See Also:. bindUserStylesheetToStyle(WebEngine). bindUserStylesheetToStyle; public static void bindUserStylesheetToStyle(WebEngine engine); Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. light or dark mode, serif or sans-serif fonts). Parameters:; engine - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/WebViews.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html:1067,Security,hash,hashCode,1067,". WebViews (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class WebViews. java.lang.Object; qupath.lib.gui.tools.WebViews. public class WebViews; extends Object; Helper class for creating a WebView in a standardized way. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WebViews();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindUserStylesheetToStyle(WebEngine engine). Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. static WebView; create(boolean bindStylesheetToStyle). Create a new WebView. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WebViews; public WebViews(). Method Details. create; public static WebView create(boolean bindStylesheetToStyle); Create a new WebView. Parameters:; bindStylesheetToStyle - if true, update the user stylesheet location for the WebEngine automatically based on; the current QuPath style (e.g. dark mode); Returns:; Since:; v0.4.0; See Also:. bindUserStylesheetToStyle(WebEngine). bindUserStylesheetToStyle; public static void bindUserStylesheetToStyle(WebEngine engine); Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. light or dark mode, serif or sans-serif fonts). Parameters:; engine - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/tools/WebViews.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html:539,Integrability,interface,interface,539,". DragDropImportListener.DropHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface DragDropImportListener.DropHandler<T>. Type Parameters:; T - . Enclosing class:; DragDropImportListener. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface DragDropImportListener.DropHandler<T>; Interface to define a new drop handler. Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; handleDrop(QuPathViewer viewer,; List<T> list). Handle drop onto a viewer. Method Details. handleDrop; boolean handleDrop(QuPathViewer viewer,; List<T> list); Handle drop onto a viewer.; This makes it possible to drop images (for example) onto a specific viewer to open them in that viewer, ; irrespective of whether the viewer is active currently. Parameters:; viewer - the active viewer, or the viewer only which the object were dropped; list - the dropped objects; Returns:; true if the handler processed the drop event. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html:681,Integrability,interface,interface,681,". DragDropImportListener.DropHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface DragDropImportListener.DropHandler<T>. Type Parameters:; T - . Enclosing class:; DragDropImportListener. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface DragDropImportListener.DropHandler<T>; Interface to define a new drop handler. Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; handleDrop(QuPathViewer viewer,; List<T> list). Handle drop onto a viewer. Method Details. handleDrop; boolean handleDrop(QuPathViewer viewer,; List<T> list); Handle drop onto a viewer.; This makes it possible to drop images (for example) onto a specific viewer to open them in that viewer, ; irrespective of whether the viewer is active currently. Parameters:; viewer - the active viewer, or the viewer only which the object were dropped; list - the dropped objects; Returns:; true if the handler processed the drop event. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.DropHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:834,Integrability,interface,interface,834,". DragDropImportListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class DragDropImportListener. java.lang.Object; qupath.lib.gui.viewer.DragDropImportListener. All Implemented Interfaces:; EventListener, EventHandler<DragEvent>. public class DragDropImportListener; extends Object; implements EventHandler<DragEvent>; Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:2453,Integrability,interface,interface,2453,"ropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public DragDropImportListener(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. setupTarget; public void setupTarget(Node target); Prepare a target node to accept drag and drop events. Parameters:; target - . setupTarget; public void setupTarget(Scene target); Prepare a target scene to accept drag and drop events. Parameters:; target - . handle; public void handle(DragEvent event). Specified by:; handle in interface EventHandler<DragEvent>. addFileDropHandler; public void addFileDropHandler(DragDropImportListener.DropHandler<File> handler); Add a new File DropHandler.; ; This may be called on a drag-and-drop application on the main window, if no other ; handler deals with the event. Parameters:; handler - . removeFileDropHandler; public void removeFileDropHandler(DragDropImportListener.DropHandler<File> handler); Remove a File DropHandler. Parameters:; handler - . addJsonDropHandler; public void addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler); Add a new DropHandler specifically for JSON elements.; ; This may be called when a json file is dropped on the main QuPath window.; Handlers should quickly inspect the element and return if they cannot handle it. Parameters:; handler - . removeJsonDropHandler; public void removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler); Remove a JSON DropHandler. Parameters:; handler - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:568,Modifiability,extend,extends,568,". DragDropImportListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class DragDropImportListener. java.lang.Object; qupath.lib.gui.viewer.DragDropImportListener. All Implemented Interfaces:; EventListener, EventHandler<DragEvent>. public class DragDropImportListener; extends Object; implements EventHandler<DragEvent>; Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:1818,Modifiability,inherit,inherited,1818," static interface ; DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public DragDropImportListener(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. setupTarget; public void setupTarget(Node target); Prepare a target node to accept drag and drop events. Parameters:; target - . setupTarget; public void setupTarget(Scene target); Prepare a target scene to accept drag and drop events. Parameters:; target - . handle; public void handle(DragEvent event). Specified by:; handle in interface EventHandler<DragEvent>. addFileDropHandler; public void addFileDropHandler(DragDropImportListener.DropHandler<File> handler); Add a new File DropHandler.; ; This may be called on a drag-and-drop application on the main window, if no other ; handler deals with the event. Parameters:; handler - . removeFileDropHandler; public void removeFileDropHandler(DragDropIm",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:1892,Security,hash,hashCode,1892,"define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public DragDropImportListener(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. setupTarget; public void setupTarget(Node target); Prepare a target node to accept drag and drop events. Parameters:; target - . setupTarget; public void setupTarget(Scene target); Prepare a target scene to accept drag and drop events. Parameters:; target - . handle; public void handle(DragEvent event). Specified by:; handle in interface EventHandler<DragEvent>. addFileDropHandler; public void addFileDropHandler(DragDropImportListener.DropHandler<File> handler); Add a new File DropHandler.; ; This may be called on a drag-and-drop application on the main window, if no other ; handler deals with the event. Parameters:; handler - . removeFileDropHandler; public void removeFileDropHandler(DragDropImportListener.DropHandler<File> handler); Remove a File DropHandler. Para",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:591,Integrability,wrap,wraps,591,". GridLines (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class GridLines. java.lang.Object; qupath.lib.gui.viewer.GridLines. public class GridLines; extends Object; Simple class used for storing information related to GridLines that may be painted over an image.; ; This implementation simply wraps around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:447,Modifiability,extend,extends,447,". GridLines (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class GridLines. java.lang.Object; qupath.lib.gui.viewer.GridLines. public class GridLines; extends Object; Simple class used for storing information related to GridLines that may be painted over an image.; ; This implementation simply wraps around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:1587,Modifiability,inherit,inherited,1587,"s around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartYProperty(). getSpaceX; public double getSpaceX(); Horizontal spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingXProperty(). getSpaceY; public double getSpaceY(); Vertical spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingYProperty(). setSpaceX; public void setSpaceX(double spaceX); Set the horizontal spacing between lines for any counting grid. Parameters:; spaceX - ; See Also:. PathPrefs.gridSpacingXProperty(). setSpaceY; public void setSpaceY(dou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:1661,Security,hash,hashCode,1661,"r Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartYProperty(). getSpaceX; public double getSpaceX(); Horizontal spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingXProperty(). getSpaceY; public double getSpaceY(); Vertical spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingYProperty(). setSpaceX; public void setSpaceX(double spaceX); Set the horizontal spacing between lines for any counting grid. Parameters:; spaceX - ; See Also:. PathPrefs.gridSpacingXProperty(). setSpaceY; public void setSpaceY(double spaceY); Set the vertical spacing between lines for any counting gri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:584,Usability,simpl,simply,584,". GridLines (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class GridLines. java.lang.Object; qupath.lib.gui.viewer.GridLines. public class GridLines; extends Object; Simple class used for storing information related to GridLines that may be painted over an image.; ; This implementation simply wraps around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:792,Integrability,interface,interfaces,792,". ImageInterpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class ImageInterpolation. java.lang.Object; java.lang.Enum<ImageInterpolation>; qupath.lib.gui.viewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are dec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:641,Modifiability,extend,extends,641,". ImageInterpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class ImageInterpolation. java.lang.Object; java.lang.Enum<ImageInterpolation>; qupath.lib.gui.viewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are dec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:803,Modifiability,inherit,inherited,803,". ImageInterpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class ImageInterpolation. java.lang.Object; java.lang.Enum<ImageInterpolation>; qupath.lib.gui.viewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are dec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:856,Modifiability,extend,extends,856,". ImageInterpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class ImageInterpolation. java.lang.Object; java.lang.Enum<ImageInterpolation>; qupath.lib.gui.viewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are dec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:1410,Modifiability,inherit,inherited,1410,"olation. java.lang.Object; java.lang.Enum<ImageInterpolation>; qupath.lib.gui.viewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ImageInterpolation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:1563,Modifiability,inherit,inherited,1563,"rable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ImageInterpolation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no consta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:1521,Security,hash,hashCode,1521,"iewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ImageInterpolation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1241,Availability,avail,available,1241,"ethod. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final Overlay",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:2322,Availability,avail,available,2322,"nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptions.DetectionDisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the arg",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:918,Integrability,interface,interfaces,918,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:784,Modifiability,extend,extends,784,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:929,Modifiability,inherit,inherited,929,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:982,Modifiability,extend,extends,982,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1677,Modifiability,inherit,inherited,1677,"nstable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1840,Modifiability,inherit,inherited,1840," for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptions.DetectionDisplayMode valueOf(String name); Returns the enum constant of this",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:869,Safety,detect,detections,869,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1132,Safety,detect,detection,1132,"ss; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONL",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:2421,Safety,detect,detection,2421,"ummary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptions.DetectionDisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1788,Security,hash,hashCode,1788,"onDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:3239,Availability,down,downsample,3239,"eanProperty; fillAnnotationsProperty();  ; BooleanProperty; fillDetectionsProperty();  ; FloatProperty; fontSizeProperty();  ; boolean; getAllPathClassesVisible();  ; OverlayOptions.DetectionDisplayMode; getDetectionDisplayMode(). Get the current OverlayOptions.DetectionDisplayMode. boolean; getFillAnnotations();  ; boolean; getFillDetections();  ; float; getFontSize();  ; GridLines; getGridLines();  ; MeasurementMapper; getMeasurementMapper();  ; float; getOpacity(). Get the global opacity for overlay drawing. RegionFilter; getPixelClassificationRegionFilter();  ; boolean; getShowAnnotations();  ; boolean; getShowCellBoundaries(). Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. boolean; getShowCellNuclei(). Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. boolean; getShowConnections();  ; boolean; getShowDetections();  ; boolean; getShowGrid();  ; boolean; getShowNames();  ; boolean; getShowPixelClassification();  ; boolean; getShowTMACoreLabels();  ; boolean; getShowTMAGrid();  ; float; getThickStrokeWidth(double downsample). Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). ObjectProperty<GridLines>; gridLinesProperty();  ; ObservableSet<PathClass>; hiddenClassesProperty();  ; boolean; isPathClassHidden(PathClass pathClass). Query whether objects with a specified classification should be displayed or hidden. ReadOnlyLongProperty; lastChangeTimestamp(). Get a property representing the timestamp of the last recorded change for any property. ObjectProperty<MeasurementMapper>; measurementMapperProperty();  ; FloatProperty; opacityProperty(). Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegionProperty();  ; void; resetMeasurementMapper(). Reset any MeasurementMapper, so that measurements are not used to determine object col",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:5303,Availability,avail,available,5303,"annotation objects 'filled' in viewers. void; setFillDetections(boolean fill). Show detection objects 'filled' in viewers. void; setFontSize(float size). Set the requested font size for the 'Show names' option. void; setGridLines(GridLines gridLines). Set the GridLines object that defines how a counting grid may be show in viewers. void; setMeasurementMapper(MeasurementMapper mapper). Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. void; setOpacity(float opacity). Set global opacity for overlay drawing. void; setPathClassHidden(PathClass pathClass,; boolean hidden). Request that objects with a particular PathClass not be displayed. void; setPixelClassificationRegionFilter(RegionFilter region). Control where pixel classifications should be calculated during live prediction. void; setShowAnnotations(boolean show). Show the annotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, noti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:11375,Availability,down,downsample,11375,"ShowCellNuclei(); Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. getShowCellBoundaries; public boolean getShowCellBoundaries(); Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. setDetectionDisplayMode; public void setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode); Set the current OverlayOptions.DetectionDisplayMode. Parameters:; mode - the requested mode to set. detectionDisplayModeProperty; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty(); Property representing the current OverlayOptions.DetectionDisplayMode. Returns:; See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode). getThickStrokeWidth; public float getThickStrokeWidth(double downsample); Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - . setShowDetections; public void setShowDetections(boolean show); Show the objects as an overlay on the image. Parameters:; show - . setShowPixelClassification; public void setShowPixelClassification(boolean show); Show pixel classification overlays. Parameters:; show - . setFillDetect",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:11533,Availability,down,downsample,11533,"ise. getShowCellBoundaries; public boolean getShowCellBoundaries(); Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. setDetectionDisplayMode; public void setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode); Set the current OverlayOptions.DetectionDisplayMode. Parameters:; mode - the requested mode to set. detectionDisplayModeProperty; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty(); Property representing the current OverlayOptions.DetectionDisplayMode. Returns:; See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode). getThickStrokeWidth; public float getThickStrokeWidth(double downsample); Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - . setShowDetections; public void setShowDetections(boolean show); Show the objects as an overlay on the image. Parameters:; show - . setShowPixelClassification; public void setShowPixelClassification(boolean show); Show pixel classification overlays. Parameters:; show - . setFillDetections; public void setFillDetections(boolean fill); Show detection objects 'filled' in viewers. Parameters:; fill - . setFillAnnotations; public void setFillAnnotatio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:11546,Availability,down,downsample,11546,"ise. getShowCellBoundaries; public boolean getShowCellBoundaries(); Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. setDetectionDisplayMode; public void setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode); Set the current OverlayOptions.DetectionDisplayMode. Parameters:; mode - the requested mode to set. detectionDisplayModeProperty; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty(); Property representing the current OverlayOptions.DetectionDisplayMode. Returns:; See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode). getThickStrokeWidth; public float getThickStrokeWidth(double downsample); Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - . setShowDetections; public void setShowDetections(boolean show); Show the objects as an overlay on the image. Parameters:; show - . setShowPixelClassification; public void setShowPixelClassification(boolean show); Show pixel classification overlays. Parameters:; show - . setFillDetections; public void setFillDetections(boolean fill); Show detection objects 'filled' in viewers. Parameters:; fill - . setFillAnnotations; public void setFillAnnotatio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:12769,Availability,avail,available,12769," the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - . setShowDetections; public void setShowDetections(boolean show); Show the objects as an overlay on the image. Parameters:; show - . setShowPixelClassification; public void setShowPixelClassification(boolean show); Show pixel classification overlays. Parameters:; show - . setFillDetections; public void setFillDetections(boolean fill); Show detection objects 'filled' in viewers. Parameters:; fill - . setFillAnnotations; public void setFillAnnotations(boolean fill); Show annotation objects 'filled' in viewers. Parameters:; fill - . setShowConnections; public void setShowConnections(boolean show); Show connections between objects, if available. Parameters:; show - . setShowTMACoreLabels; public void setShowTMACoreLabels(boolean showTMALabels); Show TMA core names on top of the image. Parameters:; showTMALabels - . getShowTMACoreLabels; public boolean getShowTMACoreLabels(). Returns:; true if TMA core labels should be shown in viewers, false otherwise. showTMACoreLabelsProperty; public BooleanProperty showTMACoreLabelsProperty(). Returns:; boolean property indicating whether TMA core labels should be shown in the viewer; See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean). showConnectionsProperty; public BooleanProperty showConnectionsProperty(). Returns:; boolean property indicating whether collections between objects should be shown (e.g. after Delaunay triangulation); See Also:. getShowConnections(); setShowConnections(boolean). getShowPixelClassification; public boolean getShowPixelClassification(). Returns:; true if the current active pixel classificat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:467,Modifiability,extend,extends,467,". OverlayOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class OverlayOptions. java.lang.Object; qupath.lib.gui.viewer.OverlayOptions. public class OverlayOptions; extends Object; Default class for storing overlay display options. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayMode. Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotations;  ; BooleanProperty; fillDetections;  ; FloatProperty; fontSize;  ; ObjectProperty<GridLines>; gridLines;  ; ObservableSet<PathClass>; hiddenClasses;  ; ObjectProperty<MeasurementMapper>; measurementMapper;  ; FloatProperty; opacity. Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegion;  ; BooleanProperty; showAnnotations;  ; BooleanProperty; showConnections;  ; BooleanProperty; showDetections;  ; BooleanProperty; showGrid;  ; BooleanProperty; showNames;  ; BooleanProperty; showPixelClassification;  ; BooleanProperty; showTMACoreLabels;  ; BooleanProperty; showTMAGrid;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Constructor Summary; Constructors. Constructor; Description; OverlayOptions(). Constructor, using default values. OverlayOptions(OverlayOptions options). Constructor, initializing values based on an existing OverlayOptions object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<OverlayOptions.DetectionDisplayMod",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6193,Modifiability,inherit,inherited,6193,"nnotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesPro",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:670,Safety,detect,detectionDisplayMode,670,". OverlayOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class OverlayOptions. java.lang.Object; qupath.lib.gui.viewer.OverlayOptions. public class OverlayOptions; extends Object; Default class for storing overlay display options. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayMode. Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotations;  ; BooleanProperty; fillDetections;  ; FloatProperty; fontSize;  ; ObjectProperty<GridLines>; gridLines;  ; ObservableSet<PathClass>; hiddenClasses;  ; ObjectProperty<MeasurementMapper>; measurementMapper;  ; FloatProperty; opacity. Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegion;  ; BooleanProperty; showAnnotations;  ; BooleanProperty; showConnections;  ; BooleanProperty; showDetections;  ; BooleanProperty; showGrid;  ; BooleanProperty; showNames;  ; BooleanProperty; showPixelClassification;  ; BooleanProperty; showTMACoreLabels;  ; BooleanProperty; showTMAGrid;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Constructor Summary; Constructors. Constructor; Description; OverlayOptions(). Constructor, using default values. OverlayOptions(OverlayOptions options). Constructor, initializing values based on an existing OverlayOptions object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<OverlayOptions.DetectionDisplayMod",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:1608,Safety,detect,detections,1608,"operty; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayMode. Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotations;  ; BooleanProperty; fillDetections;  ; FloatProperty; fontSize;  ; ObjectProperty<GridLines>; gridLines;  ; ObservableSet<PathClass>; hiddenClasses;  ; ObjectProperty<MeasurementMapper>; measurementMapper;  ; FloatProperty; opacity. Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegion;  ; BooleanProperty; showAnnotations;  ; BooleanProperty; showConnections;  ; BooleanProperty; showDetections;  ; BooleanProperty; showGrid;  ; BooleanProperty; showNames;  ; BooleanProperty; showPixelClassification;  ; BooleanProperty; showTMACoreLabels;  ; BooleanProperty; showTMAGrid;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Constructor Summary; Constructors. Constructor; Description; OverlayOptions(). Constructor, using default values. OverlayOptions(OverlayOptions options). Constructor, initializing values based on an existing OverlayOptions object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayModeProperty(). Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotationsProperty();  ; BooleanProperty; fillDetectionsProperty();  ; FloatProperty; fontSizeProperty();  ; boolean; getAllPathClassesVisible();  ; OverlayOptions.DetectionDisplayMode; getDetectionDisplayMode(). Get the current OverlayOptions.DetectionDisplayMode. boolean; getFillAnnotations();  ; boolean; getFillDetections();  ; float; getFontSize();  ; GridLines; getGridLines();  ; MeasurementMapper; getMeasurementMapper();  ; float; getOpacity(). Get the glo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:2005,Safety,detect,detectionDisplayModeProperty,2005,"atProperty; opacity. Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegion;  ; BooleanProperty; showAnnotations;  ; BooleanProperty; showConnections;  ; BooleanProperty; showDetections;  ; BooleanProperty; showGrid;  ; BooleanProperty; showNames;  ; BooleanProperty; showPixelClassification;  ; BooleanProperty; showTMACoreLabels;  ; BooleanProperty; showTMAGrid;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Constructor Summary; Constructors. Constructor; Description; OverlayOptions(). Constructor, using default values. OverlayOptions(OverlayOptions options). Constructor, initializing values based on an existing OverlayOptions object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayModeProperty(). Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotationsProperty();  ; BooleanProperty; fillDetectionsProperty();  ; FloatProperty; fontSizeProperty();  ; boolean; getAllPathClassesVisible();  ; OverlayOptions.DetectionDisplayMode; getDetectionDisplayMode(). Get the current OverlayOptions.DetectionDisplayMode. boolean; getFillAnnotations();  ; boolean; getFillDetections();  ; float; getFontSize();  ; GridLines; getGridLines();  ; MeasurementMapper; getMeasurementMapper();  ; float; getOpacity(). Get the global opacity for overlay drawing. RegionFilter; getPixelClassificationRegionFilter();  ; boolean; getShowAnnotations();  ; boolean; getShowCellBoundaries(). Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. boolean; getShowCellNuclei(). Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. boolean; getShowConnections();  ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:4373,Safety,detect,detection,4373,"tProperty<GridLines>; gridLinesProperty();  ; ObservableSet<PathClass>; hiddenClassesProperty();  ; boolean; isPathClassHidden(PathClass pathClass). Query whether objects with a specified classification should be displayed or hidden. ReadOnlyLongProperty; lastChangeTimestamp(). Get a property representing the timestamp of the last recorded change for any property. ObjectProperty<MeasurementMapper>; measurementMapperProperty();  ; FloatProperty; opacityProperty(). Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegionProperty();  ; void; resetMeasurementMapper(). Reset any MeasurementMapper, so that measurements are not used to determine object colors. void; setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode). Set the current OverlayOptions.DetectionDisplayMode. void; setFillAnnotations(boolean fill). Show annotation objects 'filled' in viewers. void; setFillDetections(boolean fill). Show detection objects 'filled' in viewers. void; setFontSize(float size). Set the requested font size for the 'Show names' option. void; setGridLines(GridLines gridLines). Set the GridLines object that defines how a counting grid may be show in viewers. void; setMeasurementMapper(MeasurementMapper mapper). Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. void; setOpacity(float opacity). Set global opacity for overlay drawing. void; setPathClassHidden(PathClass pathClass,; boolean hidden). Request that objects with a particular PathClass not be displayed. void; setPixelClassificationRegionFilter(RegionFilter region). Control where pixel classifications should be calculated during live prediction. void; setShowAnnotations(boolean show). Show the annotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:4720,Safety,detect,detections,4720,"or any property. ObjectProperty<MeasurementMapper>; measurementMapperProperty();  ; FloatProperty; opacityProperty(). Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegionProperty();  ; void; resetMeasurementMapper(). Reset any MeasurementMapper, so that measurements are not used to determine object colors. void; setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode). Set the current OverlayOptions.DetectionDisplayMode. void; setFillAnnotations(boolean fill). Show annotation objects 'filled' in viewers. void; setFillDetections(boolean fill). Show detection objects 'filled' in viewers. void; setFontSize(float size). Set the requested font size for the 'Show names' option. void; setGridLines(GridLines gridLines). Set the GridLines object that defines how a counting grid may be show in viewers. void; setMeasurementMapper(MeasurementMapper mapper). Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. void; setOpacity(float opacity). Set global opacity for overlay drawing. void; setPathClassHidden(PathClass pathClass,; boolean hidden). Request that objects with a particular PathClass not be displayed. void; setPixelClassificationRegionFilter(RegionFilter region). Control where pixel classifications should be calculated during live prediction. void; setShowAnnotations(boolean show). Show the annotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. vo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:5139,Safety,predict,prediction,5139," colors. void; setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode). Set the current OverlayOptions.DetectionDisplayMode. void; setFillAnnotations(boolean fill). Show annotation objects 'filled' in viewers. void; setFillDetections(boolean fill). Show detection objects 'filled' in viewers. void; setFontSize(float size). Set the requested font size for the 'Show names' option. void; setGridLines(GridLines gridLines). Set the GridLines object that defines how a counting grid may be show in viewers. void; setMeasurementMapper(MeasurementMapper mapper). Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. void; setOpacity(float opacity). Set global opacity for overlay drawing. void; setPathClassHidden(PathClass pathClass,; boolean hidden). Request that objects with a particular PathClass not be displayed. void; setPixelClassificationRegionFilter(RegionFilter region). Control where pixel classifications should be calculated during live prediction. void; setShowAnnotations(boolean show). Show the annotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6514,Safety,detect,detectionDisplayMode,6514,"mes on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProperty(). measurementMapper; public ObjectProperty<MeasurementMapper> measurementMapperProperty. See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper); measurementMapperProperty(). hiddenClasses; public ObservableSet<PathClass> hiddenClassesProperty.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6595,Safety,detect,detectionDisplayModeProperty,6595,"ssification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProperty(). measurementMapper; public ObjectProperty<MeasurementMapper> measurementMapperProperty. See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper); measurementMapperProperty(). hiddenClasses; public ObservableSet<PathClass> hiddenClassesProperty. See Also:. hiddenClassesProperty(). showAnnotations; public BooleanProperty show",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6796,Safety,detect,detectionDisplayModeProperty,6796,"age, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProperty(). measurementMapper; public ObjectProperty<MeasurementMapper> measurementMapperProperty. See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper); measurementMapperProperty(). hiddenClasses; public ObservableSet<PathClass> hiddenClassesProperty. See Also:. hiddenClassesProperty(). showAnnotations; public BooleanProperty showAnnotationsProperty. See Also:. getShowAnnotations(); setShowAnnotations(boolean); showAnnotationsProperty(). showNames; public BooleanProperty showNamesProperty. See Also:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:11012,Safety,detect,detectionDisplayModeProperty,11012,"bal opacity for overlay drawing. Returns:; opacity property, which should accept values between 0 and 1.; See Also:. getOpacity(); setOpacity(float). getDetectionDisplayMode; public OverlayOptions.DetectionDisplayMode getDetectionDisplayMode(); Get the current OverlayOptions.DetectionDisplayMode. Returns:; the current display mode. getShowCellNuclei; public boolean getShowCellNuclei(); Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. getShowCellBoundaries; public boolean getShowCellBoundaries(); Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. setDetectionDisplayMode; public void setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode); Set the current OverlayOptions.DetectionDisplayMode. Parameters:; mode - the requested mode to set. detectionDisplayModeProperty; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty(); Property representing the current OverlayOptions.DetectionDisplayMode. Returns:; See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode). getThickStrokeWidth; public float getThickStrokeWidth(double downsample); Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:11101,Safety,detect,detectionDisplayModeProperty,11101,"es between 0 and 1.; See Also:. getOpacity(); setOpacity(float). getDetectionDisplayMode; public OverlayOptions.DetectionDisplayMode getDetectionDisplayMode(); Get the current OverlayOptions.DetectionDisplayMode. Returns:; the current display mode. getShowCellNuclei; public boolean getShowCellNuclei(); Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. getShowCellBoundaries; public boolean getShowCellBoundaries(); Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. setDetectionDisplayMode; public void setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode); Set the current OverlayOptions.DetectionDisplayMode. Parameters:; mode - the requested mode to set. detectionDisplayModeProperty; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty(); Property representing the current OverlayOptions.DetectionDisplayMode. Returns:; See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode). getThickStrokeWidth; public float getThickStrokeWidth(double downsample); Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - .",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:12472,Safety,detect,detection,12472,"uld be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - . setShowDetections; public void setShowDetections(boolean show); Show the objects as an overlay on the image. Parameters:; show - . setShowPixelClassification; public void setShowPixelClassification(boolean show); Show pixel classification overlays. Parameters:; show - . setFillDetections; public void setFillDetections(boolean fill); Show detection objects 'filled' in viewers. Parameters:; fill - . setFillAnnotations; public void setFillAnnotations(boolean fill); Show annotation objects 'filled' in viewers. Parameters:; fill - . setShowConnections; public void setShowConnections(boolean show); Show connections between objects, if available. Parameters:; show - . setShowTMACoreLabels; public void setShowTMACoreLabels(boolean showTMALabels); Show TMA core names on top of the image. Parameters:; showTMALabels - . getShowTMACoreLabels; public boolean getShowTMACoreLabels(). Returns:; true if TMA core labels should be shown in viewers, false otherwise. showTMACoreLabelsProperty; public BooleanProperty showTMACoreLabelsProperty(). Returns:; boolean property indicating whether TMA core labels should be shown in the viewer; See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean). showConnectionsProperty; public BooleanProperty showConnectionsProperty(). Returns:; boolean property indicating whether coll",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:14347,Safety,detect,detections,14347,"eanProperty showConnectionsProperty(). Returns:; boolean property indicating whether collections between objects should be shown (e.g. after Delaunay triangulation); See Also:. getShowConnections(); setShowConnections(boolean). getShowPixelClassification; public boolean getShowPixelClassification(). Returns:; true if the current active pixel classification should be shown, false otherwise. getShowAnnotations; public boolean getShowAnnotations(). Returns:; true if annotations should be displayed in viewers, false otherwise. getShowNames; public boolean getShowNames(). Returns:; true if annotation names should be displayed in viewers, false otherwise. getFontSize; public float getFontSize(). Returns:; the requested font size for showing annotation names on the viewer. getShowTMAGrid; public boolean getShowTMAGrid(). Returns:; true if any TMA grids should be displayed in viewers, false otherwise. getShowDetections; public boolean getShowDetections(). Returns:; true if detections should be displayed in viewers, false otherwise. getShowConnections; public boolean getShowConnections(). Returns:; true if any calculated connections between objects should be displayed in viewers, false otherwise. getFillDetections; public boolean getFillDetections(). Returns:; true if detections should be displayed 'filled' in viewers, false otherwise. getFillAnnotations; public boolean getFillAnnotations(). Returns:; true if annotations should be displayed 'filled' in viewers, false otherwise. setShowGrid; public void setShowGrid(boolean showGrid); Set whether a counting grid should be shown in viewers. Parameters:; showGrid - ; See Also:. setGridLines(GridLines). getShowGrid; public boolean getShowGrid(). Returns:; true if a counting grid should be displayed in viewers, false otherwise; See Also:. getGridLines(). getGridLines; public GridLines getGridLines(). Returns:; the GridLines object that defines how a counting grid may be show in viewers; See Also:. getShowGrid(). setGridLines; publ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:14647,Safety,detect,detections,14647,"urns:; true if the current active pixel classification should be shown, false otherwise. getShowAnnotations; public boolean getShowAnnotations(). Returns:; true if annotations should be displayed in viewers, false otherwise. getShowNames; public boolean getShowNames(). Returns:; true if annotation names should be displayed in viewers, false otherwise. getFontSize; public float getFontSize(). Returns:; the requested font size for showing annotation names on the viewer. getShowTMAGrid; public boolean getShowTMAGrid(). Returns:; true if any TMA grids should be displayed in viewers, false otherwise. getShowDetections; public boolean getShowDetections(). Returns:; true if detections should be displayed in viewers, false otherwise. getShowConnections; public boolean getShowConnections(). Returns:; true if any calculated connections between objects should be displayed in viewers, false otherwise. getFillDetections; public boolean getFillDetections(). Returns:; true if detections should be displayed 'filled' in viewers, false otherwise. getFillAnnotations; public boolean getFillAnnotations(). Returns:; true if annotations should be displayed 'filled' in viewers, false otherwise. setShowGrid; public void setShowGrid(boolean showGrid); Set whether a counting grid should be shown in viewers. Parameters:; showGrid - ; See Also:. setGridLines(GridLines). getShowGrid; public boolean getShowGrid(). Returns:; true if a counting grid should be displayed in viewers, false otherwise; See Also:. getGridLines(). getGridLines; public GridLines getGridLines(). Returns:; the GridLines object that defines how a counting grid may be show in viewers; See Also:. getShowGrid(). setGridLines; public void setGridLines(GridLines gridLines); Set the GridLines object that defines how a counting grid may be show in viewers. Parameters:; gridLines - . gridLinesProperty; public ObjectProperty<GridLines> gridLinesProperty(). Returns:; an object property containing a GridLines object that defines how a co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:15885,Safety,detect,detections,15885,"tShowGrid; public void setShowGrid(boolean showGrid); Set whether a counting grid should be shown in viewers. Parameters:; showGrid - ; See Also:. setGridLines(GridLines). getShowGrid; public boolean getShowGrid(). Returns:; true if a counting grid should be displayed in viewers, false otherwise; See Also:. getGridLines(). getGridLines; public GridLines getGridLines(). Returns:; the GridLines object that defines how a counting grid may be show in viewers; See Also:. getShowGrid(). setGridLines; public void setGridLines(GridLines gridLines); Set the GridLines object that defines how a counting grid may be show in viewers. Parameters:; gridLines - . gridLinesProperty; public ObjectProperty<GridLines> gridLinesProperty(). Returns:; an object property containing a GridLines object that defines how a counting grid may be show in viewers; See Also:. getGridLines(); setGridLines(GridLines). setMeasurementMapper; public void setMeasurementMapper(MeasurementMapper mapper); Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. Parameters:; mapper - . getMeasurementMapper; public MeasurementMapper getMeasurementMapper(). Returns:; the MeasurementMapper object that defines how detections should be color coded according to their measurement values in viewers. measurementMapperProperty; public ObjectProperty<MeasurementMapper> measurementMapperProperty(). Returns:; object property containing the current MeasurementMapper, if one has been set, or null otherwise; See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper). resetMeasurementMapper; public void resetMeasurementMapper(); Reset any MeasurementMapper, so that measurements are not used to determine object colors. getAllPathClassesVisible; public boolean getAllPathClassesVisible(). Returns:; true if objects should be displayed regardless of classification (i.e. no classifications are 'hidden'); See Also:. hiddenClassesProperty(). isPathC",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:16119,Safety,detect,detections,16119," in viewers, false otherwise; See Also:. getGridLines(). getGridLines; public GridLines getGridLines(). Returns:; the GridLines object that defines how a counting grid may be show in viewers; See Also:. getShowGrid(). setGridLines; public void setGridLines(GridLines gridLines); Set the GridLines object that defines how a counting grid may be show in viewers. Parameters:; gridLines - . gridLinesProperty; public ObjectProperty<GridLines> gridLinesProperty(). Returns:; an object property containing a GridLines object that defines how a counting grid may be show in viewers; See Also:. getGridLines(); setGridLines(GridLines). setMeasurementMapper; public void setMeasurementMapper(MeasurementMapper mapper); Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. Parameters:; mapper - . getMeasurementMapper; public MeasurementMapper getMeasurementMapper(). Returns:; the MeasurementMapper object that defines how detections should be color coded according to their measurement values in viewers. measurementMapperProperty; public ObjectProperty<MeasurementMapper> measurementMapperProperty(). Returns:; object property containing the current MeasurementMapper, if one has been set, or null otherwise; See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper). resetMeasurementMapper; public void resetMeasurementMapper(); Reset any MeasurementMapper, so that measurements are not used to determine object colors. getAllPathClassesVisible; public boolean getAllPathClassesVisible(). Returns:; true if objects should be displayed regardless of classification (i.e. no classifications are 'hidden'); See Also:. hiddenClassesProperty(). isPathClassHidden; public boolean isPathClassHidden(PathClass pathClass); Query whether objects with a specified classification should be displayed or hidden. Parameters:; pathClass - the classification to query; Returns:; true if objects with the classification should be dis",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:19152,Safety,predict,prediction,19152,perty; public FloatProperty fontSizeProperty(). Returns:; the float property indicating the font size that should be used for displaying names; See Also:. getFontSize(); setFontSize(float). showTMAGridProperty; public BooleanProperty showTMAGridProperty(). Returns:; the boolean property indicating whether any current TMA grid should be displayed; See Also:. getShowTMAGrid(); setShowTMAGrid(boolean). showPixelClassificationProperty; public BooleanProperty showPixelClassificationProperty(). Returns:; the boolean property indicating whether any active pixel classification should be displayed; See Also:. getShowPixelClassification(); setShowPixelClassification(boolean). pixelClassificationFilterRegionProperty; public ObjectProperty<RegionFilter> pixelClassificationFilterRegionProperty(). Returns:; the filter used to determine whether a pixel classification should be computed for a specified region. setPixelClassificationRegionFilter; public void setPixelClassificationRegionFilter(RegionFilter region); Control where pixel classifications should be calculated during live prediction. Parameters:; region - . getPixelClassificationRegionFilter; public RegionFilter getPixelClassificationRegionFilter(). Returns:; a filter used to determine whether a pixel classification should be computed for a specified region. showDetectionsProperty; public BooleanProperty showDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed; See Also:. getShowDetections(); setShowDetections(boolean). fillDetectionsProperty; public BooleanProperty fillDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed 'filled'; See Also:. getFillDetections(); setFillDetections(boolean). fillAnnotationsProperty; public BooleanProperty fillAnnotationsProperty(). Returns:; the boolean property indicating whether annotations should be displayed 'filled'; See Also:. getFillAnnotations(); setFillAnnotations(boolean). showGridP,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:19516,Safety,detect,detections,19516,idProperty; public BooleanProperty showTMAGridProperty(). Returns:; the boolean property indicating whether any current TMA grid should be displayed; See Also:. getShowTMAGrid(); setShowTMAGrid(boolean). showPixelClassificationProperty; public BooleanProperty showPixelClassificationProperty(). Returns:; the boolean property indicating whether any active pixel classification should be displayed; See Also:. getShowPixelClassification(); setShowPixelClassification(boolean). pixelClassificationFilterRegionProperty; public ObjectProperty<RegionFilter> pixelClassificationFilterRegionProperty(). Returns:; the filter used to determine whether a pixel classification should be computed for a specified region. setPixelClassificationRegionFilter; public void setPixelClassificationRegionFilter(RegionFilter region); Control where pixel classifications should be calculated during live prediction. Parameters:; region - . getPixelClassificationRegionFilter; public RegionFilter getPixelClassificationRegionFilter(). Returns:; a filter used to determine whether a pixel classification should be computed for a specified region. showDetectionsProperty; public BooleanProperty showDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed; See Also:. getShowDetections(); setShowDetections(boolean). fillDetectionsProperty; public BooleanProperty fillDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed 'filled'; See Also:. getFillDetections(); setFillDetections(boolean). fillAnnotationsProperty; public BooleanProperty fillAnnotationsProperty(). Returns:; the boolean property indicating whether annotations should be displayed 'filled'; See Also:. getFillAnnotations(); setFillAnnotations(boolean). showGridProperty; public BooleanProperty showGridProperty(). Returns:; the boolean property indicating whether a counting grid should be shown over the viewer; See Also:. getShowGrid(); setShowGrid(boolean). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:19731,Safety,detect,detections,19731,idProperty; public BooleanProperty showTMAGridProperty(). Returns:; the boolean property indicating whether any current TMA grid should be displayed; See Also:. getShowTMAGrid(); setShowTMAGrid(boolean). showPixelClassificationProperty; public BooleanProperty showPixelClassificationProperty(). Returns:; the boolean property indicating whether any active pixel classification should be displayed; See Also:. getShowPixelClassification(); setShowPixelClassification(boolean). pixelClassificationFilterRegionProperty; public ObjectProperty<RegionFilter> pixelClassificationFilterRegionProperty(). Returns:; the filter used to determine whether a pixel classification should be computed for a specified region. setPixelClassificationRegionFilter; public void setPixelClassificationRegionFilter(RegionFilter region); Control where pixel classifications should be calculated during live prediction. Parameters:; region - . getPixelClassificationRegionFilter; public RegionFilter getPixelClassificationRegionFilter(). Returns:; a filter used to determine whether a pixel classification should be computed for a specified region. showDetectionsProperty; public BooleanProperty showDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed; See Also:. getShowDetections(); setShowDetections(boolean). fillDetectionsProperty; public BooleanProperty fillDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed 'filled'; See Also:. getFillDetections(); setFillDetections(boolean). fillAnnotationsProperty; public BooleanProperty fillAnnotationsProperty(). Returns:; the boolean property indicating whether annotations should be displayed 'filled'; See Also:. getFillAnnotations(); setFillAnnotations(boolean). showGridProperty; public BooleanProperty showGridProperty(). Returns:; the boolean property indicating whether a counting grid should be shown over the viewer; See Also:. getShowGrid(); setShowGrid(boolean). ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6267,Security,hash,hashCode,6267,"nnections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html:483,Integrability,interface,interface,483,". qupath.lib.gui.viewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer. package qupath.lib.gui.viewer. QuPath image viewing and display. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. ImageInterpolation. Supported interpolation methods when displaying images. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. PathObjectPainter. Static methods to assist with painting PathObjects. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RegionFilter. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html:1411,Safety,detect,detections,1411,"on | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer. package qupath.lib.gui.viewer. QuPath image viewing and display. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. ImageInterpolation. Supported interpolation methods when displaying images. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. PathObjectPainter. Static methods to assist with painting PathObjects. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RegionFilter. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:904,Availability,down,downsampleFactor,904,". PathObjectPainter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class PathObjectPainter. java.lang.Object; qupath.lib.gui.viewer.PathObjectPainter. public class PathObjectPainter; extends Object; Static methods to assist with painting PathObjects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stroke; getCachedStroke(double thickness). Get a BasicStroke with the specified thickness. static void; paintConnections(PathObjectConnections connections,; PathObjectHierarchy hierarchy,; Graphics2D g2d,; Color color,; double downsampleFactor,; ImagePlane plane). Paint connections between objects (e.g. static void; paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; dou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:1591,Availability,down,downsample,1591,"th painting PathObjects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stroke; getCachedStroke(double thickness). Get a BasicStroke with the specified thickness. static void; paintConnections(PathObjectConnections connections,; PathObjectHierarchy hierarchy,; Graphics2D g2d,; Color color,; double downsampleFactor,; ImagePlane plane). Paint connections between objects (e.g. static void; paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2005,Availability,down,downsample,2005,",; ImagePlane plane). Paint connections between objects (e.g. static void; paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2189,Availability,down,downsample,2189,"orFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(G",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2610,Availability,down,downsample,2610,"overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to deter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2936,Availability,down,downsample,2936,"phics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionMod",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2953,Availability,down,downsample,2953,"phics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionMod",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:3239,Availability,down,downsample,3239,"ble downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint an object (or, more precisely, its ROI).; ; This is subject to the OverlayOptions, and therefore may not actually end up painting anything; (if the settings are such that objects of the class provided are not to be displayed). Parameters:; pathObject - ; g - ; overlayOptions - ; selectionMo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:3568,Availability,down,downsample,3568,"s PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint an object (or, more precisely, its ROI).; ; This is subject to the OverlayOptions, and therefore may not actually end up painting anything; (if the settings are such that objects of the class provided are not to be displayed). Parameters:; pathObject - ; g - ; overlayOptions - ; selectionModel - ; downsample - ; Returns:; true if anything was painted, false otherwise. paintShape; public static void paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill); Paint the specified shape with specified stroke and fill colors. Parameters:; shape - shape to paint; g2d - g",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:3585,Availability,down,downsample,3585,"s PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint an object (or, more precisely, its ROI).; ; This is subject to the OverlayOptions, and therefore may not actually end up painting anything; (if the settings are such that objects of the class provided are not to be displayed). Parameters:; pathObject - ; g - ; overlayOptions - ; selectionModel - ; downsample - ; Returns:; true if anything was painted, false otherwise. paintShape; public static void paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill); Paint the specified shape with specified stroke and fill colors. Parameters:; shape - shape to paint; g2d - g",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:3876,Availability,down,downsample,3876,"cts should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint an object (or, more precisely, its ROI).; ; This is subject to the OverlayOptions, and therefore may not actually end up painting anything; (if the settings are such that objects of the class provided are not to be displayed). Parameters:; pathObject - ; g - ; overlayOptions - ; selectionModel - ; downsample - ; Returns:; true if anything was painted, false otherwise. paintShape; public static void paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill); Paint the specified shape with specified stroke and fill colors. Parameters:; shape - shape to paint; g2d - graphics object; colorStroke - stroke color (may be null); stroke - stroke (may be null); colorFill - fill color (may be null). getCachedStroke; public static Stroke getCachedStroke(double thickness); Get a BasicStroke with the specified thickness. Parameters:; thickness - ; Returns:. paintHandles; public static void pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:4194,Availability,down,downsample,4194,"hObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint an object (or, more precisely, its ROI).; ; This is subject to the OverlayOptions, and therefore may not actually end up painting anything; (if the settings are such that objects of the class provided are not to be displayed). Parameters:; pathObject - ; g - ; overlayOptions - ; selectionModel - ; downsample - ; Returns:; true if anything was painted, false otherwise. paintShape; public static void paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill); Paint the specified shape with specified stroke and fill colors. Parameters:; shape - shape to paint; g2d - graphics object; colorStroke - stroke color (may be null); stroke - stroke (may be null); colorFill - fill color (may be null). getCachedStroke; public static Stroke getCachedStroke(double thickness); Get a BasicStroke with the specified thickness. Parameters:; thickness - ; Returns:. paintHandles; public static void paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill); Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI.; ; The minimum and maximum handle size can be specified; if the same, all handles will have the same size. If different, ; then the distance between consecu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:6188,Availability,down,downsampleFactor,6188,"ll); Paint the specified shape with specified stroke and fill colors. Parameters:; shape - shape to paint; g2d - graphics object; colorStroke - stroke color (may be null); stroke - stroke (may be null); colorFill - fill color (may be null). getCachedStroke; public static Stroke getCachedStroke(double thickness); Get a BasicStroke with the specified thickness. Parameters:; thickness - ; Returns:. paintHandles; public static void paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill); Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI.; ; The minimum and maximum handle size can be specified; if the same, all handles will have the same size. If different, ; then the distance between consecutive handles will be used to influence the actual handle size. This is helpful ; when handles are densely packed. Parameters:; roiEditor - ; g2d - ; minHandleSize - ; maxHandleSize - ; colorStroke - ; colorFill - . paintHandles; public static void paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill); Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI.; ; The minimum and maximum handle size can be specified; if the same, all handles will have the same size. If different, ; then the distance between consecutive handles will be used to influence the actual handle size. This is helpful ; when handles are densely packed. Parameters:; handles - ; g2d - ; minHandleSize - ; maxHandleSize - ; colorStroke - ; colorFill - . paintConnections; public static void paintConnections(PathObjectConnections connections,; PathObjectHierarchy hierarchy,; Graphics2D g2d,; Color color,; double downsampleFactor,; ImagePlane plane); Paint connections between objects (e.g. from Delaunay triangulation). Parameters:; connections - ; hierarchy - ; g2d - ; color - ; downsampleFactor - ; plane - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:6357,Availability,down,downsampleFactor,6357,"ll); Paint the specified shape with specified stroke and fill colors. Parameters:; shape - shape to paint; g2d - graphics object; colorStroke - stroke color (may be null); stroke - stroke (may be null); colorFill - fill color (may be null). getCachedStroke; public static Stroke getCachedStroke(double thickness); Get a BasicStroke with the specified thickness. Parameters:; thickness - ; Returns:. paintHandles; public static void paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill); Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI.; ; The minimum and maximum handle size can be specified; if the same, all handles will have the same size. If different, ; then the distance between consecutive handles will be used to influence the actual handle size. This is helpful ; when handles are densely packed. Parameters:; roiEditor - ; g2d - ; minHandleSize - ; maxHandleSize - ; colorStroke - ; colorFill - . paintHandles; public static void paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill); Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI.; ; The minimum and maximum handle size can be specified; if the same, all handles will have the same size. If different, ; then the distance between consecutive handles will be used to influence the actual handle size. This is helpful ; when handles are densely packed. Parameters:; handles - ; g2d - ; minHandleSize - ; maxHandleSize - ; colorStroke - ; colorFill - . paintConnections; public static void paintConnections(PathObjectConnections connections,; PathObjectHierarchy hierarchy,; Graphics2D g2d,; Color color,; double downsampleFactor,; ImagePlane plane); Paint connections between objects (e.g. from Delaunay triangulation). Parameters:; connections - ; hierarchy - ; g2d - ; color - ; downsampleFactor - ; plane - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:479,Modifiability,extend,extends,479,". PathObjectPainter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class PathObjectPainter. java.lang.Object; qupath.lib.gui.viewer.PathObjectPainter. public class PathObjectPainter; extends Object; Static methods to assist with painting PathObjects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stroke; getCachedStroke(double thickness). Get a BasicStroke with the specified thickness. static void; paintConnections(PathObjectConnections connections,; PathObjectHierarchy hierarchy,; Graphics2D g2d,; Color color,; double downsampleFactor,; ImagePlane plane). Paint connections between objects (e.g. static void; paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; dou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:1890,Modifiability,extend,extends,1890,",; ImagePlane plane). Paint connections between objects (e.g. static void; paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2254,Modifiability,inherit,inherited,2254,"raphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2495,Modifiability,extend,extends,2495,"overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to deter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2328,Security,hash,hashCode,2328,"rStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:2126,Availability,down,downsample,2126,". DoubleProperty; rotation. Return the rotation property of this viewer. IntegerProperty; tPosition. Current t-position for the timepoint currently visible in the viewer. IntegerProperty; zPosition. Current z-position for the z-slice currently visible in the viewer. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; imageUpdated. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). protected boolean; locationUpdated. Flag used to indicate that the visible region in the viewer has changed. Constructor Summary; Constructors. Constructor; Description; QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addViewerListener(QuPathViewerListener listener). Add a viewer listener. void; centerImage(). Center the current image in the viewer, while keeping the same downsample factor. void; centerROI(ROI roi). Center the specified ROI in the viewer. void; closeViewer(). Request that this viewer is closed. protected boolean; componentContains(double x,; double y);  ; Point2D; componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds). Convert x and y coordinates from the component space to the image space. Point2D; componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds). Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. protected void; fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew);  ; protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma p",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:4080,Availability,down,downsample,4080,"operty for this viewer. PathTool; getActiveTool(). Get the active PathTool for this viewer. Collection<PathObject>; getAllSelectedObjects(). Get all currently-selected objects from the hierarchy. List<BufferedImage>; getAllThumbnails(). Get thumbnails for all z-slices & time points. Color; getBorderColor(). Get the border color set for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being dis",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:4437,Availability,down,downsample,4437," for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if n",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:5013,Availability,avail,available,5013,"l layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsample value supported by this viewer. double; getMaxROIHandleSize(). Get the maximum size for which ROI handles may be drawn.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:5847,Availability,down,downsample,5847,"ed gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsample value supported by this viewer. double; getMaxROIHandleSize(). Get the maximum size for which ROI handles may be drawn. double; getMinDownsample(). Get the minimum downsample value supported by this viewer. Point2D; getMousePosition(). Get the current cursor position within this viewer, or null if the cursor is outside the viewer. String; getObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. List<PathOverlay>; getOverlayLayers(). Get an unmodifiable list containing the overlay layers, in order. OverlayOptions; getOverlayOptions(). Get the overlay options that control the viewer display. protected ImageRenderer; getRenderer(). Request a renderer that converts image tiles into RGB images. BufferedImage; getRGBThumbnail(). Get a thumbnail representing the image as displayed by this viewer. RoiEditor; getROIEditor(). Get the RoiEditor used by this viewer. doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:6022,Availability,down,downsample,6022,"BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsample value supported by this viewer. double; getMaxROIHandleSize(). Get the maximum size for which ROI handles may be drawn. double; getMinDownsample(). Get the minimum downsample value supported by this viewer. Point2D; getMousePosition(). Get the current cursor position within this viewer, or null if the cursor is outside the viewer. String; getObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. List<PathOverlay>; getOverlayLayers(). Get an unmodifiable list containing the overlay layers, in order. OverlayOptions; getOverlayOptions(). Get the overlay options that control the viewer display. protected ImageRenderer; getRenderer(). Request a renderer that converts image tiles into RGB images. BufferedImage; getRGBThumbnail(). Get a thumbnail representing the image as displayed by this viewer. RoiEditor; getROIEditor(). Get the RoiEditor used by this viewer. double; getRotation(). Get the current rotation; angle in radians. PathObject; getSelectedObject(). Get the currently-selected object from the hierarchy. ImageServer<BufferedImage>",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:8995,Availability,down,down,8995,"splayed in this viewer. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Property for the image data currently being displayed within this viewer. Point2D; imagePointToComponentPoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds). Convert a coordinate from the the full-resolution image into the corresponding pixel coordinate in the viewer - optionally constraining it to any viewer component bounds. protected void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isImageDataChanging(). Returns true between the time setImageData has been called, and before the first repaint has been completed. boolean; isRotated(). Returns true if viewer.getRotation() != 0. boolean; isShowing(). Returns true if the viewer is visible, and attached to a scene. boolean; isSpaceDown(). Returns true if the spacebar was pressed when this component was focussed, and is still being held down. protected void; paintComponent(Graphics g);  ; protected void; paintViewer(Graphics g,; int w,; int h);  ; void; removeViewerListener(QuPathViewerListener listener). Remove a viewer listener. void; repaint(). Request that the viewer is repainted. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. ReadOnlyLongProperty; repaintTimestamp(). Get the timestamp referring to the last time this viewer was repainted. void; requestCancelDirection(boolean xAxis). Requests that the viewer cancels either the x- or y-axis direction. void; requestDecelerate(). Request that a viewer decelerate any existing panning smoothly. void; requestStartMoving(double dx,; double dy). Request that the viewer start panning with a velocity determined by dx and dy. void; requestStopMoving(). Request that the viewer stop any panning immediately. boolean; requiresTileRegion(String serverPath,; ImageRegion region). Check i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11153,Availability,down,downsampleFactor,11153,"umRepaintSpacingMillis(). Return to processing all repainting requests. DoubleProperty; rotationProperty(). Return the rotation property of this viewer. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. void; setActiveTool(PathTool tool). Set the active PathTool for input to this viewer. void; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11180,Availability,down,downsample,11180,"all repainting requests. DoubleProperty; rotationProperty(). Return the rotation property of this viewer. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. void; setActiveTool(PathTool tool). Set the active PathTool for input to this viewer. void; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedOb",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11248,Availability,down,downsampleFactor,11248," Return the rotation property of this viewer. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. void; setActiveTool(PathTool tool). Set the active PathTool for input to this viewer. void; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the cur",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11295,Availability,down,downsample,11295,"ectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. void; setActiveTool(PathTool tool). Set the active PathTool for input to this viewer. void; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; bo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11440,Availability,down,downsampleFactor,11440,"cts have changed. void; setActiveTool(PathTool tool). Set the active PathTool for input to this viewer. void; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setS",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11510,Availability,down,downsample,11510,"; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setSpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11841,Availability,down,downsample,11841,"play in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setSpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPosition(int tPosition). Set the requested time point to be visible. void; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. Str",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:12848,Availability,avail,available,12848,"nification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setSpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPosition(int tPosition). Set the requested time point to be visible. void; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<Buffere",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:13421,Availability,down,downsample,13421,"SpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPosition(int tPosition). Set the requested time point to be visible. void; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty; Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). See Also:. getGamma(); setGamma(double); gammaProperty(). rotation; public DoubleProperty rotationProperty; Return the rotation property of this viewer. See Also:. getRotation(); setRotation(double); rotationProperty(). zPosition; public IntegerProperty zPositionProperty; Current z-position for the z-slice curren",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:17012,Availability,down,downsample,17012,"ngMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table). In such cases repaintEntireImage() is required. See Also:. repaintEntireImage(). getMinDownsample; public double getMinDownsample(); Get the minimum downsample value supported by this viewer.; This prevents zooming in by an unreasonably large amount. Returns:. getMaxDownsample; public double getMaxDownsample(); Get the maximum downsample value supported by this viewer.; This prevents zooming out by an unreasonably large amount. Returns:. zoomOut; public void zoomOut(int nSteps); Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . zoomIn; public void zoomIn(int nSteps); Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . getDefaultZoomFactor; public double getDefaultZoomFactor(); The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). Controls zoom speed. Returns:. zoomOut; public void zoomOut(); Zoom out by one step. See Also:. zoomOut(int); getDefaultZoomFactor(). zoomIn; public void zoomIn(); Zoom in by one step. See Also:. zoomIn(int); getDefault",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:17192,Availability,down,downsample,17192," repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table). In such cases repaintEntireImage() is required. See Also:. repaintEntireImage(). getMinDownsample; public double getMinDownsample(); Get the minimum downsample value supported by this viewer.; This prevents zooming in by an unreasonably large amount. Returns:. getMaxDownsample; public double getMaxDownsample(); Get the maximum downsample value supported by this viewer.; This prevents zooming out by an unreasonably large amount. Returns:. zoomOut; public void zoomOut(int nSteps); Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . zoomIn; public void zoomIn(int nSteps); Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . getDefaultZoomFactor; public double getDefaultZoomFactor(); The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). Controls zoom speed. Returns:. zoomOut; public void zoomOut(); Zoom out by one step. See Also:. zoomOut(int); getDefaultZoomFactor(). zoomIn; public void zoomIn(); Zoom in by one step. See Also:. zoomIn(int); getDefaultZoomFactor(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Property for the image data currently being displayed within this view",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:17706,Availability,down,downsample,17706,"ld of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table). In such cases repaintEntireImage() is required. See Also:. repaintEntireImage(). getMinDownsample; public double getMinDownsample(); Get the minimum downsample value supported by this viewer.; This prevents zooming in by an unreasonably large amount. Returns:. getMaxDownsample; public double getMaxDownsample(); Get the maximum downsample value supported by this viewer.; This prevents zooming out by an unreasonably large amount. Returns:. zoomOut; public void zoomOut(int nSteps); Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . zoomIn; public void zoomIn(int nSteps); Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . getDefaultZoomFactor; public double getDefaultZoomFactor(); The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). Controls zoom speed. Returns:. zoomOut; public void zoomOut(); Zoom out by one step. See Also:. zoomOut(int); getDefaultZoomFactor(). zoomIn; public void zoomIn(); Zoom in by one step. See Also:. zoomIn(int); getDefaultZoomFactor(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Property for the image data currently being displayed within this viewer. Returns:; See Also:. getImageData(); setImageData(ImageData). getImageData; public ImageData<BufferedImage> getImageData(); Get the image data currently being displayed within thie viewer. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options that control the viewer display. Returns:. getImageRegionStore; public DefaultImageRegionStore getImageRegionStore(); Get the region store used by this viewer for tile caching and painting. Returns:. setDoFasterRepaint; public void ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:18930,Availability,down,downsample,18930,"); Zoom in by one step. See Also:. zoomIn(int); getDefaultZoomFactor(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Property for the image data currently being displayed within this viewer. Returns:; See Also:. getImageData(); setImageData(ImageData). getImageData; public ImageData<BufferedImage> getImageData(); Get the image data currently being displayed within thie viewer. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options that control the viewer display. Returns:. getImageRegionStore; public DefaultImageRegionStore getImageRegionStore(); Get the region store used by this viewer for tile caching and painting. Returns:. setDoFasterRepaint; public void setDoFasterRepaint(boolean fasterRepaint); Set flag to indicate that repaints should prefer speed over accuracy. This is useful when scrolling quickly, or rapidly changing; the image zoom.; ; Note: Previously, this would drop the downsample level - but this produced visual artifacts too often. ; Currently it only impacts interpolation used. Parameters:; fasterRepaint - . getMousePosition; public Point2D getMousePosition(); Get the current cursor position within this viewer, or null if the cursor is outside the viewer.; This is provided in the component space. Returns:. isShowing; public boolean isShowing(); Returns true if the viewer is visible, and attached to a scene. Returns:. initializeForServer; protected void initializeForServer(ImageServer<BufferedImage> server). isSpaceDown; public boolean isSpaceDown(); Returns true if the spacebar was pressed when this component was focussed, and is still being held down. Returns:. setSpaceDown; public void setSpaceDown(boolean spaceDown); Notify this viewer that the isSpaceDown status should be changed.; ; This is useful whenever another component might have received the event,; but the viewer needs to 'know' when it receives the focus. Parameters:; spaceDown - . getCenterPixel",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:19623,Availability,down,down,19623,"ionStore getImageRegionStore(); Get the region store used by this viewer for tile caching and painting. Returns:. setDoFasterRepaint; public void setDoFasterRepaint(boolean fasterRepaint); Set flag to indicate that repaints should prefer speed over accuracy. This is useful when scrolling quickly, or rapidly changing; the image zoom.; ; Note: Previously, this would drop the downsample level - but this produced visual artifacts too often. ; Currently it only impacts interpolation used. Parameters:; fasterRepaint - . getMousePosition; public Point2D getMousePosition(); Get the current cursor position within this viewer, or null if the cursor is outside the viewer.; This is provided in the component space. Returns:. isShowing; public boolean isShowing(); Returns true if the viewer is visible, and attached to a scene. Returns:. initializeForServer; protected void initializeForServer(ImageServer<BufferedImage> server). isSpaceDown; public boolean isSpaceDown(); Returns true if the spacebar was pressed when this component was focussed, and is still being held down. Returns:. setSpaceDown; public void setSpaceDown(boolean spaceDown); Notify this viewer that the isSpaceDown status should be changed.; ; This is useful whenever another component might have received the event,; but the viewer needs to 'know' when it receives the focus. Parameters:; spaceDown - . getCenterPixelX; public double getCenterPixelX(); Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. Returns:. getCenterPixelY; public double getCenterPixelY(); Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. Returns:. setActiveTool; public void setActiveTool(PathTool tool); Set the active PathTool for input to this viewer. Parameters:; tool - . getActiveTool; public PathTool getActiveTool(); Get the active PathTool for this viewer.; Note that this is not necessarily identical to the result of the last call to setActiveTool(",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:23350,Availability,down,downsample,23350,"er; protected ImageRenderer getRenderer(); Request a renderer that converts image tiles into RGB images.; ; By default, this returns getImageDisplay.; ; Subclasses might override this, e.g. to use custom image viewers that select transforms some ; other way. Returns:. getDisplayedRegionShape; public Shape getDisplayedRegionShape(); Get a shape corresponding to the region of the image currently visible in this viewer.; Coordinates are in the image space.; ; If no rotation is applied, the result will be an instance of java.awt.Rectangle.; Otherwise it will be a Path2D with the rotated rectangle vertices. Returns:. getDisplayedClipShape; protected Shape getDisplayedClipShape(Shape clip); Transform a clip shape into image coordinates for this viewer.; The resulting shape coordinates are in the image space. Parameters:; clip - The clip shape, or null if the entire width & height of the component should be used.; Returns:. zoomToFit; public void zoomToFit(); Request that the downsample is set to contain the entire image, and the image is centered in the viewer. getServer; public ImageServer<BufferedImage> getServer(); Get the ImageServer for the current image displayed within the viewer, or null if ; no image is displayed. Returns:. hasServer; public boolean hasServer(); Returns true if there is currently an ImageServer being displayed in this viewer. Returns:. setZPosition; public void setZPosition(int zPos); Set the requested z-slice to be visible. Parameters:; zPos - . getTPosition; public int getTPosition(); Get the currently-visible time point. Returns:. setTPosition; public void setTPosition(int tPosition); Set the requested time point to be visible. Parameters:; tPosition - . getZPosition; public int getZPosition(); Get the currently-visible z-slice. Returns:. getImagePlane; public ImagePlane getImagePlane(); Get the ImagePlane currently being displayed, including z and t positions. Channels are ignored. Returns:. isImageDataChanging; public boolean isImageDataChang",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:25742,Availability,avail,available,25742,"ption; Set the current image for this viewer. Parameters:; imageDataNew - ; Throws:; IOException. resetImageData; public void resetImageData(); Reset the image data to null. fireImageDataChanged; protected void fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew). fireVisibleRegionChangedEvent; protected void fireVisibleRegionChangedEvent(Shape shape). repaintEntireImage; public void repaintEntireImage(); Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, repaint() is preferable. See Also:. repaint(). getMagnification; public double getMagnification(); Get the magnification for the image within this viewer, or Double.NaN if no image is present.; This is mostly for display; getDownsampleFactor() is more meaningful.; The actual value of the magnification depends upon whether any magnification value is available ; within the image metadata. Returns:. getFullMagnification; public double getFullMagnification(); Get the full magnification for the image.; This is either the magnification value stored within the current image metadata, ; or 1.0 if no suitable image or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandle",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:26020,Availability,avail,available,26020,"fferedImage> imageDataNew). fireVisibleRegionChangedEvent; protected void fireVisibleRegionChangedEvent(Shape shape). repaintEntireImage; public void repaintEntireImage(); Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, repaint() is preferable. See Also:. repaint(). getMagnification; public double getMagnification(); Get the magnification for the image within this viewer, or Double.NaN if no image is present.; This is mostly for display; getDownsampleFactor() is more meaningful.; The actual value of the magnification depends upon whether any magnification value is available ; within the image metadata. Returns:. getFullMagnification; public double getFullMagnification(); Get the full magnification for the image.; This is either the magnification value stored within the current image metadata, ; or 1.0 if no suitable image or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:26119,Availability,down,downsample,26119,"Event(Shape shape). repaintEntireImage; public void repaintEntireImage(); Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, repaint() is preferable. See Also:. repaint(). getMagnification; public double getMagnification(); Get the magnification for the image within this viewer, or Double.NaN if no image is present.; This is mostly for display; getDownsampleFactor() is more meaningful.; The actual value of the magnification depends upon whether any magnification value is available ; within the image metadata. Returns:. getFullMagnification; public double getFullMagnification(); Get the full magnification for the image.; This is either the magnification value stored within the current image metadata, ; or 1.0 if no suitable image or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:28505,Availability,down,downsampleFactor,28505,"0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will au",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:28532,Availability,down,downsample,28532,"0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will au",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:28580,Availability,down,downsampleFactor,28580,"or this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Para",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29193,Availability,down,downsampleFactor,29193,"play getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29240,Availability,down,downsample,29240,"play getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29480,Availability,down,downsample,29480,"r); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29592,Availability,down,downsampleFactor,29592,"etThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29687,Availability,down,downsampleFactor,29687," public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBounds(); Get an ImageRegion representing the full width and height of the current image.; The ImagePlane is set according to the z and t position o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29757,Availability,down,downsample,29757," public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBounds(); Get an ImageRegion representing the full width and height of the current image.; The ImagePlane is set according to the z and t position o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29992,Availability,down,downsampleFactor,29992,"ore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBounds(); Get an ImageRegion representing the full width and height of the current image.; The ImagePlane is set according to the z and t position of the viewer. Returns:. getDownsampleFactor; public double getDownsampleFactor(); Get the current downsample factor. Returns:. componentPointToImagePoint; public Point2D componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds); Convert a coordinate from the viewer into the correspondi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:30065,Availability,down,downsample,30065,"ore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBounds(); Get an ImageRegion representing the full width and height of the current image.; The ImagePlane is set according to the z and t position of the viewer. Returns:. getDownsampleFactor; public double getDownsampleFactor(); Get the current downsample factor. Returns:. componentPointToImagePoint; public Point2D componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds); Convert a coordinate from the viewer into the correspondi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:30845,Availability,down,downsample,30845,"image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBounds(); Get an ImageRegion representing the full width and height of the current image.; The ImagePlane is set according to the z and t position of the viewer. Returns:. getDownsampleFactor; public double getDownsampleFactor(); Get the current downsample factor. Returns:. componentPointToImagePoint; public Point2D componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds); Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds.; A point object can optionally be provided into which the location is written (may be the same as the component point object). Parameters:; point - ; pointDest - ; constrainToBounds - ; Returns:. componentPointToImagePoint; public Point2D componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds); Convert x and y coordinates from the component space to the image space. Parameters:; x - x coordinate, related to getView(); y - y coordinate, related to getView(); pointDest - object in which to store the corresponding image point (will be set and returned if non-null); constrainToBounds - if true, clip the image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:32600,Availability,down,downsample,32600,"the image space. Parameters:; x - x coordinate, related to getView(); y - y coordinate, related to getView(); pointDest - object in which to store the corresponding image point (will be set and returned if non-null); constrainToBounds - if true, clip the image coordinate computed from x and y to fit within the image bounds; Returns:; a Point2D referring to the pixel coordinate corresponding to the component coordinate defined by x and y;. imagePointToComponentPoint; public Point2D imagePointToComponentPoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds); Convert a coordinate from the the full-resolution image into the corresponding pixel coordinate in the viewer - optionally constraining it to any viewer component bounds.; A point object can optionally be provided into which the location is written (may be the same as the image point object). Parameters:; point - ; pointDest - ; constrainToBounds - ; Returns:. centerImage; public void centerImage(); Center the current image in the viewer, while keeping the same downsample factor.; This does nothing if no image is currently open. getObjectClassificationString; public String getObjectClassificationString(double x,; double y); Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. Parameters:; x - x-coordinate in the component space (not image space); y - y-coordinate in the component space (not image space); Returns:; a String to display representing the object classification. getImageObjectClassificationString; public String getImageObjectClassificationString(double x,; double y); Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. Parameters:; x - x-coordinate in the image space (not the component/viewer space); y - y-coordinate in the image space (not the component/viewer space); Returns:; a String to display representing the object classi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:34033,Availability,avail,available,34033,"ce); y - y-coordinate in the component space (not image space); Returns:; a String to display representing the object classification. getImageObjectClassificationString; public String getImageObjectClassificationString(double x,; double y); Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. Parameters:; x - x-coordinate in the image space (not the component/viewer space); y - y-coordinate in the image space (not the component/viewer space); Returns:; a String to display representing the object classification. getFullLocationString; protected String getFullLocationString(boolean useCalibratedUnits); Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. Parameters:; useCalibratedUnits - If true, microns will be used rather than pixels (if known).; Returns:. getHierarchy; public PathObjectHierarchy getHierarchy(); Get the object hierarchy for the current image data, or null if no image data is available. Returns:. addViewerListener; public void addViewerListener(QuPathViewerListener listener); Add a viewer listener. Parameters:; listener - . removeViewerListener; public void removeViewerListener(QuPathViewerListener listener); Remove a viewer listener. Parameters:; listener - . setCenterPixelLocation; public void setCenterPixelLocation(double x,; double y); Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35440,Availability,avail,available,35440,"lLocation; public void setCenterPixelLocation(double x,; double y); Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:1506,Deployability,update,updated,1506,"istener, PathObjectSelectionListener. Direct Known Subclasses:; QuPathViewerPlus. public class QuPathViewer; extends Object; implements TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener; JavaFX component for viewing a (possibly large) image, along with overlays. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; DoubleProperty; gamma. Get the gamma property for this viewer. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Property for the image data currently being displayed within this viewer. DoubleProperty; rotation. Return the rotation property of this viewer. IntegerProperty; tPosition. Current t-position for the timepoint currently visible in the viewer. IntegerProperty; zPosition. Current z-position for the z-slice currently visible in the viewer. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; imageUpdated. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). protected boolean; locationUpdated. Flag used to indicate that the visible region in the viewer has changed. Constructor Summary; Constructors. Constructor; Description; QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addViewerListener(QuPathViewerListener listener). Add a viewer listener. void; centerImage(). Center the current image in the viewer, while keeping the same downsample factor. void; centerROI(ROI roi). Center the specified ROI in the viewer. void; closeViewer(). Request that this viewer is closed. protected boolean; componentContains(double x,; double y);  ; Point2D; componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds). Convert x and y coordinates from the component space to the image space. Point2D; componen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:13006,Deployability,update,updateAffineTransform,13006,"e elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setSpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPosition(int tPosition). Set the requested time point to be visible. void; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:13050,Deployability,update,updateCursor,13050,"e elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setSpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPosition(int tPosition). Set the requested time point to be visible. void; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:14842,Deployability,update,updated,14842,"Property; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty; Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). See Also:. getGamma(); setGamma(double); gammaProperty(). rotation; public DoubleProperty rotationProperty; Return the rotation property of this viewer. See Also:. getRotation(); setRotation(double); rotationProperty(). zPosition; public IntegerProperty zPositionProperty; Current z-position for the z-slice currently visible in the viewer. See Also:. getZPosition(); setZPosition(int); zPositionProperty(). tPosition; public IntegerProperty tPositionProperty; Current t-position for the timepoint currently visible in the viewer. See Also:. getTPosition(); setTPosition(int); tPositionProperty(). Field Details. imageUpdated; protected boolean imageUpdated; Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). locationUpdated; protected boolean locationUpdated; Flag used to indicate that the visible region in the viewer has changed. Constructor Details. QuPathViewer; public QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display. Method Details. getView; public Pane getView(); Get the main JavaFX component representing this viewer.; This is what should be added to a scene. Returns:. setMinimumRepaintSpacingMillis; public void setMinimumRepaintSpacingMillis(long repaintSpacingMillis); Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered.; (Repaint requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:16796,Deployability,update,updated,16796,"int requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table). In such cases repaintEntireImage() is required. See Also:. repaintEntireImage(). getMinDownsample; public double getMinDownsample(); Get the minimum downsample value supported by this viewer.; This prevents zooming in by an unreasonably large amount. Returns:. getMaxDownsample; public double getMaxDownsample(); Get the maximum downsample value supported by this viewer.; This prevents zooming out by an unreasonably large amount. Returns:. zoomOut; public void zoomOut(int nSteps); Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . zoomIn; public void zoomIn(int nSteps); Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . getDefaultZoomFactor; public double getDefaultZoomFactor(); The amount by which the downsample factor is ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:20689,Deployability,update,updateCursor,20689,"viewer that the isSpaceDown status should be changed.; ; This is useful whenever another component might have received the event,; but the viewer needs to 'know' when it receives the focus. Parameters:; spaceDown - . getCenterPixelX; public double getCenterPixelX(); Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. Returns:. getCenterPixelY; public double getCenterPixelY(); Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. Returns:. setActiveTool; public void setActiveTool(PathTool tool); Set the active PathTool for input to this viewer. Parameters:; tool - . getActiveTool; public PathTool getActiveTool(); Get the active PathTool for this viewer.; Note that this is not necessarily identical to the result of the last call to setActiveTool(PathTool),; because it may be modified by other behavior (e.g. pressing the spacebar to temporarily activate the Move tool). Returns:. updateCursor; protected void updateCursor(). getCursor; public Cursor getCursor(); Get the current cursor for this viewer. Returns:. setCursor; public void setCursor(Cursor cursor); Set the requested cursor to display in this viewer. Parameters:; cursor - . getSelectedObject; public PathObject getSelectedObject(); Get the currently-selected object from the hierarchy. Returns:. getAllSelectedObjects; public Collection<PathObject> getAllSelectedObjects(); Get all currently-selected objects from the hierarchy. Returns:. setCustomPixelLayerOverlay; public void setCustomPixelLayerOverlay(PathOverlay pathOverlay); Optionally set a custom overlay to use for the pixel layer.; ; This is useful to support live prediction based on a specific field of view, for example. Parameters:; pathOverlay - . resetCustomPixelLayerOverlay; public void resetCustomPixelLayerOverlay(); Reset the custom pixel layer overlay to null. getCustomPixelLayerOverlay; public PathOverlay getCustomPixelLayerOverlay(); Get the custom pixel layer ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:20718,Deployability,update,updateCursor,20718,"viewer that the isSpaceDown status should be changed.; ; This is useful whenever another component might have received the event,; but the viewer needs to 'know' when it receives the focus. Parameters:; spaceDown - . getCenterPixelX; public double getCenterPixelX(); Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. Returns:. getCenterPixelY; public double getCenterPixelY(); Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. Returns:. setActiveTool; public void setActiveTool(PathTool tool); Set the active PathTool for input to this viewer. Parameters:; tool - . getActiveTool; public PathTool getActiveTool(); Get the active PathTool for this viewer.; Note that this is not necessarily identical to the result of the last call to setActiveTool(PathTool),; because it may be modified by other behavior (e.g. pressing the spacebar to temporarily activate the Move tool). Returns:. updateCursor; protected void updateCursor(). getCursor; public Cursor getCursor(); Get the current cursor for this viewer. Returns:. setCursor; public void setCursor(Cursor cursor); Set the requested cursor to display in this viewer. Parameters:; cursor - . getSelectedObject; public PathObject getSelectedObject(); Get the currently-selected object from the hierarchy. Returns:. getAllSelectedObjects; public Collection<PathObject> getAllSelectedObjects(); Get all currently-selected objects from the hierarchy. Returns:. setCustomPixelLayerOverlay; public void setCustomPixelLayerOverlay(PathOverlay pathOverlay); Optionally set a custom overlay to use for the pixel layer.; ; This is useful to support live prediction based on a specific field of view, for example. Parameters:; pathOverlay - . resetCustomPixelLayerOverlay; public void resetCustomPixelLayerOverlay(); Reset the custom pixel layer overlay to null. getCustomPixelLayerOverlay; public PathOverlay getCustomPixelLayerOverlay(); Get the custom pixel layer ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:34648,Deployability,update,updateAffineTransform,34648,"arize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. Parameters:; useCalibratedUnits - If true, microns will be used rather than pixels (if known).; Returns:. getHierarchy; public PathObjectHierarchy getHierarchy(); Get the object hierarchy for the current image data, or null if no image data is available. Returns:. addViewerListener; public void addViewerListener(QuPathViewerListener listener); Add a viewer listener. Parameters:; listener - . removeViewerListener; public void removeViewerListener(QuPathViewerListener listener); Remove a viewer listener. Parameters:; listener - . setCenterPixelLocation; public void setCenterPixelLocation(double x,; double y); Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:34686,Deployability,update,updateAffineTransform,34686,"arize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. Parameters:; useCalibratedUnits - If true, microns will be used rather than pixels (if known).; Returns:. getHierarchy; public PathObjectHierarchy getHierarchy(); Get the object hierarchy for the current image data, or null if no image data is available. Returns:. addViewerListener; public void addViewerListener(QuPathViewerListener listener); Add a viewer listener. Parameters:; listener - . removeViewerListener; public void removeViewerListener(QuPathViewerListener listener); Remove a viewer listener. Parameters:; listener - . setCenterPixelLocation; public void setCenterPixelLocation(double x,; double y); Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:25694,Integrability,depend,depends,25694,"ption; Set the current image for this viewer. Parameters:; imageDataNew - ; Throws:; IOException. resetImageData; public void resetImageData(); Reset the image data to null. fireImageDataChanged; protected void fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew). fireVisibleRegionChangedEvent; protected void fireVisibleRegionChangedEvent(Shape shape). repaintEntireImage; public void repaintEntireImage(); Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, repaint() is preferable. See Also:. repaint(). getMagnification; public double getMagnification(); Get the magnification for the image within this viewer, or Double.NaN if no image is present.; This is mostly for display; getDownsampleFactor() is more meaningful.; The actual value of the magnification depends upon whether any magnification value is available ; within the image metadata. Returns:. getFullMagnification; public double getFullMagnification(); Get the full magnification for the image.; This is either the magnification value stored within the current image metadata, ; or 1.0 if no suitable image or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandle",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35350,Integrability,interface,interface,35350,"lLocation; public void setCenterPixelLocation(double x,; double y); Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35483,Integrability,interface,interface,35483,"olution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Spe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36036,Integrability,interface,interface,36036,"adians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile req",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36173,Integrability,interface,interface,36173,". getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the ima",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36421,Integrability,interface,interface,36421,"ner; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conser",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36551,Integrability,interface,interface,36551," displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Specified by:; requiresTileRegion in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36897,Integrability,interface,interface,36897,"hing for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Specified by:; requiresTileRegion in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. zPositionProperty; public IntegerProperty zPositionProperty(); Current z-position for the z-slice currently visible in the viewer. Returns:; See Also:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:37560,Integrability,interface,interface,37560,"ener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Specified by:; requiresTileRegion in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. zPositionProperty; public IntegerProperty zPositionProperty(); Current z-position for the z-slice currently visible in the viewer. Returns:; See Also:. getZPosition(); setZPosition(int). tPositionProperty; public IntegerProperty tPositionProperty(); Current t-position for the timepoint currently visible in the viewer. Returns:; See Also:. getTPosition(); setTPosition(int). requestStopMoving; public void requestStopMoving(); Request that the viewer stop any panning immediately. See Also:. requestDecelerate(); requestStartMoving(double, double). requestDecelerate; public void requestDecelerate(); Request that a viewer decelerate any existing panning smoothly. See Also:. requestStartMoving(double, double); requestStopMoving(). requestStartMoving; public void requestStartMoving(double dx,; double dy); Request that the viewer start panning with a velocity ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:634,Modifiability,extend,extends,634,". QuPathViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class QuPathViewer. java.lang.Object; qupath.lib.gui.viewer.QuPathViewer. All Implemented Interfaces:; EventListener, TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener. Direct Known Subclasses:; QuPathViewerPlus. public class QuPathViewer; extends Object; implements TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener; JavaFX component for viewing a (possibly large) image, along with overlays. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; DoubleProperty; gamma. Get the gamma property for this viewer. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Property for the image data currently being displayed within this viewer. DoubleProperty; rotation. Return the rotation property of this viewer. IntegerProperty; tPosition. Current t-position for the timepoint currently visible in the viewer. IntegerProperty; zPosition. Current z-position for the z-slice currently visible in the viewer. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; imageUpdated. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). protected boolean; locationUpdated. Flag used to indicate that the visible region in the viewer has changed. Constructor Summary; Constructors. Constructor; Description; QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addViewerListener(QuPathViewerLi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:6473,Modifiability,layers,layers,6473,"ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsample value supported by this viewer. double; getMaxROIHandleSize(). Get the maximum size for which ROI handles may be drawn. double; getMinDownsample(). Get the minimum downsample value supported by this viewer. Point2D; getMousePosition(). Get the current cursor position within this viewer, or null if the cursor is outside the viewer. String; getObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. List<PathOverlay>; getOverlayLayers(). Get an unmodifiable list containing the overlay layers, in order. OverlayOptions; getOverlayOptions(). Get the overlay options that control the viewer display. protected ImageRenderer; getRenderer(). Request a renderer that converts image tiles into RGB images. BufferedImage; getRGBThumbnail(). Get a thumbnail representing the image as displayed by this viewer. RoiEditor; getROIEditor(). Get the RoiEditor used by this viewer. double; getRotation(). Get the current rotation; angle in radians. PathObject; getSelectedObject(). Get the currently-selected object from the hierarchy. ImageServer<BufferedImage>; getServer(). Get the ImageServer for the current image displayed within the viewer, or null if ; no image is displayed. ImageRegion; getServerBounds(). Get an ImageRegion representing the full width and height of the current image. int; getServerHeight(). Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. int; getServerWidth(). Get the width in pixels of the full",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:13623,Modifiability,inherit,inherited,13623,"oid; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty; Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). See Also:. getGamma(); setGamma(double); gammaProperty(). rotation; public DoubleProperty rotationProperty; Return the rotation property of this viewer. See Also:. getRotation(); setRotation(double); rotationProperty(). zPosition; public IntegerProperty zPositionProperty; Current z-position for the z-slice currently visible in the viewer. See Also:. getZPosition(); setZPosition(int); zPositionProperty(). tPosition; public IntegerProperty tPositionProperty; Current t-position for the ti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27051,Modifiability,layers,layers,27051,"e or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By d",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:4840,Performance,perform,perform,4840,"erlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsamp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:15788,Performance,perform,performance,15788,"Updated; protected boolean imageUpdated; Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). locationUpdated; protected boolean locationUpdated; Flag used to indicate that the visible region in the viewer has changed. Constructor Details. QuPathViewer; public QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display. Method Details. getView; public Pane getView(); Get the main JavaFX component representing this viewer.; This is what should be added to a scene. Returns:. setMinimumRepaintSpacingMillis; public void setMinimumRepaintSpacingMillis(long repaintSpacingMillis); Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered.; (Repaint requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that requ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:16768,Performance,cache,cached,16768,"int requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table). In such cases repaintEntireImage() is required. See Also:. repaintEntireImage(). getMinDownsample; public double getMinDownsample(); Get the minimum downsample value supported by this viewer.; This prevents zooming in by an unreasonably large amount. Returns:. getMaxDownsample; public double getMaxDownsample(); Get the maximum downsample value supported by this viewer.; This prevents zooming out by an unreasonably large amount. Returns:. zoomOut; public void zoomOut(int nSteps); Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . zoomIn; public void zoomIn(int nSteps); Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . getDefaultZoomFactor; public double getDefaultZoomFactor(); The amount by which the downsample factor is ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27286,Performance,perform,perform,27286,"agnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35701,Performance,cache,cached,35701,"uble theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35883,Performance,perform,performance,35883,"otation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description cop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:3011,Safety,detect,detections,3011,". Add a viewer listener. void; centerImage(). Center the current image in the viewer, while keeping the same downsample factor. void; centerROI(ROI roi). Center the specified ROI in the viewer. void; closeViewer(). Request that this viewer is closed. protected boolean; componentContains(double x,; double y);  ; Point2D; componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds). Convert x and y coordinates from the component space to the image space. Point2D; componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds). Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. protected void; fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew);  ; protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma property for this viewer. PathTool; getActiveTool(). Get the active PathTool for this viewer. Collection<PathObject>; getAllSelectedObjects(). Get all currently-selected objects from the hierarchy. List<BufferedImage>; getAllThumbnails(). Get thumbnails for all z-slices & time points. Color; getBorderColor(). Get the border color set for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:21399,Safety,predict,prediction,21399,"veTool(); Get the active PathTool for this viewer.; Note that this is not necessarily identical to the result of the last call to setActiveTool(PathTool),; because it may be modified by other behavior (e.g. pressing the spacebar to temporarily activate the Move tool). Returns:. updateCursor; protected void updateCursor(). getCursor; public Cursor getCursor(); Get the current cursor for this viewer. Returns:. setCursor; public void setCursor(Cursor cursor); Set the requested cursor to display in this viewer. Parameters:; cursor - . getSelectedObject; public PathObject getSelectedObject(); Get the currently-selected object from the hierarchy. Returns:. getAllSelectedObjects; public Collection<PathObject> getAllSelectedObjects(); Get all currently-selected objects from the hierarchy. Returns:. setCustomPixelLayerOverlay; public void setCustomPixelLayerOverlay(PathOverlay pathOverlay); Optionally set a custom overlay to use for the pixel layer.; ; This is useful to support live prediction based on a specific field of view, for example. Parameters:; pathOverlay - . resetCustomPixelLayerOverlay; public void resetCustomPixelLayerOverlay(); Reset the custom pixel layer overlay to null. getCustomPixelLayerOverlay; public PathOverlay getCustomPixelLayerOverlay(); Get the custom pixel layer overlay, or null if it has not be set. Returns:. getCurrentROI; public ROI getCurrentROI(); Get the current ROI, i.e. the ROI belonging to the currently-selected object - or null, if there is no object or if the selected object has no ROI. Returns:. setSelectedObject; public void setSelectedObject(PathObject pathObject); Set selected object in the current hierarchy, without centering the viewer. Parameters:; pathObject - . setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelected); Set selected object in the current hierarchy, without centering the viewer. Parameters:; pathObject - ; addToSelected - . getRenderer; protected ImageRenderer getRenderer(); Re",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35653,Safety,detect,detections,35653,"eters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the prima",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:3880,Security,access,access,3880,"protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma property for this viewer. PathTool; getActiveTool(). Get the active PathTool for this viewer. Collection<PathObject>; getAllSelectedObjects(). Get all currently-selected objects from the hierarchy. List<BufferedImage>; getAllThumbnails(). Get thumbnails for all z-slices & time points. Color; getBorderColor(). Get the border color set for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this view",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:13697,Security,hash,hashCode,13697,"e. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty; Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). See Also:. getGamma(); setGamma(double); gammaProperty(). rotation; public DoubleProperty rotationProperty; Return the rotation property of this viewer. See Also:. getRotation(); setRotation(double); rotationProperty(). zPosition; public IntegerProperty zPositionProperty; Current z-position for the z-slice currently visible in the viewer. See Also:. getZPosition(); setZPosition(int); zPositionProperty(). tPosition; public IntegerProperty tPositionProperty; Current t-position for the timepoint currently visible in the viewer. See Also:. getTPosition();",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27175,Security,access,access,27175,"upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27805,Testability,log,logs,27805,"andles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<Bu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:15765,Usability,simpl,simply,15765,"Updated; protected boolean imageUpdated; Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). locationUpdated; protected boolean locationUpdated; Flag used to indicate that the visible region in the viewer has changed. Constructor Details. QuPathViewer; public QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display. Method Details. getView; public Pane getView(); Get the main JavaFX component representing this viewer.; This is what should be added to a scene. Returns:. setMinimumRepaintSpacingMillis; public void setMinimumRepaintSpacingMillis(long repaintSpacingMillis); Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered.; (Repaint requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that requ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:15916,Usability,resume,resumed,15916,"t (otherwise it's assumed only the overlay may have changed). locationUpdated; protected boolean locationUpdated; Flag used to indicate that the visible region in the viewer has changed. Constructor Details. QuPathViewer; public QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display. Method Details. getView; public Pane getView(); Get the main JavaFX component representing this viewer.; This is what should be added to a scene. Returns:. setMinimumRepaintSpacingMillis; public void setMinimumRepaintSpacingMillis(long repaintSpacingMillis); Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered.; (Repaint requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table).",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html:520,Integrability,interface,interface,520,". QuPathViewerListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface QuPathViewerListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; UndoRedoManager, ViewerManager, ViewTracker. public interface QuPathViewerListener; extends EventListener; Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Method Details. imageDataChanged; void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Called with the image data within a viewer has changed. Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Called when the visible region has changed in a viewer. Parameters:; viewer - the viewer whose visible region has c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html:552,Modifiability,extend,extends,552,". QuPathViewerListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface QuPathViewerListener. All Superinterfaces:; EventListener. All Known Implementing Classes:; UndoRedoManager, ViewerManager, ViewTracker. public interface QuPathViewerListener; extends EventListener; Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Method Details. imageDataChanged; void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Called with the image data within a viewer has changed. Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Called when the visible region has changed in a viewer. Parameters:; viewer - the viewer whose visible region has c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerListener.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:1873,Availability,down,down,1873,"iewer; gamma, imageData, rotation, tPosition, zPosition. Field Summary. Fields inherited from class qupath.lib.gui.viewer.QuPathViewer; imageUpdated, locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods inherited from class qupath.lib.gui.viewer.QuPathViewer; addViewerListener, centerImage, centerROI, componentContains, componentPointToImagePoint, componentPointToImagePoint, fireImageDataChanged, fireVisibleRegionChangedEvent, forceOverlayUpdate, gammaProperty, getActiveTool, getAllSelectedObjects, getAllThumbnails, getBorderColor, getCenterPixelX, getCenterPixelY, getCurrentROI, getCursor, getCustomOverlayLayers, getCustomPixelLayerOverlay, getDefaultZoomFactor, getDisplayedClipShape, getDisplayedRegionShape, getDownsampleFactor, getFullLocationString, getFullMagnification, getGamma, getGammaOp, getHierarchy, getImageData, getImageDisplay, getImageObjectClassificationString, getImagePlane, getImageRegionStore, getMagnification, getMaxDownsample, getMaxROIHandleSize, getMinDownsample, getMousePosition, getObjectClassificationString, getOverlayLaye",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:5132,Availability,down,down,5132,"it, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosition; public void setSlidersPosition(boolean down); Sets the Z and T sliders' position to allow space for command bar. Parameters:; down - . closeViewer; public void closeViewer(); Description copied from class: QuPathViewer; Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. Overrides:; closeViewer in class QuPathViewer. updateAffineTransform; protected void updateAffineTransform(). Overrides:; updateAffineTransform in class QuPathViewer. repaintEntireImage; public void repaintEntireImage(); Description copied from class: QuPathViewer; Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, QuPathViewer.repaint() is preferable. Overrides:; repaintEntireImage in class QuPathViewer; See Also:. QuPathViewer.repaint(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:5219,Availability,down,down,5219,"it, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosition; public void setSlidersPosition(boolean down); Sets the Z and T sliders' position to allow space for command bar. Parameters:; down - . closeViewer; public void closeViewer(); Description copied from class: QuPathViewer; Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. Overrides:; closeViewer in class QuPathViewer. updateAffineTransform; protected void updateAffineTransform(). Overrides:; updateAffineTransform in class QuPathViewer. repaintEntireImage; public void repaintEntireImage(); Description copied from class: QuPathViewer; Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, QuPathViewer.repaint() is preferable. Overrides:; repaintEntireImage in class QuPathViewer; See Also:. QuPathViewer.repaint(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:1963,Deployability,update,updateAffineTransform,1963,"b.gui.viewer.QuPathViewer; imageUpdated, locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods inherited from class qupath.lib.gui.viewer.QuPathViewer; addViewerListener, centerImage, centerROI, componentContains, componentPointToImagePoint, componentPointToImagePoint, fireImageDataChanged, fireVisibleRegionChangedEvent, forceOverlayUpdate, gammaProperty, getActiveTool, getAllSelectedObjects, getAllThumbnails, getBorderColor, getCenterPixelX, getCenterPixelY, getCurrentROI, getCursor, getCustomOverlayLayers, getCustomPixelLayerOverlay, getDefaultZoomFactor, getDisplayedClipShape, getDisplayedRegionShape, getDownsampleFactor, getFullLocationString, getFullMagnification, getGamma, getGammaOp, getHierarchy, getImageData, getImageDisplay, getImageObjectClassificationString, getImagePlane, getImageRegionStore, getMagnification, getMaxDownsample, getMaxROIHandleSize, getMinDownsample, getMousePosition, getObjectClassificationString, getOverlayLayers, getOverlayOptions, getRenderer, getRGBThumbnail, getROIEditor, getRotation, getSelectedObject, getServer,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:3925,Deployability,update,updateCursor,3925,"path.lib.gui.viewer.QuPathViewer; addViewerListener, centerImage, centerROI, componentContains, componentPointToImagePoint, componentPointToImagePoint, fireImageDataChanged, fireVisibleRegionChangedEvent, forceOverlayUpdate, gammaProperty, getActiveTool, getAllSelectedObjects, getAllThumbnails, getBorderColor, getCenterPixelX, getCenterPixelY, getCurrentROI, getCursor, getCustomOverlayLayers, getCustomPixelLayerOverlay, getDefaultZoomFactor, getDisplayedClipShape, getDisplayedRegionShape, getDownsampleFactor, getFullLocationString, getFullMagnification, getGamma, getGammaOp, getHierarchy, getImageData, getImageDisplay, getImageObjectClassificationString, getImagePlane, getImageRegionStore, getMagnification, getMaxDownsample, getMaxROIHandleSize, getMinDownsample, getMousePosition, getObjectClassificationString, getOverlayLayers, getOverlayOptions, getRenderer, getRGBThumbnail, getROIEditor, getRotation, getSelectedObject, getServer, getServerBounds, getServerHeight, getServerWidth, getThumbnail, getTPosition, getView, getZoomToFitDownsampleFactor, getZPosition, hasServer, hierarchyChanged, imageDataProperty, imagePointToComponentPoint, isImageDataChanging, isRotated, isShowing, isSpaceDown, paintComponent, paintViewer, removeViewerListener, repaint, repaintTimestamp, requestCancelDirection, requestDecelerate, requestStartMoving, requestStopMoving, requiresTileRegion, resetCustomPixelLayerOverlay, resetImageData, resetMinimumRepaintSpacingMillis, rotationProperty, selectedPathObjectChanged, setActiveTool, setBorderColor, setCenterPixelLocation, setCursor, setCustomPixelLayerOverlay, setDoFasterRepaint, setDownsampleFactor, setDownsampleFactor, setDownsampleFactor, setGamma, setImageData, setMagnification, setMinimumRepaintSpacingMillis, setRotation, setSelectedObject, setSelectedObject, setSpaceDown, setTPosition, setZPosition, tileAvailable, toString, tPositionProperty, updateCursor, zoomIn, zoomIn, zoomOut, zoomOut, zoomToFit, zPositionProperty. Methods inherited f",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:5563,Deployability,update,updateAffineTransform,5563,"it, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosition; public void setSlidersPosition(boolean down); Sets the Z and T sliders' position to allow space for command bar. Parameters:; down - . closeViewer; public void closeViewer(); Description copied from class: QuPathViewer; Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. Overrides:; closeViewer in class QuPathViewer. updateAffineTransform; protected void updateAffineTransform(). Overrides:; updateAffineTransform in class QuPathViewer. repaintEntireImage; public void repaintEntireImage(); Description copied from class: QuPathViewer; Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, QuPathViewer.repaint() is preferable. Overrides:; repaintEntireImage in class QuPathViewer; See Also:. QuPathViewer.repaint(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:5601,Deployability,update,updateAffineTransform,5601,"it, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosition; public void setSlidersPosition(boolean down); Sets the Z and T sliders' position to allow space for command bar. Parameters:; down - . closeViewer; public void closeViewer(); Description copied from class: QuPathViewer; Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. Overrides:; closeViewer in class QuPathViewer. updateAffineTransform; protected void updateAffineTransform(). Overrides:; updateAffineTransform in class QuPathViewer. repaintEntireImage; public void repaintEntireImage(); Description copied from class: QuPathViewer; Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, QuPathViewer.repaint() is preferable. Overrides:; repaintEntireImage in class QuPathViewer; See Also:. QuPathViewer.repaint(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:5638,Deployability,update,updateAffineTransform,5638,"it, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosition; public void setSlidersPosition(boolean down); Sets the Z and T sliders' position to allow space for command bar. Parameters:; down - . closeViewer; public void closeViewer(); Description copied from class: QuPathViewer; Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. Overrides:; closeViewer in class QuPathViewer. updateAffineTransform; protected void updateAffineTransform(). Overrides:; updateAffineTransform in class QuPathViewer. repaintEntireImage; public void repaintEntireImage(); Description copied from class: QuPathViewer; Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, QuPathViewer.repaint() is preferable. Overrides:; repaintEntireImage in class QuPathViewer; See Also:. QuPathViewer.repaint(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:642,Modifiability,extend,extends,642,". QuPathViewerPlus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class QuPathViewerPlus. java.lang.Object; qupath.lib.gui.viewer.QuPathViewer; qupath.lib.gui.viewer.QuPathViewerPlus. All Implemented Interfaces:; EventListener, TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener. public class QuPathViewerPlus; extends QuPathViewer; A whole slide viewer with optional extras... i.e. an overview, scalebar, location string... Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.QuPathViewer; gamma, imageData, rotation, tPosition, zPosition. Field Summary. Fields inherited from class qupath.lib.gui.viewer.QuPathViewer; imageUpdated, locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:809,Modifiability,inherit,inherited,809,". QuPathViewerPlus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class QuPathViewerPlus. java.lang.Object; qupath.lib.gui.viewer.QuPathViewer; qupath.lib.gui.viewer.QuPathViewerPlus. All Implemented Interfaces:; EventListener, TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener. public class QuPathViewerPlus; extends QuPathViewer; A whole slide viewer with optional extras... i.e. an overview, scalebar, location string... Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.QuPathViewer; gamma, imageData, rotation, tPosition, zPosition. Field Summary. Fields inherited from class qupath.lib.gui.viewer.QuPathViewer; imageUpdated, locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:938,Modifiability,inherit,inherited,938,". QuPathViewerPlus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class QuPathViewerPlus. java.lang.Object; qupath.lib.gui.viewer.QuPathViewer; qupath.lib.gui.viewer.QuPathViewerPlus. All Implemented Interfaces:; EventListener, TileListener<BufferedImage>, PathObjectHierarchyListener, PathObjectSelectionListener. public class QuPathViewerPlus; extends QuPathViewer; A whole slide viewer with optional extras... i.e. an overview, scalebar, location string... Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.QuPathViewer; gamma, imageData, rotation, tPosition, zPosition. Field Summary. Fields inherited from class qupath.lib.gui.viewer.QuPathViewer; imageUpdated, locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:1999,Modifiability,inherit,inherited,1999," locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods inherited from class qupath.lib.gui.viewer.QuPathViewer; addViewerListener, centerImage, centerROI, componentContains, componentPointToImagePoint, componentPointToImagePoint, fireImageDataChanged, fireVisibleRegionChangedEvent, forceOverlayUpdate, gammaProperty, getActiveTool, getAllSelectedObjects, getAllThumbnails, getBorderColor, getCenterPixelX, getCenterPixelY, getCurrentROI, getCursor, getCustomOverlayLayers, getCustomPixelLayerOverlay, getDefaultZoomFactor, getDisplayedClipShape, getDisplayedRegionShape, getDownsampleFactor, getFullLocationString, getFullMagnification, getGamma, getGammaOp, getHierarchy, getImageData, getImageDisplay, getImageObjectClassificationString, getImagePlane, getImageRegionStore, getMagnification, getMaxDownsample, getMaxROIHandleSize, getMinDownsample, getMousePosition, getObjectClassificationString, getOverlayLayers, getOverlayOptions, getRenderer, getRGBThumbnail, getROIEditor, getRotation, getSelectedObject, getServer, getServerBounds, getServerHeight, getSer",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:4011,Modifiability,inherit,inherited,4011,"getThumbnail, getTPosition, getView, getZoomToFitDownsampleFactor, getZPosition, hasServer, hierarchyChanged, imageDataProperty, imagePointToComponentPoint, isImageDataChanging, isRotated, isShowing, isSpaceDown, paintComponent, paintViewer, removeViewerListener, repaint, repaintTimestamp, requestCancelDirection, requestDecelerate, requestStartMoving, requestStopMoving, requiresTileRegion, resetCustomPixelLayerOverlay, resetImageData, resetMinimumRepaintSpacingMillis, rotationProperty, selectedPathObjectChanged, setActiveTool, setBorderColor, setCenterPixelLocation, setCursor, setCustomPixelLayerOverlay, setDoFasterRepaint, setDownsampleFactor, setDownsampleFactor, setDownsampleFactor, setGamma, setImageData, setMagnification, setMinimumRepaintSpacingMillis, setRotation, setSelectedObject, setSelectedObject, setSpaceDown, setTPosition, setZPosition, tileAvailable, toString, tPositionProperty, updateCursor, zoomIn, zoomIn, zoomOut, zoomOut, zoomToFit, zPositionProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:4085,Security,hash,hashCode,4085,"getZPosition, hasServer, hierarchyChanged, imageDataProperty, imagePointToComponentPoint, isImageDataChanging, isRotated, isShowing, isSpaceDown, paintComponent, paintViewer, removeViewerListener, repaint, repaintTimestamp, requestCancelDirection, requestDecelerate, requestStartMoving, requestStopMoving, requiresTileRegion, resetCustomPixelLayerOverlay, resetImageData, resetMinimumRepaintSpacingMillis, rotationProperty, selectedPathObjectChanged, setActiveTool, setBorderColor, setCenterPixelLocation, setCursor, setCustomPixelLayerOverlay, setDoFasterRepaint, setDownsampleFactor, setDownsampleFactor, setDownsampleFactor, setGamma, setImageData, setMagnification, setMinimumRepaintSpacingMillis, setRotation, setSelectedObject, setSelectedObject, setSpaceDown, setTPosition, setZPosition, tileAvailable, toString, tPositionProperty, updateCursor, zoomIn, zoomIn, zoomOut, zoomOut, zoomToFit, zPositionProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:521,Integrability,interface,interface,521,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:989,Integrability,interface,interface,989,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:545,Modifiability,extend,extends,545,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:974,Modifiability,inherit,inherited,974,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:715,Safety,predict,prediction,715,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:1048,Testability,test,test,1048,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:754,Integrability,interface,interface,754,". RegionFilter.StandardRegionFilters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1015,Integrability,interface,interfaces,1015,"gionFilters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.Sta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1112,Integrability,interface,interfaces,1112,"view; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1138,Integrability,interface,interface,1138,"view; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2423,Integrability,interface,interface,2423,"ny annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array contai",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:4352,Integrability,interface,interface,4352,"hods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RegionFilter.StandardRegionFilters valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<RegionFilter.StandardRegionFilters>. test; public boolean test(ImageData<?> imageData,; RegionRequest region). Specified by:; test in interface BiPredicate<ImageData<?>,RegionRequest>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:835,Modifiability,extend,extends,835,". RegionFilter.StandardRegionFilters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1026,Modifiability,inherit,inherited,1026,"gionFilters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.Sta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1079,Modifiability,extend,extends,1079,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array contain",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1123,Modifiability,inherit,inherited,1123,"view; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2161,Modifiability,inherit,inherited,2161,".RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annota",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2314,Modifiability,inherit,inherited,2314,"g the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Detai",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2408,Modifiability,inherit,inherited,2408,"ny annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array contai",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2272,Security,hash,hashCode,2272,"Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Acc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1794,Testability,test,test,1794,"rdRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:4255,Testability,test,test,4255,"hods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RegionFilter.StandardRegionFilters valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<RegionFilter.StandardRegionFilters>. test; public boolean test(ImageData<?> imageData,; RegionRequest region). Specified by:; test in interface BiPredicate<ImageData<?>,RegionRequest>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:4276,Testability,test,test,4276,"hods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RegionFilter.StandardRegionFilters valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<RegionFilter.StandardRegionFilters>. test; public boolean test(ImageData<?> imageData,; RegionRequest region). Specified by:; test in interface BiPredicate<ImageData<?>,RegionRequest>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:4344,Testability,test,test,4344,"hods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RegionFilter.StandardRegionFilters valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<RegionFilter.StandardRegionFilters>. test; public boolean test(ImageData<?> imageData,; RegionRequest region). Specified by:; test in interface BiPredicate<ImageData<?>,RegionRequest>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:3093,Availability,down,downsamples,3093,"r from the viewer grid, if possible. void; detachViewerFromGrid(QuPathViewer viewer). Detach the specified viewer from the viewer grid, if possible. QuPathViewer; getActiveViewer(). Get the value of activeViewerProperty(). ObservableList<QuPathViewer>; getAllViewers(). Get an observable list of viewers. OverlayOptions; getOverlayOptions(). Get the overlay options shared by all viewers created by this manager. Region; getRegion(). Get the region node that can be added to a scene graph to display the viewers. boolean; getSynchronizeViewers(). Gets the value of the synchronizeViewers property. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; matchResolutions(). Match the display resolutions (downsamples) of all viewers to match the current viewer. void; refreshTitles(). Request that viewers refresh their titles. boolean; removeColumn(QuPathViewer viewer). Try to remove the column containing the specified viewer, notifying the user if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Sh",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:6973,Availability,down,downsamples,6973,"h); Create a new instance. Parameters:; qupath - ; Returns:. refreshTitles; public void refreshTitles(); Request that viewers refresh their titles.; This is only really needed for detached viewers, so that they are notified of any changes to the image name. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an observable list of viewers.; Note that the list is unmodifiable; viewers should be added or removed through other ; methods in thie class. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options shared by all viewers created by this manager. Returns:. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:. showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:. showScalebarProperty; public BooleanProperty showScalebarProperty(); Show the scalebar. Returns:. matchResolutions; public void matchResolutions(); Match the display resolutions (downsamples) of all viewers to match the current viewer.; This uses calibrated pixel size information if available. setActiveViewer; public void setActiveViewer(QuPathViewer viewer); Sets the value of the activeViewer property. Property description:; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty).; Parameters:; viewer - the value for the activeViewer property; See Also:. getActiveViewer(); activeViewerProperty(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. Returns:. getActiveViewer; public QuPathViewer getActiveViewer(); Get the value of activeViewerProperty(). Returns:. activeViewerProperty; public ReadOnlyObjectProperty<QuPathVi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:7078,Availability,avail,available,7078,"les(); Request that viewers refresh their titles.; This is only really needed for detached viewers, so that they are notified of any changes to the image name. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an observable list of viewers.; Note that the list is unmodifiable; viewers should be added or removed through other ; methods in thie class. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options shared by all viewers created by this manager. Returns:. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:. showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:. showScalebarProperty; public BooleanProperty showScalebarProperty(); Show the scalebar. Returns:. matchResolutions; public void matchResolutions(); Match the display resolutions (downsamples) of all viewers to match the current viewer.; This uses calibrated pixel size information if available. setActiveViewer; public void setActiveViewer(QuPathViewer viewer); Sets the value of the activeViewer property. Property description:; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty).; Parameters:; viewer - the value for the activeViewer property; See Also:. getActiveViewer(); activeViewerProperty(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. Returns:. getActiveViewer; public QuPathViewer getActiveViewer(); Get the value of activeViewerProperty(). Returns:. activeViewerProperty; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty(); Get a read-only property representing the currently active viewer.; O",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:12804,Availability,avail,available,12804,"Viewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach the specified viewer from the viewer grid, if possible.; This will remove the viewer from the grid, and create a new window to contain it. Parameters:; viewer - ; See Also:. detachViewerFromGrid(QuPathViewer). attachViewerToGrid; public void attachViewerToGrid(QuPathViewer viewer); Attach the specified viewer to the viewer grid, if possible.; It will be inserted in place of the first available empty viewer slot.; If no empty slots are available, an error will be shown. Parameters:; viewer - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:12856,Availability,avail,available,12856,"Viewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach the specified viewer from the viewer grid, if possible.; This will remove the viewer from the grid, and create a new window to contain it. Parameters:; viewer - ; See Also:. detachViewerFromGrid(QuPathViewer). attachViewerToGrid; public void attachViewerToGrid(QuPathViewer viewer); Attach the specified viewer to the viewer grid, if possible.; It will be inserted in place of the first available empty viewer slot.; If no empty slots are available, an error will be shown. Parameters:; viewer - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:12870,Availability,error,error,12870,"Viewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach the specified viewer from the viewer grid, if possible.; This will remove the viewer from the grid, and create a new window to contain it. Parameters:; viewer - ; See Also:. detachViewerFromGrid(QuPathViewer). attachViewerToGrid; public void attachViewerToGrid(QuPathViewer viewer); Attach the specified viewer to the viewer grid, if possible.; It will be inserted in place of the first available empty viewer slot.; If no empty slots are available, an error will be shown. Parameters:; viewer - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:1190,Integrability,synchroniz,synchronizeViewers,1190,"; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class ViewerManager. java.lang.Object; qupath.lib.gui.viewer.ViewerManager. All Implemented Interfaces:; EventListener, QuPathViewerListener. public class ViewerManager; extends Object; implements QuPathViewerListener; Class to manage multiple QuPathViewer instances in a UI region. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<QuPathViewer>; activeViewer. Get a read-only property representing the currently active viewer. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Read-only property containing the image open within the currently-active viewer. BooleanProperty; showLocation. Show the cursor location. BooleanProperty; showOverview. Show the overview image. BooleanProperty; showScalebar. Show the scalebar. ReadOnlyBooleanProperty; synchronizeViewers;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<QuPathViewer>; activeViewerProperty(). Get a read-only property representing the currently active viewer. void; addColumn(QuPathViewer viewer);  ; void; addRow(QuPathViewer viewer);  ; boolean; applyLastAnnotationToActiveViewer();  ; void; attachActiveViewerToGrid(). Insert the currently active viewer back into the viewer grid. void; attachViewerToGrid(QuPathViewer viewer). Attach the specified viewer to the viewer grid, if possible. static ViewerManager; create(QuPathGUI qupath). Create a new instance. protected QuPathViewerPlus; createViewer(). Create a viewer, adding it to the stored array but not adding it to any component (which is left up to the calling code to handle). void; detachActiveViewerFromGrid(). Detach the currently active viewer from the viewer grid, if possible. void; detachViewerFromGrid(QuPathViewer viewer",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:2674,Integrability,synchroniz,synchronizeViewers,2674,"rid. void; attachViewerToGrid(QuPathViewer viewer). Attach the specified viewer to the viewer grid, if possible. static ViewerManager; create(QuPathGUI qupath). Create a new instance. protected QuPathViewerPlus; createViewer(). Create a viewer, adding it to the stored array but not adding it to any component (which is left up to the calling code to handle). void; detachActiveViewerFromGrid(). Detach the currently active viewer from the viewer grid, if possible. void; detachViewerFromGrid(QuPathViewer viewer). Detach the specified viewer from the viewer grid, if possible. QuPathViewer; getActiveViewer(). Get the value of activeViewerProperty(). ObservableList<QuPathViewer>; getAllViewers(). Get an observable list of viewers. OverlayOptions; getOverlayOptions(). Get the overlay options shared by all viewers created by this manager. Region; getRegion(). Get the region node that can be added to a scene graph to display the viewers. boolean; getSynchronizeViewers(). Gets the value of the synchronizeViewers property. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; matchResolutions(). Match the display resolutions (downsamples) of all viewers to match the current viewer. void; refreshTitles(). Request that viewers refresh their titles. boolean; removeColumn(QuPathViewer viewer). Try to remove the column containing the specified viewer, notifying the user if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:3990,Integrability,synchroniz,synchronizeViewers,3990,"ing the image open within the currently-active viewer. void; matchResolutions(). Match the display resolutions (downsamples) of all viewers to match the current viewer. void; refreshTitles(). Request that viewers refresh their titles. boolean; removeColumn(QuPathViewer viewer). Try to remove the column containing the specified viewer, notifying the user if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. void; splitViewer(QuPathViewer viewer,; boolean splitVertical);  ; ReadOnlyBooleanProperty; synchronizeViewersProperty();  ; void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:4033,Integrability,synchroniz,synchronizeViewers,4033," void; matchResolutions(). Match the display resolutions (downsamples) of all viewers to match the current viewer. void; refreshTitles(). Request that viewers refresh their titles. boolean; removeColumn(QuPathViewer viewer). Try to remove the column containing the specified viewer, notifying the user if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. void; splitViewer(QuPathViewer viewer,; boolean splitVertical);  ; ReadOnlyBooleanProperty; synchronizeViewersProperty();  ; void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:4347,Integrability,synchroniz,synchronizeViewersProperty,4347,"if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. void; splitViewer(QuPathViewer viewer,; boolean splitVertical);  ; ReadOnlyBooleanProperty; synchronizeViewersProperty();  ; void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:5709,Integrability,synchroniz,synchronizeViewers,5709,"ic BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. imageDataProperty(). activeViewer; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty). See Also:. getActiveViewer(); setActiveViewer(QuPathViewer); activeViewerProperty(). synchronizeViewers; public ReadOnlyBooleanProperty synchronizeViewersProperty. See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean); synchronizeViewersProperty(). Method Details. create; public static ViewerManager create(QuPathGUI qupath); Create a new instance. Parameters:; qupath - ; Returns:. refreshTitles; public void refreshTitles(); Request that viewers refresh their titles.; This is only really needed for detached viewers, so that they are notified of any changes to the image name. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an observable list of viewers.; Note that the list is unmodifiable; viewers should be added or removed through other ; methods in thie class. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options shared by all viewers created by this manager. Returns:. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:. showLocationProperty; public BooleanProperty showLocationPr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:5760,Integrability,synchroniz,synchronizeViewersProperty,5760,"ic BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. imageDataProperty(). activeViewer; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty). See Also:. getActiveViewer(); setActiveViewer(QuPathViewer); activeViewerProperty(). synchronizeViewers; public ReadOnlyBooleanProperty synchronizeViewersProperty. See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean); synchronizeViewersProperty(). Method Details. create; public static ViewerManager create(QuPathGUI qupath); Create a new instance. Parameters:; qupath - ; Returns:. refreshTitles; public void refreshTitles(); Request that viewers refresh their titles.; This is only really needed for detached viewers, so that they are notified of any changes to the image name. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an observable list of viewers.; Note that the list is unmodifiable; viewers should be added or removed through other ; methods in thie class. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options shared by all viewers created by this manager. Returns:. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:. showLocationProperty; public BooleanProperty showLocationPr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:5856,Integrability,synchroniz,synchronizeViewersProperty,5856,"rty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. imageDataProperty(). activeViewer; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty). See Also:. getActiveViewer(); setActiveViewer(QuPathViewer); activeViewerProperty(). synchronizeViewers; public ReadOnlyBooleanProperty synchronizeViewersProperty. See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean); synchronizeViewersProperty(). Method Details. create; public static ViewerManager create(QuPathGUI qupath); Create a new instance. Parameters:; qupath - ; Returns:. refreshTitles; public void refreshTitles(); Request that viewers refresh their titles.; This is only really needed for detached viewers, so that they are notified of any changes to the image name. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an observable list of viewers.; Note that the list is unmodifiable; viewers should be added or removed through other ; methods in thie class. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options shared by all viewers created by this manager. Returns:. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:. showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:. showScalebarProperty; public BooleanProperty sho",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:9741,Integrability,interface,interface,9741,"ublic boolean removeRow(QuPathViewer viewer); Try to remove the row containing the specified viewer, notifying the user if this isn't possible. Parameters:; viewer - ; Returns:; true if the row was removed, false otherwise. removeColumn; public boolean removeColumn(QuPathViewer viewer); Try to remove the column containing the specified viewer, notifying the user if this isn't possible. Parameters:; viewer - ; Returns:; true if the column was removed, false otherwise. setGridSize; public boolean setGridSize(int nRows,; int nCols); Set the grid to have a specific number of rows and columns. Parameters:; nRows - ; nCols - ; Returns:. addRow; public void addRow(QuPathViewer viewer). addColumn; public void addColumn(QuPathViewer viewer). splitViewer; public void splitViewer(QuPathViewer viewer,; boolean splitVertical). resetGridSize; public void resetGridSize(). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the sync",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:9865,Integrability,interface,interface,9865,"oolean removeColumn(QuPathViewer viewer); Try to remove the column containing the specified viewer, notifying the user if this isn't possible. Parameters:; viewer - ; Returns:; true if the column was removed, false otherwise. setGridSize; public boolean setGridSize(int nRows,; int nCols); Set the grid to have a specific number of rows and columns. Parameters:; nRows - ; nCols - ; Returns:. addRow; public void addRow(QuPathViewer viewer). addColumn; public void addColumn(QuPathViewer viewer). splitViewer; public void splitViewer(QuPathViewer viewer,; boolean splitVertical). resetGridSize; public void resetGridSize(). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property de",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10175,Integrability,interface,interface,10175,"herwise. setGridSize; public boolean setGridSize(int nRows,; int nCols); Set the grid to have a specific number of rows and columns. Parameters:; nRows - ; nCols - ; Returns:. addRow; public void addRow(QuPathViewer viewer). addColumn; public void addColumn(QuPathViewer viewer). splitViewer; public void splitViewer(QuPathViewer viewer,; boolean splitVertical). resetGridSize; public void resetGridSize(). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10303,Integrability,interface,interface,10303,"ns:. addRow; public void addRow(QuPathViewer viewer). addColumn; public void addColumn(QuPathViewer viewer). splitViewer; public void splitViewer(QuPathViewer viewer,; boolean splitVertical). resetGridSize; public void resetGridSize(). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10615,Integrability,synchroniz,synchronizeViewers,10615,"public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10694,Integrability,synchroniz,synchronizeViewers,10694,"ufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToAc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10766,Integrability,synchroniz,synchronizeViewersProperty,10766,"Listener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10861,Integrability,synchroniz,synchronizeViewers,10861,"n interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerList",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10904,Integrability,synchroniz,synchronizeViewers,10904,"n interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerList",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10969,Integrability,synchroniz,synchronizeViewers,10969,"y open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11008,Integrability,synchroniz,synchronizeViewers,11008,"y open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11073,Integrability,synchroniz,synchronizeViewersProperty,11073,"hanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveVie",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11103,Integrability,synchroniz,synchronizeViewersProperty,11103,"pe); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11162,Integrability,synchroniz,synchronizeViewersProperty,11162,"pe); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11206,Integrability,synchroniz,synchronizeViewers,11206,"n the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerTo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11438,Integrability,interface,interface,11438,"epresenting the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html
