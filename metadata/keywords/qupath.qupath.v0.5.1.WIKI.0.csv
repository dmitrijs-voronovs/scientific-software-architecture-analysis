quality_attribute,keyword,matched_word,sentence,source,filename,author,repo,version,wiki,url
Integrability,interface,interfaces,dLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); DefaultROIComparator (QuPath 0.5.0); EllipseROI (QuPath 0.5.0); GeometryROI (QuPath 0.5.0); GeometryTools.GeometryConverter.Builder (QuPath 0.5.0); GeometryTools.GeometryConverter (QuPath 0.5.0); GeometryTools (QuPath 0.5.0); LineROI (QuPath 0.5.0); qupath.lib.roi (QuPath 0.5.0); qupath.lib.roi Class Hierarchy (QuPath 0.5.0); PointsROI (QuPath 0.5.0); PolygonROI (QuPath 0.5.0); PolylineROI (QuPath 0.5.0); RectangleROI (QuPath 0.5.0); RoiEditor (QuPath 0.5.0); ROIs (QuPath 0.5.0); RoiTools.CombineOp (QuPath 0.5.0); RoiTools (QuPath 0.5.0); ShapeSimplifier (QuPath 0.5.0). /scripting; . /languages; ; AutoCompletions.Completion (QuPath 0.5.0); AutoCompletions.CompletionTokenizer (QuPath 0.5.0); AutoCompletions (QuPath 0.5.0); ExecutableLanguage (QuPath 0.5.0); qupath.lib.scripting.languages,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
Modifiability,plugin,plugins,objects.utils (QuPath 0.5.0); qupath.lib.objects.utils Class Hierarchy (QuPath 0.5.0); Tiler.Builder (QuPath 0.5.0); Tiler (QuPath 0.5.0); Tiler.TileAlignment (QuPath 0.5.0). CellTools (QuPath 0.5.0); DefaultPathObjectComparator (QuPath 0.5.0); DefaultPathObjectConnectionGroup (QuPath 0.5.0); MetadataStore (QuPath 0.5.0); qupath.lib.objects (QuPath 0.5.0); qupath.lib.objects Class Hierarchy (QuPath 0.5.0); PathAnnotationObject (QuPath 0.5.0); PathCellObject (QuPath 0.5.0); PathDetectionObject (QuPath 0.5.0); PathObject (QuPath 0.5.0); PathObjectConnectionGroup (QuPath 0.5.0); PathObjectConnections (QuPath 0.5.0); PathObjectFilter (QuPath 0.5.0); PathObjectPredicates (QuPath 0.5.0); PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0); PathObjectReader (QuPath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScri,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
Safety,detect,detect,﻿. QuPath. assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0);,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
Testability,log,logging,Extension (QuPath 0.5.0); Subcommand (QuPath 0.5.0); UpdateChecker (QuPath 0.5.0); UpdateChecker.ReleaseVersion (QuPath 0.5.0). /images; . /servers; ; ChannelDisplayTransformServer (QuPath 0.5.0); qupath.lib.gui.images.servers (QuPath 0.5.0); qupath.lib.gui.images.servers Class Hierarchy (QuPath 0.5.0); PathHierarchyImageServer (QuPath 0.5.0); RenderedImageServer.Builder (QuPath 0.5.0); RenderedImageServer (QuPath 0.5.0). /stores; ; AbstractImageRenderer (QuPath 0.5.0); ColorModelRenderer (QuPath 0.5.0); DefaultImageRegionStore (QuPath 0.5.0); ImageRegionRenderer (QuPath 0.5.0); ImageRegionStoreFactory (QuPath 0.5.0); ImageRegionStoreHelpers (QuPath 0.5.0); ImageRenderer (QuPath 0.5.0); qupath.lib.gui.images.stores (QuPath 0.5.0); qupath.lib.gui.images.stores Class Hierarchy (QuPath 0.5.0); TileListener (QuPath 0.5.0). /localization; ; qupath.lib.gui.localization (QuPath 0.5.0); qupath.lib.gui.localization Class Hierarchy (QuPath 0.5.0); QuPathResources (QuPath 0.5.0). /logging; ; LogManager (QuPath 0.5.0); LogManager.LogLevel (QuPath 0.5.0); qupath.lib.gui.logging (QuPath 0.5.0); qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0); TextAppendable (QuPath 0.5.0). /measure; ; ObservableMeasurementTableData (QuPath 0.5.0); qupath.lib.gui.measure (QuPath 0.5.0); qupath.lib.gui.measure Class Hierarchy (QuPath 0.5.0); PathTableData (QuPath 0.5.0). /panes; ; AnnotationPane (QuPath 0.5.0); ImageDetailsPane (QuPath 0.5.0); MeasurementMapPane (QuPath 0.5.0); ObjectDescriptionPane (QuPath 0.5.0); ObjectTreeBrowser (QuPath 0.5.0); qupath.lib.gui.panes (QuPath 0.5.0); qupath.lib.gui.panes Class Hierarchy (QuPath 0.5.0); PathObjectHierarchyView (QuPath 0.5.0); PreferencePane.AppearancePreferences (QuPath 0.5.0); PreferencePane.DrawingPreferences (QuPath 0.5.0); PreferencePane.ExtensionPreferences (QuPath 0.5.0); PreferencePane.GeneralPreferences (QuPath 0.5.0); PreferencePane (QuPath 0.5.0); PreferencePane.InputOutputPreferences (QuPath 0.5.0); PreferencePane.LocalePreferences,MatchSource.WIKI,index-wcopy.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/index-wcopy.html
Availability,mask,mask,". Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Inte",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Deployability,pipeline,pipeline,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Energy Efficiency,adapt,adapting," the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. BooleanParameter. Parameter that can take on true of false value - or null. BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Integrability,wrap,wrappers,"tation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateMenuActions;  ; AwtTools. A collection of static methods useful when working with AWT shapes and ImageRegions. BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Modifiability,plugin,plugin,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Performance,perform,perform," All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action sho",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Safety,detect,detected,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Security,access,access,"s. Static functions to help work with RGB(A) colors using packed ints. ColorToolsAwt. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Testability,log,logs,"olors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training ",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Usability,learn,learning,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,javadoc/docs/allclasses-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html
Deployability,install,install,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
Integrability,interface,interface,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
Modifiability,plugin,plugins,"x; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transf",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
Safety,detect,detect,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
Security,access,accessing,"native script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.o",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
Testability,log,logging," dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
Usability,simpl,simple,"ng ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and ",MatchSource.WIKI,javadoc/docs/allpackages-index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html
Energy Efficiency,power,power,"R; ""\t"". qupath.lib.images.servers.PixelCalibration. Modifier and Type; Constant Field; Value; public static final String; PIXEL; ""px""; public static final String; Z_SLICE; ""z-slice"". qupath.lib.images.servers.openslide.jna.OpenSlide. Modifier and Type; Constant Field; Value; public static final String; PROPERTY_NAME_BACKGROUND_COLOR; ""openslide.background-color""; public static final String; PROPERTY_NAME_BOUNDS_HEIGHT; ""openslide.bounds-height""; public static final String; PROPERTY_NAME_BOUNDS_WIDTH; ""openslide.bounds-width""; public static final String; PROPERTY_NAME_BOUNDS_X; ""openslide.bounds-x""; public static final String; PROPERTY_NAME_BOUNDS_Y; ""openslide.bounds-y""; public static final String; PROPERTY_NAME_COMMENT; ""openslide.comment""; public static final String; PROPERTY_NAME_MPP_X; ""openslide.mpp-x""; public static final String; PROPERTY_NAME_MPP_Y; ""openslide.mpp-y""; public static final String; PROPERTY_NAME_OBJECTIVE_POWER; ""openslide.objective-power""; public static final String; PROPERTY_NAME_QUICKHASH1; ""openslide.quickhash-1""; public static final String; PROPERTY_NAME_VENDOR; ""openslide.vendor"". qupath.lib.objects.DefaultPathObjectConnectionGroup. Modifier and Type; Constant Field; Value; public static final String; KEY_OBJECT_CONNECTIONS; ""OBJECT_CONNECTIONS"". qupath.lib.objects.TMACoreObject. Modifier and Type; Constant Field; Value; public static final String; KEY_CASE_ID; ""Case ID""; public static final String; KEY_OS_CENSORED; ""OS censored""; public static final String; KEY_OVERALL_SURVIVAL; ""Overall survival""; public static final String; KEY_RECURRENCE_FREE_SURVIVAL; ""Recurrence-free survival""; public static final String; KEY_RFS_CENSORED; ""RFS censored""; public static final String; LEGACY_KEY_UNIQUE_ID; ""Unique ID"". qupath.lib.objects.classes.PathClass. Modifier and Type; Constant Field; Value; public static final String; NAME_NEGATIVE; ""Negative""; public static final String; NAME_ONE_PLUS; ""1+""; public static final String; NAME_POSITIVE; ""Positive""",MatchSource.WIKI,javadoc/docs/constant-values.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/constant-values.html
Testability,log,logs,"lue; public static final String; PROJECT_LOCATION; ""classifiers/pixel_classifiers"". qupath.lib.color.ColorDeconvolutionStains. Modifier and Type; Constant Field; Value; public static final String; DAB; ""DAB""; public static final String; EOSIN; ""Eosin""; public static final String; HEMATOXYLIN; ""Hematoxylin"". qupath.lib.common.GeneralTools. Modifier and Type; Constant Field; Value; public static final String; SYMBOL_MICROMETER; ""\u00b5m""; public static final char; SYMBOL_MU; '\u00b5'; public static final char; SYMBOL_SIGMA; '\u03c3'. qupath.lib.gui.JavadocViewer. Modifier and Type; Constant Field; Value; public static final String; PROP_JAVADOC_PATH; ""javadoc"". qupath.lib.gui.QuPathGUI. Modifier and Type; Constant Field; Value; public static final int; TOOLBAR_ICON_SIZE; 16. qupath.lib.gui.UserDirectoryManager. Modifier and Type; Constant Field; Value; public static final String; DIR_COLORMAPS; ""colormaps""; public static final String; DIR_CSS; ""css""; public static final String; DIR_EXTENSIONS; ""extensions""; public static final String; DIR_LOCALIZATION; ""localization""; public static final String; DIR_LOGS; ""logs""; public static final String; DIR_SCRIPTS; ""scripts"". qupath.lib.gui.commands.InteractiveObjectImporter. Modifier and Type; Constant Field; Value; public static final String; MIME_TYPE_GEOJSON; ""application/geo+json"". qupath.lib.gui.measure.ObservableMeasurementTableData. Modifier and Type; Constant Field; Value; public static final String; NAME_OBJECT_ID; ""Object ID"". qupath.lib.gui.tma.TMADataIO. Modifier and Type; Constant Field; Value; public static final String; TMA_DEARRAYING_DATA_EXTENSION; "".qptma"". qupath.lib.gui.viewer.recording.ViewTracker. Modifier and Type; Constant Field; Value; protected static final String; LOG_DELIMITER; ""\t"". qupath.lib.images.servers.PixelCalibration. Modifier and Type; Constant Field; Value; public static final String; PIXEL; ""px""; public static final String; Z_SLICE; ""z-slice"". qupath.lib.images.servers.openslide.jna.OpenSl",MatchSource.WIKI,javadoc/docs/constant-values.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/constant-values.html
Availability,reliab,reliable,"use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(ROI, String) instead. qupath.opencv.tools.OpenCVTools.getCircularStructuringElement(int). OpenCVTools.createDisk(int, boolean) gives more reliable shapes. qupath.opencv.tools.OpenCVTools.labelImage(Mat, Mat, int). Use OpenCVTools.label(Mat, Mat, int) instead. qupathj.QuPath_Send_Overlay_to_QuPath.createPathObjectsFromROIs(ImagePlus, Roi[], ImageServer<?>, double, boolean, boolean, ImagePlane). use instead QuPath_Send_Overlay_to_QuPath.createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Deprecated Constructors. Constructor; Description; qupath.lib.gui.commands.MiniViewers.MiniViewerManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>). use MiniViewers.createManager(QuPathViewer, Collection) instead. ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
Deployability,release,release,"s may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. qupath.lib.images.servers.ImageServer.readBufferedImage(RegionRequest). since v0.4.0. Implementations of ImageServer should override ImageServer.readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. qupath.lib.images.servers.LabeledImageServer.Builder.useUniqueLabels(). in favor of LabeledImageServer.Builder.useInstanceLabels(). qupath.lib.images.servers.TileRequest.getPlane(). v0.4.0 use TileRequest.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries.writePyramid(String). use OMEPyramidWriter.OMEPyramidSeries.writeSeries(String) instead. qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries.writePyramid(PyramidOMETiffWriter, IMetadata, int). use OMEPyramidWriter.OMEPyramidSeries.writeSeries(IFormatWriter, IMetadata, int) instead. qupath.lib.io.PathIO.getObjectFileExtensions(). use PathIO.getObjectFileExtensions(boolean) instead. qupath.lib.io.PathIO.readSerializedServerPath(File). This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
Energy Efficiency,green,green,"ath.process.gui.ProcessingExtension.OpenCVCommands.actionFastCellCounts. Deprecated Methods. Method; Description; qupath.imagej.tools.IJTools.convertToAnnotation(ImagePlus, ImageServer<?>, Roi, double, ImagePlane). use instead IJTools.convertToAnnotation(Roi, double, double, double, ImagePlane). qupath.imagej.tools.IJTools.convertToDetection(ImagePlus, ImageServer<?>, Roi, double, ImagePlane). use instead IJTools.convertToDetection(Roi, double, double, double, ImagePlane). qupath.imagej.tools.IJTools.convertToPathObject(ImagePlus, ImageServer<?>, Roi, double, Function<ROI, PathObject>, ImagePlane). use instead IJTools.convertToPathObject(Roi, double, double, double, Function, ImagePlane). qupath.lib.common.ColorTools.makeRGB(int, int, int). Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. qupath.lib.common.ColorTools.makeRGBA(int, int, int, int). The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. qupath.lib.common.GeneralTools.getNameWithoutExtension(String). v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. qupath.lib.display.ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean). use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). qupath.lib.gui.images.servers.RenderedImageServer.Builder.display(ImageDisplay). use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
Integrability,interface,interfaces,"Object.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String). use ParameterList.convertToJson(ParameterList) instead. qupath.lib.projects.ProjectImageEntry.getServerURIs(). use instead UriResource.getURIs(). qupath.lib.projects.ProjectImageEntry.updateServerURIs(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
Modifiability,extend,extends,", Roi, double, ImagePlane). use instead IJTools.convertToDetection(Roi, double, double, double, ImagePlane). qupath.imagej.tools.IJTools.convertToPathObject(ImagePlus, ImageServer<?>, Roi, double, Function<ROI, PathObject>, ImagePlane). use instead IJTools.convertToPathObject(Roi, double, double, double, Function, ImagePlane). qupath.lib.common.ColorTools.makeRGB(int, int, int). Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. qupath.lib.common.ColorTools.makeRGBA(int, int, int, int). The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. qupath.lib.common.GeneralTools.getNameWithoutExtension(String). v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. qupath.lib.display.ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean). use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). qupath.lib.gui.images.servers.RenderedImageServer.Builder.display(ImageDisplay). use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). u",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
Performance,load,loadImageData,".duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(ROI, String) instead. qupath.opencv.tools.OpenCVTools.getCircularStructuringElement(int). OpenCVTools.createDisk(int, boolean) gives ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
Safety,avoid,avoid,"cePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. qupath.lib.images.servers.ImageServer.readBufferedImage(RegionRequest). since v0.4.0. Implementations of ImageServer should override ImageServer.readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain ",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
Usability,clear,clearPathObjects," confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjects(Collection<? extends PathObject>). since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectWithoutUpdate(PathObject). since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.removePathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.PathObject.addPathObject(PathObject). since v0.4.0, replaced by PathObject.addChildObject(PathObject). qupath.lib.objects.PathObject.addPathObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters",MatchSource.WIKI,javadoc/docs/deprecated-list.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html
Integrability,interface,interfaces,"low you to navigate to specific declarations and summary pages, including: All Packages, All Classes and Interfaces. Search; You can search for definitions of modules, packages, types, fields, methods, system properties and other terms defined in the API. These items can be searched using part or all of the name, optionally using ""camelCase"" abbreviations, or multiple search terms separated by whitespace. Some examples:. ""j.l.obj"" matches ""java.lang.Object""; ""InpStr"" matches ""java.io.InputStream""; ""math exact long"" matches ""java.lang.Math.absExact(long)"". Refer to the Javadoc Search Specification for a full description of search features. Kinds of Pages; The following sections describe the different kinds of pages in this collection. Overview; The Overview page is the front page of this API document and provides a list of all packages with a summary for each. This page can also contain an overall description of the set of packages. Package; Each package has a page that contains a list of its classes and interfaces, with a summary for each. These pages may contain the following categories:. Interfaces; Classes; Enum Classes; Exception Classes; Annotation Interfaces. Class or Interface; Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a declaration and description, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required an",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
Modifiability,inherit,inheritance,"eld Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Seri",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
Testability,log,logical,"scription, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the",MatchSource.WIKI,javadoc/docs/help-doc.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html
Availability,down,downsample,"or ; annotations with the given classification. addLabel(PathClass, int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by PathClass, where the label represents the integer label used for ; annotations with the given classification. addLabels(Map<PathClass, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by PathClass, where the key represents a PathClass and the value ; represents the integer label that should be used for annotations of the given class. addLabelsByName(Map<String, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. addLevel(double, int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level by providing a downsample value, width and height. addLevel(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level based on level dimensions, estimating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Deployability,pipeline,pipeline,"nt has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageServer(Class<T>) - Constructor for class qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - C",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Energy Efficiency,green,green,"mImages(Mat...) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from one or more mats. blobFromImages(Mat, double, Size, Scalar, boolean, boolean) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. BlobFunction<T> - Interface in qupath.opencv.dnn. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. blue(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit blue value from a packed RGB value. Blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel only. BLUE - Static variable in class qupath.lib.common.ColorTools. Packed int representing blue. BLUE - Static variable in class qupath.lib.images.servers.ImageChannel. Default blue channel for RGB images. Blue_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel optical densities. blueChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). BooleanParameter - Class in qupath.lib.plugins.parameters. Parameter that can take on true of false value - or null. BOTTOM_CENTER - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOUNDARIES_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell boundaries. boundaryDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Integrability,interface,interface,"..) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addDensities(String, PathObjectPredicates.PathObjectPredicate) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Add a filter for computing densities. addDirectoryPropertyPreference(Property<String>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addDoubleParameter(String, String, double) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a double parameter to this list. addDoubleParameter(String, String, double, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded double parameter to this list. addDoubleParameter(String, String, double, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a double parameter to this list, optionally including a unit and help text. addDuplicate(ProjectImageEntry<T>, boolean) - Method in interface qupath.lib.projects.Project. Add an image by duplicating an existing entry. ADDED - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. An object has been added. addEmptyParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an 'empty' parameter, that is one that does not take any values. addEvent(double, boolean) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Insert a new event. addEvents(Collection<KaplanMeierData.KaplanMeierEvent>) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Add a collection of events. addFileDropHandler(DragDropImportListener.DropHandler<File>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Add a new File DropHandler. addFullResolutionLevel() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add the full-resolution image as a level of the pyr",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Modifiability,plugin,plugins,"easurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above the threshold. above(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementati",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Performance,perform,perform,". Abstract implementation of ImageServer providing some common functionality. AbstractImageServer(Class<T>) - Constructor for class qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - Constructor for class qupath.lib.plugins.AbstractInteractivePlugin;  ; AbstractObjectClassifier<T> - Class in qupath.lib.classifiers.object. Abstract class to help with the creation of object classifiers. AbstractObjectClassifier(PathObjectFilter) - Constructor for class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; AbstractOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract class to help with implementing PathOverlays. AbstractOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; AbstractOverlay.LocationStringFunction - Interface in qupath.lib.gui.viewer.overlays. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Safety,detect,detected,"ich the specified measurement has a value above the threshold. above(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageSe",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Security,access,access,"rm. ColorTransformTypeAdapter() - Constructor for class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; combineROIs(ROI, ROI, RoiTools.CombineOp) - Static method in class qupath.lib.roi.RoiTools. Combine two shape ROIs together. combineSelectedAnnotations(ImageData<?>, RoiTools.CombineOp) - Static method in class qupath.lib.gui.commands.Commands. Combine the selected annotations for the specified hierarchy. comboPasteEscape - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; COMMAND_LIST - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTask",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Testability,log,logging,"object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title parameter. addTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid and set it as active on the hierarchy for an image. addUnclassifiedLabel(int) - Method in class qupath.lib.images.servers.LabeledImageSer",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Usability,learn,learning,"nt has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageServer(Class<T>) - Constructor for class qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - C",MatchSource.WIKI,javadoc/docs/index-all.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html
Deployability,install,install,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,javadoc/docs/index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html
Integrability,interface,interface,". Overview (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. QuPath 0.5.0. Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.p",MatchSource.WIKI,javadoc/docs/index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html
Modifiability,plugin,plugins,"d; Index; Help. SEARCH. QuPath 0.5.0. Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transf",MatchSource.WIKI,javadoc/docs/index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html
Safety,detect,detect,". Overview (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. QuPath 0.5.0. Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.p",MatchSource.WIKI,javadoc/docs/index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html
Security,access,accessing,"native script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.o",MatchSource.WIKI,javadoc/docs/index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html
Testability,log,logging," dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath",MatchSource.WIKI,javadoc/docs/index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html
Usability,simpl,simple,"ng ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and ",MatchSource.WIKI,javadoc/docs/index.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html
Integrability,interface,interfaces,"ath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.images.servers, ; qupath.lib.images.servers.bioformats, ; qupath.lib.images.servers.openslide, ; qupath.lib.images.servers.openslide.jna, ; qupath.lib.images.writers, ; qupath.lib.images.writers.ome, ; qupath.lib.io, ; qupath.lib.measurements, ; qupath.lib.objects, ; qupath.lib.objects.classes, ; qupath.lib.objects.hierarchy, ; qupath.lib.objects.hierarchy.events, ; qupath.lib.objects.utils, ; qupath.lib.plugins, ; qupath.lib.plugins.objects, ; qupath.lib.plugins.parameters, ; qupath.lib.plugins.workflow, ; qupath.lib.projects, ; qupath.lib.regions, ; qupath.lib.roi, ; qupath.lib.roi.interfaces, ; qupath.lib.scripting, ; qupath.lib.scripting.languages, ; qupath.opencv, ; qupath.opencv.dnn, ; qupath.opencv.features, ; qupath.opencv.io, ; qupath.opencv.ml, ; qupath.opencv.ml.objects, ; qupath.opencv.ml.objects.features, ; qupath.opencv.ml.pixel, ; qupath.opencv.ops, ; qupath.opencv.tools, ; qupath.process.gui, ; qupath.process.gui.commands, ; qupath.process.gui.commands.density, ; qupath.process.gui.commands.ml, ; qupath.process.gui.commands.ui, ; qupathj. Class Hierarchy. java.lang.Object. qupath.opencv.dnn.AbstractDnnModel<T> (implements qupath.opencv.dnn.DnnModel). qupath.opencv.dnn.OpenCVDnn (implements qupath.lib.io.UriResource). qupath.lib.gui.images.stores.AbstractImageRenderer (implements qupath.lib.gui.images.stores.ImageRenderer). qupath.lib.display.ImageDisplay. qupath.lib.images.servers.AbstractImageServer<T> (implements qupath.lib.images.servers.ImageServer<T>). qupath.lib.images.servers.AbstractTileableImageServer. qupath.lib.images.servers.bioformats.BioFormatsIm",MatchSource.WIKI,javadoc/docs/overview-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html
Modifiability,plugin,plugins,"calization, ; qupath.lib.gui.logging, ; qupath.lib.gui.measure, ; qupath.lib.gui.panes, ; qupath.lib.gui.prefs, ; qupath.lib.gui.scripting, ; qupath.lib.gui.scripting.completors, ; qupath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.images.servers, ; qupath.lib.images.servers.bioformats, ; qupath.lib.images.servers.openslide, ; qupath.lib.images.servers.openslide.jna, ; qupath.lib.images.writers, ; qupath.lib.images.writers.ome, ; qupath.lib.io, ; qupath.lib.measurements, ; qupath.lib.objects, ; qupath.lib.objects.classes, ; qupath.lib.objects.hierarchy, ; qupath.lib.objects.hierarchy.events, ; qupath.lib.objects.utils, ; qupath.lib.plugins, ; qupath.lib.plugins.objects, ; qupath.lib.plugins.parameters, ; qupath.lib.plugins.workflow, ; qupath.lib.projects, ; qupath.lib.regions, ; qupath.lib.roi, ; qupath.lib.roi.interfaces, ; qupath.lib.scripting, ; qupath.lib.scripting.languages, ; qupath.opencv, ; qupath.opencv.dnn, ; qupath.opencv.features, ; qupath.opencv.io, ; qupath.opencv.ml, ; qupath.opencv.ml.objects, ; qupath.opencv.ml.objects.features, ; qupath.opencv.ml.pixel, ; qupath.opencv.ops, ; qupath.opencv.tools, ; qupath.process.gui, ; qupath.process.gui.commands, ; qupath.process.gui.commands.density, ; qupath.process.gui.commands.ml, ; qupath.process.gui.commands.ui, ; qupathj. Class Hierarchy. java.lang.Object. qupath.opencv.dnn.AbstractDnnModel<T> (implements qupath.opencv.dnn.DnnModel). qupath.opencv.dnn.OpenCVDnn (implements qupath.lib.io.UriResource). qupath.lib.gui.images.stores.AbstractImageRenderer (implements qupath.lib.gui.images.stores.ImageRenderer). qupath.lib.display.ImageDisplay. qupath.lib.images.serve",MatchSource.WIKI,javadoc/docs/overview-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html
Safety,detect,detect,". Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For All Packages. Package Hierarchies:. qupath, ; qupath.ext.openslide, ; qupath.imagej.detect.cells, ; qupath.imagej.detect.dearray, ; qupath.imagej.detect.tissue, ; qupath.imagej.gui, ; qupath.imagej.images.servers, ; qupath.imagej.images.writers, ; qupath.imagej.processing, ; qupath.imagej.superpixels, ; qupath.imagej.tools, ; qupath.lib.algorithms, ; qupath.lib.analysis, ; qupath.lib.analysis.algorithms, ; qupath.lib.analysis.features, ; qupath.lib.analysis.heatmaps, ; qupath.lib.analysis.images, ; qupath.lib.analysis.stats, ; qupath.lib.analysis.stats.survival, ; qupath.lib.awt.common, ; qupath.lib.classifiers, ; qupath.lib.classifiers.object, ; qupath.lib.classifiers.pixel, ; qupath.lib.color, ; qupath.lib.common, ; qupath.lib.display, ; qupath.lib.display.settings, ; qupath.lib.experimental.pixels, ; qupath.lib.extension.svg, ; qupath.lib.geom, ; qupath.lib.gui, ; qupath.lib.gui.actions, ; qupath.lib.gui.actions.annotations, ; qupath.lib.gui.actions.menus, ; qupath.lib.gui.charts, ; qupath.lib.gui.commands, ; qupath.lib.gui.commands.display, ; qupath.lib.gui.commands.objects, ; qupath.lib.gui.dialogs, ; qupath.lib.gui.extensions, ; qupath.lib.gui.images.servers, ; qupath.lib.gui.images.stores, ; qupath.lib.gui.localization, ; qupath.lib.gui.logging, ; qupath.lib.gui.measure, ; qupath.lib.gui.panes, ; qupath.lib.gui.prefs, ; qupath.lib.gui.scripting, ; qupath.lib.gui.scripting.completors, ; qupath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.im",MatchSource.WIKI,javadoc/docs/overview-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html
Security,secur,security,mmands.ml.BoundaryStrategy; qupath.lib.gui.commands.BrightnessContrastCommand (implements java.lang.Runnable); qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. qupath.process.gui.WandToolEventHandler. qupath.lib.awt.common.BufferedImageTools; qupath.lib.gui.BuildInfo; qupath.process.gui.commands.CellIntensityClassificationCommand (implements java.lang.Runnable); qupath.lib.objects.CellTools; qupath.lib.display.settings.ChannelColor; qupath.lib.display.settings.ChannelSettings; qupath.lib.gui.charts.Charts; qupath.lib.gui.charts.Charts.BarChartBuilder; qupath.lib.gui.charts.Charts.PieChartBuilder; qupath.lib.gui.charts.Charts.ScatterChartBuilder; qupath.lib.gui.charts.ChartTools; qupath.lib.plugins.parameters.ChoiceParameter<S>; qupath.process.gui.commands.ml.ClassificationResolution; qupath.lib.gui.actions.menus.ClassifyMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.scripting.richtextfx.CodeAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.lib.color.ColorDeconvMatrix3x3; qupath.lib.color.ColorDeconvolutionHelper; qupath.lib.color.ColorDeconvolutionStains (implements java.io.Externalizable); qupath.lib.color.ColorMaps; qupath.lib.color.ColorModelFactory; qupath.lib.gui.images.stores.ColorModelRenderer (implements qupath.lib.gui.images.stores.ImageRenderer); qupath.lib.analysis.heatmaps.ColorModels; qupath.lib.color.ColorModels; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand; qupath.lib.color.ColorModels.DisplayBand; qupath.lib.common.ColorTools; qupath.lib.color.ColorToolsAwt; qupath.lib.gui.tools.ColorToolsFX; qupath.lib.color.ColorTransformer; qupath.lib.images.servers.ColorTransforms; qupath.lib.gui.tools.CommandFinderTools; qupath.lib.gui.tools.CommandFinderTools.CommandEntry; qu,MatchSource.WIKI,javadoc/docs/overview-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html
Testability,log,logging," ; qupath.imagej.superpixels, ; qupath.imagej.tools, ; qupath.lib.algorithms, ; qupath.lib.analysis, ; qupath.lib.analysis.algorithms, ; qupath.lib.analysis.features, ; qupath.lib.analysis.heatmaps, ; qupath.lib.analysis.images, ; qupath.lib.analysis.stats, ; qupath.lib.analysis.stats.survival, ; qupath.lib.awt.common, ; qupath.lib.classifiers, ; qupath.lib.classifiers.object, ; qupath.lib.classifiers.pixel, ; qupath.lib.color, ; qupath.lib.common, ; qupath.lib.display, ; qupath.lib.display.settings, ; qupath.lib.experimental.pixels, ; qupath.lib.extension.svg, ; qupath.lib.geom, ; qupath.lib.gui, ; qupath.lib.gui.actions, ; qupath.lib.gui.actions.annotations, ; qupath.lib.gui.actions.menus, ; qupath.lib.gui.charts, ; qupath.lib.gui.commands, ; qupath.lib.gui.commands.display, ; qupath.lib.gui.commands.objects, ; qupath.lib.gui.dialogs, ; qupath.lib.gui.extensions, ; qupath.lib.gui.images.servers, ; qupath.lib.gui.images.stores, ; qupath.lib.gui.localization, ; qupath.lib.gui.logging, ; qupath.lib.gui.measure, ; qupath.lib.gui.panes, ; qupath.lib.gui.prefs, ; qupath.lib.gui.scripting, ; qupath.lib.gui.scripting.completors, ; qupath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.images.servers, ; qupath.lib.images.servers.bioformats, ; qupath.lib.images.servers.openslide, ; qupath.lib.images.servers.openslide.jna, ; qupath.lib.images.writers, ; qupath.lib.images.writers.ome, ; qupath.lib.io, ; qupath.lib.measurements, ; qupath.lib.objects, ; qupath.lib.objects.classes, ; qupath.lib.objects.hierarchy, ; qupath.lib.objects.hierarchy.events, ; qupath.lib.objects.utils, ; qupath.lib.plugins, ; qupath.lib.plugins.objects, ; qupath",MatchSource.WIKI,javadoc/docs/overview-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html
Modifiability,config,configure,. Search (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Search. Additional resources. The help page provides an introduction to the scope and syntax of JavaDoc search.; You can use the <ctrl> or <cmd> keys in combination with the left and right arrow keys to switch between result tabs in this page.; The URL template below may be used to configure this page as a search engine in browsers that support this feature. It has been tested to work in Google Chrome and Mozilla Firefox. Note that other browsers may not support this feature or require a different URL format.; linkCopy. Redirect to first result. Loading search index... ,MatchSource.WIKI,javadoc/docs/search.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/search.html
Testability,test,tested,. Search (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Search. Additional resources. The help page provides an introduction to the scope and syntax of JavaDoc search.; You can use the <ctrl> or <cmd> keys in combination with the left and right arrow keys to switch between result tabs in this page.; The URL template below may be used to configure this page as a search engine in browsers that support this feature. It has been tested to work in Google Chrome and Mozilla Firefox. Note that other browsers may not support this feature or require a different URL format.; linkCopy. Redirect to first result. Loading search index... ,MatchSource.WIKI,javadoc/docs/search.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/search.html
Modifiability,extend,extends,". Serialized Form (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Serialized Form. Package qupath.lib.color. Class qupath.lib.color.ColorDeconvolutionStains; class ColorDeconvolutionStains extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.color.StainVector; class StainVector extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.geom. Class qupath.lib.geom.Point2; class Point2 extends qupath.lib.geom.AbstractPoint implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.images.servers.openslide.jna. Exception Class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException; class OpenSlideDisposedException extends RuntimeException implements Serializable. Package qupath.lib.measurements. Class qupath.lib.measurements.NumericMeasurementList.DoubleList; class DoubleList extends qupath.lib.measurements.NumericMeasurementList.AbstractNumericMeasurementList implements Serializable. serialVersionUID:; 1L. Serialized Fields. values; double[] values. Class qupath.lib.measurements.NumericMeasurementList.FloatL",MatchSource.WIKI,javadoc/docs/serialized-form.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html
Modifiability,plugin,plugins,. qupath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath. package qupath. Package containing the main QuPath launcher. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. Classes. Class; Description; QuPath. Main QuPath launcher. ,MatchSource.WIKI,javadoc/docs/qupath/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/package-summary.html
Modifiability,extend,extends,". QuPath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath; Class QuPath. java.lang.Object; qupath.QuPath. public class QuPath; extends Object; Main QuPath launcher. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args). Main class to launch QuPath. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath; public QuPath(). Method Details. main; public static void main(String[] args); Main class to launch QuPath. Parameters:; args - . ",MatchSource.WIKI,javadoc/docs/qupath/QuPath.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/QuPath.html
Security,hash,hashCode,". QuPath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath; Class QuPath. java.lang.Object; qupath.QuPath. public class QuPath; extends Object; Main QuPath launcher. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args). Main class to launch QuPath. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath; public QuPath(). Method Details. main; public static void main(String[] args); Main class to launch QuPath. Parameters:; args - . ",MatchSource.WIKI,javadoc/docs/qupath/QuPath.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/QuPath.html
Deployability,install,install,. qupathj (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupathj. package qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. Classes. Class; Description; QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. ,MatchSource.WIKI,javadoc/docs/qupathj/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/package-summary.html
Modifiability,plugin,plugins,. qupathj (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupathj. package qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. Classes. Class; Description; QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. ,MatchSource.WIKI,javadoc/docs/qupathj/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/package-summary.html
Modifiability,plugin,plugin,. qupathj Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupathj. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupathj.QuPath_Send_Overlay_to_QuPath (implements ij.plugin.PlugIn); qupathj.QuPath_Send_ROI_to_QuPath (implements ij.plugin.PlugIn). ,MatchSource.WIKI,javadoc/docs/qupathj/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/package-tree.html
Availability,down,downsample,"cript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupathj; Class QuPath_Send_Overlay_to_QuPath. java.lang.Object; qupathj.QuPath_Send_Overlay_to_QuPath. All Implemented Interfaces:; PlugIn. public class QuPath_Send_Overlay_to_QuPath; extends Object; implements PlugIn; ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath.; ; Optionally measure the ROIs first, and include the measurements as features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_Overlay_to_QuPath();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; Image",MatchSource.WIKI,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html
Integrability,interface,interface,"odsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Legacy method to turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; server - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:. createObjectsFromROIs; public static List<PathObject> createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; downsample - ; asDetection - ; includeMeas",MatchSource.WIKI,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html
Modifiability,extend,extends,". QuPath_Send_Overlay_to_QuPath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupathj; Class QuPath_Send_Overlay_to_QuPath. java.lang.Object; qupathj.QuPath_Send_Overlay_to_QuPath. All Implemented Interfaces:; PlugIn. public class QuPath_Send_Overlay_to_QuPath; extends Object; implements PlugIn; ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath.; ; Optionally measure the ROIs first, and include the measurements as features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_Overlay_to_QuPath();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createP",MatchSource.WIKI,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html
Security,hash,hashCode,"nclude the measurements as features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_Overlay_to_QuPath();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Legacy method to turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; server - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:. createObjectsFromROIs; public static List<PathObject> createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includ",MatchSource.WIKI,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html
Integrability,interface,interface,". QuPath_Send_ROI_to_QuPath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupathj; Class QuPath_Send_ROI_to_QuPath. java.lang.Object; qupathj.QuPath_Send_ROI_to_QuPath. All Implemented Interfaces:; PlugIn. public class QuPath_Send_ROI_to_QuPath; extends Object; implements PlugIn; ImageJ plugin for sending back the active ROI from ImageJ to QuPath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_ROI_to_QuPath();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_ROI_to_QuPath; public QuPath_Send_ROI_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. ",MatchSource.WIKI,javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html
Modifiability,extend,extends,". QuPath_Send_ROI_to_QuPath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupathj; Class QuPath_Send_ROI_to_QuPath. java.lang.Object; qupathj.QuPath_Send_ROI_to_QuPath. All Implemented Interfaces:; PlugIn. public class QuPath_Send_ROI_to_QuPath; extends Object; implements PlugIn; ImageJ plugin for sending back the active ROI from ImageJ to QuPath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_ROI_to_QuPath();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_ROI_to_QuPath; public QuPath_Send_ROI_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. ",MatchSource.WIKI,javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html
Security,hash,hashCode,". QuPath_Send_ROI_to_QuPath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupathj; Class QuPath_Send_ROI_to_QuPath. java.lang.Object; qupathj.QuPath_Send_ROI_to_QuPath. All Implemented Interfaces:; PlugIn. public class QuPath_Send_ROI_to_QuPath; extends Object; implements PlugIn; ImageJ plugin for sending back the active ROI from ImageJ to QuPath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_ROI_to_QuPath();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_ROI_to_QuPath; public QuPath_Send_ROI_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. ",MatchSource.WIKI,javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html
Integrability,interface,interface," int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageDa",MatchSource.WIKI,javadoc/docs/qupath/opencv/CellCountsCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html
Modifiability,plugin,plugins,". CellCountsCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class CellCountsCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.CellCountsCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CellCountsCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection.; ; Currently, only H&E or hematoxylin and DAB are supported.; ; An improved plugin would be desirable to perform the task in a more general way, and without ; requesting the 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Option",MatchSource.WIKI,javadoc/docs/qupath/opencv/CellCountsCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html
Performance,perform,perform,"Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class CellCountsCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.CellCountsCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CellCountsCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection.; ; Currently, only H&E or hematoxylin and DAB are supported.; ; An improved plugin would be desirable to perform the task in a more general way, and without ; requesting the 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get t",MatchSource.WIKI,javadoc/docs/qupath/opencv/CellCountsCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html
Safety,detect,detection,". CellCountsCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class CellCountsCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.CellCountsCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CellCountsCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection.; ; Currently, only H&E or hematoxylin and DAB are supported.; ; An improved plugin would be desirable to perform the task in a more general way, and without ; requesting the 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Option",MatchSource.WIKI,javadoc/docs/qupath/opencv/CellCountsCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html
Security,hash,hashCode,"would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument i",MatchSource.WIKI,javadoc/docs/qupath/opencv/CellCountsCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html
Integrability,interface,interface,"(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description",MatchSource.WIKI,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html
Modifiability,plugin,plugins,". DetectCytokeratinCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class DetectCytokeratinCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.opencv.DetectCytokeratinCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class DetectCytokeratinCV; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect tumor regions stained with cytokeratin. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DetectCytokeratinCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParam",MatchSource.WIKI,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html
Safety,detect,detect,". DetectCytokeratinCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class DetectCytokeratinCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.opencv.DetectCytokeratinCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class DetectCytokeratinCV; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect tumor regions stained with cytokeratin. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DetectCytokeratinCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParam",MatchSource.WIKI,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html
Security,hash,hashCode,"object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); ",MatchSource.WIKI,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html
Modifiability,plugin,plugins,". qupath.opencv (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv. package qupath.opencv. Detection plugins using OpenCV. Related Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/package-summary.html
Safety,detect,detection,". qupath.opencv (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv. package qupath.opencv. Detection plugins using OpenCV. Related Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/package-summary.html
Usability,learn,learning,". qupath.opencv (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv. package qupath.opencv. Detection plugins using OpenCV. Related Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. ",MatchSource.WIKI,javadoc/docs/qupath/opencv/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/package-summary.html
Modifiability,plugin,plugins,. qupath.opencv Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.opencv. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV. ,MatchSource.WIKI,javadoc/docs/qupath/opencv/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/package-tree.html
Integrability,interface,interface,"erList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Opti",MatchSource.WIKI,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html
Modifiability,plugin,plugins,". WatershedNucleiCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class WatershedNucleiCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.WatershedNucleiCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class WatershedNucleiCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Alternative (incomplete) attempt at nucleus segmentation.; ; It's reasonably fast... but not particularly good. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; WatershedNucleiCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList",MatchSource.WIKI,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html
Safety,detect,detected,"ails. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Des",MatchSource.WIKI,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html
Security,hash,hashCode,"PreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResu",MatchSource.WIKI,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html
Deployability,install,installExtension,"browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.ext.openslide; Class OpenSlideExtension. java.lang.Object; qupath.ext.openslide.OpenSlideExtension. All Implemented Interfaces:; QuPathExtension. @PrefCategory(""category.openslide""); public class OpenSlideExtension; extends Object; implements QuPathExtension. Field Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathE",MatchSource.WIKI,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html
Integrability,interface,interface,"Field | ; Constr | ; Method. SEARCH. Package qupath.ext.openslide; Class OpenSlideExtension. java.lang.Object; qupath.ext.openslide.OpenSlideExtension. All Implemented Interfaces:; QuPathExtension. @PrefCategory(""category.openslide""); public class OpenSlideExtension; extends Object; implements QuPathExtension. Field Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuP",MatchSource.WIKI,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html
Modifiability,extend,extends,". OpenSlideExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.ext.openslide; Class OpenSlideExtension. java.lang.Object; qupath.ext.openslide.OpenSlideExtension. All Implemented Interfaces:; QuPathExtension. @PrefCategory(""category.openslide""); public class OpenSlideExtension; extends Object; implements QuPathExtension. Field Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before makin",MatchSource.WIKI,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html
Security,hash,hashCode," Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.ext.openslide; Class OpenSlideExtension. java.lang.Object; qupath.ext.openslide.OpenSlideExtension. All Implemented Interfaces:; QuPathExtension. @PrefCategory(""category.openslide""); public class OpenSlideExtension; extends Object; implements QuPathExtension. Field Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A re",MatchSource.WIKI,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html
Testability,test,test,"eld Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html
Deployability,integrat,integration,". IJExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.gui; Class IJExtension. java.lang.Object; qupath.imagej.gui.IJExtension. All Implemented Interfaces:; QuPathExtension. public class IJExtension; extends Object; implements QuPathExtension; QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static StringProperty; imageJPath. Property representing the path to a local ImageJ installation, or null if no path has been set. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. Constructor Summary; Constructors. Constructor; Description; IJExtension();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Overlay; extractOverlay(PathObjectHierarchy hierarchy,; RegionRequest request,; OverlayOptions options,; Predicate<PathObject> filter). Extract an ImageJ overlay for the specified region. static PathImage<ImagePlus>; extractROI(ImageServer<BufferedImage> server,; PathObject pathObject,; RegionRequest request,; boolean setROI). Similar to extractROI(ImageServer, ROI, RegionRequest, boolean), except that the title of the ImagePlus is set according to the parent object type (which is used to get the ROI). static PathImage<ImagePlus>; extractROI(ImageServer<BufferedImage> server,; ROI pathROI,; RegionRequest request,; boolean setROI). Extract a region of interest from an image as an ImageJ ImagePlus. static PathImage<ImagePlus>; extractROIWithOverlay(ImageServer<Buffe",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html
Integrability,integrat,integration,". IJExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.gui; Class IJExtension. java.lang.Object; qupath.imagej.gui.IJExtension. All Implemented Interfaces:; QuPathExtension. public class IJExtension; extends Object; implements QuPathExtension; QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static StringProperty; imageJPath. Property representing the path to a local ImageJ installation, or null if no path has been set. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. Constructor Summary; Constructors. Constructor; Description; IJExtension();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Overlay; extractOverlay(PathObjectHierarchy hierarchy,; RegionRequest request,; OverlayOptions options,; Predicate<PathObject> filter). Extract an ImageJ overlay for the specified region. static PathImage<ImagePlus>; extractROI(ImageServer<BufferedImage> server,; PathObject pathObject,; RegionRequest request,; boolean setROI). Similar to extractROI(ImageServer, ROI, RegionRequest, boolean), except that the title of the ImagePlus is set according to the parent object type (which is used to get the ROI). static PathImage<ImagePlus>; extractROI(ImageServer<BufferedImage> server,; ROI pathROI,; RegionRequest request,; boolean setROI). Extract a region of interest from an image as an ImageJ ImagePlus. static PathImage<ImagePlus>; extractROIWithOverlay(ImageServer<Buffe",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html
Modifiability,extend,extends,". IJExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.gui; Class IJExtension. java.lang.Object; qupath.imagej.gui.IJExtension. All Implemented Interfaces:; QuPathExtension. public class IJExtension; extends Object; implements QuPathExtension; QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static StringProperty; imageJPath. Property representing the path to a local ImageJ installation, or null if no path has been set. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. Constructor Summary; Constructors. Constructor; Description; IJExtension();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Overlay; extractOverlay(PathObjectHierarchy hierarchy,; RegionRequest request,; OverlayOptions options,; Predicate<PathObject> filter). Extract an ImageJ overlay for the specified region. static PathImage<ImagePlus>; extractROI(ImageServer<BufferedImage> server,; PathObject pathObject,; RegionRequest request,; boolean setROI). Similar to extractROI(ImageServer, ROI, RegionRequest, boolean), except that the title of the ImagePlus is set according to the parent object type (which is used to get the ROI). static PathImage<ImagePlus>; extractROI(ImageServer<BufferedImage> server,; ROI pathROI,; RegionRequest request,; boolean setROI). Extract a region of interest from an image as an ImageJ ImagePlus. static PathImage<ImagePlus>; extractROIWithOverlay(ImageServer<Buffe",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html
Performance,load,load,"ageJPathProperty(). Property representing the path to a local ImageJ installation, or null if no path has been set. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. static void; setImageJPath(String path). Set the path for a local ImageJ installation, if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Property Details. imageJPath; public static StringProperty imageJPathProperty; Property representing the path to a local ImageJ installation, or null if no path has been set. See Also:. getImageJPath(); setImageJPath(String); imageJPathProperty(). Constructor Details. IJExtension; public IJExtension(). Method Details. setImageJPath; public static void setImageJPath(String path); Set the path for a local ImageJ installation, if required. This can be used to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path has been set. Returns:; See Also:. getImageJPath(); setImageJPath(String). getImageJInstance; public static ImageJ getImageJInstance(); Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). Returns:; an ImageJ instance, or null if ImageJ could not be started. extractROI; public static PathImage<ImagePlus> extractROI(ImageServer<BufferedImage> server,; ROI pathROI,; RegionRequest request,; boolean setROI); throws IOException; Extract a region of interest from an image as an ImageJ ImagePlus. Parameters:; server - the image; pathROI - ; request - ; setROI - true if a ROI should be converted to the closest matching ImageJ Roi & set on the image, ",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html
Security,hash,hashCode,"Path objects. String; getDescription(). A short description of the extension for displaying in the main GUI. static Image; getImageJIcon(int width,; int height). Try to read the ImageJ icon from its jar. static ImageJ; getImageJInstance(). Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). static String; getImageJPath(). Get the path for a local ImageJ installation, if set. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. static StringProperty; imageJPathProperty(). Property representing the path to a local ImageJ installation, or null if no path has been set. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. static void; setImageJPath(String path). Set the path for a local ImageJ installation, if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Property Details. imageJPath; public static StringProperty imageJPathProperty; Property representing the path to a local ImageJ installation, or null if no path has been set. See Also:. getImageJPath(); setImageJPath(String); imageJPathProperty(). Constructor Details. IJExtension; public IJExtension(). Method Details. setImageJPath; public static void setImageJPath(String path); Set the path for a local ImageJ installation, if required. This can be used to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path has been set. Returns:; See Also:. getImageJPath(); setImageJPath(String).",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html
Testability,test,test,"splay in the QuPath viewer; Returns:; Throws:; IOException. extractOverlay; public static Overlay extractOverlay(PathObjectHierarchy hierarchy,; RegionRequest request,; OverlayOptions options,; Predicate<PathObject> filter); Extract an ImageJ overlay for the specified region. Parameters:; hierarchy - ; request - ; options - options to control which objects are being displayed; filter - optional additional filter used to determine which objects will be included (may be used in combination with options); Returns:. getImageJIcon; public static Image getImageJIcon(int width,; int height); Try to read the ImageJ icon from its jar. Parameters:; width - ; height - ; Returns:. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html
Deployability,install,install,. IJExtension.IJExtensionCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.gui; Class IJExtension.IJExtensionCommands. java.lang.Object; qupath.imagej.gui.IJExtension.IJExtensionCommands. Enclosing class:; IJExtension. public static class IJExtension.IJExtensionCommands; extends Object; Commands to install with the ImageJ extension. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionCellDetection;  ; final org.controlsfx.control.action.Action; actionCellMembraneDetection. Deprecated. final org.controlsfx.control.action.Action; actionDoG;  ; final org.controlsfx.control.action.Action; actionExtractRegion;  ; final org.controlsfx.control.action.Action; actionImportROIs;  ; final org.controlsfx.control.action.Action; actionMacroRunner;  ; final org.controlsfx.control.action.Action; actionPixelCount. Deprecated. final org.controlsfx.control.action.Action; actionPlugins;  ; final org.controlsfx.control.action.Action; actionPositiveCellDetection;  ; final org.controlsfx.control.action.Action; actionSimpleTissueDetection. Deprecated. final org.controlsfx.control.action.Action; actionSLIC;  ; final org.controlsfx.control.action.Action; actionSnapshot;  ; final org.controlsfx.control.action.Action; actionSubcellularDetection. Deprecated. final org.controlsfx.control.action.Action; actionTiles;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_2B;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  . Method Summar,MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html
Modifiability,extend,extends,. IJExtension.IJExtensionCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.gui; Class IJExtension.IJExtensionCommands. java.lang.Object; qupath.imagej.gui.IJExtension.IJExtensionCommands. Enclosing class:; IJExtension. public static class IJExtension.IJExtensionCommands; extends Object; Commands to install with the ImageJ extension. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionCellDetection;  ; final org.controlsfx.control.action.Action; actionCellMembraneDetection. Deprecated. final org.controlsfx.control.action.Action; actionDoG;  ; final org.controlsfx.control.action.Action; actionExtractRegion;  ; final org.controlsfx.control.action.Action; actionImportROIs;  ; final org.controlsfx.control.action.Action; actionMacroRunner;  ; final org.controlsfx.control.action.Action; actionPixelCount. Deprecated. final org.controlsfx.control.action.Action; actionPlugins;  ; final org.controlsfx.control.action.Action; actionPositiveCellDetection;  ; final org.controlsfx.control.action.Action; actionSimpleTissueDetection. Deprecated. final org.controlsfx.control.action.Action; actionSLIC;  ; final org.controlsfx.control.action.Action; actionSnapshot;  ; final org.controlsfx.control.action.Action; actionSubcellularDetection. Deprecated. final org.controlsfx.control.action.Action; actionTiles;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_2B;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  . Method Summar,MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html
Security,hash,hashCode,"ner;  ; final org.controlsfx.control.action.Action; actionPixelCount. Deprecated. final org.controlsfx.control.action.Action; actionPlugins;  ; final org.controlsfx.control.action.Action; actionPositiveCellDetection;  ; final org.controlsfx.control.action.Action; actionSimpleTissueDetection. Deprecated. final org.controlsfx.control.action.Action; actionSLIC;  ; final org.controlsfx.control.action.Action; actionSnapshot;  ; final org.controlsfx.control.action.Action; actionSubcellularDetection. Deprecated. final org.controlsfx.control.action.Action; actionTiles;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_2B;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SEP_0; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); public final org.controlsfx.control.action.Action SEP_0. actionSLIC; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.superpixelsSLIC""); public final org.controlsfx.control.action.Action actionSLIC. actionDoG; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.superpixelsDoG""); public final org.controlsfx.control.action.Action actionDoG. SEP_1; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); public final org.controlsfx.control.action.Action SEP_1. actionTiles; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.tilesToAnnotations""); public final org.controlsfx.control.action.Action actionTiles. actionCellDetection; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); @ActionConfig(""Action.ImageJ.cellDetection""); public final org.controlsfx.control.action.Action ac",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html
Usability,simpl,simpleTissueDetection,"ction; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); @ActionConfig(""Action.ImageJ.positiveCellDetection""); public final org.controlsfx.control.action.Action actionPositiveCellDetection. SEP_2; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); public final org.controlsfx.control.action.Action SEP_2. actionSubcellularDetection; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); @ActionConfig(""Action.ImageJ.subcellularDetection""); @Deprecated; public final org.controlsfx.control.action.Action actionSubcellularDetection; Deprecated. SEP_2B; @ActionMenu(""Menu.Analyze""); public final org.controlsfx.control.action.Action SEP_2B. actionPixelCount; @ActionMenu({""Menu.Analyze"",""Menu.deprecated""}); @ActionConfig(""Action.ImageJ.pixelCount""); @Deprecated; public final org.controlsfx.control.action.Action actionPixelCount; Deprecated. actionSimpleTissueDetection; @ActionMenu({""Menu.Analyze"",""Menu.deprecated""}); @ActionConfig(""Action.ImageJ.simpleTissueDetection""); @Deprecated; public final org.controlsfx.control.action.Action actionSimpleTissueDetection; Deprecated. actionCellMembraneDetection; @ActionMenu({""Menu.Analyze"",""Menu.deprecated""}); @ActionConfig(""Action.ImageJ.cellAndMembraneDetection""); @Deprecated; public final org.controlsfx.control.action.Action actionCellMembraneDetection; Deprecated. actionExtractRegion; @ActionIcon(EXTRACT_REGION); @ActionMenu({""Menu.Extensions"",""ImageJ>""}); @ActionConfig(""Action.ImageJ.extractRegion""); public final org.controlsfx.control.action.Action actionExtractRegion. actionSnapshot; @ActionIcon(SCREENSHOT); @ActionMenu({""Menu.Extensions"",""ImageJ>""}); @ActionConfig(""Action.ImageJ.extractRegionSnapshot""); public final org.controlsfx.control.action.Action actionSnapshot. actionImportROIs; @ActionMenu({""Menu.Extensions"",""ImageJ>""}); @ActionConfig(""Action.ImageJ.importRois""); public final org.controlsfx.control.action.Action actionImportROIs. SEP_3; @ActionMenu({""Menu.Extensions"",""ImageJ>""}); public final org.con",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html
Deployability,install,installed,"lay. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner ",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html
Integrability,interface,interface,"tion of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String ar",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html
Modifiability,plugin,plugins,". ImageJMacroRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.gui; Class ImageJMacroRunner. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.imagej.gui.ImageJMacroRunner. All Implemented Interfaces:; PathPlugin<BufferedImage>. public class ImageJMacroRunner; extends AbstractPlugin<BufferedImage>; QuPath plugin for running ImageJ macros & returning detected regions.; ; TODO: Support script recording. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageJMacroRunner(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; a",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html
Safety,detect,detected,". ImageJMacroRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.gui; Class ImageJMacroRunner. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.imagej.gui.ImageJMacroRunner. All Implemented Interfaces:; PathPlugin<BufferedImage>. public class ImageJMacroRunner; extends AbstractPlugin<BufferedImage>; QuPath plugin for running ImageJ macros & returning detected regions.; ; TODO: Support script recording. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageJMacroRunner(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; a",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html
Security,hash,hashCode," the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should blo",MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html
Deployability,integrat,integration,. qupath.imagej.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.gui. package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. Classes. Class; Description; IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/package-summary.html
Integrability,interface,interface,. qupath.imagej.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.gui. package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. Classes. Class; Description; IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/package-summary.html
Modifiability,plugin,plugin,. qupath.imagej.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.gui. package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. Classes. Class; Description; IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/package-summary.html
Safety,detect,detected,. qupath.imagej.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.gui. package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. Classes. Class; Description; IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/package-summary.html
Modifiability,plugin,plugins,. qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.gui. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.imagej.gui.ImageJMacroRunner. qupath.imagej.gui.IJExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.imagej.gui.IJExtension.IJExtensionCommands. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/gui/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/package-tree.html
Availability,mask,mask,"tructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ByteProcessor; binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges). Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. static ImageProcessor; closingByReconstruction(ImageProcessor ip,; double radius). Apply a morphological closing by reconstruction. static ImageProcessor; findRegionalMaxima(ImageProcessor ip,; float threshold,; boolean outputBinary). Find regional maxima using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask images. static ImageProcessor; openingByReconstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. bin",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html
Modifiability,extend,extends,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.processing; Class MorphologicalReconstruction. java.lang.Object; qupath.imagej.processing.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of morphological reconstruction for ImageJ. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ByteProcessor; binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges). Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. static ImageProcessor; closingByReconstruction(ImageProcessor ip,; double radius). Apply a morphological closing by reconstruction. static ImageProcessor; findRegionalMaxima(ImageProcessor ip,; float threshold,; boolean outputBinary). Find regional maxima using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask i",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html
Security,validat,validateMarkerMask,"nalMaxima(ImageProcessor ip,; float threshold,; boolean outputBinary). Find regional maxima using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask images. static ImageProcessor; openingByReconstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Retur",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html
Modifiability,extend,extends,". RoiLabeling (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.processing; Class RoiLabeling. java.lang.Object; qupath.imagej.processing.RoiLabeling. public class RoiLabeling; extends Object; Collection of static methods to help work with ROIs, binary & labelled images in ImageJ.; ; This enables switching between different methods of representing regions as required. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RoiLabeling();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; clearBoundary(ByteProcessor bp,; Roi roi,; double clearValue). Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. static void; clearOutside(ImageProcessor ip,; Roi roi). Clear (i.e. static void; fillHoles(ByteProcessor bp). Fill holes in a binary image. static void; fillOutside(ImageProcessor ip,; Roi roi,; double value). Fill in a region outside a specified ROI. static ByteProcessor; findDirectionalMaxima(ImageProcessor ip). Create a binary image for pixels that have a higher value than their neighbors. static ByteProcessor; findDirectionalMinima(ImageProcessor ip). Create a binary image for pixels that have a lower value than their neighbors. static List<PolygonRoi>; getFilledPolygonROIs(ImageProcessor ip,; int wandMode). Get filled PolygonRois for connected pixels with the same value in an image. static List<PolygonRoi>; getFilledPolygonROIsExperimental(ImageProcessor ip). Experimental 8-connected ROI creation; non-zero pixels considered within objects. static Map<Float,PolygonRoi>; getFilledPolygonROIsFromLabels(ImageProcessor ip,; int wandMode). Get filled Polygon R",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html
Safety,detect,detected,"mage into a list of PolygonRois by tracing.; ; Unlike labelsToFilledROIs, the order in which ROIs are returned is arbitrary.; ; Also, the multiple Rois may be created for the same label, if unconnected regions are used. Parameters:; ipLabels - ; conn8 - ; Returns:. labelsToConnectedROIs; public static Roi[] labelsToConnectedROIs(ImageProcessor ipLabels,; int n); Create ROIs from labels in an image. Parameters:; ipLabels - the labeled image; generally this should be a ByteProcessor or ShortProcessor; n - the total number of labels; often this is equal to the maximum value in the image; Returns:; an array of length n; output[i] is the ROI for label i+1, or null if no Roi is found; with that label. getFilledPolygonROIsFromLabels; public static Map<Float,PolygonRoi> getFilledPolygonROIsFromLabels(ImageProcessor ip,; int wandMode); Get filled Polygon ROIs using distinct labels, creating a map between labels and ROIs.; ; Note that discontinuous ROIs are not supported; if labelled regions are discontinuous,; then ROIs detected earlier will be discarded from the map. Parameters:; ip - ; wandMode - ; Returns:. getFilledPolygonROIs; public static List<PolygonRoi> getFilledPolygonROIs(ImageProcessor ip,; int wandMode); Get filled PolygonRois for connected pixels with the same value in an image.; Because this uses ImageJ's Wand tool, holes will be filled.; ; Note that this command applies any thresholds that were set in the ImageProcessor, returning ; only Rois for values within these limits. Therefore to identify only non-zero pixels in a labelled image; you may need to first call ip.setThreshold(0.5, Double.POSITIVE_INFINITY, ImageProcessor.NO_LUT_UPDATE);. Parameters:; ip - ; wandMode - ; Returns:. wandToRoi; public static PolygonRoi wandToRoi(Wand wand); Convert a traced outline from the ImageJ Wand into a PolygonRoi. Parameters:; wand - ; Returns:. fillHoles; public static void fillHoles(ByteProcessor bp); Fill holes in a binary image.; ; Assumes 255 is foreground, 0 is ba",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html
Security,hash,hashCode,"l ROIs by filling each pixel with an integer value corresponding to the index of the Roi ; in the list + 1. static Roi[]; labelsToConnectedROIs(ImageProcessor ipLabels,; int n). Create ROIs from labels in an image. static List<PolygonRoi>; labelsToFilledRoiList(ImageProcessor ipLabels,; boolean conn8). Convert a labelled image into a list of PolygonRois by tracing. static PolygonRoi[]; labelsToFilledROIs(ImageProcessor ipLabels,; int n). Convert a labelled image into a list of PolygonRois by tracing. static int; removeByAreas(ByteProcessor bp,; double minPixels,; double maxPixels,; boolean conn8). Remove objects containing < minPixels or > maxPixels. static void; removeSmallAreas(ByteProcessor bp,; double minPixels,; boolean conn8). Remove objects having small areas, defined in terms of pixels. static PolygonRoi; wandToRoi(Wand wand). Convert a traced outline from the ImageJ Wand into a PolygonRoi. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiLabeling; public RoiLabeling(). Method Details. findDirectionalMaxima; public static ByteProcessor findDirectionalMaxima(ImageProcessor ip); Create a binary image for pixels that have a higher value than their neighbors.; Comparisons are made horizontally, vertically and diagonally. Pixels meeting the criterion ; have the value 255, all others are 0. Parameters:; ip - ; Returns:. findDirectionalMinima; public static ByteProcessor findDirectionalMinima(ImageProcessor ip); Create a binary image for pixels that have a lower value than their neighbors.; Comparisons are made horizontally, vertically and diagonally. Pixels meeting the criterion ; have the value 255, all others are 0. Parameters:; ip - ; Returns:. getFilledPolygonROIsExperimental; public static List<PolygonRoi> getFilledPolygonROIsExperimental(ImageProcessor ip); Experimental 8-connected ROI creation; non-zero pixels considered within objects; ; TODO: I",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html
Usability,clear,clearBoundary,". RoiLabeling (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.processing; Class RoiLabeling. java.lang.Object; qupath.imagej.processing.RoiLabeling. public class RoiLabeling; extends Object; Collection of static methods to help work with ROIs, binary & labelled images in ImageJ.; ; This enables switching between different methods of representing regions as required. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RoiLabeling();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; clearBoundary(ByteProcessor bp,; Roi roi,; double clearValue). Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. static void; clearOutside(ImageProcessor ip,; Roi roi). Clear (i.e. static void; fillHoles(ByteProcessor bp). Fill holes in a binary image. static void; fillOutside(ImageProcessor ip,; Roi roi,; double value). Fill in a region outside a specified ROI. static ByteProcessor; findDirectionalMaxima(ImageProcessor ip). Create a binary image for pixels that have a higher value than their neighbors. static ByteProcessor; findDirectionalMinima(ImageProcessor ip). Create a binary image for pixels that have a lower value than their neighbors. static List<PolygonRoi>; getFilledPolygonROIs(ImageProcessor ip,; int wandMode). Get filled PolygonRois for connected pixels with the same value in an image. static List<PolygonRoi>; getFilledPolygonROIsExperimental(ImageProcessor ip). Experimental 8-connected ROI creation; non-zero pixels considered within objects. static Map<Float,PolygonRoi>; getFilledPolygonROIsFromLabels(ImageProcessor ip,; int wandMode). Get filled Polygon R",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html
Availability,down,downsampling," ; Returns:. thresholdAboveEquals; public static ByteProcessor thresholdAboveEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 >= threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBetween; public static ByteProcessor thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold); Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. Parameters:; ip - ; lowThreshold - ; highThreshold - ; Returns:. thresholdToROI; public static ROI thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request); Generate a QuPath ROI by thresholding an image channel image. Parameters:; img - the input image (any type); minThreshold - minimum threshold; pixels >= minThreshold will be included; maxThreshold - maximum threshold; pixels <= maxThreshold will be included; band - the image band to threshold (channel); request - a RegionRequest corresponding to this image, used to calibrate the coordinates. If null, ; we assume no downsampling and an origin at (0,0).; Returns:; See Also:. thresholdToROI(ImageProcessor, TileRequest). thresholdToROI; public static ROI thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request); Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest.; ; This can give a more accurate result than depending on a RegionRequest because it is possible to avoid some loss of precision. Parameters:; raster - ; minThreshold - ; maxThreshold - ; band - ; request - ; Returns:; See Also:. thresholdToROI(ImageProcessor, RegionRequest). thresholdToROI; public static ROI thresholdToROI(ImageProcessor ip,; RegionRequest request); Generate a QuPath ROI from an ImageProcessor.; ; It is assumed that the ImageProcessor has had its min and max threshold values set. Parameters:; ip - ; request - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html
Integrability,depend,depending," ; Returns:. thresholdAboveEquals; public static ByteProcessor thresholdAboveEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 >= threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBetween; public static ByteProcessor thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold); Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. Parameters:; ip - ; lowThreshold - ; highThreshold - ; Returns:. thresholdToROI; public static ROI thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request); Generate a QuPath ROI by thresholding an image channel image. Parameters:; img - the input image (any type); minThreshold - minimum threshold; pixels >= minThreshold will be included; maxThreshold - maximum threshold; pixels <= maxThreshold will be included; band - the image band to threshold (channel); request - a RegionRequest corresponding to this image, used to calibrate the coordinates. If null, ; we assume no downsampling and an origin at (0,0).; Returns:; See Also:. thresholdToROI(ImageProcessor, TileRequest). thresholdToROI; public static ROI thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request); Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest.; ; This can give a more accurate result than depending on a RegionRequest because it is possible to avoid some loss of precision. Parameters:; raster - ; minThreshold - ; maxThreshold - ; band - ; request - ; Returns:; See Also:. thresholdToROI(ImageProcessor, RegionRequest). thresholdToROI; public static ROI thresholdToROI(ImageProcessor ip,; RegionRequest request); Generate a QuPath ROI from an ImageProcessor.; ; It is assumed that the ImageProcessor has had its min and max threshold values set. Parameters:; ip - ; request - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html
Modifiability,extend,extends,". SimpleThresholding (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.processing; Class SimpleThresholding. java.lang.Object; qupath.imagej.processing.SimpleThresholding. public class SimpleThresholding; extends Object; Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image.; ; Output is a ByteProcessor where 255 represents 'positive' pixels, and zero represents the background. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholding();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ByteProcessor; greaterThan(ImageProcessor ip1,; ImageProcessor ip2). Created a binary image by thresholding pixels to find where ip1 > ip2. static ByteProcessor; greaterThanOrEqual(ImageProcessor ip1,; ImageProcessor ip2). Created a binary image by thresholding pixels to find where ip1 >= ip2. static ByteProcessor; imagesEqual(ImageProcessor ip1,; ImageProcessor ip2). Created a binary image by identifying pixels where ip1 == ip2. static ByteProcessor; thresholdAbove(ImageProcessor ip,; float threshold). Created a binary image by thresholding pixels to find where ip1 > threshold. static ByteProcessor; thresholdAboveEquals(ImageProcessor ip,; float threshold). Created a binary image by thresholding pixels to find where ip1 >= threshold. static ByteProcessor; thresholdBelow(ImageProcessor ip,; float threshold). Created a binary image by thresholding pixels to find where ip1 < threshold. static ByteProcessor; thresholdBelowEquals(ImageProcessor ip,; float threshold). Created a binary image by thresholding pixels to find where ip1",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html
Safety,avoid,avoid," ; Returns:. thresholdAboveEquals; public static ByteProcessor thresholdAboveEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 >= threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBetween; public static ByteProcessor thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold); Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. Parameters:; ip - ; lowThreshold - ; highThreshold - ; Returns:. thresholdToROI; public static ROI thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request); Generate a QuPath ROI by thresholding an image channel image. Parameters:; img - the input image (any type); minThreshold - minimum threshold; pixels >= minThreshold will be included; maxThreshold - maximum threshold; pixels <= maxThreshold will be included; band - the image band to threshold (channel); request - a RegionRequest corresponding to this image, used to calibrate the coordinates. If null, ; we assume no downsampling and an origin at (0,0).; Returns:; See Also:. thresholdToROI(ImageProcessor, TileRequest). thresholdToROI; public static ROI thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request); Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest.; ; This can give a more accurate result than depending on a RegionRequest because it is possible to avoid some loss of precision. Parameters:; raster - ; minThreshold - ; maxThreshold - ; band - ; request - ; Returns:; See Also:. thresholdToROI(ImageProcessor, RegionRequest). thresholdToROI; public static ROI thresholdToROI(ImageProcessor ip,; RegionRequest request); Generate a QuPath ROI from an ImageProcessor.; ; It is assumed that the ImageProcessor has had its min and max threshold values set. Parameters:; ip - ; request - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html
Security,hash,hashCode,"e ip1 < threshold. static ByteProcessor; thresholdBelowEquals(ImageProcessor ip,; float threshold). Created a binary image by thresholding pixels to find where ip1 <= threshold. static ByteProcessor; thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold). Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. static ROI; thresholdToROI(ImageProcessor ip,; RegionRequest request). Generate a QuPath ROI from an ImageProcessor. static ROI; thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request). Generate a QuPath ROI by thresholding an image channel image. static ROI; thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request). Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholding; public SimpleThresholding(). Method Details. greaterThanOrEqual; public static ByteProcessor greaterThanOrEqual(ImageProcessor ip1,; ImageProcessor ip2); Created a binary image by thresholding pixels to find where ip1 >= ip2. Parameters:; ip1 - ; ip2 - ; Returns:. greaterThan; public static ByteProcessor greaterThan(ImageProcessor ip1,; ImageProcessor ip2); Created a binary image by thresholding pixels to find where ip1 > ip2. Parameters:; ip1 - ; ip2 - ; Returns:. thresholdBelow; public static ByteProcessor thresholdBelow(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 < threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBelowEquals; public static ByteProcessor thresholdBelowEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 <= threshold. Parameters:; ip - ; threshold - ; ",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html
Modifiability,extend,extends,". Watershed (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.processing; Class Watershed. java.lang.Object; qupath.imagej.processing.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform for ImageJ. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static void; watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8). Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. watershedExpandLabels; public static void watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8); Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging.; The expansion is performed in-place. Parameters:; ipLabels - labeled image, where values ≤ 0 represent the background; maxDistance - maximum expansion distance, in pixels; conn8 - if true, use 8-connectivity. doWatershed; public static void",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/Watershed.html
Performance,perform,performed,"hodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static void; watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8). Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. watershedExpandLabels; public static void watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8); Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging.; The expansion is performed in-place. Parameters:; ipLabels - labeled image, where values ≤ 0 represent the background; maxDistance - maximum expansion distance, in pixels; conn8 - if true, use 8-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8); Apply a watershed transform. Parameters:; ip - intensity image; ipLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. Parameters:; ip - intensity image; ipLabels - starting locations; minThreshold - minimum threshold; conn8 - if true, use 8-connectivity rather than 4-connectivity. ",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/Watershed.html
Security,hash,hashCode,"t; qupath.imagej.processing.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform for ImageJ. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static void; watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8). Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. watershedExpandLabels; public static void watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8); Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging.; The expansion is performed in-place. Parameters:; ipLabels - labeled image, where values ≤ 0 represent the background; maxDistance - maximum expansion distance, in pixels; conn8 - if true, use 8-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8); Apply a watershed transform. Parameters:; ip - intensity image; ipLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrain",MatchSource.WIKI,javadoc/docs/qupath/imagej/processing/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/Watershed.html
Integrability,interface,interface,"mageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in ",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html
Modifiability,plugin,plugins,". DoGSuperpixelsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.superpixels; Class DoGSuperpixelsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.DoGSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class DoGSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image.; ; This provides tile objects that generally correspond to regions containing reasonably similar ; intensities or textures, which might then be classified. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DoGSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getL",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html
Safety,detect,detected,"vePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector in class AbstractTileableDetectionPlugin<Bu",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html
Security,hash,hashCode,"tected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be use",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html
Usability,simpl,simple,". DoGSuperpixelsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.superpixels; Class DoGSuperpixelsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.DoGSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class DoGSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image.; ; This provides tile objects that generally correspond to regions containing reasonably similar ; intensities or textures, which might then be classified. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DoGSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getL",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html
Usability,simpl,simple,". qupath.imagej.superpixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.superpixels. package qupath.imagej.superpixels. Classes to generate superpixels. Classes. Class; Description; DoGSuperpixelsPlugin. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. ",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/package-summary.html
Modifiability,plugin,plugins,. qupath.imagej.superpixels Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.superpixels. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/package-tree.html
Availability,avail,available,"magej.superpixels; Class SLICSuperpixelsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.SLICSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SLICSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels; ; This largely follows the description at:; ; Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Süsstrunk ; SLIC Superpixels Compared to State-of-the-art Superpixel Methods ; IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274 - 2282, May 2012.; ; ; It doesn't follow the code made available by the authors, and differs in some details. ; ; For example, the 'spacing' parameter is also used to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any informatio",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html
Energy Efficiency,reduce,reduce,"eractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.SLICSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SLICSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels; ; This largely follows the description at:; ; Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Süsstrunk ; SLIC Superpixels Compared to State-of-the-art Superpixel Methods ; IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274 - 2282, May 2012.; ; ; It doesn't follow the code made available by the authors, and differs in some details. ; ; For example, the 'spacing' parameter is also used to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLas",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html
Integrability,interface,interface,"mageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful i",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html
Modifiability,plugin,plugins,". SLICSuperpixelsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.superpixels; Class SLICSuperpixelsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.SLICSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SLICSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels; ; This largely follows the description at:; ; Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Süsstrunk ; SLIC Superpixels Compared to State-of-the-art Superpixel Methods ; IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274 - 2282, May 2012.; ; ; It doesn't follow the code made available by the authors, and differs in some details. ; ; For example, the 'spacing' parameter is also used to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Descriptio",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html
Performance,perform,performed,"eractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.SLICSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SLICSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels; ; This largely follows the description at:; ; Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Süsstrunk ; SLIC Superpixels Compared to State-of-the-art Superpixel Methods ; IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274 - 2282, May 2012.; ; ; It doesn't follow the code made available by the authors, and differs in some details. ; ; For example, the 'spacing' parameter is also used to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLas",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html
Safety,detect,detected,"Plugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector in class AbstractTileableDetectionPlugin<Bu",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html
Security,hash,hashCode,"tected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be u",MatchSource.WIKI,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html
Availability,down,downsample,"geJ with QuPath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; IJTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; calibrateImagePlus(ImagePlus imp,; RegionRequest request,; ImageServer<BufferedImage> server). Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer. static void; calibrateObject(PathObject pathObject,; Roi roi). Set the properties of a PathObject based upon an ImageJ Roi. static FloatProcessor[]; colorDeconvolve(ColorProcessor cp,; ColorDeconvolutionStains stains). Apply color deconvolution, outputting 3 'stain' images in the same order as the stain vectors. static boolean; containsImageJRois(File file). Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; d",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/IJTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html
Energy Efficiency,green,green,"ble downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request). Convert a BufferedImage into a PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request). Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. static ImageProcessor; convertToImageProcessor(BufferedImage img,; int band). Extract pixels as an an ImageProcessor from a single band of a BufferedImage. static FloatProcessor; convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue). Calculate optical density values for the red, green and blue channels, then add these all together. static PathObject; convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Create a PathObject for a specific ImageJ Roi. static PathObject; convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp). Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). static PolygonROI; convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Convert an ImageJ PolygonRoi to a QuPath PolygonROI. static ROI; convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampl",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/IJTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html
Integrability,wrap,wraps,"ixels as an an ImageProcessor from a single band of a BufferedImage. Parameters:; img - ; band - ; Returns:. convertToImagePlus; public static PathImage<ImagePlus> convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request); throws IOException; Convert a BufferedImage into a PathImage<ImagePlus>.; ; An ImageServer and a RegionRequest are required to appropriate calibration. Parameters:; title - a name to use as the ImagePlus title.; server - the ImageServer from which the image was requested; img - the image to convert - if null this will be requested from server.; request - the region to request, or that was requested to provide img; Returns:; Throws:; IOException. convertToImagePlus; public static PathImage<ImagePlus> convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>.; ; The PathImage element wraps up handy metadata that can be used for translating ROIs. Parameters:; server - ; request - ; Returns:; Throws:; IOException. createPathImage; public static PathImage<ImagePlus> createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request); throws IOException; Create a PathImage from an ImagePlus and region.; If imp is null, it is read from the server. Parameters:; server - ; imp - ; request - ; Returns:; Throws:; IOException. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; T pathImage); Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. Parameters:; pathROI - ; pathImage - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. Type Parameters:; T - ; Parameters:; pathROI - ; cal - ; downsampleFa",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/IJTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html
Modifiability,extend,extends,". IJTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.tools; Class IJTools. java.lang.Object; qupath.imagej.tools.IJTools. public class IJTools; extends Object; Collection of static methods to help with using ImageJ with QuPath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; IJTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; calibrateImagePlus(ImagePlus imp,; RegionRequest request,; ImageServer<BufferedImage> server). Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer. static void; calibrateObject(PathObject pathObject,; Roi roi). Set the properties of a PathObject based upon an ImageJ Roi. static FloatProcessor[]; colorDeconvolve(ColorProcessor cp,; ColorDeconvolutionStains stains). Apply color deconvolution, outputting 3 'stain' images in the same order as the stain vectors. static boolean; containsImageJRois(File file). Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an ann",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/IJTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html
Safety,detect,detection,"to cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Ro",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/IJTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html
Security,hash,hashCode,"gion,; ImageData<BufferedImage> imageData). Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. static void; quickShowImage(String name,; Roi roi,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static void; quickShowImage(String name,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static List<Roi>; readImageJRois(File file). Read ImageJ Rois from a .roi or a RoiSet.zip file. static void; setMemoryThreshold(double threshold);  ; static void; setTitleFromObject(PathImage<ImagePlus> pathImage,; PathObject pathObject). Set the name of an image based on a PathObject. static double; tryToParseMicrons(double value,; String unit). Based on a value and its units, try to get something suitable in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IJTools; public IJTools(). Method Details. setMemoryThreshold; public static void setMemoryThreshold(double threshold). Parameters:; threshold - - value in the interval ]0;1] defining the maximum remaining memory fraction an image can have ; when importing an image to ImageJ. isMemorySufficient; public static boolean isMemorySufficient(RegionRequest region,; ImageData<BufferedImage> imageData); throws Exception; Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. Parameters:; region - the requested region coming from; imageData - this BufferedImage; Returns:; true if the memory is sufficient; Throws:; Exception - either the fact that ImageJ cannot handle the image size or that the memory is insufficient. extractHyperstack; public static ImagePlus extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/IJTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html
Integrability,wrap,wrapper,. qupath.imagej.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.tools. package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. Classes. Class; Description; IJTools. Collection of static methods to help with using ImageJ with QuPath. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html
Security,access,access,. qupath.imagej.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.tools. package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. Classes. Class; Description; IJTools. Collection of static methods to help with using ImageJ with QuPath. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html
Usability,simpl,simple,. qupath.imagej.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.tools. package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. Classes. Class; Description; IJTools. Collection of static methods to help with using ImageJ with QuPath. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html
Integrability,wrap,wrapper,". PixelImageIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.tools; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html
Modifiability,extend,extends,". PixelImageIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.tools; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html
Security,access,access,". PixelImageIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.tools; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html
Usability,simpl,simple,". PixelImageIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.tools; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in",MatchSource.WIKI,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html
Modifiability,plugin,plugin,". qupath.imagej.detect.cells (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.detect.cells. package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. Classes. Class; Description; PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. ",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/package-summary.html
Safety,detect,detect,". qupath.imagej.detect.cells (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.detect.cells. package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. Classes. Class; Description; PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. ",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/package-summary.html
Modifiability,plugin,plugins,. qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.detect.cells. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection. qupath.imagej.detect.cells.SubcellularDetection. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/package-tree.html
Safety,detect,detect,. qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.detect.cells. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection. qupath.imagej.detect.cells.SubcellularDetection. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/package-tree.html
Integrability,interface,interface,"is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; getDefaultParameterList in class WatershedCellDetection; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Specified by:; getName in interface PathPlugin<BufferedImage>; Overrides:; getName in class WatershedCellDetection; Returns:",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html
Modifiability,plugin,plugins,". PositiveCellDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class PositiveCellDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection; qupath.imagej.detect.cells.PositiveCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositiveCellDetection; extends WatershedCellDetection; Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, par",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html
Safety,detect,detect,". PositiveCellDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class PositiveCellDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection; qupath.imagej.detect.cells.PositiveCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositiveCellDetection; extends WatershedCellDetection; Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, par",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html
Security,hash,hashCode,"should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; getDefaultParameterList in class WatershedCellDetection; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Specified by:; getName in interface PathPlugin<Buffere",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html
Deployability,update,update," extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information tha",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html
Integrability,interface,interface,"Data<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData)",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html
Modifiability,plugin,plugins,". SubcellularDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class SubcellularDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.imagej.detect.cells.SubcellularDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SubcellularDetection; extends AbstractInteractivePlugin<BufferedImage>; Experimental plugin to help with the quantification of subcellular structures. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SubcellularDetection();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get ",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html
Safety,detect,detect,". SubcellularDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class SubcellularDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.imagej.detect.cells.SubcellularDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SubcellularDetection; extends AbstractInteractivePlugin<BufferedImage>; Experimental plugin to help with the quantification of subcellular structures. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SubcellularDetection();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get ",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html
Security,hash,hashCode,"e & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Speci",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html
Integrability,interface,interface,"lysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plu",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html
Modifiability,plugin,plugins,". WatershedCellDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class WatershedCellDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. Direct Known Subclasses:; PositiveCellDetection. public class WatershedCellDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining.; ; To automatically classify cells as positive or negative along with detection, see PositiveCellDetection.; ; To quantify membranous staining see WatershedCellMembraneDetection. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; parametersInitialized;  . Constructor Summary; Constructors. Constructor; Description; WatershedCellDetection();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. static boolean; getDebugMode(). Get whether debug mode is on or off. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to rep",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html
Safety,detect,detect,". WatershedCellDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class WatershedCellDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. Direct Known Subclasses:; PositiveCellDetection. public class WatershedCellDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining.; ; To automatically classify cells as positive or negative along with detection, see PositiveCellDetection.; ; To quantify membranous staining see WatershedCellMembraneDetection. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; parametersInitialized;  . Constructor Summary; Constructors. Constructor; Description; WatershedCellDetection();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. static boolean; getDebugMode(). Get whether debug mode is on or off. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to rep",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html
Security,hash,hashCode,"; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', ",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html
Availability,robust,robust,"nks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class WatershedCellMembraneDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellMembraneDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class WatershedCellMembraneDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Cell detection that takes into consideration membrane staining.; ; This command only works (somewhat) for hematoxylin and DAB staining.; If membrane quantification is not required, WatershedCellDetection is more robust and versatile. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WatershedCellMembraneDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> im",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html
Integrability,interface,interface,"erList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Descr",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html
Modifiability,plugin,plugins,". WatershedCellMembraneDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class WatershedCellMembraneDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellMembraneDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class WatershedCellMembraneDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Cell detection that takes into consideration membrane staining.; ; This command only works (somewhat) for hematoxylin and DAB staining.; If membrane quantification is not required, WatershedCellDetection is more robust and versatile. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WatershedCellMembraneDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html
Safety,detect,detect,". WatershedCellMembraneDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class WatershedCellMembraneDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellMembraneDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class WatershedCellMembraneDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Cell detection that takes into consideration membrane staining.; ; This command only works (somewhat) for hematoxylin and DAB staining.; If membrane quantification is not required, WatershedCellDetection is more robust and versatile. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WatershedCellMembraneDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html
Security,hash,hashCode,"PreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLa",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html
Modifiability,plugin,plugin,. qupath.imagej.detect.dearray (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.detect.dearray. package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. Classes. Class; Description; TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). ,MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/package-summary.html
Safety,detect,detect,. qupath.imagej.detect.dearray (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.detect.dearray. package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. Classes. Class; Description; TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). ,MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/package-summary.html
Modifiability,plugin,plugins,. qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.detect.dearray. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.detect.dearray.TMADearrayer. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/package-tree.html
Safety,detect,detect,. qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.detect.dearray. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.detect.dearray.TMADearrayer. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/package-tree.html
Modifiability,extend,extends,". TMADearrayer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.dearray; Class TMADearrayer. java.lang.Object; qupath.imagej.detect.dearray.TMADearrayer. public class TMADearrayer; extends Object; Static methods used by the TMA dearrayer plugin. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape; detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although thi",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html
Safety,detect,detect,". TMADearrayer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.dearray; Class TMADearrayer. java.lang.Object; qupath.imagej.detect.dearray.TMADearrayer. public class TMADearrayer; extends Object; Static methods used by the TMA dearrayer plugin. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape; detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although thi",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html
Security,hash,hashCode,"tatic methods used by the TMA dearrayer plugin. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape; detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although this may be (slightly) rotated; and some cores may be missing (but at least a few should be present in all rows / columns of the grid). Parameters:; bp - - the TMA slide image, after thresholding.; coreDiameterPx - - approximate diameter of a single TMA core, in pixels; nHorizontal - - number of cores per row of the full grid; nVertical - - number of cores per column of the full grid; roi - - optional region of interest determining where cores should be found (may be useful if edge artifa",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html
Integrability,interface,interface," description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks i",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html
Modifiability,plugin,plugins,". TMADearrayerPluginIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.dearray; Class TMADearrayerPluginIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class TMADearrayerPluginIJ; extends AbstractInteractivePlugin<BufferedImage>; Plugin for automatically dearraying tissue microarrays (TMAs). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayerPluginIJ(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the P",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html
Safety,detect,detect,". TMADearrayerPluginIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.dearray; Class TMADearrayerPluginIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class TMADearrayerPluginIJ; extends AbstractInteractivePlugin<BufferedImage>; Plugin for automatically dearraying tissue microarrays (TMAs). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayerPluginIJ(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the P",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html
Security,hash,hashCode,"eded to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothin",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html
Testability,log,logged,"ePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. addWorkflowStep; protected void addWorkflowStep(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Overrides:; addWorkflowStep in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - . ",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html
Safety,detect,detect,. qupath.imagej.detect.tissue (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.detect.tissue. package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. Classes. Class; Description; PositivePixelCounterIJ. Simple command to detect regions with positive staining. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/package-summary.html
Modifiability,plugin,plugins,. qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.detect.tissue. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/package-tree.html
Safety,detect,detect,. qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.detect.tissue. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2. ,MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/package-tree.html
Availability,down,downsample,". PositivePixelCounterIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class PositivePixelCounterIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.PositivePixelCounterIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositivePixelCounterIJ; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Metho",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html
Integrability,interface,interface,"(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief descr",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html
Modifiability,plugin,plugins,". PositivePixelCounterIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class PositivePixelCounterIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.PositivePixelCounterIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositivePixelCounterIJ; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Metho",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html
Safety,detect,detect,". PositivePixelCounterIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class PositivePixelCounterIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.PositivePixelCounterIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositivePixelCounterIJ; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Metho",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html
Security,hash,hashCode,"object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescripti",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html
Usability,simpl,simple,". PositivePixelCounterIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class PositivePixelCounterIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.PositivePixelCounterIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositivePixelCounterIJ; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Metho",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html
Availability,down,downsampling,". SimpleTissueDetection2 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class SimpleTissueDetection2. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.SimpleTissueDetection2. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SimpleTissueDetection2; extends AbstractDetectionPlugin<BufferedImage>; Very basic global thresholding command to identify tissue regions.; ; Uses fixed approach to downsampling images & global threshold applied to RGB images only.; ; TODO: Provide choice of channels to threshold; TODO: Support 16-bit data. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleTissueDetection2(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selec",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html
Integrability,interface,interface," description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from inter",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html
Modifiability,plugin,plugins,". SimpleTissueDetection2 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class SimpleTissueDetection2. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.SimpleTissueDetection2. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SimpleTissueDetection2; extends AbstractDetectionPlugin<BufferedImage>; Very basic global thresholding command to identify tissue regions.; ; Uses fixed approach to downsampling images & global threshold applied to RGB images only.; ; TODO: Provide choice of channels to threshold; TODO: Support 16-bit data. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleTissueDetection2(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selec",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html
Safety,detect,detect,". SimpleTissueDetection2 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class SimpleTissueDetection2. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.SimpleTissueDetection2. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SimpleTissueDetection2; extends AbstractDetectionPlugin<BufferedImage>; Very basic global thresholding command to identify tissue regions.; ; Uses fixed approach to downsampling images & global threshold applied to RGB images only.; ; TODO: Provide choice of channels to threshold; TODO: Support 16-bit data. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleTissueDetection2(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selec",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html
Security,hash,hashCode,"eded to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; pu",MatchSource.WIKI,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html
Availability,avail,available,"tImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This behavior may change in the future. Returns:; a String representing image metadata in ImageJ's own form. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface Im",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html
Integrability,interface,interface,"ype(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This beh",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html
Modifiability,extend,extends,". ImageJServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.images.servers; Class ImageJServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.imagej.images.servers.ImageJServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>, PathObjectReader. public class ImageJServer; extends AbstractImageServer<BufferedImage>; implements PathObjectReader; ImageServer that uses ImageJ's image-reading capabilities. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageJServer(URI uri,; String... args). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; static BufferedImage; convertToBufferedImage(ImagePlus imp2,; int z,; int t,; ColorModel colorModel). Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint. protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. String; dumpMetadata(). Get a String representing the image metadata. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedIm",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html
Safety,avoid,avoid,"e readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). convertToBufferedImage; public static BufferedImage convertToBufferedImage(ImagePlus imp2,; int z,; int t,; ColorModel colorModel); Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint.; ; Note that ImageJ uses 1-based indices for z and t! Therefore these should be >= 1.; ; A ColorModel can optionally be provided; otherwise, a default ColorModel will be ; created for the image (with may not be particularly suitable). Parameters:; imp2 - ; z - ; t - ; colorModel - ; Returns:. getServerType; public String getServerType(); Description copied from in",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html
Security,hash,hashCode,"adata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for al",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html
Usability,simpl,simplest,"ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This behavior may change in the future. Returns:; a String representing image metadata in ImageJ's own form. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRe",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html
Integrability,interface,interfaces,". ImageJServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.images.servers; Class ImageJServerBuilder. java.lang.Object; qupath.imagej.images.servers.ImageJServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class ImageJServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; Builder for ImageServers that use ImageJ to read images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; ImageJServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Detail",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html
Modifiability,extend,extends,". ImageJServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.images.servers; Class ImageJServerBuilder. java.lang.Object; qupath.imagej.images.servers.ImageJServerBuilder. All Implemented Interfaces:; ImageServerBuilder<BufferedImage>. public class ImageJServerBuilder; extends Object; implements ImageServerBuilder<BufferedImage>; Builder for ImageServers that use ImageJ to read images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; ImageJServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Detail",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html
Security,hash,hashCode,"Builder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; ImageJServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJServerBuilder; public ImageJServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html
Usability,simpl,simple,"rgs - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Specified by:; matchClassName in interface ImageServerBuilder<BufferedImage>; Parameters:; classNames - ; Returns:; true if there is any classname match, false otherwise. ",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html
Integrability,interface,interface,"; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlu",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html
Modifiability,extend,extends,". TiffWriterIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.images.writers; Class TiffWriterIJ. java.lang.Object; qupath.imagej.images.writers.TiffWriterIJ. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class TiffWriterIJ; extends Object; ImageWriter implementation to write TIFF images using ImageJ. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TiffWriterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. v",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html
Security,hash,hashCode,"olean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be ",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html
Integrability,interface,interface,"; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus ",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html
Modifiability,extend,extends,". ZipWriterIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.images.writers; Class ZipWriterIJ. java.lang.Object; qupath.imagej.images.writers.ZipWriterIJ. All Implemented Interfaces:; ImageWriter<BufferedImage>. public class ZipWriterIJ; extends Object; ImageWriter implementation to write zipped TIFF images using ImageJ. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ZipWriterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<BufferedImage>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<BufferedImage> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path.",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html
Security,hash,hashCode,"olean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be re",MatchSource.WIKI,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html
Integrability,interface,interface,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<Buffer",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html
Modifiability,plugin,plugins,". CoherenceFeaturePlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class CoherenceFeaturePlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.CoherenceFeaturePlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CoherenceFeaturePlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin to calculate coherence features for image tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CoherenceFeaturePlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupat",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html
Safety,detect,detected,"ufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html
Security,hash,hashCode," repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html
Availability,mask,masks,". HaralickFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class HaralickFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.HaralickFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class HaralickFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating Haralick texture features, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeaturesPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html
Integrability,interface,interface,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<Buffer",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html
Modifiability,plugin,plugins,". HaralickFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class HaralickFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.HaralickFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class HaralickFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating Haralick texture features, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeaturesPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html
Safety,detect,detections,". HaralickFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class HaralickFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.HaralickFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class HaralickFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating Haralick texture features, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeaturesPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html
Security,hash,hashCode," repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html
Availability,mask,masks,". IntensityFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class IntensityFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.IntensityFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class IntensityFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; IntensityFeaturesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default Par",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html
Deployability,update,update,"Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information tha",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html
Integrability,interface,interface,"arentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData)",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html
Modifiability,plugin,plugins,". IntensityFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class IntensityFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.IntensityFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class IntensityFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; IntensityFeaturesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default Par",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html
Safety,detect,detections,". IntensityFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class IntensityFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.IntensityFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class IntensityFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; IntensityFeaturesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default Par",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html
Security,hash,hashCode,"n of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead.",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html
Integrability,interface,interface,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html
Modifiability,plugin,plugins,". LocalBinaryPatternsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class LocalBinaryPatternsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.LocalBinaryPatternsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class LocalBinaryPatternsPlugin; extends AbstractInteractivePlugin<BufferedImage>; Calculate local binary pattern features.; ; TODO: This plugin has not been extensively tested and may be of limited use. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatternsPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possib",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html
Safety,detect,detected,"ufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html
Security,hash,hashCode," repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Spec",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html
Testability,test,tested,". LocalBinaryPatternsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class LocalBinaryPatternsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.LocalBinaryPatternsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class LocalBinaryPatternsPlugin; extends AbstractInteractivePlugin<BufferedImage>; Calculate local binary pattern features.; ; TODO: This plugin has not been extensively tested and may be of limited use. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatternsPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possib",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html
Modifiability,plugin,plugins,". qupath.lib.algorithms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.algorithms. package qupath.lib.algorithms. Feature calculation plugins. Classes. Class; Description; CoherenceFeaturePlugin. Plugin to calculate coherence features for image tiles. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. LocalBinaryPatternsPlugin. Calculate local binary pattern features. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/package-summary.html
Safety,detect,detections,". qupath.lib.algorithms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.algorithms. package qupath.lib.algorithms. Feature calculation plugins. Classes. Class; Description; CoherenceFeaturePlugin. Plugin to calculate coherence features for image tiles. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. LocalBinaryPatternsPlugin. Calculate local binary pattern features. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/package-summary.html
Modifiability,plugin,plugins,. qupath.lib.algorithms Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.algorithms. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin. ,MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/package-tree.html
Integrability,interface,interface," needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html
Modifiability,plugin,plugins,". TilerPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class TilerPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class TilerPlugin<T>; extends AbstractDetectionPlugin<T>; Simple plugin to create square tiles, which may later have measurements added. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TilerPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgumen",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html
Safety,detect,detected,"that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html
Security,hash,hashCode,"ould return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This sh",MatchSource.WIKI,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html
Availability,error,errors,"hod Details. calibration; public DelaunayTools.Builder calibration(PixelCalibration cal); Specify pixel calibration, which is used to calibrate the x and y coordinates. Parameters:; cal - the calibration to use; Returns:; this builder. centroids; public DelaunayTools.Builder centroids(); Specify that the triangulation should be based on ROI centroids. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(); Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(double densify,; double erosion); Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Parameters:; densify - how much to 'densify' the coordinates; recommended default value is 4.0 (assuming uncalibrated pixels).; Decreasing the value will give a denser (and slower) triangulation; this can achieve more accuracy but ; also lead to numerical problems. Try adjusting this value only if the default results in errors.; erosion - amount to erode each Geometry in pixels. If non-zero, this can fix artifacts occurring at shared boundaries.; Returns:; this builder. preferNucleus; public DelaunayTools.Builder preferNucleus(boolean prefer); Specify that the triangulation should be based on nucleus ROIs where possible (only affects cell objects). Parameters:; prefer - if true, use the nucleus ROI for cell objects where possible; Returns:; this builder. coordinateExtractor; public DelaunayTools.Builder coordinateExtractor(Function<PathObject,Collection<Coordinate>> coordinateExtractor); Specify a default method of extracting coordinates for triangulation from an object, rather than centroids or the ROI boundary. Parameters:; coordinateExtractor - the custom coordinate extractor; Returns:; this builder. build; public DelaunayTools.Subdivision build(); Build the DelaunayTools.Subdivision with the current parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html
Modifiability,extend,extends,". DelaunayTools.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis; Class DelaunayTools.Builder. java.lang.Object; qupath.lib.analysis.DelaunayTools.Builder. Enclosing class:; DelaunayTools. public static class DelaunayTools.Builder; extends Object; Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DelaunayTools.Subdivision; build(). Build the DelaunayTools.Subdivision with the current parameters. DelaunayTools.Builder; calibration(PixelCalibration cal). Specify pixel calibration, which is used to calibrate the x and y coordinates. DelaunayTools.Builder; centroids(). Specify that the triangulation should be based on ROI centroids. DelaunayTools.Builder; coordinateExtractor(Function<PathObject,Collection<Coordinate>> coordinateExtractor). Specify a default method of extracting coordinates for triangulation from an object, rather than centroids or the ROI boundary. DelaunayTools.Builder; preferNucleus(boolean prefer). Specify that the triangulation should be based on nucleus ROIs where possible (only affects cell objects). DelaunayTools.Builder; roiBounds(). Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. DelaunayTools.Builder; roiBounds(double densify,; double erosion). Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. calibration; public DelaunayTools.Builder calibration(Pix",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html
Security,hash,hashCode,"ibration cal). Specify pixel calibration, which is used to calibrate the x and y coordinates. DelaunayTools.Builder; centroids(). Specify that the triangulation should be based on ROI centroids. DelaunayTools.Builder; coordinateExtractor(Function<PathObject,Collection<Coordinate>> coordinateExtractor). Specify a default method of extracting coordinates for triangulation from an object, rather than centroids or the ROI boundary. DelaunayTools.Builder; preferNucleus(boolean prefer). Specify that the triangulation should be based on nucleus ROIs where possible (only affects cell objects). DelaunayTools.Builder; roiBounds(). Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. DelaunayTools.Builder; roiBounds(double densify,; double erosion). Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. calibration; public DelaunayTools.Builder calibration(PixelCalibration cal); Specify pixel calibration, which is used to calibrate the x and y coordinates. Parameters:; cal - the calibration to use; Returns:; this builder. centroids; public DelaunayTools.Builder centroids(); Specify that the triangulation should be based on ROI centroids. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(); Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(double densify,; double erosion); Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Parameters:; densify - how much to 'densify' the coordinates; recommended default value is 4.0 (assuming uncalibrated pixels).; Decreasing the value will give a denser (and slower) triangulati",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html
Modifiability,extend,extends,". DelaunayTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis; Class DelaunayTools. java.lang.Object; qupath.lib.analysis.DelaunayTools. public class DelaunayTools; extends Object; Tools for creating and querying Delaunay triangulations and Voronoi diagrams. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. static class ; DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. Constructor Summary; Constructors. Constructor; Description; DelaunayTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static BiPredicate<PathObject,PathObject>; boundaryDistancePredicate(double maxDistance,; boolean preferNucleus). BiPredicate that returns true for objects with ROI boundaries within a specified distance. static BiPredicate<PathObject,PathObject>; centroidDistancePredicate(double maxDistance,; boolean preferNucleus). BiPredicate that returns true for objects with ROI centroids within a specified distance. static Collection<PathObject>; classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object classifications based upon pre-computed clusters. static Collection<PathObject>; classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static List<PathObject>; createAnnotationsFromSubdivision(DelaunayTools.Subdivision subdivision,; ROI",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html
Safety,detect,detections,"ferNucleus); BiPredicate that returns true for objects with ROI centroids within a specified distance. Parameters:; maxDistance - maximum separation between ROI centroids; preferNucleus - if true, prefer nucleus centroids for cell objects; Returns:; true for object pairs with close centroids. boundaryDistancePredicate; public static BiPredicate<PathObject,PathObject> boundaryDistancePredicate(double maxDistance,; boolean preferNucleus); BiPredicate that returns true for objects with ROI boundaries within a specified distance. Parameters:; maxDistance - maximum separation between ROI boundaries; preferNucleus - if true, prefer nucleus ROIs for cell objects; Returns:; true for object pairs with close boundaries. createAnnotationsFromSubdivision; public static List<PathObject> createAnnotationsFromSubdivision(DelaunayTools.Subdivision subdivision,; ROI bounds); Create annotations surrounding objects within a specified subdivision based on Voronoi faces.; This can be used to create annotations based upon existing detections. Parameters:; subdivision - subdivision representing object relationships; bounds - if provided, clip the annotations to fit within the ROI; Returns:; a list of annotations, one for each classification represented by objects within the subdivision within the bounds. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; Returns:; a collection of objects that have had their classifications set by this method. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Colle",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html
Security,hash,hashCode,"nayTools.Subdivision; createFromGeometryCoordinates(Collection<PathObject> pathObjects,; boolean preferNucleusROI,; double densifyFactor). Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object names based upon pre-computed clusters. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static DelaunayTools.Builder; newBuilder(Collection<PathObject> pathObjects). Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. static BiPredicate<PathObject,PathObject>; sameClassificationPredicate(). BiPredicate that returns true for objects that share the same classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DelaunayTools; public DelaunayTools(). Method Details. newBuilder; public static DelaunayTools.Builder newBuilder(Collection<PathObject> pathObjects); Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. Parameters:; pathObjects - ; Returns:. createFromCentroids; public static DelaunayTools.Subdivision createFromCentroids(Collection<PathObject> pathObjects,; boolean preferNucleusROI); Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs.; ; Note: centroids must be distinct. If multiple objects have identical centroids, one or more objects may be lost ; from the resulting DelaunayTools.Subdivision. Parameters:; pathObjects - collection of objects from which to construct the DelaunayTools.Subdivision; preferNucleusROI - if true, prefer the nucleus ROI when extracting the centroid from a cell; Returns:; a new DelaunayTools.Subdivision computed from the centroid",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html
Modifiability,extend,extends,". DelaunayTools.Subdivision (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis; Class DelaunayTools.Subdivision. java.lang.Object; qupath.lib.analysis.DelaunayTools.Subdivision. Enclosing class:; DelaunayTools. public static class DelaunayTools.Subdivision; extends Object; Helper class for extracting information from a Delaunay triangulation computed from PathObjects. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<PathObject,List<PathObject>>; getAllNeighbors(). Get a list of neighbors for all objects. List<Collection<PathObject>>; getClusters(BiPredicate<PathObject,PathObject> predicate). Get clusters of connected objects, where connections are made between neighboring objects that meet the specified predicate. Map<PathObject,List<PathObject>>; getFilteredNeighbors(BiPredicate<PathObject,PathObject> predicate). Get a list of neighbors for all objects, filtering out objects that do not meet specified criteria. List<PathObject>; getFilteredNeighbors(PathObject pathObject,; BiPredicate<PathObject,PathObject> predicate). Get a list of neighbors for a specified object, filtering out objects that do not meet specified criteria. ImagePlane; getImagePlane(). Get the ImagePlane for this subdivision. PathObject; getNearestNeighbor(PathObject pathObject). Get the nearest neighbor for the specified object. PathObject; getNearestNeighbor(PathObject pathObject,; BiPredicate<PathObject,PathObject> predicate). Get the nearest neighbor for the specified object, filtered by a predicate. List<PathObject>; getNeighbors(PathObject pathObject). Get all neighbors for a specified object. Collection<PathObject>; getPathObjects(). Get all the objects ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html
Security,hash,hashCode,"Object,; BiPredicate<PathObject,PathObject> predicate). Get a list of neighbors for a specified object, filtering out objects that do not meet specified criteria. ImagePlane; getImagePlane(). Get the ImagePlane for this subdivision. PathObject; getNearestNeighbor(PathObject pathObject). Get the nearest neighbor for the specified object. PathObject; getNearestNeighbor(PathObject pathObject,; BiPredicate<PathObject,PathObject> predicate). Get the nearest neighbor for the specified object, filtered by a predicate. List<PathObject>; getNeighbors(PathObject pathObject). Get all neighbors for a specified object. Collection<PathObject>; getPathObjects(). Get all the objects associated with this subdivision. Map<PathObject,Geometry>; getVoronoiFaces(). Get a map of Voronoi faces as JTS Geometry objects. Map<PathObject,ROI>; getVoronoiROIs(Geometry clip). Get a map of Voronoi faces, convered to ROI objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImagePlane; public ImagePlane getImagePlane(); Get the ImagePlane for this subdivision.; Because the subdivision is 2D, all object ROIs are expected to belong to the same plane. Returns:. getVoronoiFaces; public Map<PathObject,Geometry> getVoronoiFaces(); Get a map of Voronoi faces as JTS Geometry objects. Returns:; See Also:. getVoronoiROIs(Geometry). getVoronoiROIs; public Map<PathObject,ROI> getVoronoiROIs(Geometry clip); Get a map of Voronoi faces, convered to ROI objects. Parameters:; clip - optional region used to clip the total extent of the ROIs; Returns:; See Also:. getVoronoiFaces(). getPathObjects; public Collection<PathObject> getPathObjects(); Get all the objects associated with this subdivision. Returns:. getNearestNeighbor; public PathObject getNearestNeighbor(PathObject pathObject); Get the nearest neighbor for the specified object. Parameters:; pathObject - the object whose neighbor is requested; Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html
Availability,avail,available,"uble computeCoordinateDistance(Coordinate coord,; STRtree tree); Compute the distance to the nearest coordinate stored within an STRtree.; This assumes that all items in the tree are coordinates (and nothing else!). Parameters:; coord - the query coordinate; tree - the STRtree containing existing coordinates; Returns:; distance to the closest coordinate found in tree, or Double.POSITIVE_INFINITY is no coordinate is found; See Also:. createCoordinateCache(Collection). createCoordinateCache; public static STRtree createCoordinateCache(Collection<Coordinate> coords); Create an STRtree to enable nearest neighbor searching for a collection of coordinates. Parameters:; coords - the coordinates to insert into the tree; Returns:; the tree. computeDistance; public static double computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator); Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. Parameters:; coord - the coordinate; geometry - the target geometry; locator - a locator created for the target Geometry or null; if available, computations may be faster; Returns:; See Also:. computeDistance(Coordinate, Geometry, PointOnGeometryLocator, boolean). computeDistance; public static double computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator,; boolean signedDistance); Compute the shortest distance from a coordinate to a target geometry.; This is primarily intended for computing distances for exterior coordinates, however a signed distance can ; optionally be returned for interior coordinates. Parameters:; coord - the coordinate; geometry - the target geometry; locator - a locator created for the target Geometry or null; if available, computations may be faster; signedDistance - if false, return 0 for coordinates occurring inside areas;; if true, return a negative value representing the distance to the boundary of the area; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DistanceTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html
Modifiability,extend,extends,". DistanceTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis; Class DistanceTools. java.lang.Object; qupath.lib.analysis.DistanceTools. public class DistanceTools; extends Object; Static methods for calculating distances between objects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DistanceTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; centroidToBoundsDistance2D(Collection<PathObject> sourceObjects,; Collection<PathObject> targetObjects,; double pixelWidth,; double pixelHeight,; String measurementName). Calculate the distance between source object centroids and the boundary of specified target objects, adding the result to the measurement list of the source objects. static void; centroidToBoundsDistance2D(Collection<PathObject> sourceObjects,; Collection<PathObject> targetObjects,; double pixelWidth,; double pixelHeight,; String measurementName,; boolean signedDistances). Calculate the (optionally signed) distance between source object centroids and the boundary of specified target objects, adding the result to the measurement list of the source objects. static void; centroidToCentroidDistance2D(Collection<PathObject> sourceObjects,; Collection<PathObject> targetObjects,; double pixelWidth,; double pixelHeight,; String measurementName). Calculate the distance between source object centroids and the centroid of specified target objects, adding the result to the measurement list of the source objects. static double; computeCoordinateDistance(Coordinate coord,; Collection<Coordinate> targets). Compute the shortest distance from a coordinate to one of a collection of",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DistanceTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html
Safety,detect,detectionCentroidDistances,"asurement list of the source objects. static double; computeCoordinateDistance(Coordinate coord,; Collection<Coordinate> targets). Compute the shortest distance from a coordinate to one of a collection of target coordinates. static double; computeCoordinateDistance(Coordinate coord,; STRtree tree). Compute the distance to the nearest coordinate stored within an STRtree. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator). Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator,; boolean signedDistance). Compute the shortest distance from a coordinate to a target geometry. static STRtree; createCoordinateCache(Collection<Coordinate> coords). Create an STRtree to enable nearest neighbor searching for a collection of coordinates. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation wi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DistanceTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html
Security,hash,hashCode,"result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation w",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/DistanceTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html
Integrability,interface,interfaces,. qupath.lib.analysis (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis. package qupath.lib.analysis. Classes to aid with analysis. Related Packages. Package; Description; qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DistanceTools. Static methods for calculating distances between objects. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/package-summary.html
Usability,simpl,simple,. qupath.lib.analysis (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis. package qupath.lib.analysis. Classes to aid with analysis. Related Packages. Package; Description; qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DistanceTools. Static methods for calculating distances between objects. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/package-summary.html
Integrability,interface,interfaces,". Normalization (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.classifiers; Enum Class Normalization. java.lang.Object; java.lang.Enum<Normalization>; qupath.lib.classifiers.Normalization. All Implemented Interfaces:; Serializable, Comparable<Normalization>, Constable. public enum Normalization; extends Enum<Normalization>; Methods for normalizing features. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MEAN_VARIANCE. Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX. Normalize into the range 0-1 using min and max values. NONE. Do not normalize features. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static Normalization; valueOf(String name). Returns the enum constant of this class with the specified name. static Normalization[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final Normalization NONE; Do not normalize features. MEAN_VARIANCE; public static final Normalization MEAN_VARIANCE; Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX; public static final Normalization MIN_MAX; Normalize into the r",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/Normalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html
Modifiability,extend,extends,". Normalization (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.classifiers; Enum Class Normalization. java.lang.Object; java.lang.Enum<Normalization>; qupath.lib.classifiers.Normalization. All Implemented Interfaces:; Serializable, Comparable<Normalization>, Constable. public enum Normalization; extends Enum<Normalization>; Methods for normalizing features. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MEAN_VARIANCE. Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX. Normalize into the range 0-1 using min and max values. NONE. Do not normalize features. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static Normalization; valueOf(String name). Returns the enum constant of this class with the specified name. static Normalization[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final Normalization NONE; Do not normalize features. MEAN_VARIANCE; public static final Normalization MEAN_VARIANCE; Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX; public static final Normalization MIN_MAX; Normalize into the r",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/Normalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html
Security,hash,hashCode,"ble, Comparable<Normalization>, Constable. public enum Normalization; extends Enum<Normalization>; Methods for normalizing features. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MEAN_VARIANCE. Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX. Normalize into the range 0-1 using min and max values. NONE. Do not normalize features. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static Normalization; valueOf(String name). Returns the enum constant of this class with the specified name. static Normalization[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final Normalization NONE; Do not normalize features. MEAN_VARIANCE; public static final Normalization MEAN_VARIANCE; Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX; public static final Normalization MIN_MAX; Normalize into the range 0-1 using min and max values. Method Details. values; public static Normalization[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Normalization valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters a",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/Normalization.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html
Integrability,interface,interfaces,". qupath.lib.classifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers. package qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers.; ; This was the main package in QuPath v0.1.2 and earlier.; Since v0.2.0, the new subpackages have been created for pixel and object classifiers. Related Packages. Package; Description; qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. Enum Classes. Class; Description; Normalization. Methods for normalizing features. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/package-summary.html
Usability,learn,learning,". qupath.lib.classifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers. package qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers.; ; This was the main package in QuPath v0.1.2 and earlier.; Since v0.2.0, the new subpackages have been created for pixel and object classifiers. Related Packages. Package; Description; qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. Enum Classes. Class; Description; Normalization. Methods for normalizing features. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/package-summary.html
Modifiability,extend,extends,". ColorDeconvMatrix3x3 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorDeconvMatrix3x3. java.lang.Object; qupath.lib.color.ColorDeconvMatrix3x3. public class ColorDeconvMatrix3x3; extends Object; Simple class for representing - and inverting a 3x3 matrix. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorDeconvMatrix3x3(double[][] M). Constructor for a 3x3 matrix. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; determinant(). Calculate the determinant of the matrix. double[][]; inverse(). Calculate the 3x3 matrix inverse. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ColorDeconvMatrix3x3; public ColorDeconvMatrix3x3(double[][] M); throws IllegalArgumentException; Constructor for a 3x3 matrix. Parameters:; M - ; Throws:; IllegalArgumentException - if the matrix is not 3x3. Method Details. determinant; public double determinant(); Calculate the determinant of the matrix. Returns:. inverse; public double[][] inverse(); Calculate the 3x3 matrix inverse. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvMatrix3x3.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvMatrix3x3.html
Security,hash,hashCode,". ColorDeconvMatrix3x3 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorDeconvMatrix3x3. java.lang.Object; qupath.lib.color.ColorDeconvMatrix3x3. public class ColorDeconvMatrix3x3; extends Object; Simple class for representing - and inverting a 3x3 matrix. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorDeconvMatrix3x3(double[][] M). Constructor for a 3x3 matrix. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; determinant(). Calculate the determinant of the matrix. double[][]; inverse(). Calculate the 3x3 matrix inverse. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ColorDeconvMatrix3x3; public ColorDeconvMatrix3x3(double[][] M); throws IllegalArgumentException; Constructor for a 3x3 matrix. Parameters:; M - ; Throws:; IllegalArgumentException - if the matrix is not 3x3. Method Details. determinant; public double determinant(); Calculate the determinant of the matrix. Returns:. inverse; public double[][] inverse(); Calculate the 3x3 matrix inverse. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvMatrix3x3.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvMatrix3x3.html
Energy Efficiency,green,greenMax,"d; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorDeconvolutionHelper. java.lang.Object; qupath.lib.color.ColorDeconvolutionHelper. public class ColorDeconvolutionHelper; extends Object; Static methods to assist with color deconvolution. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorDeconvolutionHelper();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; convertPixelsToOpticalDensities(float[] px,; double maxValue,; boolean use8BitLUT). For originally-8-bit images, optical densities can usually be computed faster by preallocating a LUT with the 0-255 required values. static double[]; estimateWhiteValues(int[] rgb). Estimate white (background) values for a brightfield image. static StainVector; generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax). Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. static float[]; getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px). Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. static float[]; getGreenOpticalDensities(int[] rgb,; double maxValue,; float[] px). Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. static int; getMedianRGB(int[] rgb). Determine median of RGB values. static float[]; getRedOpticalDensities(int[] rgb,; double maxValue,; float[] px). Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. static final double; makeOD(double val,; double max). Convert a single pixel value to an optical density as max(0, -log10(val/max). static final double; makeODByLUT(float val,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html
Modifiability,extend,extends,". ColorDeconvolutionHelper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorDeconvolutionHelper. java.lang.Object; qupath.lib.color.ColorDeconvolutionHelper. public class ColorDeconvolutionHelper; extends Object; Static methods to assist with color deconvolution. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorDeconvolutionHelper();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; convertPixelsToOpticalDensities(float[] px,; double maxValue,; boolean use8BitLUT). For originally-8-bit images, optical densities can usually be computed faster by preallocating a LUT with the 0-255 required values. static double[]; estimateWhiteValues(int[] rgb). Estimate white (background) values for a brightfield image. static StainVector; generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax). Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. static float[]; getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px). Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. static float[]; getGreenOpticalDensities(int[] rgb,; double maxValue,; float[] px). Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. static int; getMedianRGB(int[] rgb). Determine median of RGB values. static float[]; getRedOpticalDensities(int[] rgb,; double maxValue,; float[] px). Convert red channel of packed rgb pixel to optical density values, using a specified maximum v",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html
Safety,avoid,avoids,"public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainVectorFromPixels; public static StainVector generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax); Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. Parameters:; name - ; rgb - ; redMax - ; greenMax - ; blueMax - ; Returns:. getMedianRGB; public static int getMedianRGB(int[] rgb); Determine median of RGB values.; The median of each channel is computed separately. Parameters:; rgb - array of packed RGB values; Returns:. refineColorDeconvolutionStains; public static ColorDeconvolutionStains refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped); Attempt to automatically refine color deconvolution stains based upon pixel values.; ; Warning! This is really only for testing - it has not be very extensively validated.; ; The method used is based very loosely on that of Macenko et al. (2009), but avoids eigenvalue computations in favor of; determining an initial stain inputs.; ; TODO: Improve automatic stain vector refinement. Parameters:; rgb - ; stains - ; minStain - minimum optical density for each RGB channel (default 0.15); percentageClipped - ; Returns:. estimateWhiteValues; public static double[] estimateWhiteValues(int[] rgb); Estimate white (background) values for a brightfield image.; ; The algorithm computes histograms for each RGB channel, and takes the mode; of the histogram in the region of the histogram > the mean value for that channel. Parameters:; rgb - an array of packed RGB values; Returns:; an array containing estimated [red, green and blue] background values. ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html
Security,hash,hashCode," max). Convert a single pixel value to an optical density as max(0, -log10(val/max). static final double; makeODByLUT(float val,; double[] OD_LUT). Convert a float pixel to an optical density value using a pre-computed lookup table. static final double; makeODByLUT(int val,; double[] OD_LUT). Convert an int pixel to an optical density value using a pre-computed lookup table. static double[]; makeODLUT(double maxValue). Create an optical density lookup table with 256 entries, normalizing to the specified background value. static double[]; makeODLUT(double maxValue,; int nValues). Create an optical density lookup table, normalizing to the specified background value. static ColorDeconvolutionStains; refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped). Attempt to automatically refine color deconvolution stains based upon pixel values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorDeconvolutionHelper; public ColorDeconvolutionHelper(). Method Details. makeOD; public static final double makeOD(double val,; double max); Convert a single pixel value to an optical density as max(0, -log10(val/max). where val is clipped to be >= 1. Parameters:; val - ; max - ; Returns:. makeODByLUT; public static final double makeODByLUT(int val,; double[] OD_LUT); Convert an int pixel to an optical density value using a pre-computed lookup table. ; This is likely to be much faster than calling makeOD(double, double). Parameters:; val - ; OD_LUT - ; Returns:; See Also:. makeOD(double, double). makeODByLUT; public static final double makeODByLUT(float val,; double[] OD_LUT); Convert a float pixel to an optical density value using a pre-computed lookup table. ; This is likely to be much faster than calling makeOD(double, double), but involves ; rounding the float first. Parameters:; val - ; OD_LUT - ; Returns:;",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html
Testability,log,log,"eOD(double, double), but involves ; rounding the float first. Parameters:; val - ; OD_LUT - ; Returns:; See Also:. makeOD(double, double). makeODLUT; public static double[] makeODLUT(double maxValue); Create an optical density lookup table with 256 entries, normalizing to the specified background value. Parameters:; maxValue - ; Returns:; See Also:. makeOD(double, double); makeODByLUT(int, double[]). makeODLUT; public static double[] makeODLUT(double maxValue,; int nValues); Create an optical density lookup table, normalizing to the specified background value. Parameters:; maxValue - background (white value); nValues - number of values to include in the lookup table; Returns:. convertPixelsToOpticalDensities; public static void convertPixelsToOpticalDensities(float[] px,; double maxValue,; boolean use8BitLUT); For originally-8-bit images, optical densities can usually be computed faster by preallocating a LUT with the 0-255 required values.; Otherwise, log values need to be calculated for every pixel (which can be relatively slow). Parameters:; px - ; maxValue - ; use8BitLUT - . getRedOpticalDensities; public static float[] getRedOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. getGreenOpticalDensities; public static float[] getGreenOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. getBlueOpticalDensities; public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainV",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html
Integrability,interface,interface,"lutionStains (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorDeconvolutionStains.DefaultColorDeconvolutionStains. java.lang.Object; java.lang.Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. All Implemented Interfaces:; Serializable, Comparable<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>, Constable. Enclosing class:; ColorDeconvolutionStains. public static enum ColorDeconvolutionStains.DefaultColorDeconvolutionStains; extends Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant D",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html
Modifiability,extend,extends,". ColorDeconvolutionStains.DefaultColorDeconvolutionStains (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorDeconvolutionStains.DefaultColorDeconvolutionStains. java.lang.Object; java.lang.Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. All Implemented Interfaces:; Serializable, Comparable<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>, Constable. Enclosing class:; ColorDeconvolutionStains. public static enum ColorDeconvolutionStains.DefaultColorDeconvolutionStains; extends Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html
Security,hash,hashCode,"aultColorDeconvolutionStains; extends Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. H_E; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_E; Hematoxylin and eosin. H_DAB; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_DAB; Hematoxylin and DAB. Method Details. values; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not p",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html
Availability,recover,recover,"same StainVectors but new max (background) values. ColorDeconvolutionStains; changeName(String name). Create a new stains object with the same StainVectors but a new name. ColorDeconvolutionStains; changeStain(StainVector stainNew,; int stainNumber). Create a new stains object, identical to this one but for one StainVector having been changed. static String; getColorDeconvolutionStainsAsString(ColorDeconvolutionStains stains,; int nDecimalPlaces). Get a String representation of the stains and background. double[][]; getMatrixInverse(). Get matrix inverse, as useful for color deconvolution. double; getMaxBlue(). Get the maximum value for the blue channel (default = 255). double; getMaxGreen(). Get the maximum value for the green channel (default = 255). double; getMaxRed(). Get the maximum value for the red channel (default = 255). String; getName(). Get the stains name. StainVector; getStain(int n). Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains). int; getStainNumber(StainVector stain). Get the number for a specific stain (1, 2 or 3). Collection<StainVector>; getStains(boolean includeResidual). Get a collection of all the stains. static boolean; isDAB(StainVector stain). Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). static boolean; isEosin(StainVector stain). Check if the name of a StainVector is ""eosin"", ""eos"" or ""e"" (ignoring case). boolean; isH_DAB(). Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. boolean; isH_E(). Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. static boolean; isHematoxylin(StainVector stain). Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). static ColorDeconvolutionStains; makeDefaultColo",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html
Energy Efficiency,green,green,"ith three stain vectors. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ColorDeconvolutionStains; changeMaxValues(double maxRed,; double maxGreen,; double maxBlue). Create a new stains object with the same StainVectors but new max (background) values. ColorDeconvolutionStains; changeName(String name). Create a new stains object with the same StainVectors but a new name. ColorDeconvolutionStains; changeStain(StainVector stainNew,; int stainNumber). Create a new stains object, identical to this one but for one StainVector having been changed. static String; getColorDeconvolutionStainsAsString(ColorDeconvolutionStains stains,; int nDecimalPlaces). Get a String representation of the stains and background. double[][]; getMatrixInverse(). Get matrix inverse, as useful for color deconvolution. double; getMaxBlue(). Get the maximum value for the blue channel (default = 255). double; getMaxGreen(). Get the maximum value for the green channel (default = 255). double; getMaxRed(). Get the maximum value for the red channel (default = 255). String; getName(). Get the stains name. StainVector; getStain(int n). Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains). int; getStainNumber(StainVector stain). Get the number for a specific stain (1, 2 or 3). Collection<StainVector>; getStains(boolean includeResidual). Get a collection of all the stains. static boolean; isDAB(StainVector stain). Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). static boolean; isEosin(StainVector stain). Check if the name of a StainVector is ""eosin"", ""eos"" or ""e"" (ignoring case). boolean; isH_DAB(). Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. boolean; isH_E(). Check if we have H&E staining, by checking the names of th",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html
Integrability,interface,interface,"f stains. getName; public String getName(); Get the stains name. Returns:. getStainNumber; public int getStainNumber(StainVector stain); Get the number for a specific stain (1, 2 or 3). Parameters:; stain - ; Returns:. getMaxRed; public double getMaxRed(); Get the maximum value for the red channel (default = 255). Returns:. getMaxGreen; public double getMaxGreen(); Get the maximum value for the green channel (default = 255). Returns:. getMaxBlue; public double getMaxBlue(); Get the maximum value for the blue channel (default = 255). Returns:. getMatrixInverse; public double[][] getMatrixInverse(); Get matrix inverse, as useful for color deconvolution.; See static ColorDeconvolution classes for usage. Returns:. toString; public String toString(). Overrides:; toString in class Object. getColorDeconvolutionStainsAsString; public static String getColorDeconvolutionStainsAsString(ColorDeconvolutionStains stains,; int nDecimalPlaces); Get a String representation of the stains and background. Parameters:; stains - ; nDecimalPlaces - ; Returns:; See Also:. parseColorDeconvolutionStainsArg(String). parseColorDeconvolutionStainsArg; public static ColorDeconvolutionStains parseColorDeconvolutionStainsArg(String s); Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. Parameters:; s - ; Returns:; See Also:. getColorDeconvolutionStainsAsString(ColorDeconvolutionStains, int). parseStainValues; public static double[] parseStainValues(Locale locale,; String s); Parses 3 values, suitable for use as a stain vector. Parameters:; locale - ; s - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html
Modifiability,extend,extends,". ColorDeconvolutionStains (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorDeconvolutionStains. java.lang.Object; qupath.lib.color.ColorDeconvolutionStains. All Implemented Interfaces:; Externalizable, Serializable. public class ColorDeconvolutionStains; extends Object; implements Externalizable; Helper class for storing stain vectors and maximum channel values to be used for color deconvolution.; ; The maximum channel values are the RGB values corresponding to pixels that have no staining of any kind; (i.e. all light has passed through... the pixel should look close to white).; By default, these are 255. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Enum for common stain defaults. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DAB. Default name for DAB stain. static final String; EOSIN. Default name for eosin stain. static final String; HEMATOXYLIN. Default name (and spelling) for hematoxylin stain. Constructor Summary; Constructors. Constructor; Description; ColorDeconvolutionStains(). Default constructor, for Externalizable. ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; double maxRed,; double maxGreen,; double maxBlue). Constructor for ColorDeconvolutionStains with two stain vectors. ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; StainVector stain3,; double maxRed,; double maxGreen,; double maxBlue). Constructor for ColorDeconvolutionStains with three stain vectors. Method Summary. All MethodsStatic MethodsInstanc",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html
Safety,recover,recover,"same StainVectors but new max (background) values. ColorDeconvolutionStains; changeName(String name). Create a new stains object with the same StainVectors but a new name. ColorDeconvolutionStains; changeStain(StainVector stainNew,; int stainNumber). Create a new stains object, identical to this one but for one StainVector having been changed. static String; getColorDeconvolutionStainsAsString(ColorDeconvolutionStains stains,; int nDecimalPlaces). Get a String representation of the stains and background. double[][]; getMatrixInverse(). Get matrix inverse, as useful for color deconvolution. double; getMaxBlue(). Get the maximum value for the blue channel (default = 255). double; getMaxGreen(). Get the maximum value for the green channel (default = 255). double; getMaxRed(). Get the maximum value for the red channel (default = 255). String; getName(). Get the stains name. StainVector; getStain(int n). Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains). int; getStainNumber(StainVector stain). Get the number for a specific stain (1, 2 or 3). Collection<StainVector>; getStains(boolean includeResidual). Get a collection of all the stains. static boolean; isDAB(StainVector stain). Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). static boolean; isEosin(StainVector stain). Check if the name of a StainVector is ""eosin"", ""eos"" or ""e"" (ignoring case). boolean; isH_DAB(). Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. boolean; isH_E(). Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. static boolean; isHematoxylin(StainVector stain). Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). static ColorDeconvolutionStains; makeDefaultColo",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html
Security,hash,hashCode,"by checking the names of the first two stains and confirming that the third stain is a residual. static boolean; isHematoxylin(StainVector stain). Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). static ColorDeconvolutionStains; makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains stains). Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). static ColorDeconvolutionStains; parseColorDeconvolutionStainsArg(String s). Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. static double[]; parseStainValues(Locale locale,; String s). Parses 3 values, suitable for use as a stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HEMATOXYLIN; public static final String HEMATOXYLIN; Default name (and spelling) for hematoxylin stain. See Also:. Constant Field Values. EOSIN; public static final String EOSIN; Default name for eosin stain. See Also:. Constant Field Values. DAB; public static final String DAB; Default name for DAB stain. See Also:. Constant Field Values. Constructor Details. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; StainVector stain3,; double maxRed,; double maxGreen,; double maxBlue); Constructor for ColorDeconvolutionStains with three stain vectors. Parameters:; name - ; stain1 - ; stain2 - ; stain3 - ; maxRed - background (white) value for red channel; maxGreen - background (white) value for green channel; maxBlue - background (white) value for blue channel. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html
Integrability,interface,interface,". ColorMaps.ColorMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Interface ColorMaps.ColorMap. Enclosing class:; ColorMaps. public static interface ColorMaps.ColorMap; colormap, which acts as an interpolating lookup table with an arbitrary range. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Integer; getColor(double value,; double minValue,; double maxValue). Get a packed ARGB representation of the (interpolated) color at the specified value,. String; getName(). Get the name of the colormap. Method Details. getName; String getName(); Get the name of the colormap. Returns:. getColor; Integer getColor(double value,; double minValue,; double maxValue); Get a packed ARGB representation of the (interpolated) color at the specified value,. Parameters:; value - value that should be colorized; minValue - minimum display value, corresponding to the first color in the lookup table of this map; maxValue - maximum display value, corresponding to the first last in the lookup table of this map; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorMaps.ColorMap.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.ColorMap.html
Availability,avail,available,"olorMaps.ColorMap. colormap, which acts as an interpolating lookup table with an arbitrary range. Constructor Summary; Constructors. Constructor; Description; ColorMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorMaps.ColorMap; createColorMap(String name,; double[] r,; double[] g,; double[] b). Create a colormap using floating point values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int[] r,; int[] g,; int[] b). Create a colormap using integer values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... paths). Install colormaps from the specified paths. static boolean; installColorMaps(ColorMaps.ColorMap... colorMaps). Install colormaps. static void; setDefaultColorMap(ColorMaps.ColorMap colorMap). Set the default ColorMaps.ColorMap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorMaps; public ColorMaps(). Method Details. installColorMaps; public static boolean installColorMaps(Path... paths); Install colormaps from the specified paths. Parameters:; paths - optional paths containing either .tsv files containing colormaps, or directories that contain such",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html
Deployability,install,installColorMaps,"p; createColorMap(String name,; double[] r,; double[] g,; double[] b). Create a colormap using floating point values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int[] r,; int[] g,; int[] b). Create a colormap using integer values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... paths). Install colormaps from the specified paths. static boolean; installColorMaps(ColorMaps.ColorMap... colorMaps). Install colormaps. static void; setDefaultColorMap(ColorMaps.ColorMap colorMap). Set the default ColorMaps.ColorMap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorMaps; public ColorMaps(). Method Details. installColorMaps; public static boolean installColorMaps(Path... paths); Install colormaps from the specified paths. Parameters:; paths - optional paths containing either .tsv files containing colormaps, or directories that contain such .tsv files.; Returns:; true if changes were made, false otherwise. installColorMaps; public static boolean installColorMaps(ColorMaps.ColorMap... colorMaps); Install colormaps. Parameters:; colorMaps - one or more colormaps.; Returns:; true if changes were made, false otherwise. getColors; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html
Energy Efficiency,green,green,"igation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorMaps. java.lang.Object; qupath.lib.color.ColorMaps. public class ColorMaps; extends Object; Helper class to manage colormaps, which are rather like lookup tables but easily support interpolation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorMaps.ColorMap. colormap, which acts as an interpolating lookup table with an arbitrary range. Constructor Summary; Constructors. Constructor; Description; ColorMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorMaps.ColorMap; createColorMap(String name,; double[] r,; double[] g,; double[] b). Create a colormap using floating point values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int[] r,; int[] g,; int[] b). Create a colormap using integer values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... paths). Install colormaps from the specified paths. static boolean; installColorMap",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html
Integrability,interface,interface,". ColorMaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorMaps. java.lang.Object; qupath.lib.color.ColorMaps. public class ColorMaps; extends Object; Helper class to manage colormaps, which are rather like lookup tables but easily support interpolation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorMaps.ColorMap. colormap, which acts as an interpolating lookup table with an arbitrary range. Constructor Summary; Constructors. Constructor; Description; ColorMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorMaps.ColorMap; createColorMap(String name,; double[] r,; double[] g,; double[] b). Create a colormap using floating point values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int[] r,; int[] g,; int[] b). Create a colormap using integer values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... pa",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html
Modifiability,extend,extends,". ColorMaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorMaps. java.lang.Object; qupath.lib.color.ColorMaps. public class ColorMaps; extends Object; Helper class to manage colormaps, which are rather like lookup tables but easily support interpolation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorMaps.ColorMap. colormap, which acts as an interpolating lookup table with an arbitrary range. Constructor Summary; Constructors. Constructor; Description; ColorMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorMaps.ColorMap; createColorMap(String name,; double[] r,; double[] g,; double[] b). Create a colormap using floating point values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int[] r,; int[] g,; int[] b). Create a colormap using integer values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... pa",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html
Security,hash,hashCode," int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... paths). Install colormaps from the specified paths. static boolean; installColorMaps(ColorMaps.ColorMap... colorMaps). Install colormaps. static void; setDefaultColorMap(ColorMaps.ColorMap colorMap). Set the default ColorMaps.ColorMap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorMaps; public ColorMaps(). Method Details. installColorMaps; public static boolean installColorMaps(Path... paths); Install colormaps from the specified paths. Parameters:; paths - optional paths containing either .tsv files containing colormaps, or directories that contain such .tsv files.; Returns:; true if changes were made, false otherwise. installColorMaps; public static boolean installColorMaps(ColorMaps.ColorMap... colorMaps); Install colormaps. Parameters:; colorMaps - one or more colormaps.; Returns:; true if changes were made, false otherwise. getColors; public static int[] getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert); Get an array of packed RGB values for a specific colormap. Parameters:; map - the colormap providing colors; nValues - the number of colors to extract; doInvert - if true, reverse the order of the colors; Returns:; an int array of length nValues. getDefaultColorMap;",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html
Modifiability,extend,extends,". ColorModelFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorModelFactory. java.lang.Object; qupath.lib.color.ColorModelFactory. public final class ColorModelFactory; extends Object; Factory methods to help create ColorModels for use with BufferedImages. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModel; createColorModel(PixelType type,; int nChannels,; boolean alphaResidual,; int... colors). Create a new ColorModel that can be used to display an image where pixels per channel reflect ; probabilities, either as float or byte. static ColorModel; createColorModel(PixelType type,; List<ImageChannel> channels). Create a ColorModel for displaying an image with the specified channel colors. static ColorModel; createColorModel(PixelType pixelType,; ColorMaps.ColorMap map,; int band). Create a color model from a ColorMaps.ColorMap. static ColorModel; createColorModel(PixelType pixelType,; ColorMaps.ColorMap map,; int band,; double min,; double max,; int alphaChannel,; DoubleToIntFunction alphaFun). Create a color model from a ColorMaps.ColorMap, scaled within a defined range and with an optional additional alpha channel used to ; determine opacity. static DoubleToIntFunction; createGammaFunction(double gamma,; double min,; double max). Create a gamma function between a given range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. static DoubleToIntFunction; createGammaFunction(double gamma,; PixelType type). Create a gamma function for a specific pixel type, which can be used to determine a suitable alpha value for",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModelFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html
Performance,cache,cached," determine a suitable alpha value for an image ; that should have opacity based upon pixel values. Parameters:; gamma - ; type - ; Returns:; See Also:. createColorModel(PixelType, ColorMap, int, double, double, int, DoubleToIntFunction). createGammaFunction; public static DoubleToIntFunction createGammaFunction(double gamma,; double min,; double max); Create a gamma function between a given range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. Parameters:; gamma - ; min - ; max - ; Returns:; See Also:. createColorModel(PixelType, ColorMap, int, double, double, int, DoubleToIntFunction). getProbabilityColorModel8Bit; public static ColorModel getProbabilityColorModel8Bit(List<ImageChannel> channels); Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels.; ; The range of values is assumed to be 0-255, treated as probabilities rescaled from 0-1.; A cached model will be retrieved where possible, rather than generating a new one. Parameters:; channels - ; Returns:. getProbabilityColorModel32Bit; public static ColorModel getProbabilityColorModel32Bit(List<ImageChannel> channels); Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels.; ; The range of values is assumed to be 0-1.; A cached model will be retrieved where possible, rather than generating a new one. Parameters:; channels - ; Returns:. getDummyColorModel; public static ColorModel getDummyColorModel(int bpp); Get a dummy ColorModel instance.; ; This isn't very highly recommended; it is here to help in cases where a BufferedImage ; is required, but really only a raster is needed.; The actual color used is undefined (but it will likely be black). Parameters:; bpp - ; Returns:. createColorModel; public static ColorModel createColorModel(PixelType type,; int nChannels,; boolean alphaResidual,; int... colors); Create a new ColorModel that can be used to display an image where pixe",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModelFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html
Security,hash,hashCode,"mage ; that should have opacity based upon pixel values. static DoubleToIntFunction; createLinearFunction(PixelType type). Create a linear function for a specific pixel type, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. static ColorModel; getDummyColorModel(int bpp). Get a dummy ColorModel instance. static IndexColorModel; getIndexedClassificationColorModel(Map<Integer,PathClass> channels). Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. static ColorModel; getProbabilityColorModel32Bit(List<ImageChannel> channels). Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels. static ColorModel; getProbabilityColorModel8Bit(List<ImageChannel> channels). Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIndexedClassificationColorModel; public static IndexColorModel getIndexedClassificationColorModel(Map<Integer,PathClass> channels); Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. Parameters:; channels - ; Returns:. createIndexedColorModel; public static ColorModel createIndexedColorModel(Map<Integer,Integer> labelColors,; boolean includeAlpha); Create an indexed colormap for a labelled (indexed color) image. Parameters:; labelColors - map with integer labels as keys and packed (A)RGB colors as values.; includeAlpha - if true, allow alpha values to be included in the colormap; Returns:. createIndexedColorModel8bit; public static IndexColorModel createIndexedColorModel8bit(ColorMaps.ColorMap map); Create an 8-bit IndexColorModel from a ColorMaps.ColorMap. Parameters:; map - ; Returns:. createIndexedColorModel8bit; public static IndexColorModel createIndexedCol",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModelFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html
Integrability,interface,interface,. ColorModels.ColorModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Interface ColorModels.ColorModelBuilder. Enclosing class:; ColorModels. public static interface ColorModels.ColorModelBuilder; Simple builder to create a ColorModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ColorModel; build(). Build a ColorModel. Method Details. build; ColorModel build(); Build a ColorModel. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModels.ColorModelBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.ColorModelBuilder.html
Modifiability,extend,extends,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.color.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html
Safety,avoid,avoid,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.color.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html
Security,hash,hashCode,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.color.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html
Integrability,interface,interface,". ColorModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorModels. java.lang.Object; qupath.lib.color.ColorModels. public class ColorModels; extends Object; Helper class for creating a JSON-serializable way to generate a ColorModel. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModel",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html
Modifiability,extend,extends,". ColorModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorModels. java.lang.Object; qupath.lib.color.ColorModels. public class ColorModels; extends Object; Helper class for creating a JSON-serializable way to generate a ColorModel. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModel",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html
Security,hash,hashCode,"lass to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel); Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Parameters:; mainChannel - the main channel to display (colormap will be used); alphaChannel - an optional alpha channel (colormap will be ignored); Returns:; the ColorModels.ColorModelBuilder. createBand; public static ColorModels.DisplayBand createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay); Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). Parameters:; colorMapName - name of the ColorMaps.ColorMap; band - image band (the BufferedImage term - QuPath often refers to this as a channel); minDisplay - value associated with the first e",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html
Energy Efficiency,green,green,"Script is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorToolsAwt. java.lang.Object; qupath.lib.color.ColorToolsAwt. public class ColorToolsAwt; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK. Black, with 50% opacity. static final Color; TRANSLUCENT_WHITE. White, with 50% opacity. Constructor Summary; Constructors. Constructor; Description; ColorToolsAwt();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IndexColorModel; createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground). Get an IndexColorModel representing a linear LUT based on a RGB color. static Color; darkenColor(Color color). Get a (slightly) darker version of the specified color. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Get a color with a specified opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified o",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html
Modifiability,extend,extends,". ColorToolsAwt (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorToolsAwt. java.lang.Object; qupath.lib.color.ColorToolsAwt. public class ColorToolsAwt; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK. Black, with 50% opacity. static final Color; TRANSLUCENT_WHITE. White, with 50% opacity. Constructor Summary; Constructors. Constructor; Description; ColorToolsAwt();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IndexColorModel; createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground). Get an IndexColorModel representing a linear LUT based on a RGB color. static Color; darkenColor(Color color). Get a (slightly) darker version of the specified color. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Get a color with a specified opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opac",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html
Performance,cache,cached,"Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK. Black, with 50% opacity. static final Color; TRANSLUCENT_WHITE. White, with 50% opacity. Constructor Summary; Constructors. Constructor; Description; ColorToolsAwt();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IndexColorModel; createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground). Get an IndexColorModel representing a linear LUT based on a RGB color. static Color; darkenColor(Color color). Get a (slightly) darker version of the specified color. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Get a color with a specified opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a color deconvolution stain. static Color; getMoreTranslucentColor(Color color). Get a (slightly more) translucent version of the specified color. static Color; getTranslucentColor(Color color). Get a (slightly) translucent version of the specified color. static Color; sca",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html
Safety,avoid,avoid,"ang.Object; qupath.lib.color.ColorToolsAwt. public class ColorToolsAwt; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK. Black, with 50% opacity. static final Color; TRANSLUCENT_WHITE. White, with 50% opacity. Constructor Summary; Constructors. Constructor; Description; ColorToolsAwt();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IndexColorModel; createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground). Get an IndexColorModel representing a linear LUT based on a RGB color. static Color; darkenColor(Color color). Get a (slightly) darker version of the specified color. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Get a color with a specified opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a co",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html
Security,hash,hashCode,"ied opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a color deconvolution stain. static Color; getMoreTranslucentColor(Color color). Get a (slightly more) translucent version of the specified color. static Color; getTranslucentColor(Color color). Get a (slightly) translucent version of the specified color. static Color; scaleColor(Color color,; double factor). Get a scaled version of the specified color, where the RGB values are independently scaled by a specified factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_WHITE; public static final Color TRANSLUCENT_WHITE; White, with 50% opacity. TRANSLUCENT_BLACK; public static final Color TRANSLUCENT_BLACK; Black, with 50% opacity. Constructor Details. ColorToolsAwt; public ColorToolsAwt(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCach",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html
Energy Efficiency,green,green,"d; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorTransformer.ColorTransformMethod. java.lang.Object; java.lang.Enum<ColorTransformer.ColorTransformMethod>; qupath.lib.color.ColorTransformer.ColorTransformMethod. All Implemented Interfaces:; Serializable, Comparable<ColorTransformer.ColorTransformMethod>, Constable. Enclosing class:; ColorTransformer. public static enum ColorTransformer.ColorTransformMethod; extends Enum<ColorTransformer.ColorTransformMethod>; Enum consisting of color transforms that may be applied to RGB images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; Black. All pixels black. Blue. Blue channel only. Blue_chromaticity. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD. Blue channel optical densities. Brightness. Brightness value (from RGB-HSB transform). Brown. Brown value, (blue - (red + green)*0.3f). DAB_H_DAB. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Eosin_H_E. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hematoxylin_H_DAB_8_bit. Hematoxylin after color deconvolution with default H-DAB stains and conversion to 8-bit. Hematoxylin_H_E. Hematoxylin after color deconvolution with default H&E stains. Hema",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html
Integrability,interface,interfaces,". ColorTransformer.ColorTransformMethod (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorTransformer.ColorTransformMethod. java.lang.Object; java.lang.Enum<ColorTransformer.ColorTransformMethod>; qupath.lib.color.ColorTransformer.ColorTransformMethod. All Implemented Interfaces:; Serializable, Comparable<ColorTransformer.ColorTransformMethod>, Constable. Enclosing class:; ColorTransformer. public static enum ColorTransformer.ColorTransformMethod; extends Enum<ColorTransformer.ColorTransformMethod>; Enum consisting of color transforms that may be applied to RGB images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; Black. All pixels black. Blue. Blue channel only. Blue_chromaticity. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD. Blue channel optical densities. Brightness. Brightness value (from RGB-HSB transform). Brown. Brown value, (blue - (red + green)*0.3f). DAB_H_DAB. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Eosin_H_E. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hem",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html
Modifiability,extend,extends,". ColorTransformer.ColorTransformMethod (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorTransformer.ColorTransformMethod. java.lang.Object; java.lang.Enum<ColorTransformer.ColorTransformMethod>; qupath.lib.color.ColorTransformer.ColorTransformMethod. All Implemented Interfaces:; Serializable, Comparable<ColorTransformer.ColorTransformMethod>, Constable. Enclosing class:; ColorTransformer. public static enum ColorTransformer.ColorTransformMethod; extends Enum<ColorTransformer.ColorTransformMethod>; Enum consisting of color transforms that may be applied to RGB images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; Black. All pixels black. Blue. Blue channel only. Blue_chromaticity. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD. Blue channel optical densities. Brightness. Brightness value (from RGB-HSB transform). Brown. Brown value, (blue - (red + green)*0.3f). DAB_H_DAB. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Eosin_H_E. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hem",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html
Security,hash,hashCode,"m of red, green and blue optical densities. Original. Original image. Red. Red channel only. Red_chromaticity. Red chromaticity value, red / max(1, red + green + blue). Red_OD. Red channel optical densities. RGB_mean. Mean of red, green and blue channels. Saturation. Saturation value (from RGB-HSB transform). Stain_1. First stain after color deconvolution. Stain_2. Second stain after color deconvolution. Stain_3. Third stain after color deconvolution. White. All pixels white. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorTransformer.ColorTransformMethod; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorTransformer.ColorTransformMethod[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. Original; public static final ColorTransformer.ColorTransformMethod Original; Original image. Red; public static final ColorTransformer.ColorTransformMethod Red; Red channel only. Green; public static final ColorTransformer.ColorTransformMethod Green; Green channel only. Blue; public static final ColorTransformer.ColorTransformMethod Blue; Blue channel only. Red_OD; public static final ColorTransformer.ColorTransformMethod Red_OD; Red channel optical densities. Green_OD; public static final ColorTransformer.ColorTransformMethod Green_OD; Green channel optical densities. Blue_OD; public static final ColorTransformer.ColorTransformMethod Blue_OD; Blue channel optical densities. RGB_mean; public static final ColorTransformer.ColorTransformMethod RGB_mean; Mean of red, green and blue channels. Hue; public static final ",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html
Energy Efficiency,green,green," IHC data.; More details on each method (in particular 'Blue normalized', here 'Blue chromaticity') are provided in:; ; Brey, E. M., Lalani, Z., Johnston, C., Wong, M., McIntire, L. V., Duke, P. J., & Patrick, C. W. (2003).; Automated Selection of DAB-labeled Tissue for Immunohistochemical Quantification.; Journal of Histochemistry & Cytochemistry, 51(5); doi:10.1177/002215540305100503; ; Color deconvolution methods use default stain vectors - qupath.lib.color contains more flexible options for this. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. Constructor Summary; Constructors. Constructor; Description; ColorTransformer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static float; blueChromaticity(int rgb). Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). static float; brightness(int rgb). Extract brightness value from RGB-to-HSB transform. static float; brown(int rgb). Extract brown value, (blue - (red + green)*0.3f). static int[]; colorDeconvolveReconvolveRGBArray(int[] buf,; ColorDeconvolutionStains stainsInput,; ColorDeconvolutionStains stainsOutput,; boolean discardResidual,; int[] bufOutput). Deconvolve RGB array with one set of stain vectors, and reconvolve with another. static int[]; colorDeconvolveReconvolveRGBArray(int[] buf,; ColorDeconvolutionStains stainsInput,; ColorDeconvolutionStains stainsOutput,; boolean discardResidual,; int[] bufOutput,; float scale,; float offset). Deconvolve RGB array with one set of stain vectors, and reconvolve with another - with optional scaling. static float; colorDeconvolveRGBPixel(int rgb,; ColorDeconvolutionStains stains,; int channel). Calculate the color deconvolved value for a single pixel, stored as a packed (A)RGB int. static ColorModel; g",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorTransformer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html
Modifiability,extend,extends,". ColorTransformer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorTransformer. java.lang.Object; qupath.lib.color.ColorTransformer. public class ColorTransformer; extends Object; Static methods for computing a range of color transforms for packed RGB values.; ; Several straightforward methods of manipulating RGB channels that may be used to enhance (or suppress); primarily DAB staining, or otherwise assist in exploring IHC data.; More details on each method (in particular 'Blue normalized', here 'Blue chromaticity') are provided in:; ; Brey, E. M., Lalani, Z., Johnston, C., Wong, M., McIntire, L. V., Duke, P. J., & Patrick, C. W. (2003).; Automated Selection of DAB-labeled Tissue for Immunohistochemical Quantification.; Journal of Histochemistry & Cytochemistry, 51(5); doi:10.1177/002215540305100503; ; Color deconvolution methods use default stain vectors - qupath.lib.color contains more flexible options for this. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. Constructor Summary; Constructors. Constructor; Description; ColorTransformer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static float; blueChromaticity(int rgb). Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). static float; brightness(int rgb). Extract brightness value from RGB-to-HSB transform. static float; brown(int rgb). Extract brown value, (blue - (red + green)*0.3f). static int[]; colorDeconvolveReconvolveRGBArray(int[] buf,; Col",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorTransformer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html
Performance,perform,perform,"Model cm); Create a packed RGB pixel value by applying a ColorModel to a (possibly scaled and offset) floating point value. Parameters:; v - the 'raw' pixel value; offset - an offset to subtract from the value; scale - a scaling factor to apply after the offset subtraction; cm - a ColorModel used to determine the output packed RGB value; Returns:; a packed RGB value after applying the transformations to v. getDefaultColorModel; public static ColorModel getDefaultColorModel(ColorTransformer.ColorTransformMethod method); This does not guarantee a ColorModel will be returned!; If it is not, then a default grayscale LUT should be used. Parameters:; method - ; Returns:. transformRGB; public static void transformRGB(int[] buf,; int[] bufOutput,; ColorTransformer.ColorTransformMethod method,; float offset,; float scale,; boolean useColorLUT); Apply a specified color transform to a packed (A)RGB array and output another (A)RGB array.; ; The aim is to perform fast transformations for visualization purposes, and not to obtain the 'raw' transformed values. Parameters:; buf - ; bufOutput - ; method - ; offset - ; scale - ; useColorLUT - ; See Also:. ColorTools. colorDeconvolveRGBPixel; public static float colorDeconvolveRGBPixel(int rgb,; ColorDeconvolutionStains stains,; int channel); Calculate the color deconvolved value for a single pixel, stored as a packed (A)RGB int. Parameters:; rgb - ; stains - ; channel - ; Returns:. colorDeconvolveReconvolveRGBArray; public static int[] colorDeconvolveReconvolveRGBArray(int[] buf,; ColorDeconvolutionStains stainsInput,; ColorDeconvolutionStains stainsOutput,; boolean discardResidual,; int[] bufOutput); Deconvolve RGB array with one set of stain vectors, and reconvolve with another.; ; This supports in-place operation, i.e. buf and bufOutput can be the same array.; Otherwise, if bufOutput == null, a new output array will be created. Parameters:; buf - ; stainsInput - ; stainsOutput - ; discardResidual - ; bufOutput - ; Returns:. colorD",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorTransformer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html
Security,hash,hashCode,"plying a ColorModel to a (possibly scaled and offset) floating point value. static float; opticalDensitySum(int rgb,; double[] od_lut). Extract optical density sum value from a packed RGB pixel. static float; opticalDensitySum(int rgb,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Extract optical density sum value from a packed RGB pixel. static float; redChromaticity(int rgb). Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). static float; rgbMean(int rgb). Extract mean of RGB values from a packed RGB pixel. static float; saturation(int rgb). Extract saturation value from RGB-to-HSB transform. static void; transformRGB(int[] buf,; int[] bufOutput,; ColorTransformer.ColorTransformMethod method,; float offset,; float scale,; boolean useColorLUT). Apply a specified color transform to a packed (A)RGB array and output another (A)RGB array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransformer; public ColorTransformer(). Method Details. getODNormalizedColor; public static int getODNormalizedColor(int rgb,; double minOD,; float offset,; float scale); Create a 'normalized' color for visualization.; ; This is achieved by converting RGB values to optical densities, putting the RGB ODs into; a 3x1 vector and normalizing this to unit length, then rescaling the result to give an RGB representation.; Because of the somewhat strange rescaling involved, the final RGB values produced should not be over-interpreted -; this is really intended for visualization, such as when interactively looking for regions of single stains; when selecting color deconvolution stain vectors. Parameters:; rgb - original 8-bit RGB values; minOD - the minimum OD; pixels with an OD less than this will be considered unstained, and shown as white; offset - brightness and contrast offset; scale - brightness and contrast scale",MatchSource.WIKI,javadoc/docs/qupath/lib/color/ColorTransformer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html
Integrability,interface,interface,". StainVector.DefaultStains (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class StainVector.DefaultStains. java.lang.Object; java.lang.Enum<StainVector.DefaultStains>; qupath.lib.color.StainVector.DefaultStains. All Implemented Interfaces:; Serializable, Comparable<StainVector.DefaultStains>, Constable. Enclosing class:; StainVector. public static enum StainVector.DefaultStains; extends Enum<StainVector.DefaultStains>; Enum representing default stains.; ; TODO: Replace with interface, add stain vectors directly. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DAB. DAB. EOSIN. Eosin. HEMATOXYLIN. Hematoxylin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static StainVector.DefaultStains; valueOf(String name). Returns the enum constant of this class with the specified name. static StainVector.DefaultStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. HEMATOXYLIN; public static final StainVector.DefaultStains HEMATOXYLIN; Hematoxylin. EOSIN; public static final StainVector.DefaultStains EOSIN; Eosin. DAB; public static final StainVector.DefaultStains DAB; DAB. Method Details. values; public stat",MatchSource.WIKI,javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html
Modifiability,extend,extends,". StainVector.DefaultStains (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class StainVector.DefaultStains. java.lang.Object; java.lang.Enum<StainVector.DefaultStains>; qupath.lib.color.StainVector.DefaultStains. All Implemented Interfaces:; Serializable, Comparable<StainVector.DefaultStains>, Constable. Enclosing class:; StainVector. public static enum StainVector.DefaultStains; extends Enum<StainVector.DefaultStains>; Enum representing default stains.; ; TODO: Replace with interface, add stain vectors directly. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DAB. DAB. EOSIN. Eosin. HEMATOXYLIN. Hematoxylin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static StainVector.DefaultStains; valueOf(String name). Returns the enum constant of this class with the specified name. static StainVector.DefaultStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. HEMATOXYLIN; public static final StainVector.DefaultStains HEMATOXYLIN; Hematoxylin. EOSIN; public static final StainVector.DefaultStains EOSIN; Eosin. DAB; public static final StainVector.DefaultStains DAB; DAB. Method Details. values; public stat",MatchSource.WIKI,javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html
Security,hash,hashCode,"able, Comparable<StainVector.DefaultStains>, Constable. Enclosing class:; StainVector. public static enum StainVector.DefaultStains; extends Enum<StainVector.DefaultStains>; Enum representing default stains.; ; TODO: Replace with interface, add stain vectors directly. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DAB. DAB. EOSIN. Eosin. HEMATOXYLIN. Hematoxylin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static StainVector.DefaultStains; valueOf(String name). Returns the enum constant of this class with the specified name. static StainVector.DefaultStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. HEMATOXYLIN; public static final StainVector.DefaultStains HEMATOXYLIN; Hematoxylin. EOSIN; public static final StainVector.DefaultStains EOSIN; Eosin. DAB; public static final StainVector.DefaultStains DAB; DAB. Method Details. values; public static StainVector.DefaultStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static StainVector.DefaultStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be ret",MatchSource.WIKI,javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html
Energy Efficiency,green,green," terms of RGB optical densities. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; StainVector.DefaultStains. Enum representing default stains. Constructor Summary; Constructors. Constructor; Description; StainVector(). Default constructor, required for Externalizable interface. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; arrayAsString(Locale locale). Get a String representation of the stain vector array, formatting according to the specified Locale. static double; computeAngle(StainVector s1,; StainVector s2). Calculate the angle between two stain vectors, in degrees. static StainVector; createStainVector(String name,; double r,; double g,; double b). Create a stain vector. static double[]; cross3(double[] u,; double[] v). Compute the cross product of two vectors. double[]; getArray(). Get the stain vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (normalized) stain vector. boolean; isResidual(). Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. static StainVector; makeDefaultStainVector(StainVector.DefaultStains stain). Get a default stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. StainVector; public StainVector(); Default constructor, requir",MatchSource.WIKI,javadoc/docs/qupath/lib/color/StainVector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html
Integrability,interface,interface,". StainVector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class StainVector. java.lang.Object; qupath.lib.color.StainVector. All Implemented Interfaces:; Externalizable, Serializable. public class StainVector; extends Object; implements Externalizable; Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; StainVector.DefaultStains. Enum representing default stains. Constructor Summary; Constructors. Constructor; Description; StainVector(). Default constructor, required for Externalizable interface. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; arrayAsString(Locale locale). Get a String representation of the stain vector array, formatting according to the specified Locale. static double; computeAngle(StainVector s1,; StainVector s2). Calculate the angle between two stain vectors, in degrees. static StainVector; createStainVector(String name,; double r,; double g,; double b). Create a stain vector. static double[]; cross3(double[] u,; double[] v). Compute the cross product of two vectors. double[]; getArray(). Get the stain vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (",MatchSource.WIKI,javadoc/docs/qupath/lib/color/StainVector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html
Modifiability,extend,extends,". StainVector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class StainVector. java.lang.Object; qupath.lib.color.StainVector. All Implemented Interfaces:; Externalizable, Serializable. public class StainVector; extends Object; implements Externalizable; Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; StainVector.DefaultStains. Enum representing default stains. Constructor Summary; Constructors. Constructor; Description; StainVector(). Default constructor, required for Externalizable interface. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; arrayAsString(Locale locale). Get a String representation of the stain vector array, formatting according to the specified Locale. static double; computeAngle(StainVector s1,; StainVector s2). Calculate the angle between two stain vectors, in degrees. static StainVector; createStainVector(String name,; double r,; double g,; double b). Create a stain vector. static double[]; cross3(double[] u,; double[] v). Compute the cross product of two vectors. double[]; getArray(). Get the stain vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (",MatchSource.WIKI,javadoc/docs/qupath/lib/color/StainVector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html
Security,hash,hashCode,"; cross3(double[] u,; double[] v). Compute the cross product of two vectors. double[]; getArray(). Get the stain vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (normalized) stain vector. boolean; isResidual(). Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. static StainVector; makeDefaultStainVector(StainVector.DefaultStains stain). Get a default stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. StainVector; public StainVector(); Default constructor, required for Externalizable interface. Method Details. makeDefaultStainVector; public static StainVector makeDefaultStainVector(StainVector.DefaultStains stain); Get a default stain vector. Parameters:; stain - ; Returns:. createStainVector; public static StainVector createStainVector(String name,; double r,; double g,; double b); Create a stain vector. Parameters:; name - the name of the stain; r - the stain vector red component; g - the stain vector green component; b - the stain vector blue component; Returns:. isResidual; public boolean isResidual(); Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. Returns:. getName; public String getName(); Returns the name of the stain vector. Returns:. getRed; public double getRed(); Get the red component of the (normalized) stain vecto",MatchSource.WIKI,javadoc/docs/qupath/lib/color/StainVector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html
Availability,down,down,"B int value. static final Integer; MASK_BLUE. Mask for use when extracting the blue component from a packed (A)RGB int value. static final Integer; MASK_GREEN. Mask for use when extracting the green component from a packed (A)RGB int value. static final Integer; MASK_RED. Mask for use when extracting the red component from a packed (A)RGB int value. static final Integer; RED. Packed int representing red. static final Integer; WHITE. Packed int representing white. static final Integer; YELLOW. Packed int representing yellow. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static int; alpha(int argb). Extract the 8-bit alpha value from a packed ARGB value. static int; blue(int rgb). Extract the 8-bit blue value from a packed RGB value. static int; clip255(double val). Convert a double value to an int, flooring and clipping to the range 0-255. static int; do8BitRangeCheck(double v). Clip an input value to be an integer in the range 0-255 (with rounding down). static int; do8BitRangeCheck(float v). Clip an input value to be an integer in the range 0-255 (with rounding down). static int; do8BitRangeCheck(int v). Clip an input value to be an integer in the range 0-255. static int; green(int rgb). Extract the 8-bit green value from a packed RGB value. static int; makeRGB(int r,; int g,; int b). Deprecated.; Use packRGB(int, int, int) or packClippedRGB(int, int, int) instead. static int; makeRGBA(int r,; int g,; int b,; int a). Deprecated.; The naming and order of arguments is misleading. static int; makeScaledRGB(int rgb,; double scale). Scale the RGB channels for a color by a fixed amount. static int; packARGB(int a,; int r,; int g,; int b). Make a packed ARGB value from specified input values. static int; packClippedARGB(int a,; int r,; int g,; int b). Make a packed ARGB value from specified input values, clipping to the range 0-255. static int; packClippedRGB(int r,; int g,; int b). Make a packed RGB v",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
Energy Efficiency,green,green,". ColorTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class ColorTools. java.lang.Object; qupath.lib.common.ColorTools. public final class ColorTools; extends Object; Static functions to help work with RGB(A) colors using packed ints. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Integer; BLACK. Packed int representing black. static final Integer; BLUE. Packed int representing blue. static final Integer; CYAN. Packed int representing cyan. static final Integer; GREEN. Packed int representing green. static final Integer; MAGENTA. Packed int representing magenta. static final Integer; MASK_ALPHA. Mask for use when extracting the alpha component from a packed ARGB int value. static final Integer; MASK_BLUE. Mask for use when extracting the blue component from a packed (A)RGB int value. static final Integer; MASK_GREEN. Mask for use when extracting the green component from a packed (A)RGB int value. static final Integer; MASK_RED. Mask for use when extracting the red component from a packed (A)RGB int value. static final Integer; RED. Packed int representing red. static final Integer; WHITE. Packed int representing white. static final Integer; YELLOW. Packed int representing yellow. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static int; alpha(int argb). Extract the 8-bit alpha value from a packed ARGB value. static int; blue(int rgb). Extract the 8-bit blue value from a packed RGB value. static int; clip255(double val). Convert a double value to an int, flooring and clipping to the range 0-255. static int; do8BitRangeCheck(double v). Clip an input value ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
Modifiability,extend,extends,". ColorTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class ColorTools. java.lang.Object; qupath.lib.common.ColorTools. public final class ColorTools; extends Object; Static functions to help work with RGB(A) colors using packed ints. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Integer; BLACK. Packed int representing black. static final Integer; BLUE. Packed int representing blue. static final Integer; CYAN. Packed int representing cyan. static final Integer; GREEN. Packed int representing green. static final Integer; MAGENTA. Packed int representing magenta. static final Integer; MASK_ALPHA. Mask for use when extracting the alpha component from a packed ARGB int value. static final Integer; MASK_BLUE. Mask for use when extracting the blue component from a packed (A)RGB int value. static final Integer; MASK_GREEN. Mask for use when extracting the green component from a packed (A)RGB int value. static final Integer; MASK_RED. Mask for use when extracting the red component from a packed (A)RGB int value. static final Integer; RED. Packed int representing red. static final Integer; WHITE. Packed int representing white. static final Integer; YELLOW. Packed int representing yellow. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static int; alpha(int argb). Extract the 8-bit alpha value from a packed ARGB value. static int; blue(int rgb). Extract the 8-bit blue value from a packed RGB value. static int; clip255(double val). Convert a double value to an int, flooring and clipping to the range 0-255. static int; do8BitRangeCheck(double v). Clip an input value ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
Security,hash,hashCode,"input values, clipping to the range 0-255. static int; packClippedRGB(int r,; int g,; int b). Make a packed RGB value from specified input values, clipping to the range 0-255. static int; packRGB(int r,; int g,; int b). Make a packed RGB value from specified input values. static int; red(int rgb). Extract the 8-bit red value from a packed RGB value. static int[]; unpackARGB(int rgb). Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. static int[]; unpackARGB(int rgb,; int[] array). Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. static int[]; unpackRGB(int rgb). Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. static int[]; unpackRGB(int rgb,; int[] array). Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. WHITE; public static final Integer WHITE; Packed int representing white. BLACK; public static final Integer BLACK; Packed int representing black. RED; public static final Integer RED; Packed int representing red. GREEN; public static final Integer GREEN; Packed int representing green. BLUE; public static final Integer BLUE; Packed int representing blue. MAGENTA; public static final Integer MAGENTA; Packed int representing magenta. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public static final Integer MASK_GREEN; Mask for use when extracting the green compo",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
Usability,simpl,simply,"a. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public static final Integer MASK_GREEN; Mask for use when extracting the green component from a packed (A)RGB int value. MASK_BLUE; public static final Integer MASK_BLUE; Mask for use when extracting the blue component from a packed (A)RGB int value. Method Details. makeRGB; @Deprecated; public static int makeRGB(int r,; int g,; int b); Deprecated.; Use packRGB(int, int, int) or packClippedRGB(int, int, int) instead. Make a packed RGB value from specified input values.; ; Input r, g and b should be in the range 0-255 - but no checking is applied.; Rather, the input values are simply shifted as they are.; ; The alpha value is 255. Parameters:; r - ; g - ; b - ; Returns:. packRGB; public static int packRGB(int r,; int g,; int b); Make a packed RGB value from specified input values.; This is equivalent to an ARGB value with alpha set to 255, following Java Color.; ; Input r, g, and b should be in the range 0-255; only the lower 8 bits are used. Parameters:; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedRGB(int, int, int). unpackRGB; public static int[] unpackRGB(int rgb); Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. Parameters:; rgb - ; Returns:; Since:; v0.4.0. unpackRGB; public static int[] unpackRGB(int rgb,; int[] array); Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Parameters:; rgb - ; array - optional preallocated input array; Returns:; the red, green and blue values in array if provided and long enough, ; otherwise a new ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
Availability,toler,tolerance,"(QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class GeneralTools. java.lang.Object; qupath.lib.common.GeneralTools. public final class GeneralTools; extends Object; Collection of generally useful static methods. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; SYMBOL_MICROMETER. String to represent um (but with the proper 'mu' symbol). static final char; SYMBOL_MU. Small Greek mu (useful for micrometers). static final char; SYMBOL_SIGMA. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static boolean; almostTheSame(double n1,; double n2,; double tolerance). Test if two doubles are approximately equal, within a specified tolerance. static String; arrayToString(Object[] array,; String delimiter). Convert a String array to a single string, with a specified delimiter string. static String; arrayToString(Locale locale,; double[] array,; int nDecimalPlaces). Convert a double array to a String using a space as a delimiter. static String; arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces). Convert a double array to string, with a specified number of decimal places. static boolean; blankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int value,; int min",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
Energy Efficiency,allocate,allocated,"bly derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; for example providing ""name (1)"" as the base will yield the output ""name (2)"", ; (assuming this name does not already exist), rather than ""name (1) (1)"". Parameters:; base - the (non-empty) base from which the name should be derived; existingNames - a collection of names that are already in use, and therefore must be avoided; Returns:; the distinct name. estimateAvailableMemory; public static long estimateAvailableMemory(); Estimate the current available memory in bytes, based upon the JVM max and the memory currently used.; ; This may be used to help determine whether a memory-hungry operation should be attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSort(Collection<T> collection,; Function<T,String> extractor); Smart-sort a collection after extracting a String representation of each element.; This differs from a 'normal' sort by splitting the String into lists of numeric and non-numeric parts,; and comparing corresponding elements separately.; This can sometimes give more intuitive results than a simple String sort, which would treat ""10"" as ; 'less than' ""2"".; ; For example, applying a simple sort to the list [""a1"", ""a2"", ""a10""] will result in ; [""a1"", ""a10"", ""a2]. Smart-sorti",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
Integrability,depend,dependent,"ile). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the final dot,; but also handles specific multi-part file extensions as well. Parameters:; file - ; Returns:; See Also:. stripExtension",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
Modifiability,extend,extends,". GeneralTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class GeneralTools. java.lang.Object; qupath.lib.common.GeneralTools. public final class GeneralTools; extends Object; Collection of generally useful static methods. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; SYMBOL_MICROMETER. String to represent um (but with the proper 'mu' symbol). static final char; SYMBOL_MU. Small Greek mu (useful for micrometers). static final char; SYMBOL_SIGMA. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static boolean; almostTheSame(double n1,; double n2,; double tolerance). Test if two doubles are approximately equal, within a specified tolerance. static String; arrayToString(Object[] array,; String delimiter). Convert a String array to a single string, with a specified delimiter string. static String; arrayToString(Locale locale,; double[] array,; int nDecimalPlaces). Convert a double array to a String using a space as a delimiter. static String; arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces). Convert a double array to string, with a specified number of decimal places. static boolean; blankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
Performance,perform,performed,"ion of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; the current version, or null if the version is unknown or cannot be parsed from getVersion(); See Also:. getVersion(). getPackageVersion; public static String getPackageVersion(Class<?> cls); Try to determine the version of a jar containing a specified class.; This first checks the implementation version in the package, then looks for a VERSION ; file stored as a resource. Parameters:; cls - class used to identify the package; Returns:; the version, if available, or null if no version is known. getExtension; public static Optional<String> getExtension(File file); Get filename extension. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String inva",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
Safety,timeout,timeoutMillis,"Extension(String ext). Returns true for file extensions containing multiple parts (or 'dots'). static boolean; isValidFilename(String name). Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. static boolean; isWindows(). Return true if running on Windows. static final String; micrometerSymbol(). Get a string to represent um (but with the proper 'mu' symbol). static int; numNaNs(double[] vals). Count the number of NaN values in an array. static Map<String,String>; parseArgStringValues(String s). Parse the contents of a JSON String. static String; readFileAsString(File file). Read the entire contents of a file into a single String. static String; readFileAsString(String path). Read the entire contents of a file given by the specified path into a single String. static String; readInputStreamAsString(InputStream stream). Read the entire contents of an InputStream into a single String. static String; readURLAsString(URL url,; int timeoutMillis). Read URL as String, with specified timeout in milliseconds. static String; replaceCurlyQuotes(String text). Replace different kinds of 'curly quote' in a String with straight quotes. static String; replaceGremlins(String text,; CharSequence replacement). Replace non-printable characters from a String with a specified replacement (may be null). static Comparator<String>; smartStringComparator(). Comparator for smart String sorting. static <T> void; smartStringSort(Collection<T> collection). Smart-sort a collection using the Object.toString() method applied to each element. static <T> void; smartStringSort(Collection<T> collection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. st",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
Security,hash,hashCode,"ollection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. static String; stripInvalidFilenameChars(String name). Strip characters that would make a String invalid as a filename. static long; sum(long[] values). Compute the sum of elements in a long array (possibly representing a histogram). static URI; toEncodedURI(String path). Try to convert a path to an encoded URI. static Path; toPath(URI uri). Try to identify a Path from a URI, dropping any query or fragment elements. static URI; toURI(String path). Try to convert a path to a URI. static String; zapGremlins(String text). Remove non-printable characters from a String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SYMBOL_MU; public static final char SYMBOL_MU; Small Greek mu (useful for micrometers). See Also:. Constant Field Values. SYMBOL_SIGMA; public static final char SYMBOL_SIGMA; Small Greek sigma (useful for Gaussian filter sizes, standard deviations). See Also:. Constant Field Values. SYMBOL_MICROMETER; public static final String SYMBOL_MICROMETER; String to represent um (but with the proper 'mu' symbol). See Also:. Constant Field Values. Method Details. getVersion; public static String getVersion(); Get a String representation of QuPath's version, if known. Returns:; a String representation of the version, or null if the version is unknown; See Also:. getSemanticVersion(). getSemanticVersion; public static Version getSemanticVersion(); Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; the current version, or null if the version is unknown or cannot be pars",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
Testability,test,test,"nsion is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
Usability,simpl,simple,"nsion is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
Integrability,message,message,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
Modifiability,extend,extends,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
Safety,avoid,avoid," Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
Security,hash,hashCode,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
Testability,log,logging,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
Availability,checkpoint,checkpoint,. qupath.lib.common (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.common. package qupath.lib.common. General-purpose helper classes. Classes. Class; Description; ColorTools. Static functions to help work with RGB(A) colors using packed ints. GeneralTools. Collection of generally useful static methods. LogTools. Helper class for logging. Prefs. Core QuPath preferences. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Version. Helper class for working with semantic versioning. ,MatchSource.WIKI,javadoc/docs/qupath/lib/common/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html
Testability,log,logging,. qupath.lib.common (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.common. package qupath.lib.common. General-purpose helper classes. Classes. Class; Description; ColorTools. Static functions to help work with RGB(A) colors using packed ints. GeneralTools. Collection of generally useful static methods. LogTools. Helper class for logging. Prefs. Core QuPath preferences. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Version. Helper class for working with semantic versioning. ,MatchSource.WIKI,javadoc/docs/qupath/lib/common/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html
Modifiability,extend,extends,". Prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Prefs. java.lang.Object; qupath.lib.common.Prefs. public class Prefs; extends Object; Core QuPath preferences. Currently these are not persistent, but this behavior may change in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Prefs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getNumThreads(). Get the requested number of threads to use for parallelization. static void; setNumThreads(int n). Set the requested number of threads. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Prefs; public Prefs(). Method Details. getNumThreads; public static int getNumThreads(); Get the requested number of threads to use for parallelization. Returns:. setNumThreads; public static void setNumThreads(int n); Set the requested number of threads. This will be clipped to be at least 1. Parameters:; n - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Prefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html
Security,hash,hashCode,". Prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Prefs. java.lang.Object; qupath.lib.common.Prefs. public class Prefs; extends Object; Core QuPath preferences. Currently these are not persistent, but this behavior may change in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Prefs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getNumThreads(). Get the requested number of threads to use for parallelization. static void; setNumThreads(int n). Set the requested number of threads. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Prefs; public Prefs(). Method Details. getNumThreads; public static int getNumThreads(); Get the requested number of threads to use for parallelization. Returns:. setNumThreads; public static void setNumThreads(int n); Set the requested number of threads. This will be clipped to be at least 1. Parameters:; n - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Prefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html
Integrability,interface,interface,"s ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note that for interactive use this is usually set through the user interface and shouldn't be modified ; elsewhere to maintain consistency. Parameters:; nThreads - . getParallelism; public static int getParallelism(); Get the requested level of parallelism. ; Other classes that make use of thread pools can use this to help balance multithreading with memory use.; The default value is ForkJoinPool.getCommonPoolParallelism(). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ThreadTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html
Modifiability,extend,extends,". ThreadTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class ThreadTools. java.lang.Object; qupath.lib.common.ThreadTools. public class ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note th",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ThreadTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html
Security,hash,hashCode,"kage qupath.lib.common; Class ThreadTools. java.lang.Object; qupath.lib.common.ThreadTools. public class ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note that for interactive use this is usually set through the user interface and shouldn't be modified ; elsewhere to maintain consistency. Parameters:; nThreads - . getParallelism; public static int getParallelism(); Get the requested level of parallelism. ; Other classes that make use of thread pools can use this to help balance mul",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ThreadTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html
Availability,checkpoint,checkpoint,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
Modifiability,extend,extends,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
Security,hash,hashCode,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
Availability,checkpoint,checkpoint,". Timeit (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
Modifiability,extend,extends,". Timeit (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
Security,hash,hashCode,"[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been start",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
Usability,simpl,simple,". Timeit (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
Deployability,patch,patch,". Version (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Version. java.lang.Object; qupath.lib.common.Version. All Implemented Interfaces:; Comparable<Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; numb",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
Integrability,interface,interface,"nal Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). Specified by:; compareTo in interface Comparable<Version>. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
Modifiability,extend,extends,". Version (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Version. java.lang.Object; qupath.lib.common.Version. All Implemented Interfaces:; Comparable<Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; numb",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
Performance,perform,performed,". Version (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Version. java.lang.Object; qupath.lib.common.Version. All Implemented Interfaces:; Comparable<Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; numb",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
Security,hash,hashCode," Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). int; hashCode();  ; boolean; hasSuffix(). Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. static Version; parse(String versionString). Parse a Version object representing a semantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any u",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
Deployability,update,update," Classes:; DirectServerChannelInfo. public interface ChannelDisplayInfo; Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). This applies not only to the 'default' channels in an image -; e.g. red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the Chann",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
Energy Efficiency,green,green,". ChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo. All Known Subinterfaces:; ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface ChannelDisplayInfo; Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). This applies not only to the 'default' channels in an image -; e.g. red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an exi",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
Integrability,interface,interface,". ChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo. All Known Subinterfaces:; ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface ChannelDisplayInfo; Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). This applies not only to the 'default' channels in an image -; e.g. red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an exi",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
Performance,cache,cache," channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but it was the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular,",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
Usability,simpl,simplify," red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
Deployability,update,updateRGBAdditive,"isplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Parameters:; minAllowed - ; maxAllowed - . setMinDisplay; void setMinDisplay(float minDisplay); Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Parameters:; minDisp",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
Integrability,interface,interface,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
Modifiability,extend,extends,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
Integrability,interface,interfaces,". ChannelDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.display; Enum Class ChannelDisplayMode. java.lang.Object; java.lang.Enum<ChannelDisplayMode>; qupath.lib.display.ChannelDisplayMode. All Implemented Interfaces:; Serializable, Comparable<ChannelDisplayMode>, Constable. public enum ChannelDisplayMode; extends Enum<ChannelDisplayMode>; Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. Since:; v0.4.0; Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDispla",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
Modifiability,extend,extends,". ChannelDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.display; Enum Class ChannelDisplayMode. java.lang.Object; java.lang.Enum<ChannelDisplayMode>; qupath.lib.display.ChannelDisplayMode. All Implemented Interfaces:; Serializable, Comparable<ChannelDisplayMode>, Constable. public enum ChannelDisplayMode; extends Enum<ChannelDisplayMode>; Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. Since:; v0.4.0; Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDispla",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
Security,hash,hashCode," Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDisplayMode COLOR; Show using default color LUT (may be composite). INVERTED_COLOR; public static final ChannelDisplayMode INVERTED_COLOR; Show using color LUT with an inverted background. GRAYSCALE; public static final ChannelDisplayMode GRAYSCALE; Show using a grayscale LUT (black to white). INVERTED_GRAYSCALE; public static final ChannelDisplayMode INVERTED_GRAYSCALE; Show using an inverted grayscale LUT (white to black). Method Details. values; public static ChannelDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ChannelDisplayMode valueOf(String name); Returns the enum constant of this ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
Deployability,update,updateRGBAdditive,"e. boolean; isAdditive(). Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. boolean; isBrightnessContrastRescaled(). Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. boolean; isMutable(). Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisp",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
Energy Efficiency,green,green,"loat maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected ColorModel getColorModel(ChannelDisplayMode mode); Get a ColorModel to use with a specified ChannelDisplayMode when converting a value to RGB. Parameters:; mode - ; Returns:. setLUTColor; public void setLUTColor(int r,; int g,; int b); Set the 'maximum' color, which defines the lookup table to use. Parameters:; r - red component (0-255); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayIn",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
Integrability,interface,interfaces,"| ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class DirectServerChannelInfo. java.lang.Object; qupath.lib.display.DirectServerChannelInfo. All Implemented Interfaces:; ChannelDisplayInfo, ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. public class DirectServerChannelInfo; extends Object; ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used. ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; clipToAllowed;  ; protected static final IndexColorModel; CM_GRAYSCALE;  ; protected static final IndexColorModel; CM_GRAYSCALE_INVERTED;  ; protected static final DecimalFormat; df;  ; protected float; maxAllowed;  ; protected float; maxDisplay;  ; protected float; minAllowed;  ; protected float; minDisplay;  . Constructor Summary; Constructors. Constructor; Description; DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. int; getChannel(). Get the channel number. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. protected ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
Modifiability,extend,extends,". DirectServerChannelInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class DirectServerChannelInfo. java.lang.Object; qupath.lib.display.DirectServerChannelInfo. All Implemented Interfaces:; ChannelDisplayInfo, ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. public class DirectServerChannelInfo; extends Object; ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used. ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; clipToAllowed;  ; protected static final IndexColorModel; CM_GRAYSCALE;  ; protected static final IndexColorModel; CM_GRAYSCALE_INVERTED;  ; protected static final DecimalFormat; df;  ; protected float; maxAllowed;  ; protected float; maxDisplay;  ; protected float; minAllowed;  ; protected float; minDisplay;  . Constructor Summary; Constructors. Constructor; Description; DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
Security,hash,hashCode,"o.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName();",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
Usability,simpl,simple,"brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Paramete",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
Availability,avail,availableChannels,"Input,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDisplay; create(ImageData<BufferedImage> imageData). Create a new image display, and set the specified image data. ObjectBinding<ChannelDisplayMode>; displayMode(). Get the value of useInvertedBackgroundProperty(). Histogram; getHistogram(ChannelDisplayInfo info). Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. ImageData<BufferedImage>; getImageData(). Get the current image data. long; getLastChangeTimestamp(). Get a timestamp the last known changes for the object. ChannelDisplayInfo; getSwitchToGrayscaleChannel(). Get the value of switchToGrayscaleChannelProperty(). String; getTransformedValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a transformed pixel value, using the currently-selected channels. boolean; isCompatible(ImageDisp",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
Deployability,update,updateFromDisplay,"lected(ChannelDisplayInfo channel,; boolean selected). Set the selection of a channel on or off. void; setImageData(ImageData<BufferedImage> imageData,; boolean retainDisplaySettings). Set the ImageData to a new value. void; setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay). Set the min/max display values for a specified ChannelDisplayInfo. void; setSwitchToGrayscaleChannel(ChannelDisplayInfo channel). Set the value of switchToGrayscaleChannelProperty(). void; setUseGrayscaleLuts(boolean useGrayscaleLuts). Set the value of useGrayscaleLutProperty(). void; setUseInvertedBackground(boolean useInvertedBackground). Set the value of useInvertedBackgroundProperty(). ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useG",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
Integrability,interface,interfaces,"ashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo); switchToGrayscaleChannelProperty(). Constructor Details. ImageDisplay; public ImageDisplay(); Constructor. Method Details. create; public static ImageDisplay create(ImageData<BufferedImage> imageData); throws IOException; Create a new image display, and set the specified image data. Parameters:; imageData - ; Returns:; Throws:; IOException. setImageData; public void setImageData(ImageData<BufferedImage> imageData,; boolean retainDisplaySettings); throws IOException; Set the ImageData to a new value. Parameters:; imageData - image data that should how be displayed; retainDisplaySettings - if true, retain the same display settings as for the previous image if possible ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
Modifiability,extend,extends,". ImageDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class ImageDisplay. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer; qupath.lib.display.ImageDisplay. All Implemented Interfaces:; ImageRenderer. public class ImageDisplay; extends AbstractImageRenderer; Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings.; ; Warning! This implementation is likely to change in a future version. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; LongProperty; changeTimestamp. Timestamp for the most recent change. ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannel. Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. BooleanProperty; useGrayscaleLut. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. BooleanProperty; useInvertedBackground. Property that specifies whether the background should be inverted (i.e. Field Summary. Fields inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; timestamp. Constructor Summary; Constructors. Constructor; Description; ImageDisplay(). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; u",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
Safety,abort,abort,"perty(). Parameters:; useGrayscaleLuts - . useInvertedBackgroundProperty; public BooleanProperty useInvertedBackgroundProperty(); Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). Returns:; See Also:. setUseInvertedBackground(boolean). useInvertedBackground; public boolean useInvertedBackground(); Get the value of useInvertedBackgroundProperty(). Returns:. displayMode; public ObjectBinding<ChannelDisplayMode> displayMode(); Get the value of useInvertedBackgroundProperty(). Returns:. setUseInvertedBackground; public void setUseInvertedBackground(boolean useInvertedBackground); Set the value of useInvertedBackgroundProperty(). Parameters:; useInvertedBackground - . useColorLUTs; public boolean useColorLUTs(); The opposite of useGrayscaleLuts(). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Get a timestamp the last known changes for the object.; ; This is useful to abort painting if the display changes during a paint run. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Overrides:; getLastChangeTimestamp in class AbstractImageRenderer; Returns:. changeTimestampProperty; public LongProperty changeTimestampProperty(); Timestamp for the most recent change. This can be used to listen for ; display changes. Returns:. refreshChannelOptions; public void refreshChannelOptions(); Refresh the channel options. This may be used if an underlying property of the image has changed, such ; as the channel names or lookup tables. switchToGrayscaleChannelProperty; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty(); Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used whe",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
Security,hash,hashCode,"eChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and pr",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
Usability,intuit,intuitive,"ashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo); switchToGrayscaleChannelProperty(). Constructor Details. ImageDisplay; public ImageDisplay(); Constructor. Method Details. create; public static ImageDisplay create(ImageData<BufferedImage> imageData); throws IOException; Create a new image display, and set the specified image data. Parameters:; imageData - ; Returns:; Throws:; IOException. setImageData; public void setImageData(ImageData<BufferedImage> imageData,; boolean retainDisplaySettings); throws IOException; Set the ImageData to a new value. Parameters:; imageData - image data that should how be displayed; retainDisplaySettings - if true, retain the same display settings as for the previous image if possible ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
Integrability,interface,interface,". qupath.lib.display (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.display. package qupath.lib.display. Classes to control the display of images in a QuPathViewer.; ; Warning! These are likely to change in a future version of QuPath. Related Packages. Package; Description; qupath.lib.display.settings. Classes to support storing and retrieving image display settings. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/package-summary.html
Deployability,update,updateRGBAdditive," ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. isMutable; boolean isMutable(); Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
Integrability,interface,interface,". SingleChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
Modifiability,extend,extends,". SingleChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
Usability,simpl,simple,"nfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. isMutable; boolean isMutable(); Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
Modifiability,extend,extends,". ImmutableDimension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Class ImmutableDimension. java.lang.Object; qupath.lib.geom.ImmutableDimension. public class ImmutableDimension; extends Object; An immutable alternative to Java's AWT Dimension. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final int; height. Height of the ImmutableDimension. final int; width. Width of the ImmutableDimension. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getHeight(). Get the ImmutableDimension height. static ImmutableDimension; getInstance(int width,; int height). Get an ImmutableDimension representing the specified width and height. int; getWidth(). Get the ImmutableDimension width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. width; public final int width; Width of the ImmutableDimension. height; public final int height; Height of the ImmutableDimension. Method Details. getInstance; public static ImmutableDimension getInstance(int width,; int height); Get an ImmutableDimension representing the specified width and height. Parameters:; width - ; height - ; Returns:. getWidth; public int getWidth(); Get the ImmutableDimension width. Returns:. getHeight; public int getHeight(); Get the ImmutableDimension height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/ImmutableDimension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html
Security,hash,hashCode,". ImmutableDimension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Class ImmutableDimension. java.lang.Object; qupath.lib.geom.ImmutableDimension. public class ImmutableDimension; extends Object; An immutable alternative to Java's AWT Dimension. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final int; height. Height of the ImmutableDimension. final int; width. Width of the ImmutableDimension. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getHeight(). Get the ImmutableDimension height. static ImmutableDimension; getInstance(int width,; int height). Get an ImmutableDimension representing the specified width and height. int; getWidth(). Get the ImmutableDimension width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. width; public final int width; Width of the ImmutableDimension. height; public final int height; Height of the ImmutableDimension. Method Details. getInstance; public static ImmutableDimension getInstance(int width,; int height); Get an ImmutableDimension representing the specified width and height. Parameters:; width - ; height - ; Returns:. getWidth; public int getWidth(); Get the ImmutableDimension width. Returns:. getHeight; public int getHeight(); Get the ImmutableDimension height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/ImmutableDimension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html
Integrability,interface,interface,". qupath.lib.geom (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.geom. package qupath.lib.geom. Simple, immutable classes to represent points and dimensions. All Classes and InterfacesInterfacesClasses. Class; Description; ImmutableDimension. An immutable alternative to Java's AWT Dimension. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/package-summary.html
Integrability,interface,interface,". Point (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Interface Point. All Known Implementing Classes:; Point2. public interface Point; Simple interface defining a point.; ; Warning: This may change in the future (by being extended), so developers are advised not to subclass it... Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(Point p). Calculate the distance to another point, with the same dim(). double; distanceSq(Point p). Calculate the squared distance to another point, with the same dim(). double; get(int dim). Get the value of the ordinate for the specified dimension. Method Details. dim; int dim(); Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Returns:. get; double get(int dim); Get the value of the ordinate for the specified dimension. Parameters:; dim - ; Returns:. distanceSq; double distanceSq(Point p); Calculate the squared distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distance(Point). distance; double distance(Point p); Calculate the distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html
Modifiability,extend,extended,". Point (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Interface Point. All Known Implementing Classes:; Point2. public interface Point; Simple interface defining a point.; ; Warning: This may change in the future (by being extended), so developers are advised not to subclass it... Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(Point p). Calculate the distance to another point, with the same dim(). double; distanceSq(Point p). Calculate the squared distance to another point, with the same dim(). double; get(int dim). Get the value of the ordinate for the specified dimension. Method Details. dim; int dim(); Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Returns:. get; double get(int dim); Get the value of the ordinate for the specified dimension. Parameters:; dim - ; Returns:. distanceSq; double distanceSq(Point p); Calculate the squared distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distance(Point). distance; double distance(Point p); Calculate the distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html
Integrability,interface,interface,"); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
Modifiability,extend,extends,". Point2 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Class Point2. java.lang.Object; qupath.lib.geom.Point2. All Implemented Interfaces:; Externalizable, Serializable, Point. public class Point2; extends Object; implements Externalizable; A 2D point (x & y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; Point2(). Default constructor for a point at location (0,0). Point2(double x,; double y). Point constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(double x,; double y). Calculate the distance between this point and a specified x and y location. double; distance(Point p). Calculate the distance to another point, with the same Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a po",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
Security,hash,hashCode,",; double y). Point constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(double x,; double y). Calculate the distance between this point and a specified x and y location. double; distance(Point p). Calculate the distance to another point, with the same Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
Availability,avail,available,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/BuildInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html
Modifiability,extend,extends,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/BuildInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html
Security,hash,hashCode,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/BuildInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html
Integrability,interface,interface,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeight(double width). Overrides:; maxHeight in class Node. prefHeight; public double prefHeight(double width). Overrides:; prefHeight in ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
Modifiability,extend,extends,". ColorMapCanvas (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ColorMapCanvas. java.lang.Object; javafx.scene.Node; javafx.scene.canvas.Canvas; qupath.lib.gui.ColorMapCanvas. All Implemented Interfaces:; Styleable, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rota",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
Performance,cache,cacheHint,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
Security,access,accessibleHelp,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
Availability,down,down,"n links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
Integrability,interface,interface,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
Modifiability,extend,extends,". ExtensionClassLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
Performance,load,loading,". ExtensionClassLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
Security,secur,security,". ExtensionClassLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
Usability,clear,clearAssertionStatus,"ic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
Deployability,update,update,". ExtensionControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
Integrability,interface,interface,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
Modifiability,extend,extends,". ExtensionControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
Performance,cache,cacheShape," 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
Security,access,accessibleHelp,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
Usability,clear,clearConstraints,", onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, pre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
Deployability,install,installation,"hod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collection of jar files for installation. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
Modifiability,extend,extends,". ExtensionManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
Performance,load,loading,". ExtensionManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
Security,hash,hashCode,"ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions director",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
Availability,error,error,". FileCopier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class FileCopier. java.lang.Object; qupath.lib.gui.FileCopier. public class FileCopier; extends Object; Copy files to an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
Integrability,message,message,". FileCopier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class FileCopier. java.lang.Object; qupath.lib.gui.FileCopier. public class FileCopier; extends Object; Copy files to an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
Modifiability,extend,extends,". FileCopier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class FileCopier. java.lang.Object; qupath.lib.gui.FileCopier. public class FileCopier; extends Object; Copy files to an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
Security,hash,hashCode,"an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one does not already exist. Returns:. outputPath; public FileCopier outputPath(String name); Name of the output directory.; If relativeToUserDirectory() is selected, this should be given ; relative to the QuPath user directory; otherwise, it should be an absolute path. Parameters:; name - ; Returns:; See Also:. outputPath(Path). outputPath; public FileCopier outputPath(Path name); Path representing the output directory.; If relativeToUserDirectory() is selected, thi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
Modifiability,extend,extends,". JavadocViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class JavadocViewer. java.lang.Object; qupath.lib.gui.JavadocViewer. public class JavadocViewer; extends Object; Command to show javadocs in a WebView. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROP_JAVADOC_PATH. Name of the system property used to set the javadoc path. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static JavadocViewer; getInstance(). Get the main (singleton) instance of JavadocViewer. Stage; getStage(). Get the stage used to show the javadocs. static void; main(String[] args). Show javadoc stage (used for development). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROP_JAVADOC_PATH; public static final String PROP_JAVADOC_PATH; Name of the system property used to set the javadoc path.; Could be set to https://qupath.github.io/javadoc/docs/ although note this path may change. See Also:. Constant Field Values. Method Details. getStage; public Stage getStage(); Get the stage used to show the javadocs. Returns:. getInstance; public static JavadocViewer getInstance(); Get the main (singleton) instance of JavadocViewer. Returns:. main; public static void main(String[] args); Show javadoc stage (used for development). Parameters:; args - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/JavadocViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html
Security,hash,hashCode,". JavadocViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class JavadocViewer. java.lang.Object; qupath.lib.gui.JavadocViewer. public class JavadocViewer; extends Object; Command to show javadocs in a WebView. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROP_JAVADOC_PATH. Name of the system property used to set the javadoc path. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static JavadocViewer; getInstance(). Get the main (singleton) instance of JavadocViewer. Stage; getStage(). Get the stage used to show the javadocs. static void; main(String[] args). Show javadoc stage (used for development). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROP_JAVADOC_PATH; public static final String PROP_JAVADOC_PATH; Name of the system property used to set the javadoc path.; Could be set to https://qupath.github.io/javadoc/docs/ although note this path may change. See Also:. Constant Field Values. Method Details. getStage; public Stage getStage(); Get the stage used to show the javadocs. Returns:. getInstance; public static JavadocViewer getInstance(); Get the main (singleton) instance of JavadocViewer. Returns:. main; public static void main(String[] args); Show javadoc stage (used for development). Parameters:; args - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/JavadocViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html
Deployability,update,update,"ers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. WelcomeStage. Welcome page when la",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
Integrability,interface,interface,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
Performance,load,loading," within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectory",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
Testability,log,logging,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
Usability,simpl,simplify,"h. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. WelcomeStage. Welcome page when launching QuPath. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.gui Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.gui.TaskRunnerFX. javafx.application.Application. qupath.lib.gui.QuPathApp. qupath.lib.gui.BuildInfo; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.ExtensionManager; qupath.lib.gui.FileCopier; qupath.lib.gui.JavadocViewer; javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.canvas.Canvas. qupath.lib.gui.ColorMapCanvas. javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.layout.Pane. javafx.scene.layout.VBox. qupath.lib.gui.ExtensionControlPane. qupath.lib.gui.QuPathGUI; qupath.lib.gui.SelectableItem<T>; qupath.lib.gui.SharedThreadPoolManager (implements java.lang.AutoCloseable); qupath.lib.gui.ToolManager; qupath.lib.gui.UndoRedoManager (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.gui.viewer.QuPathViewerListener); qupath.lib.gui.Urls; qupath.lib.gui.UserDirectoryManager; qupath.lib.gui.WelcomeStage. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html
Security,secur,security,". qupath.lib.gui Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.gui.TaskRunnerFX. javafx.application.Application. qupath.lib.gui.QuPathApp. qupath.lib.gui.BuildInfo; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.ExtensionManager; qupath.lib.gui.FileCopier; qupath.lib.gui.JavadocViewer; javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.canvas.Canvas. qupath.lib.gui.ColorMapCanvas. javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.layout.Pane. javafx.scene.layout.VBox. qupath.lib.gui.ExtensionControlPane. qupath.lib.gui.QuPathGUI; qupath.lib.gui.SelectableItem<T>; qupath.lib.gui.SharedThreadPoolManager (implements java.lang.AutoCloseable); qupath.lib.gui.ToolManager; qupath.lib.gui.UndoRedoManager (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.gui.viewer.QuPathViewerListener); qupath.lib.gui.Urls; qupath.lib.gui.UserDirectoryManager; qupath.lib.gui.WelcomeStage. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html
Integrability,interface,interfaces,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
Modifiability,extend,extends,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
Security,hash,hashCode,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
Availability,avail,available,"age> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. M",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
Deployability,install,installActions,"t the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. static void; launchInstanceFromSwing(). Static method to launch QuPath from within a Swing/AWT application. Object; lookupAccelerator(String combo). Get the action or menu item associated with an accelerator. Object; lookupAccele",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
Integrability,depend,depends,"roperty representing the currently-open project. ReadOnlyBooleanProperty; readOnly. Property indicating whether QuPath is in 'read-only' mode. BooleanProperty; showAnalysisPane;  ; BooleanProperty; showInputDisplay. Property to indicate whether the input display is currently showing. ReadOnlyObjectProperty<QuPathViewer>; viewer. Property representing the viewer currently active. Field Summary; Fields. Modifier and Type; Field; Description; static final int; TOOLBAR_ICON_SIZE. Icon size to use in the main QuPath toolbar. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectActio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
Modifiability,extend,extends,". QuPathGUI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathGUI. java.lang.Object; qupath.lib.gui.QuPathGUI. public class QuPathGUI; extends Object; Main GUI for QuPath, written using JavaFX. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Read-only property containing the image open within the currently-active viewer. ReadOnlyObjectProperty<Project<BufferedImage>>; project. Read-only property representing the currently-open project. ReadOnlyBooleanProperty; readOnly. Property indicating whether QuPath is in 'read-only' mode. BooleanProperty; showAnalysisPane;  ; BooleanProperty; showInputDisplay. Property to indicate whether the input display is currently showing. ReadOnlyObjectProperty<QuPathViewer>; viewer. Property representing the viewer currently active. Field Summary; Fields. Modifier and Type; Field; Description; static final int; TOOLBAR_ICON_SIZE. Icon size to use in the main QuPath toolbar. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; crea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
Performance,cache,cache,"s the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. Menu; getMenu(String name,; boolean createMenu). Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
Safety,avoid,avoid,"; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or similar, ; and bringing down some other application entirely. Returns:; true if this is a standalone QuPathGUI instance, false otherwise. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an unmodifiable observable list of all viewers. Returns:; See Also:. ViewerManager.getAllViewers(). getViewer; public QuPathViewer getViewer(); Get the currently active viewer. Returns:. getInstance; public static QuPathGUI getInstance(); Get the static instance of the current QuPath GUI. Returns:. openSavedData; public boolean openSavedData(QuPathViewer viewer,; File file,; boolean keepExistingServer,; boolean promptToSaveChanges); throws IOException; Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open.; The purpose of this is to make it possible for a project (for example) to open the correct server prior to; opening the data file, enabling it to make use of relative path name",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
Security,access,access,"e(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. sta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
Testability,log,log,"ses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. Menu; getMenu(String name,; boolean createMenu). Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
Usability,clear,clear," if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in Qu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
Integrability,depend,dependency,". SelectableItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SelectableItem<T>. java.lang.Object; qupath.lib.gui.SelectableItem<T>. Type Parameters:; T - . public class SelectableItem<T>; extends Object; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SelectableItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html
Modifiability,extend,extends,". SelectableItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SelectableItem<T>. java.lang.Object; qupath.lib.gui.SelectableItem<T>. Type Parameters:; T - . public class SelectableItem<T>; extends Object; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SelectableItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html
Security,hash,hashCode,"bject; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current item to be wrapped within this class, and which may or may not be selected. Method Details. isSelected; public boolean isSelected(); Returns true if the value of the selected property equals getItem(). Returns:. setSelected; public void setSelected(boolean selected); Set the item to be selected. Parameters:; selected - . selectedProperty; public BooleanProperty selectedProperty(); Property representing the item that has been selected (which may or may not be the same as getItem()). Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SelectableItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html
Availability,down,down,"adpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoolCompletionService(Class<V> cls); Create a completion service that uses a shared threadpool for the application. Type Parameters:; V - ; Parameters:; cls - ; Returns:. submitShortTask; public void submitShortTask(Runnable runnable); Submit a short task to a shared thread pool. Parameters:; runnable - . close; public void close(); Shutdown any threadpools created by this manager. Specified by:; close in interface AutoClosea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
Integrability,interface,interface,"ls created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoolCompletionService(Class<V> cls); Create a completion service that uses a shared threadpool for the application. Type Parameters:; V - ; Parameters:; cls - ; Returns:. submitShortTask; public void submitShortTask(Runnable runnable); Submit a short task to a shared thread pool. Parameters:; runnable - . close; public void close(); Shutdown any threadpools created by this manager. Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
Modifiability,extend,extends,". SharedThreadPoolManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SharedThreadPoolManager. java.lang.Object; qupath.lib.gui.SharedThreadPoolManager. All Implemented Interfaces:; AutoCloseable. public class SharedThreadPoolManager; extends Object; implements AutoCloseable; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so lo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
Security,hash,hashCode,"e; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
Usability,simpl,simplify,". SharedThreadPoolManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SharedThreadPoolManager. java.lang.Object; qupath.lib.gui.SharedThreadPoolManager. All Implemented Interfaces:; AutoCloseable. public class SharedThreadPoolManager; extends Object; implements AutoCloseable; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so lo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
Deployability,update,update,"our browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
Energy Efficiency,monitor,monitor,"our browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
Integrability,interface,interface," PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Overrides:; postProcess in class AbstractTaskRunner; Parameters:; tasks - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
Modifiability,plugin,plugins,". TaskRunnerFX (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: A",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
Security,hash,hashCode,"lic class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
Availability,avail,available,".Action; MOVE_TOOL;  ; final org.controlsfx.control.action.Action; POINTS_TOOL;  ; final org.controlsfx.control.action.Action; POLYGON_TOOL;  ; final org.controlsfx.control.action.Action; POLYLINE_TOOL;  ; final org.controlsfx.control.action.Action; RECTANGLE_TOOL;  ; final org.controlsfx.control.action.Action; SELECTION_MODE;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ToolManager; create(). Create a new instance. PathTool; getPreviousSelectedTool(). Get the value of selectedToolProperty(). PathTool; getSelectedTool(). Get the value of selectedToolProperty(). org.controlsfx.control.action.Action; getSelectionModeAction(). Return the action associated with 'selection mode'. org.controlsfx.control.action.Action; getToolAction(PathTool tool). Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
Deployability,install,installTool,".Action; POINTS_TOOL;  ; final org.controlsfx.control.action.Action; POLYGON_TOOL;  ; final org.controlsfx.control.action.Action; POLYLINE_TOOL;  ; final org.controlsfx.control.action.Action; RECTANGLE_TOOL;  ; final org.controlsfx.control.action.Action; SELECTION_MODE;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ToolManager; create(). Create a new instance. PathTool; getPreviousSelectedTool(). Get the value of selectedToolProperty(). PathTool; getSelectedTool(). Get the value of selectedToolProperty(). org.controlsfx.control.action.Action; getSelectionModeAction(). Return the action associated with 'selection mode'. org.controlsfx.control.action.Action; getToolAction(PathTool tool). Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool> selectedToolProperty; Property containing the currently",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
Modifiability,extend,extends,. ToolManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ToolManager. java.lang.Object; qupath.lib.gui.ToolManager. public class ToolManager; extends Object; Manage (drawing) tool selection in a QuPath UI. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; lockSelectedTool. Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedTool. Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedTool. Property containing the currently-selected PathTool. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BRUSH_TOOL;  ; final org.controlsfx.control.action.Action; ELLIPSE_TOOL;  ; final org.controlsfx.control.action.Action; LINE_TOOL;  ; final org.controlsfx.control.action.Action; MOVE_TOOL;  ; final org.controlsfx.control.action.Action; POINTS_TOOL;  ; final org.controlsfx.control.action.Action; POLYGON_TOOL;  ; final org.controlsfx.control.action.Action; POLYLINE_TOOL;  ; final org.controlsfx.control.action.Action; RECTANGLE_TOOL;  ; final org.controlsfx.control.action.Action; SELECTION_MODE;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ToolManager; create(). Create a new instance. PathTool; getPreviousSelectedTool(). Get the value of selectedToolProperty(). PathTool; getSelectedTool(). Get the value of selectedToolProperty(). org.controlsfx.control.action.Action; getSelectionModeAction(). Return the action associated with 'selection mode'. org.controlsfx.control.action.Action; getToolAction(PathTo,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
Security,hash,hashCode,"thTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool> selectedToolProperty; Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. See Also:. getSelectedTool(); setSelectedTool(PathTool); selectedToolProperty(). lockSelectedTool; public BooleanProperty lockSelectedToolProperty; Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. See Also:. lockSelectedToolProperty(). previousSelectedTool; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty; Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. See Also:. getPreviousSelectedTool(); previousSelectedToolProperty(). Field Details. MOVE_TOOL; @ActionAccelerator(""m""); @ActionConfig(""Tools.m",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
Integrability,interface,interface,"lean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. sele",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
Modifiability,extend,extends,". UndoRedoManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
Performance,perform,performance," Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer vi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
Safety,risk,risks," Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer vi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
Security,hash,hashCode,"; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
Usability,undo,undo,". UndoRedoManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
Deployability,update,update,". Urls (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class Urls. java.lang.Object; qupath.lib.gui.Urls. public final class Urls; extends Object; Class to return core QuPath URLs centrally.; ; One benefit of this is that it gives one location to update to point to versioned documentation. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Urls();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static final String; getCitationUrl(). Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. static final String; getDocsUrl(). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/Urls.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html
Modifiability,extend,extends,". Urls (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class Urls. java.lang.Object; qupath.lib.gui.Urls. public final class Urls; extends Object; Class to return core QuPath URLs centrally.; ; One benefit of this is that it gives one location to update to point to versioned documentation. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Urls();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static final String; getCitationUrl(). Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. static final String; getDocsUrl(). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/Urls.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html
Security,hash,hashCode,"). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Urls; public Urls(). Method Details. getDocsUrl; public static final String getDocsUrl(); Get the base URL for the QuPath documentation (independent of version). Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(); Get the base URL for the QuPath documentation, specifically for this software version. Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(String relative); Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). Parameters:; relative - ; Returns:. getCitationUrl; public static final String getCitationUrl(); Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. Returns:. getInstallationUrl; public static final String getInstallationUrl(); Get a URL pointing to a page that explains how to install this version of",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/Urls.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html
Availability,avail,available,"is is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
Integrability,depend,depends,"ly property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
Modifiability,extend,extends,". UserDirectoryManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UserDirectoryManager. java.lang.Object; qupath.lib.gui.UserDirectoryManager. public class UserDirectoryManager; extends Object; Helper class for managing a user directory, and associated subdirectories.; ; Note that only the main user directory can be directly specified. ; Other directories are derived from this. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory. Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; cssDirectory. Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final St",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
Security,hash,hashCode,"nDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
Testability,log,logDirectory,"thod. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UserDirectoryManager. java.lang.Object; qupath.lib.gui.UserDirectoryManager. public class UserDirectoryManager; extends Object; Helper class for managing a user directory, and associated subdirectories.; ; Note that only the main user directory can be directly specified. ; Other directories are derived from this. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory. Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; cssDirectory. Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final String; DIR_SCRIPTS. Name of subdirectory containing shared scripts. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
Modifiability,extend,extends,". WelcomeStage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class WelcomeStage. java.lang.Object; qupath.lib.gui.WelcomeStage. public class WelcomeStage; extends Object; Welcome page when launching QuPath.; ; Currently this is undecorated; it can be closed by pressing 'Get started' ; (either with mouse or spacebar), double-clicking in the dialog, or pressing escape. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WelcomeStage();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stage; getInstance(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WelcomeStage; public WelcomeStage(). Method Details. getInstance; public static Stage getInstance(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/WelcomeStage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html
Security,hash,hashCode,". WelcomeStage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class WelcomeStage. java.lang.Object; qupath.lib.gui.WelcomeStage. public class WelcomeStage; extends Object; Welcome page when launching QuPath.; ; Currently this is undecorated; it can be closed by pressing 'Get started' ; (either with mouse or spacebar), double-clicking in the dialog, or pressing escape. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WelcomeStage();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stage; getInstance(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WelcomeStage; public WelcomeStage(). Method Details. getInstance; public static Stage getInstance(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/WelcomeStage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html
Deployability,update,updateServerMetadata,"). Notify listeners of a change in the hierarchy or its objects. boolean; isBrightfield(). Returns true if the image type is set to brightfield. boolean; isChanged(). Returns true if changes have been recorded since the last time this object was notified that it was saved. boolean; isFluorescence(). Returns true if the image type is set to fluorescence. Object; removeProperty(String key). Remove a specified property. void; removePropertyChangeListener(PropertyChangeListener listener). Remove a property change listener. void; setChanged(boolean isChanged). Set isChanged() status. void; setColorDeconvolutionStains(ColorDeconvolutionStains stains). Set the color deconvolution stain vectors for the current image type. void; setImageType(ImageData.ImageType type). Set the image type. void; setLastSavedPath(String path,; boolean resetChanged). Set the last path used to save this object;. Object; setProperty(String key,; Object value). Set a property. String; toString();  ; void; updateServerMetadata(ImageServerMetadata newMetadata). Update the ImageServer metadata. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type); Create a new ImageData with a specified object hierarchy and type. Parameters:; server - ; hierarchy - ; type - . ImageData; public ImageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
Integrability,depend,depending,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
Modifiability,extend,extends,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
Safety,detect,detections,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
Security,access,access,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
Integrability,interface,interfaces,". ImageData.ImageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images; Enum Class ImageData.ImageType. java.lang.Object; java.lang.Enum<ImageData.ImageType>; qupath.lib.images.ImageData.ImageType. All Implemented Interfaces:; Serializable, Comparable<ImageData.ImageType>, Constable. Enclosing class:; ImageData<T>. public static enum ImageData.ImageType; extends Enum<ImageData.ImageType>; Enum representing possible image types.; ; TODO: Warning! This is liable to change in the future to remove specific stain information. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
Modifiability,extend,extends,". ImageData.ImageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images; Enum Class ImageData.ImageType. java.lang.Object; java.lang.Enum<ImageData.ImageType>; qupath.lib.images.ImageData.ImageType. All Implemented Interfaces:; Serializable, Comparable<ImageData.ImageType>, Constable. Enclosing class:; ImageData<T>. public static enum ImageData.ImageType; extends Enum<ImageData.ImageType>; Enum representing possible image types.; ; TODO: Warning! This is liable to change in the future to remove specific stain information. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
Security,hash,hashCode,"ed Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image with any stains. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image. OTHER; public static final ImageData.ImageType OTHER; Other image type, not covered by any of the alternatives above. UNSET; public static final ImageData.ImageType UNSET; Image type has not been set. Method Details. values; public static ImageData.ImageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Ret",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
Security,access,accessing,. qupath.lib.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images. package qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. ,MatchSource.WIKI,javadoc/docs/qupath/lib/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.images Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.images. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.images.ImageData<T> (implements qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.plugins.workflow.WorkflowListener). Interface Hierarchy. qupath.lib.images.PathImage<T>. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.images.ImageData.ImageType. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/package-tree.html
Availability,down,downsample,". PathImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Interface PathImage<T>. Type Parameters:; T - . public interface PathImage<T>; Interface used when needing to associate pixel data with information regarding the image from which it was obtained.; ; The generic parameter defines the type of the image (e.g. BufferedImage, ImagePlus, Mat...). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDownsampleFactor(). Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. T; getImage(). Get the pixel data (image). ImageRegion; getImageRegion(). The region within the (original, possibly larger) image that this particular image corresponds to. PixelCalibration; getPixelCalibration(). Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Method Details. getImage; T getImage(); Get the pixel data (image). Returns:. getDownsampleFactor; double getDownsampleFactor(); Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. Returns:. getPixelCalibration; PixelCalibration getPixelCalibration(); Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Returns:. getImageRegion; ImageRegion getImageRegion(); The region within the (original, possibly larger) image that this particular image corresponds to. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/PathImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html
Integrability,interface,interface,". PathImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Interface PathImage<T>. Type Parameters:; T - . public interface PathImage<T>; Interface used when needing to associate pixel data with information regarding the image from which it was obtained.; ; The generic parameter defines the type of the image (e.g. BufferedImage, ImagePlus, Mat...). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDownsampleFactor(). Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. T; getImage(). Get the pixel data (image). ImageRegion; getImageRegion(). The region within the (original, possibly larger) image that this particular image corresponds to. PixelCalibration; getPixelCalibration(). Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Method Details. getImage; T getImage(); Get the pixel data (image). Returns:. getDownsampleFactor; double getDownsampleFactor(); Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. Returns:. getPixelCalibration; PixelCalibration getPixelCalibration(); Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Returns:. getImageRegion; ImageRegion getImageRegion(); The region within the (original, possibly larger) image that this particular image corresponds to. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/PathImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html
Integrability,wrap,wrap,". FeatureCollection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
Modifiability,extend,extends,". FeatureCollection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
Security,hash,hashCode,"Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; e",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
Energy Efficiency,adapt,adapters,". GsonTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools. java.lang.Object; qupath.lib.io.GsonTools. public class GsonTools; extends Object; Helper class providing Gson instances with type adapters registered to serialize ; several key classes.; ; These include:; ; PathObject; PathClass; ROI; ImagePlane; Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
Integrability,adapter,adapters,". GsonTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools. java.lang.Object; qupath.lib.io.GsonTools. public class GsonTools; extends Object; Helper class providing Gson instances with type adapters registered to serialize ; several key classes.; ; These include:; ; PathObject; PathClass; ROI; ImagePlane; Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
Modifiability,extend,extends,". GsonTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools. java.lang.Object; qupath.lib.io.GsonTools. public class GsonTools; extends Object; Helper class providing Gson instances with type adapters registered to serialize ; several key classes.; ; These include:; ; PathObject; PathClass; ROI; ImagePlane; Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
Security,hash,hashCode,"ols.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
Availability,avail,available,". GsonTools.SubTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools.SubTypeAdapterFactory<T>. java.lang.Object; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T>. Type Parameters:; T - . All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; GsonTools. public static class GsonTools.SubTypeAdapterFactory<T>; extends Object; implements TypeAdapterFactory; A TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubT",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
Integrability,interface,interface,"the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
Modifiability,extend,extends,". GsonTools.SubTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools.SubTypeAdapterFactory<T>. java.lang.Object; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T>. Type Parameters:; T - . All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; GsonTools. public static class GsonTools.SubTypeAdapterFactory<T>; extends Object; implements TypeAdapterFactory; A TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubT",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
Safety,avoid,avoids,".lib.io; Class GsonTools.SubTypeAdapterFactory<T>. java.lang.Object; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T>. Type Parameters:; T - . All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; GsonTools. public static class GsonTools.SubTypeAdapterFactory<T>; extends Object; implements TypeAdapterFactory; A TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specifie",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
Security,hash,hashCode,"r of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
Usability,simpl,simple,"t the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
Availability,avail,available,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
Energy Efficiency,adapt,adapters,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
Integrability,wrap,wrap,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
Modifiability,adapt,adapters,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
Performance,load,loading,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
Security,access,access,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
Energy Efficiency,reduce,reduce,"g for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathIO.GeoJsonExportOptions valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
Integrability,interface,interfaces,". PathIO.GeoJsonExportOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class PathIO.GeoJsonExportOptions. java.lang.Object; java.lang.Enum<PathIO.GeoJsonExportOptions>; qupath.lib.io.PathIO.GeoJsonExportOptions. All Implemented Interfaces:; Serializable, Comparable<PathIO.GeoJsonExportOptions>, Constable. Enclosing class:; PathIO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger file",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
Modifiability,extend,extends,". PathIO.GeoJsonExportOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class PathIO.GeoJsonExportOptions. java.lang.Object; java.lang.Enum<PathIO.GeoJsonExportOptions>; qupath.lib.io.PathIO.GeoJsonExportOptions. All Implemented Interfaces:; Serializable, Comparable<PathIO.GeoJsonExportOptions>, Constable. Enclosing class:; PathIO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger file",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
Security,hash,hashCode,"IO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array contai",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
Availability,error,error,"verPath(File file); throws FileNotFoundException,; IOException,; ClassNotFoundException; Deprecated.; This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path. ; In v0.2 and later, the server path is in general not sufficient to construct a server, and this method lingers ; only for backwards compatibility. It will be removed in a later version. Read the server path from a serialized file, if present. This is assumed to be the first line within the file. Parameters:; file - ; Returns:; The server path that is stored within the file, or null if no path could be found.; Throws:; IOException; FileNotFoundException; ClassNotFoundException; See Also:. extractServerBuilder(Path). extractServerBuilder; public static <T>; ImageServerBuilder.ServerBuilder<T> extractServerBuilder(Path file); throws IOException; Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. Parameters:; file - ; Returns:; Throws:; IOException - if there is an error creating a ImageServerBuilder.ServerBuilder, or the file is not a valid QuPath data file.; Since:; 0.3. createObjectInputStream; public static final ObjectInputStream createObjectInputStream(InputStream stream); throws IOException; Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. Parameters:; stream - ; Returns:; Throws:; IOException. readImageData; public static <T> ImageData<T> readImageData(InputStream stream,; ImageData<T> imageData,; ImageServer<T> server,; Class<T> cls); throws IOException; Read ImageData from an InputStream into an existing ImageData object, or creating a new one if required. Parameters:; stream - ; imageData - ; server - an ImageServer to use rather than any that might be stored within the serialized data. Should be null to use the serialized path to build a new server.; The main purpose of this is to make it possible to open ImageData where the original image location ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
Modifiability,extend,extends,". PathIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExt",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
Performance,load,loading,". PathIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExt",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
Security,hash,hashCode," static List<PathObject>; readObjectsFromGeoJSON(InputStream stream). Read a list of PathObject from an input stream. static String; readSerializedServerPath(File file). Deprecated.; This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path. static void; setRequestedDataFileVersion(int version). Set the requested version for .qpdata files. static Set<String>; unzippedExtensions(Path path,; String... zipExtensions). Get the extension of a file, or of all entries within a zip file. static void; writeImageData(File file,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. static void; writeImageData(OutputStream stream,; ImageData<?> imageData). Serialize an ImageData object to an output stream. static void; writeImageData(Path path,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRequestedDataFileVersion; public static int getRequestedDataFileVersion(); Get the requested version for .qpdata files. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). getCurrentDataFileVersion; public static int getCurrentDataFileVersion(); Get the current preferred data file version. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). setRequestedDataFileVersion; public static void setRequestedDataFileVersion(int version); throws IllegalArgumentException; Set the requested version for .qpdata files.; ; ; 1.0 Initial version stored in very early .qpdata files (no longer supported); 2 Switched versions to use integers, added Locale information (used in QuPath v0.1.2); 3 Switched ImageServer paths to be a JSON representation rather than a single path/URL; 4 Added support for UUID to be stored in each PathObject (introducted QuPath v0.4.",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
Deployability,release,releases,"difier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a file. Parameters:; file - ; pathObjects - ; Throws:; IOException. readPointsObjectList; @Deprecated; public static List<PathObject> readPointsObjectList(File file); throws ZipException,; IOException; Deprecated.; Read a list of point annotations from a file. Not recommended for use (will be removed in future releases). Parameters:; file - ; Returns:; Throws:; ZipException; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
Modifiability,extend,extends,". PointIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PointIO. java.lang.Object; qupath.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
Security,hash,hashCode,"path.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a file. Parameters:; file - ; pathObjects - ; Throws:; IO",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
Availability,robust,robust,". TMAScoreImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class TMAScoreImporter. java.lang.Object; qupath.lib.io.TMAScoreImporter. public class TMAScoreImporter; extends Object; Helper class for importing data in connection with TMA slides.; ; Some methods may be changed / moved in the future, e.g. because they are more generally useful,; such as those related to parsing CSV data. However, the attempts by these methods to auto-detect ; numeric data are not entirely robust - so more improvement is needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAScoreImporter();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html
Modifiability,extend,extends,". TMAScoreImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class TMAScoreImporter. java.lang.Object; qupath.lib.io.TMAScoreImporter. public class TMAScoreImporter; extends Object; Helper class for importing data in connection with TMA slides.; ; Some methods may be changed / moved in the future, e.g. because they are more generally useful,; such as those related to parsing CSV data. However, the attempts by these methods to auto-detect ; numeric data are not entirely robust - so more improvement is needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAScoreImporter();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html
Safety,detect,detect,". TMAScoreImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class TMAScoreImporter. java.lang.Object; qupath.lib.io.TMAScoreImporter. public class TMAScoreImporter; extends Object; Helper class for importing data in connection with TMA slides.; ; Some methods may be changed / moved in the future, e.g. because they are more generally useful,; such as those related to parsing CSV data. However, the attempts by these methods to auto-detect ; numeric data are not entirely robust - so more improvement is needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAScoreImporter();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html
Security,hash,hashCode,"ethods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAScoreImporter; public TMAScoreImporter(). Method Details. importFromCSV; public static int importFromCSV(File file,; PathObjectHierarchy hierarchy); throws IOException; Import TMA scores from a file into the TMAGrid of an object hierarchy. Parameters:; file - ; hierarchy - ; Returns:; Throws:; IOException. importFromCSV; public static int importFromCSV(String text,; PathObjectHierarchy hierarchy); Import TMA scores from a String into the TMAGrid of an object hierarchy. Parameters:; text - ; hierarchy - ; Returns:. parseNumeric; public static double[] parseNumeric(List<String> list,; boolean allOrNothing); Parse numeric values from a list of strings.; . Parameters:; list - list of strings containing the input text. Empty or null strings are treated as missing and returned as NaN.; allOrNothing - is true, the assumption is made that all values will be numeric or none of them will.; Consequently, if any non-missing,",MatchSource.WIKI,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html
Deployability,update,updateUris,"iResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsupport",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
Integrability,interface,interface,". UriResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsup",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
Safety,predict,prediction,". UriResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsup",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
Availability,avail,available,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
Deployability,update,update," to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap o",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
Integrability,wrap,wrap,"cements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
Modifiability,extend,extends,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
Security,access,access,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
Availability,avail,available,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
Modifiability,extend,extends,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
Security,access,access,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
Integrability,interface,interfaces,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
Modifiability,extend,extends,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
Security,access,accessible,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
Integrability,interface,interface,". Measurement (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface Measurement. All Superinterfaces:; Serializable. public interface Measurement; extends Serializable; Basic interface to define a measurement.; ; This was originally intended to support both static and dynamic measurements, ; but the functionality is rarely used now. It may be removed in the future. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDeprecated Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the measurement. double; getValue(). Get the numeric value of the measurement. boolean; isDynamic(). Deprecated. Method Details. getName; String getName(); Get the name of the measurement. Returns:. getValue; double getValue(); Get the numeric value of the measurement. Returns:. isDynamic; @Deprecated; boolean isDynamic(); Deprecated.; Returns true if a measurement can change its value, for example because of changes in ; a object or hierarchy. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/Measurement.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html
Modifiability,extend,extends,". Measurement (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface Measurement. All Superinterfaces:; Serializable. public interface Measurement; extends Serializable; Basic interface to define a measurement.; ; This was originally intended to support both static and dynamic measurements, ; but the functionality is rarely used now. It may be removed in the future. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDeprecated Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the measurement. double; getValue(). Get the numeric value of the measurement. boolean; isDynamic(). Deprecated. Method Details. getName; String getName(); Get the name of the measurement. Returns:. getValue; double getValue(); Get the numeric value of the measurement. Returns:. isDynamic; @Deprecated; boolean isDynamic(); Deprecated.; Returns true if a measurement can change its value, for example because of changes in ; a object or hierarchy. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/Measurement.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html
Modifiability,extend,extends,". MeasurementFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementFactory. java.lang.Object; qupath.lib.measurements.MeasurementFactory. @Deprecated; public class MeasurementFactory; extends Object; Deprecated.; Factory for creating new Measurement objects.; ; Made more sense when dynamic measurements were in use.; ; May not be particularly useful now (?). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementFactory(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Measurement; createMeasurement(String name,; double value). Deprecated.; Create a measurement with a double value. static Measurement; createMeasurement(String name,; float value). Deprecated.; Create a measurement with a float value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementFactory; public MeasurementFactory(); Deprecated. Method Details. createMeasurement; public static Measurement createMeasurement(String name,; double value); Deprecated.; Create a measurement with a double value. Parameters:; name - ; value - ; Returns:. createMeasurement; public static Measurement createMeasurement(String name,; float value); Deprecated.; Create a measurement with a float value. Parameters:; name - ; value - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html
Security,hash,hashCode,". MeasurementFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementFactory. java.lang.Object; qupath.lib.measurements.MeasurementFactory. @Deprecated; public class MeasurementFactory; extends Object; Deprecated.; Factory for creating new Measurement objects.; ; Made more sense when dynamic measurements were in use.; ; May not be particularly useful now (?). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementFactory(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Measurement; createMeasurement(String name,; double value). Deprecated.; Create a measurement with a double value. static Measurement; createMeasurement(String name,; float value). Deprecated.; Create a measurement with a float value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementFactory; public MeasurementFactory(); Deprecated. Method Details. createMeasurement; public static Measurement createMeasurement(String name,; double value); Deprecated.; Create a measurement with a double value. Parameters:; name - ; value - ; Returns:. createMeasurement; public static Measurement createMeasurement(String name,; float value); Deprecated.; Create a measurement with a float value. Parameters:; name - ; value - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html
Availability,avail,available,"list contains a measurement with the specified name. default boolean; containsNamedMeasurement(String name). Deprecated.; since v0.4.0; replaced by containsKey(String). double; get(String name). Get value for the measurement with the specified name. String; getMeasurementName(int ind). Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. List<String>; getMeasurementNames(). Get the names of all measurements currently in the list. double; getMeasurementValue(int ind). Deprecated.; since v0.4.0; using get(String) is preferred over using an index. default double; getMeasurementValue(String name). Deprecated.; since v0.4.0; use get(String) instead. default double; getOrDefault(String name,; double defaultValue). Get the specified measurement, or the provided default value if it is not contained in the list. boolean; isEmpty(). Returns true if the list does not contain any measurements. default Set<String>; keySet(). Get all available names as a set. void; put(String name,; double value). Put a measurement value into the list, replacing any previous measurement with the same name. default void; putAll(Map<String,? extends Number> map). Put all the values from the specified map into this list. default void; putAll(MeasurementList list). Put all the values from the specified list into this one. default void; putMeasurement(String name,; double value). Deprecated.; since v0.4.0; replaced by put(String, double). Measurement; putMeasurement(Measurement measurement). Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. default double; remove(String name). Remove a named measurement. void; removeMeasurements(String... measurementNames). Remove all the measurements with the specified names. int; size(). Returns the number of measurements in the list. boolean; supportsDynamicMeasurements(). Deprecated.; since v0.4.0; the initial implementat",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
Deployability,update,updated,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
Energy Efficiency,efficient,efficient,"rementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this list contains a measurement with the specified name. Parameters:; name - ; Returns:; Since:; v0.4.0. isEmpty; boolean isEmpty(); Returns true if the list does not contain any measurements. Returns:. size; int size(); Returns the number of measurements in the list. Returns:. supportsDynamicMeasurements; @Deprecated; boolean supportsDynamicMeasurements(); Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. Returns true if the list supports dynamic measurements. ; Dynamic measurements can change their values, and in the interests of efficiency ; are not supported by all MeasurementList implementations.; ; Use of this is strongly discouraged. Returns:. close; void close(); Close the list. Depending on the implementation, the list may then adjust its internal storage to be; more efficient. Specified by:; close in interface AutoCloseable. removeMeasurements; void removeMeasurements(String... measurementNames); Remove all the measurements with the specified names. Parameters:; measurementNames - . clear; void clear(); Remove all the measurements from the list. asMap; default Map<String,Number> asMap(); Get a map view of this measurements list. ; This is a map that is backed by the list, which means that putting or retrieving elements ; modifies the list. It also means that there can be some loss of precision if the list does ; not support Double (e.g. it uses a float array for storage).; . Returns:; a map view of this measurement list. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
Integrability,interface,interface,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
Modifiability,extend,extends,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
Usability,simpl,simply,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
Integrability,interface,interface,". MeasurementList.MeasurementListType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
Modifiability,extend,extends,". MeasurementList.MeasurementListType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
Security,hash,hashCode,"pe>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GENERAL; public static final MeasurementList.MeasurementListType GENERAL; A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. DOUBLE; public static final MeasurementList.MeasurementListType DOUBLE; A list backed by an array of doubles. FLOAT; public static final MeasurementList.MeasurementListType FLOAT; A list backed by an array of floats. Method Details. values; public static MeasurementList.MeasurementListType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static MeasurementList.MeasurementListType valueOf(String name); Returns the enum constant of this class with the specified name.",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
Energy Efficiency,efficient,efficiently,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html
Modifiability,extend,extends,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html
Safety,detect,detection,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html
Security,hash,hashCode,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html
Integrability,interface,interface,". qupath.lib.measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.measurements. package qupath.lib.measurements. Provides measurement lists for use with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; Measurement. Basic interface to define a measurement. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-summary.html
Modifiability,extend,extends,". qupath.lib.measurements Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.measurements. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory. Interface Hierarchy. java.lang.AutoCloseable. qupath.lib.measurements.MeasurementList (also extends java.io.Serializable). java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable). Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.measurements.MeasurementList.MeasurementListType. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-tree.html
Deployability,update,updated,"CellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
Modifiability,extend,extends,". CellTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class CellTools. java.lang.Object; qupath.lib.objects.CellTools. public class CellTools; extends Object; Helper class for working with PathObjects that represent cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Detai",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
Safety,detect,detectionsToCells," cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cel",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
Security,hash,hashCode,"ex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nuc",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
Integrability,interface,interface,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
Modifiability,extend,extends,". DefaultPathObjectComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
Performance,optimiz,optimization,". DefaultPathObjectComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
Safety,predict,predictable,". DefaultPathObjectComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
Security,hash,hashCode,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
Integrability,interface,interface,"sect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void w",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
Modifiability,extend,extends,". DefaultPathObjectConnectionGroup (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectConnectionGroup. java.lang.Object; qupath.lib.objects.DefaultPathObjectConnectionGroup. All Implemented Interfaces:; Externalizable, Serializable, PathObjectConnectionGroup. public class DefaultPathObjectConnectionGroup; extends Object; implements PathObjectConnectionGroup, Externalizable; Simple, default implementation of PathObjectConnectionGroup. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; static final String; KEY_OBJECT_CONNECTIONS. Key to use when storing object connections as a property of an ImageData object. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectConnectionGroup(). Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections). Create a connections group, copying the connections from an existing group. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from clas",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
Security,hash,hashCode,"ObjectConnectionGroup(). Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections). Create a connections group, copying the connections from an existing group. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConn",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
Integrability,interface,interface,". MetadataStore (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface MetadataStore. All Known Implementing Classes:; TMACoreObject. public interface MetadataStore; Interface that may be used to indicate that a PathObject (or other object) can store metadata.; ; Implementing classes should ensure that entries are stored in insertion order. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Set<String>; getMetadataKeys(). Get all metadata keys. Map<String,String>; getMetadataMap(). Returns an unmodifiable map containing the metadata. String; getMetadataString(String key). Get a metadata value, cast as a String if possible. Object; getMetadataValue(String key). Get a metadata value of any kind. Object; putMetadataValue(String key,; String value). Store a new metadata value. Method Details. putMetadataValue; Object putMetadataValue(String key,; String value); Store a new metadata value. Parameters:; key - ; value - ; Returns:. getMetadataString; String getMetadataString(String key); Get a metadata value, cast as a String if possible. Parameters:; key - ; Returns:. getMetadataValue; Object getMetadataValue(String key); Get a metadata value of any kind. Parameters:; key - ; Returns:. getMetadataKeys; Set<String> getMetadataKeys(); Get all metadata keys. Returns:. getMetadataMap; Map<String,String> getMetadataMap(); Returns an unmodifiable map containing the metadata. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/MetadataStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/MetadataStore.html
Energy Efficiency,efficient,efficient,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConn",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
Integrability,interface,interface," Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectTools. A collection of static methods to help work with PathObjects. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TMACoreObject. A special PathObject used exclusively to represent TMA cores. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
Modifiability,flexible,flexible,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConn",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
Performance,cache,cache," Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectTools. A collection of static methods to help work with PathObjects. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TMACoreObject. A special PathObject used exclusively to represent TMA cores. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
Safety,detect,detection,". qupath.lib.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectCon",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
Modifiability,extend,extends,". PathAnnotationObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathAnnotationObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathAnnotationObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathAnnotationObject; extends PathROIObject; An annotation PathObject.; ; These tend to be larger and less common than PathDetectionObjects.; ; As such, they can be represented and displayed with more emphasis on flexibility, rather than efficiency. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, is",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
Security,hash,hashCode,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
Usability,clear,clearChildObjects,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
Integrability,interface,interface,"cked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
Modifiability,extend,extends,". PathCellObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathCellObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathCellObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathCellObject; extends PathDetectionObject; A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus.; ; The primary ROI represents the cell boundary. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathCellObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetada",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
Security,hash,hashCode,"PathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOEx",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
Usability,clear,clearChildObjects,"hodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getRO",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
Energy Efficiency,efficient,efficiently,". PathDetectionObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getD",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
Modifiability,extend,extends,". PathDetectionObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getD",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
Safety,detect,detection,". PathDetectionObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getD",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
Security,hash,hashCode,"readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
Usability,simpl,simple,"ss PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, remov",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
Availability,avail,available,"laced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; getDescendantObjects(Collection<PathObject> descendants). Get a collection containing all descendant objects. String; getDisplayedName(). Request an object name in a form suitable for displaying. UUID; getID(). Get the ID for this object. int; getLevel(). The level of the object in a hierarchy. MeasurementList; getMeasurementList(). Retrieve the list stored measurements for the object. Map<String,Number>; getMeasurements(). Get a map-based view on getMeasurementList(). Map<String,String>; getMetadata(). Get a key/value pair map for object metadata. String; getName(). Request the stored object name. PathObject; getParent(). Request the parent object. abstract PathClass; getPathClass(). Get the classification of the object. abstract ROI; getROI(). Get the region of interest (ROI) for the object. protected ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
Energy Efficiency,green,green,"athObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). void; removePathObjects(Collection<PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). boolean; resetPathClass(). Reset the classification (i.e. protected Set<String>; retrieveMetadataKeys(). Get the set of metadata keys. protected Object; retrieveMetadataValue(String key). Get a metadata value. void; setClassifications(Collection<String> classifications). Set the PathClass from a collection of names according to the rules:; ; If the collection is empty, reset the PathClass; If the collection has one element, set it to be the name of the PathClass; If the collection has multiple element, create and set a derived PathClass with each ; unique element the name of a PathClass component; ; The uniqueness is equivalent to copying the elements into a set; if a set is provided ; as input then a defensive copy will be made.. void; setColor(int red,; int green,; int blue). Set the display color as 8-bit RGB values. void; setColor(Integer color). Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). void; setColorRGB(Integer color). Deprecated.; since v0.4.0, use setColor(Integer) instead. void; setID(UUID id). Set the ID for this object. void; setLocked(boolean locked). Set locked status, if possible. void; setName(String name). Set the stored object name. void; setPathClass(PathClass pc). Set the classification of the object, without specifying any classification probability. abstract void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. protected Object; storeMetadataValue(String key,; String value). Store a metadata value. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
Integrability,depend,depend,"rue also if the object is a subclass of a detection, ; e.g. a tile or cell. Returns:; See Also:. isCell(); PathDetectionObject; PathCellObject; PathTileObject. isCell; public boolean isCell(); Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). Returns:; See Also:. isDetection(); PathDetectionObject; PathCellObject; PathTileObject. hasMeasurements; public boolean hasMeasurements(); Returns true if the measurement list for this object is not empty. Returns:. isTMACore; public boolean isTMACore(); Returns true if this object represents a TMA core. Returns:; See Also:. TMACoreObject. isTile; public boolean isTile(); Returns true if this object represents an image tile. Returns:; See Also:. PathTileObject. isEditable; public abstract boolean isEditable(); Flag indicating that the object is editable.; ; If this returns false, this indicates the object has a ROI this should not be moved or resized ; (e.g. because child objects depend upon it). Returns:. getChildObjects; public Collection<PathObject> getChildObjects(); Get a collection of child objects.; ; In the current implementation, this is immutable - it cannot be modified directly. Returns:. getChildObjects; public Collection<PathObject> getChildObjects(Collection<PathObject> children); Get a collection containing all child objects. Parameters:; children - optional collection to which the children should be added; Returns:; collection containing all child object (the same as children if provided). getDescendantObjects; public Collection<PathObject> getDescendantObjects(Collection<PathObject> descendants); Get a collection containing all descendant objects. Parameters:; descendants - optional collection to which the descendants should be added; Returns:; collection containing all descendant object (the same as descendants if provided). getChildObjectsAsArray; public PathObject[] getChildObjectsAsArray(); Get a defensive copy of child objects as an arr",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
Modifiability,extend,extends,". PathObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObject. java.lang.Object; qupath.lib.objects.PathObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathROIObject, PathRootObject. public abstract class PathObject; extends Object; implements Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Col",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
Safety,detect,detections,". PathObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObject. java.lang.Object; qupath.lib.objects.PathObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathROIObject, PathRootObject. public abstract class PathObject; extends Object; implements Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Col",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
Security,hash,hashCode," made.. void; setColor(int red,; int green,; int blue). Set the display color as 8-bit RGB values. void; setColor(Integer color). Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). void; setColorRGB(Integer color). Deprecated.; since v0.4.0, use setColor(Integer) instead. void; setID(UUID id). Set the ID for this object. void; setLocked(boolean locked). Set locked status, if possible. void; setName(String name). Set the stored object name. void; setPathClass(PathClass pc). Set the classification of the object, without specifying any classification probability. abstract void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. protected Object; storeMetadataValue(String key,; String value). Store a metadata value. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathObject; public PathObject(MeasurementList measurements); Create a PathObject with a specific measurement list.; ; This can be used e.g. to create an object with a more memory-efficient list,; at the cost of generality/mutability. Parameters:; measurements - . PathObject; public PathObject(); Default constructor. Used for Externalizable support, not intended to be used by other consumers. Method Details. getParent; public PathObject getParent(); Request the parent object. Each PathObject may have only one parent. Returns:. setLocked; public void setLocked(boolean locked); Set locked status, if possible.; ; Subclasses should override this method to support locking or unlocking.; Default implementation throws an UnsupportedOperationException if an ; attempt is made to unlock the object. Parameters:; locked - . isLocked; public boolean isLocked(); Query the locked status.; ; Subclasses should override this method to supp",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
Testability,test,testing," to query or add specific numeric measurements. Returns:. getMeasurements; public Map<String,Number> getMeasurements(); Get a map-based view on getMeasurementList().; This is likely to be less efficient (because it does not support primitives), but has several advantages ; ; it uses a familiar and standard API; it is much more amenable for scripting, especially in Groovy; it is possible to return null for missing values, rather than only Double.NaN. The MeasurementList is retained for backwards-compatibility, particularly the ability to ; read older data files.; Changes made to the map are propagated through to the MeasurementList, so it should be possible to ; use them interchangeably - however note that there may be some loss of precision if the backing measurement ; list uses floats rather than doubles.; ; It is possible that a map implementation becomes the standard in the future and getMeasurementList(); may be deprecated; this is an experimental feature introduced in v0.4.0 for testing. Returns:; Since:; v0.4.0. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Create a new MeasurementList of the preferred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
Usability,clear,clearChildObjects,"Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
Integrability,interface,interface,". PathObjectConnectionGroup (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectConnectionGroup. All Known Implementing Classes:; DefaultPathObjectConnectionGroup, DelaunayTriangulation. public interface PathObjectConnectionGroup; Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy.; ; Example applications would be Delaunay triangulation.; ; Such connections can be represented on an overlay by drawing lines between object centroids. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. default Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. Method Details. containsObject; boolean containsObject(PathObject pathObject); Returns true if the specified PathObject is contained within this group. Parameters:; pathObject - ; Returns:. getPathObjects; Collection<PathObject> getPathObjects(); Get an unmodifiable collection containing all the PathObjects contained within this group. Returns:. getConnectedObjects; List<PathObject> getConnectedObjects(PathObject pathObject); Get all the connections to a specified ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnectionGroup.html
Integrability,interface,interface,"ps(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ; Returns:. isEmpty; public boolean isEmpty(); Returns true if the group is empty. Returns:. clear; public void clear(); Clear all existing connections. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
Modifiability,extend,extends,". PathObjectConnections (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectConnections. java.lang.Object; qupath.lib.objects.PathObjectConnections. All Implemented Interfaces:; Externalizable, Serializable. public class PathObjectConnections; extends Object; implements Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
Security,hash,hashCode,"ts Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
Usability,clear,clear,". PathObjectConnections (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectConnections. java.lang.Object; qupath.lib.objects.PathObjectConnections. All Implemented Interfaces:; Externalizable, Serializable. public class PathObjectConnections; extends Object; implements Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
Integrability,interface,interfaces,". PathObjectFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
Modifiability,extend,extends,". PathObjectFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
Safety,detect,detection,"um Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify,",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
Security,hash,hashCode," Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
Testability,test,test," (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TIL",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
Integrability,interface,interface,". PathObjectPredicates (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectPredicates. java.lang.Object; qupath.lib.objects.PathObjectPredicates. public class PathObjectPredicates; extends Object; Classes to define JSON-serializable Predicates for PathObjects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. Constructor Summary; Constructors. Constructor; Description; PathObjectPredicates();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectPredicates.PathObjectPredicate; baseClassification(PathClass... pathClasses). Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html
Modifiability,extend,extends,". PathObjectPredicates (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectPredicates. java.lang.Object; qupath.lib.objects.PathObjectPredicates. public class PathObjectPredicates; extends Object; Classes to define JSON-serializable Predicates for PathObjects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. Constructor Summary; Constructors. Constructor; Description; PathObjectPredicates();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectPredicates.PathObjectPredicate; baseClassification(PathClass... pathClasses). Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html
Security,hash,hashCode,"ate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectPredicates; public PathObjectPredicates(). Method Details. positiveClassification; public static PathObjectPredicates.PathObjectPredicate positiveClassification(boolean allowGradedIntensity); Predicate that returns true of an object has a positive classification. Parameters:; allowGradedIntensity - if true, 1+, 2+ and 3+ are also interpreted as positive; ; otherwise, only a final class component of ""Positive"" returns true.; Returns:; See Also:. PathClassTools.isPositiveClass(PathClass); PathClassTools.isGradedIntensityClass(PathClass); PathClassTools.isPositiveOrGradedIntensityClass(PathClass). filter; public static PathObjectPredicates.PathObjectPredicate filter(PathObjectFilter filter); Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. Parameters:; filter - ; Returns:. exactClassification; public",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html
Integrability,interface,interface,". PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html
Modifiability,extend,extends,". PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html
Testability,test,test,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through OR.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html
Availability,avail,available,". PathObjectReader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectReader. All Known Implementing Classes:; ChannelDisplayTransformServer, ImageJServer. public interface PathObjectReader; Interface for classes capable of reading PathObjects from some source.; This may be used in conjunction with an ImageServer to indicate that the server can read objects ; as well as pixels from its source. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. Method Details. readPathObjects; Collection<PathObject> readPathObjects(); throws IOException; Read a collection of objects from the source. Returns:; a collection of objects, or empty list if no objects are available.; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectReader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html
Integrability,interface,interface,". PathObjectReader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectReader. All Known Implementing Classes:; ChannelDisplayTransformServer, ImageJServer. public interface PathObjectReader; Interface for classes capable of reading PathObjects from some source.; This may be used in conjunction with an ImageServer to indicate that the server can read objects ; as well as pixels from its source. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. Method Details. readPathObjects; Collection<PathObject> readPathObjects(); throws IOException; Read a collection of objects from the source. Returns:; a collection of objects, or empty list if no objects are available.; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectReader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html
Integrability,interface,interfaces,"Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segment",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
Modifiability,extend,extends,". PathObjects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjects. java.lang.Object; qupath.lib.objects.PathObjects. public class PathObjects; extends Object; Helper class to create PathObject. This should be used in preference of any constructors, ; which linger only for historical reasons and compatibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PathObjects();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObject; createAnnotationObject(ROI roi). Create an unclassified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass). Create a classified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified annotation object with a specified measurement list. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus). Create a cell object. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass). Create a cell object with an optional classification. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements). Create a cell object with an optional classification and measurements list. static PathObject; createDetectionObject(ROI roi). Create an unclassified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass). Create a classified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified detection object with a specified measurem",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
Safety,detect,detection,"PathObjects();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObject; createAnnotationObject(ROI roi). Create an unclassified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass). Create a classified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified annotation object with a specified measurement list. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus). Create a cell object. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass). Create a cell object with an optional classification. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements). Create a cell object with an optional classification and measurements list. static PathObject; createDetectionObject(ROI roi). Create an unclassified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass). Create a classified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified detection object with a specified measurement list. static PathObject; createTileObject(ROI roi). Create an unclassified tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACor",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
Security,hash,hashCode,"ileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a TMA core object with an ellipse ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an ellipse ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjects; public PathObjects(). Method Details. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified annotation object with a specified measurement list.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; measurements - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass); Create a classified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi); Create an unclassified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Pa",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
Availability,avail,availableObjects," double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
Deployability,update,update,"s. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'locked', firing an update event if the status of any object is changed. static Map<PathObject,PathObject>; matchByID(Collection<? extends PathObject> sourceObjects,; Collection<? extends PathObject> targetObjects). Match objects according to their IDs. static PathObject; mergeObjects(Collection<? extends PathObject> pathObjects). Merge objects by calculating the union of their ROIs. static <K> List<PathObject>; mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier). Merge objects that share a property in common. static boolean; mergePointsForAllClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane, ; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForClass(PathObjectHierarchy hierarchy,; PathClass pathClass). Merge point annotations with the specified PathClass sharing the same ImagePlane, ; creating a single m",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
Integrability,depend,depending,"alibrated units. createTMAGrid; public static TMAGrid createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterPixels,; ImageRegion region); Create a new regular TMAGrid, fit within a specified region.; ; For the label string format, see see parseTMALabelString(String). Parameters:; hLabels - a String representing horizontal labels; vLabels - a String representing vertical labels; rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; diameterPixels - the diameter of each core, in pixels; region - bounding box and spacing for the grid (required); Returns:. relabelTMAGrid; public static boolean relabelTMAGrid(TMAGrid grid,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst); Relabel a TMA grid. This will only be effective if enough labels are supplied for the full grid - otherwise no changes will be made.; ; For a TMA core at column c and row r, the label format will be 'Hc-Vr' or 'Hc-Vr', where H is the horizontal label and V the vertical label, ; depending upon the status of the 'rowFirst' flag.; ; An examples of label would be 'A-1', 'A-2', 'B-1', 'B-2' etc. Parameters:; grid - the TMA grid to relabel; labelsHorizontal - a String containing labels for each TMA column, separated by spaces, or a numeric or alphabetic range (e.g. 1-10, or A-G); labelsVertical - a String containing labels for each TMA row, separated by spaces, or a numeric or alphabetic range (e.g. 1-10, or A-G); rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; Returns:; true if there were sufficient horizontal and vertical labels to label the entire grid, false otherwise. convertToPoints; public static void convertToPoints(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects,; boolean preferNucleus,; boolean deleteObjects); Convert a collection of PathObjects to Point annotations, based on ROI centroids, and add the points to the hierarchy. Parameters",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
Modifiability,extend,extends,". PathObjectTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectTools. java.lang.Object; qupath.lib.objects.PathObjectTools. public class PathObjectTools; extends Object; A collection of static methods to help work with PathObjects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PathObjectTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; addTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static boolean; containsObject(PathObject parentObject,; PathObject childObject). Deprecated. static boolean; containsROI(ROI parentROI,; ROI childROI). Deprecated. static Collection<PathObject>; convertToPoints(Collection<PathObject> pathObjects,; boolean preferNucleus). Convert a collection of PathObjects to Point annotations, based on ROI centroids. static void; convertToPoints(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects,; boolean preferNucleus,; boolean deleteObjects). Convert a collection of PathObjects to Point annotations, based on ROI centroids, and add the points to the hierarchy. static int; countDescendants(PathObject pathObject). Count the descendants of a PathObject recursively. static int; countObjectsWithClass(Collection<? extends PathObject> pathObjects,; PathClass pathClass,; boolean useBaseClass). Count the number of PathObjects in a collection with a specified class or base class. static Map<PathObject,PathClass>; createClassificationMap(Collection<? extends PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
Safety,avoid,avoids,"al TMA core labels.; This can be a space-separated list, or an ascending or descending numeric or alphabetic range.; ; Examples:; ; ""A-H""; ""1-9""; ""H-A""; ""A B D E"". Parameters:; labelString - ; Returns:. getSupportedObjects; public static Collection<? extends PathObject> getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses); From a collection of available objects, extract those that are instances of specified supported classes. Parameters:; availableObjects - ; supportedClasses - ; Returns:. getROI; public static ROI getROI(PathObject pathObject,; boolean preferNucleus); Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. Parameters:; pathObject - ; preferNucleus - ; Returns:. getNucleusOrMainROI; public static ROI getNucleusOrMainROI(PathObject pathObject); Get the nucleus ROI for a cell, or the main ROI if no nucleus is found.; This is equivalent to getROI(pathObject, true), but avoids the mysterious boolean flag to make; code more readable. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusROI(PathObject). getNucleusROI; public static ROI getNucleusROI(PathObject pathObject); Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusOrMainROI(PathObject). getDescendantObjects; public static Collection<PathObject> getDescendantObjects(PathObject pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get all descendant objects with a specified type. Parameters:; pathObject - ; pathObjects - ; cls - ; Returns:. splitAreasByLines; public static Map<PathObject,List<PathObject>> splitAreasByLines(Collection<? extends PathObject> pathObjects); Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. Parameters:; pathObjects - an input collec",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
Security,hash,hashCode,"bjects. static void; unlockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'unlocked'. static void; unlockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. static PathObject; updatePlane(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane). Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object, and any descendant objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectTools; public PathObjectTools(). Method Details. hasPointROI; public static boolean hasPointROI(PathObject pathObject); Returns true if a PathObject has a Point ROI. Parameters:; pathObject - ; Returns:. countObjectsWithClass; public static int countObjectsWithClass(Collection<? extends PathObject> pathObjects,; PathClass pathClass,; boolean useBaseClass); Count the number of PathObjects in a collection with a specified class or base class. Parameters:; pathObjects - ; pathClass - ; useBaseClass - ; Returns:. getObjectsOfClass; public static List<PathObject> getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get the PathObjects in a collection that are instances of a specified class. Parameters:; pathObjects - ; cls - ; Returns:. createImageRegionPredicate; public static Predicate<PathObject> createImageRegionPredicate(ImageRegion region); Create a predicate that only ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
Testability,test,test,"arameters:; pathObjects - ; Returns:; Since:; v0.5.0. getFlattenedObjectList; public static List<PathObject> getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent); Get all descendant objects as a flattened list. Parameters:; parentObject - the parent objects whose children and descendants should be added to the list; list - output list, optional; includeParent - if true, parentObject will be included in the output list; Returns:; either list, or a new list created if necessary. countDescendants; public static int countDescendants(PathObject pathObject); Count the descendants of a PathObject recursively. Parameters:; pathObject - ; Returns:. containsROI; @Deprecated; public static boolean containsROI(ROI parentROI,; ROI childROI); Deprecated.; Test whether one ROI is can completely contain a second ROI.; Returns false if either ROI is null.; ; Note: This is not a perfect test, since it really only checks if the vertices of the child ROI fall within the parent - it is possible; that connecting lines stray outside the parent, yet it still returns true. This behavior may change in later versions.; ; TODO: Consider improving 'containsROI' method accuracy. Parameters:; parentROI - ; childROI - ; Returns:. findObjectsOutsideImage; public static List<PathObject> findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting); Get all the objects with ROIs that are outside the bounds of an image. Parameters:; pathObjects - the input objects to check; server - the image to check; ignoreIntersecting - if true, consider objects that overlap the image boundary to be inside (and therefore don't include them in the output); ; if false, consider them to be outside and include them in the output; Returns:; a filtered list of the input object containing those considered outside the image; Since:; v0.4.0; See Also:. findObjectsOutsideRegion(Collection, ImageRegion, boolean); findObject",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
Usability,user-friendly,user-friendly," static Collection<PathObject>; getObjectsForLocation(PathObjectHierarchy hierarchy,; double x,; double y,; int zPos,; int tPos,; double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possib",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
Availability,avail,available,". Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathROIObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathAnnotationObject, PathDetectionObject, TMACoreObject. public abstract class PathROIObject; extends PathObject; Abstract class used for PathObjects that have ROIs associated with them.; ; In practice, this is almost all PathObjects (with the notable exception of PathRootObjects). Author:; Pete Bankhead; See Also:. Serialized Form. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). Deprecated.; since v0.4.0. boolean; isLocked(). Query the locked status for the object, indicating whether it should be editable or not. void; readExternal(ObjectInput in);  ; void; setLocked(boolean locked). Set locked flag, indicating that the object ROI should not be modified. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. void; setROI(ROI roi). Set the ROI for this object. void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, g",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathROIObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html
Deployability,update,update,"p, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. setROI; public void setROI(ROI roi); Set the ROI for this object. If this is called, one should remember to update any associated ; hierarchy to notify it of the change. Parameters:; roi - . setLocked; public void setLocked(boolean locked); Set locked flag, indicating that the object ROI should not be modified.; It directly impacts on isEditable(). Note that this is only a hint that other code should pay attention to - it is not; enforced locally.; ; TODO: Consider shifting this method into PathObject rather than PathROIObject (even; if it doesn't really do anything there). Overrides:; setLocked in class PathObject; Parameters:; locked - . isLocked; public boolean isLocked(); Query the locked status for the object, indicating whether it should be editable or not. Overrides:; isLocked in class PathObject; Returns:. isEditable; @Deprecated; public boolean isEditable(); Deprecated.; since v0.4.0. Return true if isLocked() is false, otherwise returns false.; ; This method existed before isLocked() to try to automatically determine whether ; an object should be locked or not. Now the isLocked() flag shoul",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathROIObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html
Integrability,interface,interface,"n isLocked(); Query the locked status for the object, indicating whether it should be editable or not. Overrides:; isLocked in class PathObject; Returns:. isEditable; @Deprecated; public boolean isEditable(); Deprecated.; since v0.4.0. Return true if isLocked() is false, otherwise returns false.; ; This method existed before isLocked() to try to automatically determine whether ; an object should be locked or not. Now the isLocked() flag should be used instead. Specified by:; isEditable in class PathObject; Returns:. setPathClass; public void setPathClass(PathClass pathClass,; double classProbability); Description copied from class: PathObject; Set the classification of the object, specifying a classification probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Specified by:; setPathClass in class PathObject; Parameters:; pathClass - ; classProbability - . getClassProbability; public double getClassProbability(); Description copied from class: PathObject; Request the classification probability, or Double.NaN if no probability is available. Specified by:; getClassProbability in class PathObject; Returns:. getPathClass; public PathClass getPathClass(); Description copied from class: PathObject; Get the classification of the object. Specified by:; getPathClass in class PathObject; Returns:. getROI; public ROI getROI(); Description copied from class: PathObject; Get the region of interest (ROI) for the object. Specified by:; getROI in class PathObject; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathObject; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathROIObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html
Modifiability,extend,extends,". PathROIObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathROIObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathAnnotationObject, PathDetectionObject, TMACoreObject. public abstract class PathROIObject; extends PathObject; Abstract class used for PathObjects that have ROIs associated with them.; ; In practice, this is almost all PathObjects (with the notable exception of PathRootObjects). Author:; Pete Bankhead; See Also:. Serialized Form. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). Deprecated.; since v0.4.0. boolean; isLocked(). Query the locked status for the object, indicating whether it should be editable or not. void; readExternal(ObjectInput in);  ; void; setLocked(boolean locked). Set locked flag, indicating that the object ROI should not be modified. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. void; setROI(ROI roi). Set the ROI for this object. void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getC",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathROIObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html
Security,hash,hashCode,"bjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. setROI; public void setROI(ROI roi); Set the ROI for this object. If this is called, one should remember to update any associated ; hierarchy to notify it of the change. Parameters:; roi - . setLocked; public void setLocked(boolean locked); Set locked flag, indicating that the object ROI should not be modified.; It directly impacts on isEditable(). Note that this is only a hint that other code should pay attention to - it is not; enforced locally.; ; TODO: Consider shifting this method into PathObject rather than PathROIObject (even; if it doesn't really do anything there). Overrides:; setLocked in class PathObject; Parameters:; locked - . isLocked; public boolean isLocked(); Query the locked status for the object, indicating whether it should be editable or not. Overrides:; isLocked in class PathObject; Returns:. isEditable; @Deprecated; public boolean isEditable(); Deprecated.; since v0.4.0. Return true if isLocked() is fal",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathROIObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html
Usability,clear,clearChildObjects,"able(). Deprecated.; since v0.4.0. boolean; isLocked(). Query the locked status for the object, indicating whether it should be editable or not. void; readExternal(ObjectInput in);  ; void; setLocked(boolean locked). Set locked flag, indicating that the object ROI should not be modified. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. void; setROI(ROI roi). Set the ROI for this object. void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. setROI; public void setROI(ROI roi); Set the ROI for this object. If this is called, one should remember to update any associated ; hierarchy to notify it of the change. Parameters:; roi - . setLocked; public void setLocked(boolean locked); Set locked flag, indicating that the object ROI should not be modified.; It directly impacts on isEditable(). Note that this is only a hint that other code should pay attention to - it is no",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathROIObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html
Availability,avail,available,"0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathRootObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathRootObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathRootObject; extends PathObject; The root object used at the base of a PathObjectHierarchy.; ; This doesn't have a ROI, and can't have its PathClass set. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathRootObject();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). The root object is never locked. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. String; toString();  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathRootObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html
Modifiability,extend,extends,". PathRootObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathRootObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathRootObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathRootObject; extends PathObject; The root object used at the base of a PathObjectHierarchy.; ; This doesn't have a ROI, and can't have its PathClass set. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathRootObject();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). The root object is never locked. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. String; toString();  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, has",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathRootObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html
Security,hash,hashCode,"ds inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isLocked, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, readExternal, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setLocked, setName, setPathClass, storeMetadataValue, writeExternal. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathRootObject; public PathRootObject(). Method Details. isRootObject; public boolean isRootObject(); Description copied from class: PathObject; Returns true if the object is the 'root' of an object hierarchy. Overrides:; isRootObject in class PathObject; Returns:; See Also:. PathObjectHierarchy. getPathClass; public PathClass getPathClass(); Description copied from class: PathObject; Get the classification of the object. Specified by:; getPathClass in class PathObject; Returns:. setPathClass; public void setPathClass(PathClass pathClass,; double classProbability); Description copied from class: PathObject; Set the classification of the object, specifying a classification probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Specified by:; setPathClass in class PathObject; Parameters:; pathClass - ; classProbability - . getClassProbability; public double getClas",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathRootObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html
Usability,clear,clearChildObjects,"assification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). The root object is never locked. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. String; toString();  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isLocked, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, readExternal, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setLocked, setName, setPathClass, storeMetadataValue, writeExternal. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathRootObject; public PathRootObject(). Method Details. isRootObject; public boolean isRootObject(); Description copied from class: PathObject; Returns true if the object is the 'root' of an object hierarchy. Overrides:; isRootObject in class PathObject; Returns:; See Also:. PathObjectHierarchy. getPathClass; public PathClass getPathClass(); Description copied from class: PathObject; Get the classification of",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathRootObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html
Modifiability,extend,extends,". PathTileObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathTileObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathTileObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; ParallelTileObject. public class PathTileObject; extends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathTileObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html
Security,hash,hashCode,"tends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathTileObject; public PathTileObject(); Default constructor. Should not be used directly, instead use PathObjects.createTileObject(ROI). PathTileObject; protected PathTileObject(ROI pathROI). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathTileObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html
Usability,clear,clearChildObjects,"tends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathTileObject; public PathTileObject(); Default constructor. Should not be used directly, instead use PathObjects.createTileObject(ROI). PathTileObject; protected PathTileObject(ROI pathROI). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathTileObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html
Integrability,interface,interface,". TemporaryObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface TemporaryObject. All Known Implementing Classes:; ParallelTileObject. public interface TemporaryObject; Marker interface used to indicate that child objects shouldn't be added to any cache for display.; ; It can be used to create temporary objects that can be displayed faster while performing lengthy; processing operations.; ; Warning: It is better for programmers to avoid using this interface directly, as it may change in future implementations. Author:; Pete Bankhead. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/TemporaryObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TemporaryObject.html
Performance,cache,cache,". TemporaryObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface TemporaryObject. All Known Implementing Classes:; ParallelTileObject. public interface TemporaryObject; Marker interface used to indicate that child objects shouldn't be added to any cache for display.; ; It can be used to create temporary objects that can be displayed faster while performing lengthy; processing operations.; ; Warning: It is better for programmers to avoid using this interface directly, as it may change in future implementations. Author:; Pete Bankhead. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/TemporaryObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TemporaryObject.html
Safety,avoid,avoid,". TemporaryObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface TemporaryObject. All Known Implementing Classes:; ParallelTileObject. public interface TemporaryObject; Marker interface used to indicate that child objects shouldn't be added to any cache for display.; ; It can be used to create temporary objects that can be displayed faster while performing lengthy; processing operations.; ; Warning: It is better for programmers to avoid using this interface directly, as it may change in future implementations. Author:; Pete Bankhead. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/TemporaryObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TemporaryObject.html
Integrability,interface,interface,"tant Field Values. Constructor Details. TMACoreObject; public TMACoreObject(); Default constructor. Should not be used directly, instead use PathObjects.createTMACoreObject(double, double, double, boolean). Method Details. isMissing; public boolean isMissing(); Query the 'missing' flag for this core. Returns:. setMissing; public void setMissing(boolean missing); Set the missing flag for this core, for example because insufficient tissue is present.; 'Missing' cores are typically ignored during analysis. Parameters:; missing - . getCaseID; public String getCaseID(); Get the case ID metadata value. Returns:; See Also:. setCaseID(String). setCaseID; public void setCaseID(String caseID); Set the case ID metadata value. This is typically used to store a patient identifier, ; and must be unique for the patient (but multiple cores may have the same ID if they correspond ; to the same patient). Parameters:; caseID - . putMetadataValue; public Object putMetadataValue(String key,; String value); Description copied from interface: MetadataStore; Store a new metadata value. Specified by:; putMetadataValue in interface MetadataStore; Parameters:; key - ; value - ; Returns:. getMetadataString; public String getMetadataString(String key); Description copied from interface: MetadataStore; Get a metadata value, cast as a String if possible. Specified by:; getMetadataString in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataValue; public Object getMetadataValue(String key); Description copied from interface: MetadataStore; Get a metadata value of any kind. Specified by:; getMetadataValue in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataKeys; public Set<String> getMetadataKeys(); Description copied from interface: MetadataStore; Get all metadata keys. Specified by:; getMetadataKeys in interface MetadataStore; Returns:. getMetadataMap; public Map<String,String> getMetadataMap(); Description copied from interface: MetadataStore; Returns an unmodifi",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/TMACoreObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html
Modifiability,extend,extends,". TMACoreObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class TMACoreObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.TMACoreObject. All Implemented Interfaces:; Externalizable, Serializable, MetadataStore. public class TMACoreObject; extends PathROIObject; implements MetadataStore; A special PathObject used exclusively to represent TMA cores.; ; Currently, these only contain circular (or elliptical) ROIs. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; static final String; KEY_CASE_ID. Metadata key to store a case identify for the TMA core. static final String; KEY_OS_CENSORED. Metadata key for an overall survival censored flag. static final String; KEY_OVERALL_SURVIVAL. Metadata key for an overall survival (temporal) value. static final String; KEY_RECURRENCE_FREE_SURVIVAL. Metadata key for an recurrence-free survival (temporal) value. static final String; KEY_RFS_CENSORED. Metadata key for an recurrence-free survival censored flag. static final String; LEGACY_KEY_UNIQUE_ID. Deprecated. Constructor Summary; Constructors. Constructor; Description; TMACoreObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearMetadata(). Clear all associated metadata. String; getCaseID(). Get the case ID metadata value. Set<String>; getMetadataKeys(). Get all metadata keys. Map<String,String>; getMetadataMap(). Returns an unmodifiable map containing the metadata. String; getMetadataString(String key). Get a metadata value, cast as a String if possible. Object; getMetadataValue(S",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/TMACoreObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html
Security,hash,hashCode,"tLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. LEGACY_KEY_UNIQUE_ID; @Deprecated; public static final String LEGACY_KEY_UNIQUE_ID; Deprecated.; The key used before v0.4.0 to represent a unique (usually patient) ID.; This was replaced by #KEY_CASE_ID. See Also:. Constant Field Values. KEY_CASE_ID; public static final String KEY_CASE_ID; Metadata key to store a case identify for the TMA core.; This can be used to group cores that belong to the same case. See Also:. Constant Field Values. KEY_OVERALL_SURVIVAL; public static final String KEY_OVERALL_SURVIVAL; Metadata key for an overall survival (temporal) value. See Also:. Constant Field Values. KEY_RECURRENCE_FREE_SURVIVAL; public static final String KEY_RECURRENCE_FREE_SURVIVAL; Metadata key for an recurrence-free survival (temporal) value. See Also:. Constant Field Values. KEY_OS_CENSORED; public static final String KEY_OS_CENSORED; Metadata key for an overall survival censored flag. See Also:. Constant Field Values. KEY_R",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/TMACoreObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html
Usability,clear,clearMetadata,"plements MetadataStore; A special PathObject used exclusively to represent TMA cores.; ; Currently, these only contain circular (or elliptical) ROIs. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; static final String; KEY_CASE_ID. Metadata key to store a case identify for the TMA core. static final String; KEY_OS_CENSORED. Metadata key for an overall survival censored flag. static final String; KEY_OVERALL_SURVIVAL. Metadata key for an overall survival (temporal) value. static final String; KEY_RECURRENCE_FREE_SURVIVAL. Metadata key for an recurrence-free survival (temporal) value. static final String; KEY_RFS_CENSORED. Metadata key for an recurrence-free survival censored flag. static final String; LEGACY_KEY_UNIQUE_ID. Deprecated. Constructor Summary; Constructors. Constructor; Description; TMACoreObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearMetadata(). Clear all associated metadata. String; getCaseID(). Get the case ID metadata value. Set<String>; getMetadataKeys(). Get all metadata keys. Map<String,String>; getMetadataMap(). Returns an unmodifiable map containing the metadata. String; getMetadataString(String key). Get a metadata value, cast as a String if possible. Object; getMetadataValue(String key). Get a metadata value of any kind. boolean; isMissing(). Query the 'missing' flag for this core. Object; putMetadataValue(String key,; String value). Store a new metadata value. void; readExternal(ObjectInput in);  ; void; setCaseID(String caseID). Set the case ID metadata value. void; setMissing(boolean missing). Set the missing flag for this core, for example because insufficient tissue is present. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, setLocked, se",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/TMACoreObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html
Integrability,interface,interface,"ss qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get all selected objects that are instances of a supported class. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html
Modifiability,plugin,plugins,". AbstractDetectionPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; AbstractTileableDetectionPlugin, DetectCytokeratinCV, PositivePixelCounterIJ, SimpleTissueDetection2, TileClassificationsToAnnotationsPlugin, TilerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.A",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html
Safety,detect,detected,". AbstractDetectionPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; AbstractTileableDetectionPlugin, DetectCytokeratinCV, PositivePixelCounterIJ, SimpleTissueDetection2, TileClassificationsToAnnotationsPlugin, TilerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.A",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html
Security,hash,hashCode,"ss qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get all selected objects that are instances of a supported class. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html
Availability,avail,available,". Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<T>; Returns:. getParameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgument(ImageData<T> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Sin",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html
Integrability,interface,interface,"geData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysProm",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html
Modifiability,plugin,plugins,". AbstractInteractivePlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractInteractivePlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; AbstractDetectionPlugin, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DilateAnnotationPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TMADearrayerPluginIJ. public abstract class AbstractInteractivePlugin<T>; extends AbstractPlugin<T>; implements PathInteractivePlugin<T>; Abstract class to help with implementing an interactive plugin. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected ParameterList; params;  . Constructor Summary; Constructors. Constructor; Description; AbstractInteractivePlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty para",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html
Safety,abort,abort,"arameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgument(ImageData<T> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<T>; Parameters:; imageData - ; arg - ; Returns:. getLoggableParameters; protected ParameterList getLoggableParameters(ImageData<T> imageData); Get a copy of the current parameter list (with empty parameters removed) suitable for logging.; Subclasses might choose to append extra parameters here, which aren't part of the main list; (e.g. because they shouldn't be included in any automatically created dialog box). Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html
Security,hash,hashCode," already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html
Testability,log,logging,"luginIJ. public abstract class AbstractInteractivePlugin<T>; extends AbstractPlugin<T>; implements PathInteractivePlugin<T>; Abstract class to help with implementing an interactive plugin. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected ParameterList; params;  . Constructor Summary; Constructors. Constructor; Description; AbstractInteractivePlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected trans",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html
Availability,avail,available,"ner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Parameters:; imageData - ; arg - . rearrangeByStride; protected static <T> boolean rearrangeByStride(Collection<T> input,; T[] output,; int stride); Test method for rearranging a collection so that entries are interleaved with a regularity given by stride.; ; It can be used to rearrange tasks to try to make better use of cached image regions, by helping to ensure that; all available processors are operating on distinct parts of the image - rather than all in the same region,; where image tile requests could become a bottleneck.; ; Intended use would be something like the following:; ; int n = tasks.size();; Runnable[] tasks2 = new Runnable[n];; if (rearrangeByStride(tasks, tasks2, Runtime.getRuntime().availableProcessors())); tasks = Arrays.asList(tasks2);; . Parameters:; input - ; output - ; stride - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html
Deployability,update,update,"entObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy updat",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html
Integrability,interface,interface,"; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is cal",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html
Modifiability,plugin,plugins,". AbstractPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathPlugin<T>. Direct Known Subclasses:; AbstractInteractivePlugin, ImageJMacroRunner. public abstract class AbstractPlugin<T>; extends Object; implements PathPlugin<T>; General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; AbstractPlugin();  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected abstract void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<T> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. protected abstract Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskR",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html
Performance,perform,perform,"ends Object; implements PathPlugin<T>; General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; AbstractPlugin();  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected abstract void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<T> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. protected abstract Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, g",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html
Safety,abort,abort,"sks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(Im",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html
Security,hash,hashCode,"orm. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html
Testability,log,logged,"ner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Parameters:; imageData - ; arg - . rearrangeByStride; protected static <T> boolean rearrangeByStride(Collection<T> input,; T[] output,; int stride); Test method for rearranging a collection so that entries are interleaved with a regularity given by stride.; ; It can be used to rearrange tasks to try to make better use of cached image regions, by helping to ensure that; all available processors are operating on distinct parts of the image - rather than all in the same region,; where image tile requests could become a bottleneck.; ; Intended use would be something like the following:; ; int n = tasks.size();; Runnable[] tasks2 = new Runnable[n];; if (rearrangeByStride(tasks, tasks2, Runtime.getRuntime().availableProcessors())); tasks = Arrays.asList(tasks2);; . Parameters:; input - ; output - ; stride - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html
Usability,simpl,simply,"on<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) t",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html
Deployability,update,update,"kRunnerFX. public abstract class AbstractTaskRunner; extends Object; implements TaskRunner; Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. running through a GUI, or from a command line only. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTaskRunner(). Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). protected ; AbstractTaskRunner(int numThreads). Constructor for a PluginRunner that optionally uses a fixed number of threads. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; awaitCompletion(). Await the completion of currently-running tasks, notifying any listener if necessary. boolean; isCancelled(). Query if the plugin can be cancelled while running. protected abstract SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to upd",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html
Energy Efficiency,monitor,monitor,"kRunnerFX. public abstract class AbstractTaskRunner; extends Object; implements TaskRunner; Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. running through a GUI, or from a command line only. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTaskRunner(). Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). protected ; AbstractTaskRunner(int numThreads). Constructor for a PluginRunner that optionally uses a fixed number of threads. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; awaitCompletion(). Await the completion of currently-running tasks, notifying any listener if necessary. boolean; isCancelled(). Query if the plugin can be cancelled while running. protected abstract SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to upd",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html
Integrability,interface,interface,"ter a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. awaitCompletion; protected void awaitCompletion(); Await the completion of currently-running tasks, notifying any listener if necessary. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Parameters:; tasks - . isCancelled; public boolean isCancelled(); Description copied from interface: TaskRunner; Query if the plugin can be can",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html
Modifiability,plugin,plugins,". AbstractTaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner. All Implemented Interfaces:; TaskRunner. Direct Known Subclasses:; CommandLineTaskRunner, TaskRunnerFX. public abstract class AbstractTaskRunner; extends Object; implements TaskRunner; Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. running through a GUI, or from a command line only. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTaskRunner(). Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). protected ; AbstractTaskRunner(int numThreads). Constructor for a PluginRunner that optionally uses a fixed number of threads. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; awaitCompletion(). Await the completion of currently-running tasks, notifying any listener if necessary. boolean; isCancelled(). Query if the plugin can be cancelled while running. protected abstract SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunne",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html
Security,hash,hashCode,"(). Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). protected ; AbstractTaskRunner(int numThreads). Constructor for a PluginRunner that optionally uses a fixed number of threads. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; awaitCompletion(). Await the completion of currently-running tasks, notifying any listener if necessary. boolean; isCancelled(). Query if the plugin can be cancelled while running. protected abstract SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html
Integrability,interface,interface,"bstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; ParameterList params); Get an appropriate overlap, in pixels, if analysis of ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html
Modifiability,plugin,plugins,". AbstractTileableDetectionPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractTileableDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; CellCountsCV, DoGSuperpixelsPlugin, SLICSuperpixelsPlugin, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public abstract class AbstractTileableDetectionPlugin<T>; extends AbstractDetectionPlugin<T>; Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps.; ; Particularly useful for tasks such as cell detection. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractTileableDetectionPlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList.",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html
Safety,detect,detection," AbstractTileableDetectionPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractTileableDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; CellCountsCV, DoGSuperpixelsPlugin, SLICSuperpixelsPlugin, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public abstract class AbstractTileableDetectionPlugin<T>; extends AbstractDetectionPlugin<T>; Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps.; ; Particularly useful for tasks such as cell detection. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractTileableDetectionPlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html
Security,hash,hashCode,"compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; Paramet",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html
Deployability,update,updateProgress,"CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion re",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html
Energy Efficiency,monitor,monitor,"sted; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html
Integrability,message,message,"lass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html
Modifiability,plugin,plugins,". CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and b",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html
Security,hash,hashCode,"TaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, an",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html
Testability,log,log,". CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and b",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html
Deployability,update,update,".Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when running tasks. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html
Energy Efficiency,monitor,monitor,".Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when running tasks. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html
Modifiability,plugin,plugins,". CommandLineTaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor f",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html
Security,hash,hashCode,".Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when running tasks. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html
Testability,log,logs,". CommandLineTaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor f",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html
Usability,simpl,simply,". CommandLineTaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor f",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html
Modifiability,plugin,plugins,". DetectionPluginTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class DetectionPluginTools. java.lang.Object; qupath.lib.plugins.DetectionPluginTools. public class DetectionPluginTools; extends Object; Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy.; ; Internally, a PathTask is used with the important resolution/event-firing occurring within the; taskComplete method. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DetectionPluginTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Runnable; createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject). Create a task that applies an object detector to a parent object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DetectionPluginTools; public DetectionPluginTools(). Method Details. createRunnableTask; public static <T> Runnable createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject); Create a task that applies an object detector to a parent object.; ; Detected objects will be added as children of the parent. If the parent has a ROI, this may define the detection ROI. Type Parameters:; T - ; Parameters:; task - ; params - ; imageData - ; parentObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html
Safety,detect,detection,". DetectionPluginTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class DetectionPluginTools. java.lang.Object; qupath.lib.plugins.DetectionPluginTools. public class DetectionPluginTools; extends Object; Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy.; ; Internally, a PathTask is used with the important resolution/event-firing occurring within the; taskComplete method. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DetectionPluginTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Runnable; createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject). Create a task that applies an object detector to a parent object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DetectionPluginTools; public DetectionPluginTools(). Method Details. createRunnableTask; public static <T> Runnable createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject); Create a task that applies an object detector to a parent object.; ; Detected objects will be added as children of the parent. If the parent has a ROI, this may define the detection ROI. Type Parameters:; T - ; Parameters:; task - ; params - ; imageData - ; parentObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html
Security,hash,hashCode,". DetectionPluginTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class DetectionPluginTools. java.lang.Object; qupath.lib.plugins.DetectionPluginTools. public class DetectionPluginTools; extends Object; Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy.; ; Internally, a PathTask is used with the important resolution/event-firing occurring within the; taskComplete method. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DetectionPluginTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Runnable; createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject). Create a task that applies an object detector to a parent object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DetectionPluginTools; public DetectionPluginTools(). Method Details. createRunnableTask; public static <T> Runnable createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject); Create a task that applies an object detector to a parent object.; ; Detected objects will be added as children of the parent. If the parent has a ROI, this may define the detection ROI. Type Parameters:; T - ; Parameters:; task - ; params - ; imageData - ; parentObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html
Integrability,interface,interface,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html
Modifiability,plugin,plugins,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html
Performance,perform,perform,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html
Safety,detect,detection,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html
Testability,log,logged,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html
Energy Efficiency,monitor,monitoring,". qupath.lib.plugins (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html
Integrability,interface,interfaces,". qupath.lib.plugins (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.plugins (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html
Performance,perform,perform," inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html
Safety,detect,detected," Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html
Testability,log,logging,". qupath.lib.plugins (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html
Usability,simpl,simply," dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-proces",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.plugins Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.plugins. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner. qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor (implements qupath.lib.plugins.SimpleProgressMonitor); qupath.lib.plugins.DetectionPluginTools; qupath.lib.objects.PathObject (implements java.io.Externalizable). qupath.lib.objects.PathROIObject. qupath.lib.objects.PathDetectionObject. qupath.lib.objects.PathTileObject. qupath.lib.plugins.ParallelTileObject (implements qupath.lib.objects.TemporaryObject). qupath.lib.plugins.TaskRunnerUtils. Interface Hierarchy. qupath.lib.plugins.ObjectDetector<T>; qupath.lib.plugins.PathPlugin<T>. qupath.lib.plugins.PathInteractivePlugin<T>. java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.plugins.TaskRunner. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.plugins.ParallelTileObject.Status. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-tree.html
Deployability,update,updateStatus,"overlaps; after detection is complete (here, based on keeping the object with the larger area). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ParallelTileObject.Status. Current processing status for the tile. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ParallelTileObject.Status; getStatus(). Get the current status (pending, processing or done). boolean; isComplete(). Returns true if setComplete() has been called. boolean; isProcessing(). Returns true if setIsProcessing(true) has recently been called. void; resolveOverlaps(). Request that the tile object attempts to resolve overlaps with its neighboring tiles. void; setComplete(boolean wasCancelled). Notify the tile that its processing is done. boolean; suggestNeighbor(ParallelTileObject pto). Register a neighboring tile, if it intersects with the bounds of this one. void; updateStatus(ParallelTileObject.Status status). Notify the object if it is currently being processed. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, remove",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html
Modifiability,plugin,plugins,". ParallelTileObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class ParallelTileObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathTileObject; qupath.lib.plugins.ParallelTileObject. All Implemented Interfaces:; Externalizable, Serializable, TemporaryObject. public class ParallelTileObject; extends PathTileObject; implements TemporaryObject; A temporary object, used during parallel processing to represent a tile currently being used for object; detection.; ; ParallelTileObjects maintain knowledge of adjacent tiles, and are thereby able to resolve overlaps; after detection is complete (here, based on keeping the object with the larger area). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ParallelTileObject.Status. Current processing status for the tile. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ParallelTileObject.Status; getStatus(). Get the current status (pending, processing or done). boolean; isComplete(). Returns true if setComplete() has been called. boolean; isProcessing(). Returns true if setIsProcessing(true) has recently been called. void; resolveOverlaps(). Request that the tile object attempts to resolve overlaps with its neighboring tiles. void; setComplete(boolean wasCancelled). Notify the tile that its processing is done. boolean; suggestNeighbor(ParallelTileObject pto). Register a neighboring tile, if it intersects with the bounds of this one. void; updateStatus(ParallelTileObject.Status status). Notify the ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html
Safety,detect,detection,". ParallelTileObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class ParallelTileObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathTileObject; qupath.lib.plugins.ParallelTileObject. All Implemented Interfaces:; Externalizable, Serializable, TemporaryObject. public class ParallelTileObject; extends PathTileObject; implements TemporaryObject; A temporary object, used during parallel processing to represent a tile currently being used for object; detection.; ; ParallelTileObjects maintain knowledge of adjacent tiles, and are thereby able to resolve overlaps; after detection is complete (here, based on keeping the object with the larger area). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ParallelTileObject.Status. Current processing status for the tile. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ParallelTileObject.Status; getStatus(). Get the current status (pending, processing or done). boolean; isComplete(). Returns true if setComplete() has been called. boolean; isProcessing(). Returns true if setIsProcessing(true) has recently been called. void; resolveOverlaps(). Request that the tile object attempts to resolve overlaps with its neighboring tiles. void; setComplete(boolean wasCancelled). Notify the tile that its processing is done. boolean; suggestNeighbor(ParallelTileObject pto). Register a neighboring tile, if it intersects with the bounds of this one. void; updateStatus(ParallelTileObject.Status status). Notify the ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html
Security,hash,hashCode,"readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. suggestNeighbor; public boolean suggestNeighbor(ParallelTileObject pto); Register a neighboring tile, if it intersects with the bounds of this one. Parameters:; pto - ; Returns:. updateStatus; public void updateStatus(ParallelTileObject.Status status); Notify the object if it is currently being processed.; ; This is used to update how it is displayed (here implemented using a classification). Parameters:; status - . getStatus; public ParallelTileObject.Status getStatus(); Get the current status (pending, processing or done). Returns:. isProcessing; public boolean isProcessing(); Returns true if setIsProcessing(true) has recently been called. Returns:. isComplete; public boolean isComplete(); Returns true if setComplete() has been called. Returns:. setComplete; public void setComplete(boolean wasCancelled); Notify the tile that its processing is done.; ; This both changes its display color, and triggers a check to see if overl",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html
Usability,clear,clearChildObjects,"essing is done. boolean; suggestNeighbor(ParallelTileObject pto). Register a neighboring tile, if it intersects with the bounds of this one. void; updateStatus(ParallelTileObject.Status status). Notify the object if it is currently being processed. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. suggestNeighbor; public boolean suggestNeighbor(ParallelTileObject pto); Register a neighboring tile, if it intersects with the bounds of this one. Parameters:; pto - ; Returns:. updateStatus; public void updateStatus(ParallelTileObject.Status status); Notify the object if it is currently being processed.; ; This is used to update how it is displayed (here implemented using a classification). Parameters:; status - . getStatus; public ParallelTileO",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html
Integrability,interface,interfaces,". ParallelTileObject.Status (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.plugins; Enum Class ParallelTileObject.Status. java.lang.Object; java.lang.Enum<ParallelTileObject.Status>; qupath.lib.plugins.ParallelTileObject.Status. All Implemented Interfaces:; Serializable, Comparable<ParallelTileObject.Status>, Constable. Enclosing class:; ParallelTileObject. public static enum ParallelTileObject.Status; extends Enum<ParallelTileObject.Status>; Current processing status for the tile. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DONE. Tile processing complete. PENDING. Tile waiting to be processed. PROCESSING. Tile currently being processed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ParallelTileObject.Status; valueOf(String name). Returns the enum constant of this class with the specified name. static ParallelTileObject.Status[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PENDING; public static final ParallelTileObject.Status PENDING; Tile waiting to be processed. PROCESSING; public static final ParallelTileObject.Status PROCESSING; Tile currently being processed. DONE; public static final ParallelTileObject.Status DONE; Ti",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html
Modifiability,plugin,plugins,". ParallelTileObject.Status (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.plugins; Enum Class ParallelTileObject.Status. java.lang.Object; java.lang.Enum<ParallelTileObject.Status>; qupath.lib.plugins.ParallelTileObject.Status. All Implemented Interfaces:; Serializable, Comparable<ParallelTileObject.Status>, Constable. Enclosing class:; ParallelTileObject. public static enum ParallelTileObject.Status; extends Enum<ParallelTileObject.Status>; Current processing status for the tile. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DONE. Tile processing complete. PENDING. Tile waiting to be processed. PROCESSING. Tile currently being processed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ParallelTileObject.Status; valueOf(String name). Returns the enum constant of this class with the specified name. static ParallelTileObject.Status[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PENDING; public static final ParallelTileObject.Status PENDING; Tile waiting to be processed. PROCESSING; public static final ParallelTileObject.Status PROCESSING; Tile currently being processed. DONE; public static final ParallelTileObject.Status DONE; Ti",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html
Security,hash,hashCode,"rfaces:; Serializable, Comparable<ParallelTileObject.Status>, Constable. Enclosing class:; ParallelTileObject. public static enum ParallelTileObject.Status; extends Enum<ParallelTileObject.Status>; Current processing status for the tile. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DONE. Tile processing complete. PENDING. Tile waiting to be processed. PROCESSING. Tile currently being processed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ParallelTileObject.Status; valueOf(String name). Returns the enum constant of this class with the specified name. static ParallelTileObject.Status[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PENDING; public static final ParallelTileObject.Status PENDING; Tile waiting to be processed. PROCESSING; public static final ParallelTileObject.Status PROCESSING; Tile currently being processed. DONE; public static final ParallelTileObject.Status DONE; Tile processing complete. Method Details. values; public static ParallelTileObject.Status[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ParallelTileObject.Status valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html
Integrability,interface,interface," ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathInteractivePlugin<T>. Type Parameters:; T - . All Superinterfaces:; PathPlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathInteractivePlugin<T>; extends PathPlugin<T>; Interface to define a PathPlugin that requires a list of (user-adjustable) parameters.; ; By using this interface, QuPath is able to show a standardized dialog box within which ; the parameters are set. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Method Details. getDefaultParameterList; ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html
Modifiability,plugin,plugins,". PathInteractivePlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathInteractivePlugin<T>. Type Parameters:; T - . All Superinterfaces:; PathPlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathInteractivePlugin<T>; extends PathPlugin<T>; Interface to define a PathPlugin that requires a list of (user-adjustable) parameters.; ; By using this interface, QuPath is able to show a standardized dialog box within which ; the parameters are set. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects t",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html
Deployability,update,update,"Plugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, ImageJMacroRunner, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; String getDescription(); Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; boolean run",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/PathPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html
Integrability,interface,interface,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathPlugin<T>. Type Parameters:; T - . All Known Subinterfaces:; PathInteractivePlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractPlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, ImageJMacroRunner, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get th",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/PathPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html
Modifiability,plugin,plugins,". PathPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathPlugin<T>. Type Parameters:; T - . All Known Subinterfaces:; PathInteractivePlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractPlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, ImageJMacroRunner, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescript",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/PathPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html
Safety,detect,detected,", WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; String getDescription(); Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Parameters:; taskRunner - ; arg - ; Returns:. getLastResultsDescription; String getLastResultsDescription(); (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/PathPlugin.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html
Energy Efficiency,monitor,monitor,". PathTask (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathTask. All Superinterfaces:; Runnable. public interface PathTask; extends Runnable; Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. the EDT, or JavaFX Platform equivalent). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLastResultsDescription(). Get a description of the results from running this task, which may be used e.g. default void; taskComplete(boolean wasCancelled). Perform optional post-processing after a task has completed. Methods inherited from interface java.lang.Runnable; run. Method Details. taskComplete; default void taskComplete(boolean wasCancelled); Perform optional post-processing after a task has completed.; ; When processing a collection of tasks with a TaskRunner, this method; should be called on the same thread. The choice of thread depends on the runner, but ; may be the Event Dispatch Thread when using Swing or Application thread for JavaFX. Parameters:; wasCancelled - . getLastResultsDescription; default String getLastResultsDescription(); Get a description of the results from running this task, which may be used e.g. in a progress monitor or output to the command line.; Default implementation returns null. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/PathTask.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathTask.html
Integrability,interface,interface,". PathTask (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathTask. All Superinterfaces:; Runnable. public interface PathTask; extends Runnable; Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. the EDT, or JavaFX Platform equivalent). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLastResultsDescription(). Get a description of the results from running this task, which may be used e.g. default void; taskComplete(boolean wasCancelled). Perform optional post-processing after a task has completed. Methods inherited from interface java.lang.Runnable; run. Method Details. taskComplete; default void taskComplete(boolean wasCancelled); Perform optional post-processing after a task has completed.; ; When processing a collection of tasks with a TaskRunner, this method; should be called on the same thread. The choice of thread depends on the runner, but ; may be the Event Dispatch Thread when using Swing or Application thread for JavaFX. Parameters:; wasCancelled - . getLastResultsDescription; default String getLastResultsDescription(); Get a description of the results from running this task, which may be used e.g. in a progress monitor or output to the command line.; Default implementation returns null. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/PathTask.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathTask.html
Modifiability,plugin,plugins,". PathTask (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathTask. All Superinterfaces:; Runnable. public interface PathTask; extends Runnable; Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. the EDT, or JavaFX Platform equivalent). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLastResultsDescription(). Get a description of the results from running this task, which may be used e.g. default void; taskComplete(boolean wasCancelled). Perform optional post-processing after a task has completed. Methods inherited from interface java.lang.Runnable; run. Method Details. taskComplete; default void taskComplete(boolean wasCancelled); Perform optional post-processing after a task has completed.; ; When processing a collection of tasks with a TaskRunner, this method; should be called on the same thread. The choice of thread depends on the runner, but ; may be the Event Dispatch Thread when using Swing or Application thread for JavaFX. Parameters:; wasCancelled - . getLastResultsDescription; default String getLastResultsDescription(); Get a description of the results from running this task, which may be used e.g. in a progress monitor or output to the command line.; Default implementation returns null. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/PathTask.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathTask.html
Deployability,update,updateProgress,"e process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the curr",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html
Energy Efficiency,monitor,monitoring,". SimpleProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html
Integrability,interface,interface,". SimpleProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html
Modifiability,plugin,plugins,". SimpleProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html
Testability,log,logging,". SimpleProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html
Usability,feedback,feedback,". SimpleProgressMonitor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html
Integrability,interface,interface,". TaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface TaskRunner. All Known Implementing Classes:; AbstractTaskRunner, CommandLineTaskRunner, TaskRunnerFX. public interface TaskRunner; A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; isCancelled(). Query if the plugin can be cancelled while running. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Method Details. isCancelled; boolean isCancelled(); Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Returns:. runTasks; void runTasks(Collection<? extends Runnable> tasks); Pass a collection of parallelizable tasks to run. Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/TaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunner.html
Modifiability,plugin,plugins,". TaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface TaskRunner. All Known Implementing Classes:; AbstractTaskRunner, CommandLineTaskRunner, TaskRunnerFX. public interface TaskRunner; A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; isCancelled(). Query if the plugin can be cancelled while running. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Method Details. isCancelled; boolean isCancelled(); Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Returns:. runTasks; void runTasks(Collection<? extends Runnable> tasks); Pass a collection of parallelizable tasks to run. Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/TaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunner.html
Usability,feedback,feedback,". TaskRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface TaskRunner. All Known Implementing Classes:; AbstractTaskRunner, CommandLineTaskRunner, TaskRunnerFX. public interface TaskRunner; A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; isCancelled(). Query if the plugin can be cancelled while running. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Method Details. isCancelled; boolean isCancelled(); Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Returns:. runTasks; void runTasks(Collection<? extends Runnable> tasks); Pass a collection of parallelizable tasks to run. Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. ",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/TaskRunner.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunner.html
Modifiability,plugin,plugins,". TaskRunnerUtils (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class TaskRunnerUtils. java.lang.Object; qupath.lib.plugins.TaskRunnerUtils. public class TaskRunnerUtils; extends Object; A utility class to help with the creation of TaskRunner instances.; ; An application can use setCreateFunction(IntFunction) and #setCreateHeadlessFunction(IntFunction)} to; control the creation of TaskRunner instances. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TaskRunner; createHeadlessTaskRunner(). Create a new headless TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). TaskRunner; createHeadlessTaskRunner(int nThreads). Create a new headless TaskRunner instance with the specified number of threads. TaskRunner; createTaskRunner(). Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). TaskRunner; createTaskRunner(int nThreads). Create a new TaskRunner instance with the specified number of threads. static IntFunction<TaskRunner>; getDefaultCreateFunction(). Get the default function used to create TaskRunner instances. static TaskRunnerUtils; getDefaultInstance(). Get the default instance. static TaskRunnerUtils; newInstance(). Create a new instance. TaskRunnerUtils; setCreateFunction(IntFunction<TaskRunner> function). Set the function used to generate new headless TaskRunner instances. TaskRunnerUtils; setCreateHeadlessFunction(IntFunction<TaskRunner> function). Set the function used to generate new TaskRunner instances. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notif",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html
Security,hash,hashCode,"nner; createHeadlessTaskRunner(int nThreads). Create a new headless TaskRunner instance with the specified number of threads. TaskRunner; createTaskRunner(). Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). TaskRunner; createTaskRunner(int nThreads). Create a new TaskRunner instance with the specified number of threads. static IntFunction<TaskRunner>; getDefaultCreateFunction(). Get the default function used to create TaskRunner instances. static TaskRunnerUtils; getDefaultInstance(). Get the default instance. static TaskRunnerUtils; newInstance(). Create a new instance. TaskRunnerUtils; setCreateFunction(IntFunction<TaskRunner> function). Set the function used to generate new headless TaskRunner instances. TaskRunnerUtils; setCreateHeadlessFunction(IntFunction<TaskRunner> function). Set the function used to generate new TaskRunner instances. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getDefaultInstance; public static TaskRunnerUtils getDefaultInstance(); Get the default instance. This is a singleton, shared across an application. Returns:. newInstance; public static TaskRunnerUtils newInstance(); Create a new instance. This may be used if part of an application requires its TaskRunner instances; to differ from those used elsewhere. Returns:. getDefaultCreateFunction; public static IntFunction<TaskRunner> getDefaultCreateFunction(); Get the default function used to create TaskRunner instances.; This is suitable for use in a headless environment. Returns:. setCreateHeadlessFunction; public TaskRunnerUtils setCreateHeadlessFunction(IntFunction<TaskRunner> function); Set the function used to generate new TaskRunner instances. Parameters:; function - a creator function that takes a requested number of threads as input; Returns:; this instance. setCreateFunction; public TaskRunnerUtils setCreateFunction(In",MatchSource.WIKI,javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html
Integrability,interface,interfaces,". qupath.lib.projects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.projects. package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. All Classes and InterfacesInterfacesClasses. Class; Description; Project<T>. Data structure to manage images and associated data in QuPath. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. ResourceManager. Manage the storage and retrieval of resources with a ResourceManager. ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/package-summary.html
Availability,mask,masked," . public interface Project<T>; Data structure to manage images and associated data in QuPath. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ProjectImageEntry<T>; addDuplicate(ProjectImageEntry<T> entry,; boolean copyData). Add an image by duplicating an existing entry. ProjectImageEntry<T>; addImage(ImageServerBuilder.ServerBuilder<T> server). Add an image for a particular ImageServer. Project<T>; createSubProject(String name,; Collection<ProjectImageEntry<T>> entries). Create a sub-project that provides a view on the specified entries. long; getCreationTimestamp(). Request a timestamp from when the project was created. ProjectImageEntry<T>; getEntry(ImageData<T> imageData). Request a ProjectImageEntry associated with an ImageData. List<ProjectImageEntry<T>>; getImageList(). Get a list of image entries for the project. boolean; getMaskImageNames(). Query whether 'true' or masked image names are being returned. long; getModificationTimestamp(). Request a timestamp from when the project was last synchronized. String; getName(). Get the name of the project. static String; getNameFromURI(URI uri). Extract a usable project name from a URI. default ResourceManager.Manager<ObjectClassifier<T>>; getObjectClassifiers(). Get a manager for object classifiers saved within this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated with this project. default ResourceManager.Manager<PixelClassifier>; getPixelClassifiers(). Get a manager for pixel classifiers saved within this project. URI; getPreviousURI(). Sometimes projects move (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/Project.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html
Integrability,interface,interface,". Project (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface Project<T>. Type Parameters:; T - . public interface Project<T>; Data structure to manage images and associated data in QuPath. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ProjectImageEntry<T>; addDuplicate(ProjectImageEntry<T> entry,; boolean copyData). Add an image by duplicating an existing entry. ProjectImageEntry<T>; addImage(ImageServerBuilder.ServerBuilder<T> server). Add an image for a particular ImageServer. Project<T>; createSubProject(String name,; Collection<ProjectImageEntry<T>> entries). Create a sub-project that provides a view on the specified entries. long; getCreationTimestamp(). Request a timestamp from when the project was created. ProjectImageEntry<T>; getEntry(ImageData<T> imageData). Request a ProjectImageEntry associated with an ImageData. List<ProjectImageEntry<T>>; getImageList(). Get a list of image entries for the project. boolean; getMaskImageNames(). Query whether 'true' or masked image names are being returned. long; getModificationTimestamp(). Request a timestamp from when the project was last synchronized. String; getName(). Get the name of the project. static String; getNameFromURI(URI uri). Extract a usable project name from a URI. default ResourceManager.Manager<ObjectClassifier<T>>; getObjectClassifiers(). Get a manager for object classifiers saved within this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated wit",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/Project.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html
Modifiability,extend,extends,"geData. List<ProjectImageEntry<T>>; getImageList(). Get a list of image entries for the project. boolean; getMaskImageNames(). Query whether 'true' or masked image names are being returned. long; getModificationTimestamp(). Request a timestamp from when the project was last synchronized. String; getName(). Get the name of the project. static String; getNameFromURI(URI uri). Extract a usable project name from a URI. default ResourceManager.Manager<ObjectClassifier<T>>; getObjectClassifiers(). Get a manager for object classifiers saved within this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated with this project. default ResourceManager.Manager<PixelClassifier>; getPixelClassifiers(). Get a manager for pixel classifiers saved within this project. URI; getPreviousURI(). Sometimes projects move (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within this project. URI; getURI(). Get a URI that can be used when saving/reloading this project. String; getVersion(). The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). boolean; isEmpty(). Test if the project contains any images. void; removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData). Remove multiple images from the project, optionally including associated data. void; removeImage(ProjectImageEntry<?> entry,; boolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image na",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/Project.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html
Security,access,access,"ving relative paths to images in the event that ; both project and images have moved together. Returns:. getNameFromURI; static String getNameFromURI(URI uri); Extract a usable project name from a URI. Parameters:; uri - ; Returns:. getVersion; String getVersion(); The version string for this project, which can be used to distinguish new and older project ; (which may contain different information).; ; This may be null if the version information is not stored. Returns:. getPath; Path getPath(); Get a path to this project, or null if this project is not on a local file system.; ; If not null, the path may be a file or a directory. Returns:; See Also:. ProjectImageEntry.getEntryPath(). createSubProject; Project<T> createSubProject(String name,; Collection<ProjectImageEntry<T>> entries); Create a sub-project that provides a view on the specified entries.; ; The retains exactly the same references and data, i.e. it does not duplicate entries or data files - ; rather it is used to generate projects that provide access to a subset of the entries in the original project. Parameters:; name - the name of the sub-project; entries - the entries to retain within the sub-project; Returns:. isEmpty; boolean isEmpty(); Test if the project contains any images. Returns:. addImage; ProjectImageEntry<T> addImage(ImageServerBuilder.ServerBuilder<T> server); throws IOException; Add an image for a particular ImageServer. Parameters:; server - ; Returns:; Throws:; IOException. addDuplicate; ProjectImageEntry<T> addDuplicate(ProjectImageEntry<T> entry,; boolean copyData); throws IOException; Add an image by duplicating an existing entry.; This retains the same ImageServerBuilder.ServerBuilder, name, description and metadata, but assigns ; a new unique ID. Parameters:; entry - the entry that should be copied; copyData - if true, copy existing image data in addition to other properties; Returns:; the new entry that has been added to the project; Throws:; IOException. getEntry; ProjectImageEnt",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/Project.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html
Usability,usab,usable,"ription; ProjectImageEntry<T>; addDuplicate(ProjectImageEntry<T> entry,; boolean copyData). Add an image by duplicating an existing entry. ProjectImageEntry<T>; addImage(ImageServerBuilder.ServerBuilder<T> server). Add an image for a particular ImageServer. Project<T>; createSubProject(String name,; Collection<ProjectImageEntry<T>> entries). Create a sub-project that provides a view on the specified entries. long; getCreationTimestamp(). Request a timestamp from when the project was created. ProjectImageEntry<T>; getEntry(ImageData<T> imageData). Request a ProjectImageEntry associated with an ImageData. List<ProjectImageEntry<T>>; getImageList(). Get a list of image entries for the project. boolean; getMaskImageNames(). Query whether 'true' or masked image names are being returned. long; getModificationTimestamp(). Request a timestamp from when the project was last synchronized. String; getName(). Get the name of the project. static String; getNameFromURI(URI uri). Extract a usable project name from a URI. default ResourceManager.Manager<ObjectClassifier<T>>; getObjectClassifiers(). Get a manager for object classifiers saved within this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated with this project. default ResourceManager.Manager<PixelClassifier>; getPixelClassifiers(). Get a manager for pixel classifiers saved within this project. URI; getPreviousURI(). Sometimes projects move (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within this project. URI; getURI(). Get a URI that can be used when saving/reloading this project. String; getVersion(). The version string for this p",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/Project.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html
Availability,avail,available,"d for this entry. ResourceManager.Manager<ImageServer<T>>; getImages(). Access additional images associated with the project entry, e.g. Collection<String>; getMetadataKeys(). Get an unmodifiable collection of the metadata map's keys. Map<String,String>; getMetadataMap(). Get an unmodifiable view of the underlying metadata map. default String; getMetadataSummaryString(). Get a formatted string representation of the metadata map's contents. String; getMetadataValue(String key). Request a metadata value. String; getOriginalImageName(). Get the original image name, without any randomization. ImageServerBuilder.ServerBuilder<T>; getServerBuilder(). Get a ImageServerBuilder.ServerBuilder that can be used to open this image. default Collection<URI>; getServerURIs(). Deprecated.; use instead UriResource.getURIs(). String; getSummary(). Get a summary string representing this image entry. T; getThumbnail(). Request a thumbnail for the image. boolean; hasImageData(). Check if this entry has saved ImageData already available. String; putMetadataValue(String key,; String value). Store a metadata value. PathObjectHierarchy; readHierarchy(). Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. ImageData<T>; readImageData(). Read the ImageData associated with this entry, or create a new ImageData if none is currently present. String; removeMetadataValue(String key). Remove a metadata value. void; saveImageData(ImageData<T> imageData). Save the ImageData for this entry using the default storage location for the project. void; setDescription(String description). Set the description. void; setImageName(String name). Set the image name for this project entry. void; setThumbnail(T img). Set a thumbnail for the image. default boolean; updateServerURIs(Map<URI,URI> replacements). Deprecated.; use instead UriResource.updateURIs(Map). Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Detail",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html
Deployability,update,updateServerURIs,"esource.getURIs(). String; getSummary(). Get a summary string representing this image entry. T; getThumbnail(). Request a thumbnail for the image. boolean; hasImageData(). Check if this entry has saved ImageData already available. String; putMetadataValue(String key,; String value). Store a metadata value. PathObjectHierarchy; readHierarchy(). Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. ImageData<T>; readImageData(). Read the ImageData associated with this entry, or create a new ImageData if none is currently present. String; removeMetadataValue(String key). Remove a metadata value. void; saveImageData(ImageData<T> imageData). Save the ImageData for this entry using the default storage location for the project. void; setDescription(String description). Set the description. void; setImageName(String name). Set the image name for this project entry. void; setThumbnail(T img). Set a thumbnail for the image. default boolean; updateServerURIs(Map<URI,URI> replacements). Deprecated.; use instead UriResource.updateURIs(Map). Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. getID; String getID(); Get a unique ID to represent this entry. Returns:. setImageName; void setImageName(String name); Set the image name for this project entry. Parameters:; name - . getImageName; String getImageName(); Get a name that may be used for this entry.; ; This may be derived automatically from the server path, or set explicitly to be something else. ; It may also be randomized to support blinded analysis. Returns:; See Also:. getOriginalImageName(); Project.setMaskImageNames(boolean); Project.getMaskImageNames(). getOriginalImageName; String getOriginalImageName(); Get the original image name, without any randomization. Most UI elements should prefer getImageName() to ; ensure that the randomization does its job. Returns:. getEntryPath; Path getEntryPath(); Get a path to t",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html
Integrability,interface,interface,". ProjectImageEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface ProjectImageEntry<T>. Type Parameters:; T - Depends upon the project used; typically BufferedImage for QuPath. All Superinterfaces:; UriResource. public interface ProjectImageEntry<T>; extends UriResource; Class to represent an image entry within a project.; ; This stores the path to the image, and some optional metadata. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearMetadata(). Remove all metadata. boolean; containsMetadata(String key). Check if a metadata value is present for a specified key. String; getDescription(). Get a description; this is free text describing the image. Path; getEntryPath(). Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. String; getID(). Get a unique ID to represent this entry. String; getImageName(). Get a name that may be used for this entry. ResourceManager.Manager<ImageServer<T>>; getImages(). Access additional images associated with the project entry, e.g. Collection<String>; getMetadataKeys(). Get an unmodifiable collection of the metadata map's keys. Map<String,String>; getMetadataMap(). Get an unmodifiable view of the underlying metadata map. default String; getMetadataSummaryString(). Get a formatted string representation of the metadata map's contents. String; getMetadataValue(String key). Request a metadata value. String; getOriginalImageName(). Get the original image name, without any randomization. ImageServerBuilder.ServerBuilder<T>; getServerBuilder(). Get a ImageServerBuilder.Serve",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html
Modifiability,extend,extends,". ProjectImageEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface ProjectImageEntry<T>. Type Parameters:; T - Depends upon the project used; typically BufferedImage for QuPath. All Superinterfaces:; UriResource. public interface ProjectImageEntry<T>; extends UriResource; Class to represent an image entry within a project.; ; This stores the path to the image, and some optional metadata. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearMetadata(). Remove all metadata. boolean; containsMetadata(String key). Check if a metadata value is present for a specified key. String; getDescription(). Get a description; this is free text describing the image. Path; getEntryPath(). Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. String; getID(). Get a unique ID to represent this entry. String; getImageName(). Get a name that may be used for this entry. ResourceManager.Manager<ImageServer<T>>; getImages(). Access additional images associated with the project entry, e.g. Collection<String>; getMetadataKeys(). Get an unmodifiable collection of the metadata map's keys. Map<String,String>; getMetadataMap(). Get an unmodifiable view of the underlying metadata map. default String; getMetadataSummaryString(). Get a formatted string representation of the metadata map's contents. String; getMetadataValue(String key). Request a metadata value. String; getOriginalImageName(). Get the original image name, without any randomization. ImageServerBuilder.ServerBuilder<T>; getServerBuilder(). Get a ImageServerBuilder.Serve",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html
Usability,clear,clearMetadata,". ProjectImageEntry (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface ProjectImageEntry<T>. Type Parameters:; T - Depends upon the project used; typically BufferedImage for QuPath. All Superinterfaces:; UriResource. public interface ProjectImageEntry<T>; extends UriResource; Class to represent an image entry within a project.; ; This stores the path to the image, and some optional metadata. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearMetadata(). Remove all metadata. boolean; containsMetadata(String key). Check if a metadata value is present for a specified key. String; getDescription(). Get a description; this is free text describing the image. Path; getEntryPath(). Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. String; getID(). Get a unique ID to represent this entry. String; getImageName(). Get a name that may be used for this entry. ResourceManager.Manager<ImageServer<T>>; getImages(). Access additional images associated with the project entry, e.g. Collection<String>; getMetadataKeys(). Get an unmodifiable collection of the metadata map's keys. Map<String,String>; getMetadataMap(). Get an unmodifiable view of the underlying metadata map. default String; getMetadataSummaryString(). Get a formatted string representation of the metadata map's contents. String; getMetadataValue(String key). Request a metadata value. String; getOriginalImageName(). Get the original image name, without any randomization. ImageServerBuilder.ServerBuilder<T>; getServerBuilder(). Get a ImageServerBuilder.Serve",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html
Modifiability,extend,extends,". ProjectIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ProjectIO. java.lang.Object; qupath.lib.projects.ProjectIO. public class ProjectIO; extends Object; Read QuPath projects.; ; Projects should now be written with Project.syncChanges(). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_PROJECT_EXTENSION. Default file extension for a QuPath project. static final String; DEFAULT_PROJECT_NAME. Default file name for a QuPath project. Constructor Summary; Constructors. Constructor; Description; ProjectIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; getProjectExtension(). Get the default extension for a QuPath project file, without the 'dot'. static String; getProjectExtension(boolean includePeriod). Get the default extension for a QuPath project file. static <T> Project<T>; loadProject(File fileProject,; Class<T> cls). Load a project from a local file. static <T> Project<T>; loadProject(URI uri,; Class<T> cls). Read project from URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DEFAULT_PROJECT_NAME; public static final String DEFAULT_PROJECT_NAME; Default file name for a QuPath project. See Also:. Constant Field Values. DEFAULT_PROJECT_EXTENSION; public static final String DEFAULT_PROJECT_EXTENSION; Default file extension for a QuPath project. See Also:. Constant Field Values. Constructor Details. ProjectIO; public ProjectIO(). Method Details. loadProject; public static <T> Project<T> loadProject(URI uri,; Class<T> cls); throws",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ProjectIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html
Performance,load,loadProject," Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ProjectIO. java.lang.Object; qupath.lib.projects.ProjectIO. public class ProjectIO; extends Object; Read QuPath projects.; ; Projects should now be written with Project.syncChanges(). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_PROJECT_EXTENSION. Default file extension for a QuPath project. static final String; DEFAULT_PROJECT_NAME. Default file name for a QuPath project. Constructor Summary; Constructors. Constructor; Description; ProjectIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; getProjectExtension(). Get the default extension for a QuPath project file, without the 'dot'. static String; getProjectExtension(boolean includePeriod). Get the default extension for a QuPath project file. static <T> Project<T>; loadProject(File fileProject,; Class<T> cls). Load a project from a local file. static <T> Project<T>; loadProject(URI uri,; Class<T> cls). Read project from URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DEFAULT_PROJECT_NAME; public static final String DEFAULT_PROJECT_NAME; Default file name for a QuPath project. See Also:. Constant Field Values. DEFAULT_PROJECT_EXTENSION; public static final String DEFAULT_PROJECT_EXTENSION; Default file extension for a QuPath project. See Also:. Constant Field Values. Constructor Details. ProjectIO; public ProjectIO(). Method Details. loadProject; public static <T> Project<T> loadProject(URI uri,; Class<T> cls); throws IOException; Read project from URI. Currently, this assumes that the URI refers to a local file. Parameters:; uri - ; cls - ; Returns:; Throws:; IOException. loadProject; public static <T> Project<T> loadProject(File fileProject,; Clas",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ProjectIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html
Security,hash,hashCode,"ts.; ; Projects should now be written with Project.syncChanges(). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_PROJECT_EXTENSION. Default file extension for a QuPath project. static final String; DEFAULT_PROJECT_NAME. Default file name for a QuPath project. Constructor Summary; Constructors. Constructor; Description; ProjectIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; getProjectExtension(). Get the default extension for a QuPath project file, without the 'dot'. static String; getProjectExtension(boolean includePeriod). Get the default extension for a QuPath project file. static <T> Project<T>; loadProject(File fileProject,; Class<T> cls). Load a project from a local file. static <T> Project<T>; loadProject(URI uri,; Class<T> cls). Read project from URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DEFAULT_PROJECT_NAME; public static final String DEFAULT_PROJECT_NAME; Default file name for a QuPath project. See Also:. Constant Field Values. DEFAULT_PROJECT_EXTENSION; public static final String DEFAULT_PROJECT_EXTENSION; Default file extension for a QuPath project. See Also:. Constant Field Values. Constructor Details. ProjectIO; public ProjectIO(). Method Details. loadProject; public static <T> Project<T> loadProject(URI uri,; Class<T> cls); throws IOException; Read project from URI. Currently, this assumes that the URI refers to a local file. Parameters:; uri - ; cls - ; Returns:; Throws:; IOException. loadProject; public static <T> Project<T> loadProject(File fileProject,; Class<T> cls); throws IOException; Load a project from a local file. Parameters:; fileProject - ; cls - ; Returns:; Throws:; IOException. getProjectExtension; public static String getProjectExtension(boolean includePeriod); Get the default exten",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ProjectIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html
Modifiability,extend,extends,". Projects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class Projects. java.lang.Object; qupath.lib.projects.Projects. public class Projects; extends Object; Static methods to help when working with Projects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Projects();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Project<T>; createProject(File file,; Class<T> cls). Create a new project using the local file system. static File; getBaseDirectory(Project<?> project). Get the base directory of a project stored on the local file system. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Projects; public Projects(). Method Details. getBaseDirectory; public static File getBaseDirectory(Project<?> project); Get the base directory of a project stored on the local file system. Parameters:; project - ; Returns:; the base directory, or null if no directory could be found. createProject; public static <T> Project<T> createProject(File file,; Class<T> cls); Create a new project using the local file system. It is assumed that the directory of the project file ; can be managed by the project, and therefore it should not contain additional user files. Parameters:; file - either the project file, or a directory that should contain a project file with a default name; cls - generic type for the project (only BufferedImage currently supported); Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/Projects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Projects.html
Security,hash,hashCode,". Projects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class Projects. java.lang.Object; qupath.lib.projects.Projects. public class Projects; extends Object; Static methods to help when working with Projects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Projects();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Project<T>; createProject(File file,; Class<T> cls). Create a new project using the local file system. static File; getBaseDirectory(Project<?> project). Get the base directory of a project stored on the local file system. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Projects; public Projects(). Method Details. getBaseDirectory; public static File getBaseDirectory(Project<?> project); Get the base directory of a project stored on the local file system. Parameters:; project - ; Returns:; the base directory, or null if no directory could be found. createProject; public static <T> Project<T> createProject(File file,; Class<T> cls); Create a new project using the local file system. It is assumed that the directory of the project file ; can be managed by the project, and therefore it should not contain additional user files. Parameters:; file - either the project file, or a directory that should contain a project file with a default name; cls - generic type for the project (only BufferedImage currently supported); Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/Projects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Projects.html
Integrability,depend,depending,". ResourceManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ResourceManager. java.lang.Object; qupath.lib.projects.ResourceManager. public class ResourceManager; extends Object; Manage the storage and retrieval of resources with a ResourceManager.; Examples may include pixel classifiers or scripts.; By using this it is possible to avoid reliance on a filesystem, for example, ; opening the possibility to have resources stored elsewhere.; ; Note that names may be case-insensitive, depending upon the specific backing store.; This is the case for the default implementations using file storage. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. Constructor Summary; Constructors. Constructor; Description; ResourceManager();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ResourceManager; public ResourceManager(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ResourceManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html
Modifiability,extend,extends,". ResourceManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ResourceManager. java.lang.Object; qupath.lib.projects.ResourceManager. public class ResourceManager; extends Object; Manage the storage and retrieval of resources with a ResourceManager.; Examples may include pixel classifiers or scripts.; By using this it is possible to avoid reliance on a filesystem, for example, ; opening the possibility to have resources stored elsewhere.; ; Note that names may be case-insensitive, depending upon the specific backing store.; This is the case for the default implementations using file storage. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. Constructor Summary; Constructors. Constructor; Description; ResourceManager();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ResourceManager; public ResourceManager(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ResourceManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html
Safety,avoid,avoid,". ResourceManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ResourceManager. java.lang.Object; qupath.lib.projects.ResourceManager. public class ResourceManager; extends Object; Manage the storage and retrieval of resources with a ResourceManager.; Examples may include pixel classifiers or scripts.; By using this it is possible to avoid reliance on a filesystem, for example, ; opening the possibility to have resources stored elsewhere.; ; Note that names may be case-insensitive, depending upon the specific backing store.; This is the case for the default implementations using file storage. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. Constructor Summary; Constructors. Constructor; Description; ResourceManager();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ResourceManager; public ResourceManager(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ResourceManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html
Security,hash,hashCode,". ResourceManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ResourceManager. java.lang.Object; qupath.lib.projects.ResourceManager. public class ResourceManager; extends Object; Manage the storage and retrieval of resources with a ResourceManager.; Examples may include pixel classifiers or scripts.; By using this it is possible to avoid reliance on a filesystem, for example, ; opening the possibility to have resources stored elsewhere.; ; Note that names may be case-insensitive, depending upon the specific backing store.; This is the case for the default implementations using file storage. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. Constructor Summary; Constructors. Constructor; Description; ResourceManager();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ResourceManager; public ResourceManager(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ResourceManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html
Availability,avail,available,". Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface ResourceManager.Manager<T>. Type Parameters:; T - the generic type of the resource being managed. Enclosing class:; ResourceManager. public static interface ResourceManager.Manager<T>; Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory.; ; Examples of resources are scripts or classifiers. Several of these may be stored per project, ; and may be identified by name. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default boolean; contains(String name). Returns true if the manager knows a resource with the specified name exists. T; get(String name). Retrieve a resource by name. Collection<String>; getNames(). Get a list of the available resources. void; put(String name,; T resource). Save a resource within the project. boolean; remove(String name). Remove a resource within the project. Method Details. getNames; Collection<String> getNames(); throws IOException; Get a list of the available resources. Returns:; Throws:; IOException. get; T get(String name); throws IOException; Retrieve a resource by name. Parameters:; name - ; Returns:; Throws:; IOException. put; void put(String name,; T resource); throws IOException; Save a resource within the project. Parameters:; name - ; resource - ; Throws:; IOException. remove; boolean remove(String name); throws IOException; Remove a resource within the project. Parameters:; name - ; Returns:; true if a resource was successfully removed, false otherwise; Throws:; IOException. contains; default boolean contains(String name); throws IOException; Returns true if the manager knows a resource with the specified name exists. Parameters:; name - the name to check; Returns:; tru",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html
Integrability,interface,interface,". ResourceManager.Manager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface ResourceManager.Manager<T>. Type Parameters:; T - the generic type of the resource being managed. Enclosing class:; ResourceManager. public static interface ResourceManager.Manager<T>; Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory.; ; Examples of resources are scripts or classifiers. Several of these may be stored per project, ; and may be identified by name. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default boolean; contains(String name). Returns true if the manager knows a resource with the specified name exists. T; get(String name). Retrieve a resource by name. Collection<String>; getNames(). Get a list of the available resources. void; put(String name,; T resource). Save a resource within the project. boolean; remove(String name). Remove a resource within the project. Method Details. getNames; Collection<String> getNames(); throws IOException; Get a list of the available resources. Returns:; Throws:; IOException. get; T get(String name); throws IOException; Retrieve a resource by name. Parameters:; name - ; Returns:; Throws:; IOException. put; void put(String name,; T resource); throws IOException; Save a resource within the project. Parameters:; name - ; resource - ; Throws:; IOException. remove; boolean remove(String name); throws IOException; Remove a resource within the project. Parameters:; name - ; Returns:; true if a resource was successfully removed, false otherwise; Throws:; IOException. contains; default boole",MatchSource.WIKI,javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html
Availability,error,error-prone,". ImagePlane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class ImagePlane. java.lang.Object; qupath.lib.regions.ImagePlane. All Implemented Interfaces:; Comparable<ImagePlane>. public class ImagePlane; extends Object; implements Comparable<ImagePlane>; Helper class to store z-slice and time point indices, optionally along with a channel index as well.; ; These values are frequently required together, such as with ROIs and RegionRequests. ; It is more convenient (and less error-prone) to use a single ImagePlane instance rather than passing the indices as ; separate integers each time they are needed. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(ImagePlane o). Compare with another ImagePlane, in the order t, z, c. boolean; equals(Object obj);  ; int; getC(). Get the channel index. static ImagePlane; getDefaultPlane(). Returns an ImagePlane with channel -1, z of 0 and t of 0. static ImagePlane; getPlane(int z,; int t). Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. static ImagePlane; getPlane(ImageRegion region). Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. static ImagePlane; getPlane(ROI roi). Returns an ImagePlane with channel -1, and z and t set from an existing ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ()",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/ImagePlane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html
Integrability,interface,interface," ImageRegion. static ImagePlane; getPlane(ROI roi). Returns an ImagePlane with channel -1, and z and t set from an existing ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ(). Get the z-slice index. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getC; public int getC(); Get the channel index. This may be -1 to indicate no channel is specified. Returns:. getZ; public int getZ(); Get the z-slice index. Returns:. getT; public int getT(); Get the time point index. Returns:. compareTo; public int compareTo(ImagePlane o); Compare with another ImagePlane, in the order t, z, c. Specified by:; compareTo in interface Comparable<ImagePlane>. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getPlane; public static ImagePlane getPlane(int z,; int t); Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. set to -1). Parameters:; z - ; t - ; Returns:. getDefaultPlane; public static ImagePlane getDefaultPlane(); Returns an ImagePlane with channel -1, z of 0 and t of 0.; ; Use of this method is discouraged; it is appropriate only for 2D images. Returns:. getPlaneWithChannel; public static ImagePlane getPlaneWithChannel(ROI roi); Returns an ImagePlane with channel, z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ROI roi); Returns an ImagePlane with channel -1, and z and t set from an existing ROI. Parameters:; roi - ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/ImagePlane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html
Modifiability,extend,extends,". ImagePlane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class ImagePlane. java.lang.Object; qupath.lib.regions.ImagePlane. All Implemented Interfaces:; Comparable<ImagePlane>. public class ImagePlane; extends Object; implements Comparable<ImagePlane>; Helper class to store z-slice and time point indices, optionally along with a channel index as well.; ; These values are frequently required together, such as with ROIs and RegionRequests. ; It is more convenient (and less error-prone) to use a single ImagePlane instance rather than passing the indices as ; separate integers each time they are needed. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(ImagePlane o). Compare with another ImagePlane, in the order t, z, c. boolean; equals(Object obj);  ; int; getC(). Get the channel index. static ImagePlane; getDefaultPlane(). Returns an ImagePlane with channel -1, z of 0 and t of 0. static ImagePlane; getPlane(int z,; int t). Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. static ImagePlane; getPlane(ImageRegion region). Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. static ImagePlane; getPlane(ROI roi). Returns an ImagePlane with channel -1, and z and t set from an existing ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ()",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/ImagePlane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html
Security,hash,hashCode," compareTo(ImagePlane o). Compare with another ImagePlane, in the order t, z, c. boolean; equals(Object obj);  ; int; getC(). Get the channel index. static ImagePlane; getDefaultPlane(). Returns an ImagePlane with channel -1, z of 0 and t of 0. static ImagePlane; getPlane(int z,; int t). Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. static ImagePlane; getPlane(ImageRegion region). Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. static ImagePlane; getPlane(ROI roi). Returns an ImagePlane with channel -1, and z and t set from an existing ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ(). Get the z-slice index. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getC; public int getC(); Get the channel index. This may be -1 to indicate no channel is specified. Returns:. getZ; public int getZ(); Get the z-slice index. Returns:. getT; public int getT(); Get the time point index. Returns:. compareTo; public int compareTo(ImagePlane o); Compare with another ImagePlane, in the order t, z, c. Specified by:; compareTo in interface Comparable<ImagePlane>. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getPlane; public static ImagePlane getPlane(int z,; int t); Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. set to -1). Parameters:; z - ; t - ; Returns:. getDefaultPlane; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/ImagePlane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html
Modifiability,extend,extends,". ImageRegion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class ImageRegion. java.lang.Object; qupath.lib.regions.ImageRegion. Direct Known Subclasses:; RegionRequest. public class ImageRegion; extends Object; Class for defining an image region.; ; A boundary box is given in pixel coordinates, while z & t values are given as indices. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(int x,; int y,; int z,; int t). Check if this region contains a specified coordinate. static ImageRegion; createInstance(int x,; int y,; int width,; int height,; int z,; int t). Create a region based on its bounding box coordinates, z-slice index and time point index. static ImageRegion; createInstance(Collection<? extends ROI> rois). Create the smallest region that completely contains the specified ROIs. static ImageRegion; createInstance(ROI pathROI). Create the smallest region that completely contains a specified ROI. boolean; equals(Object obj);  ; int; getHeight(). Get the height of the region bounding box. ImagePlane; getImagePlane(). Get the z-slice and time point for this region as an ImagePlane. int; getMaxX(). Get the x coordinate of the bottom right of the region bounding box. int; getMaxY(). Get the y coordinate of the bottom right of the region bounding box. int; getMinX(). Get the x coordinate of the top left of the region bounding box. int; getMinY(). Get the y coordinate of the top left of the region bounding box. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). int; getT(). Get the ti",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/ImageRegion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html
Security,hash,hashCode,"I. boolean; equals(Object obj);  ; int; getHeight(). Get the height of the region bounding box. ImagePlane; getImagePlane(). Get the z-slice and time point for this region as an ImagePlane. int; getMaxX(). Get the x coordinate of the bottom right of the region bounding box. int; getMaxY(). Get the y coordinate of the bottom right of the region bounding box. int; getMinX(). Get the x coordinate of the top left of the region bounding box. int; getMinY(). Get the y coordinate of the top left of the region bounding box. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). int; getT(). Get the time point index for the region. int; getWidth(). Get the width of the region bounding box. int; getX(). Get the x coordinate of the region bounding box (top left). int; getY(). Get the y coordinate of the region bounding box (top left). int; getZ(). Get the z-slice index for the region. int; hashCode();  ; boolean; intersects(double x2,; double y2,; double w2,; double h2). Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. boolean; intersects(ImageRegion request). Returns true if the region specified by this region overlaps with another. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static ImageRegion createInstance(int x,; int y,; int width,; int height,; int z,; int t); Create a region based on its bounding box coordinates, z-slice index and time point index. Parameters:; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static ImageRegion createInstance(ROI pathROI); Create the smallest region that completely contains a specified ROI. Parameters:; pathROI - ; Returns:. createInstance; public static ImageRegion createInstance(C",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/ImageRegion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html
Modifiability,extend,extends,". Padding (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class Padding. java.lang.Object; qupath.lib.regions.Padding. public class Padding; extends Object; Requested padding for a 2D image. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Padding; add(Padding padding). Add this padding to another. static Padding; empty(). Get an empty padding object (0 on all sides). static Padding; getPadding(int x,; int y). Get an padding object 'x' pixels to the left and right, and 'y' pixels above and below. static Padding; getPadding(int x1,; int x2,; int y1,; int y2). Get a padding object that may have different padding on each side. int; getX1(). Get the first horizontal padding (left of the image), in pixels. int; getX2(). Get the second horizontal padding (right of the image), in pixels. int; getXSum(). Get the total horizontal padding (sum of x1 and x2). int; getY1(). Get the first vertical padding (top of the image), in pixels. int; getY2(). Get the second vertical padding (bottom of the image), in pixels. int; getYSum(). Get the total vertical padding (sum of x1 and x2). boolean; isEmpty(). Returns true of the padding is zero. boolean; isSymmetric(). Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). Padding; max(Padding padding). Compare two paddings, and take the larger padding value on all sides. Padding; subtract(Padding padding). Add another padding from this one. static Padding; symmetric(int pad). Get a padding object with 'pad' pixels on all sides. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, ",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/Padding.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/Padding.html
Security,hash,hashCode,"padding on each side. int; getX1(). Get the first horizontal padding (left of the image), in pixels. int; getX2(). Get the second horizontal padding (right of the image), in pixels. int; getXSum(). Get the total horizontal padding (sum of x1 and x2). int; getY1(). Get the first vertical padding (top of the image), in pixels. int; getY2(). Get the second vertical padding (bottom of the image), in pixels. int; getYSum(). Get the total vertical padding (sum of x1 and x2). boolean; isEmpty(). Returns true of the padding is zero. boolean; isSymmetric(). Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). Padding; max(Padding padding). Compare two paddings, and take the larger padding value on all sides. Padding; subtract(Padding padding). Add another padding from this one. static Padding; symmetric(int pad). Get a padding object with 'pad' pixels on all sides. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getX1; public int getX1(); Get the first horizontal padding (left of the image), in pixels. Returns:. getX2; public int getX2(); Get the second horizontal padding (right of the image), in pixels. Returns:. getXSum; public int getXSum(); Get the total horizontal padding (sum of x1 and x2). Returns:. getY1; public int getY1(); Get the first vertical padding (top of the image), in pixels. Returns:. getY2; public int getY2(); Get the second vertical padding (bottom of the image), in pixels. Returns:. getYSum; public int getYSum(); Get the total vertical padding (sum of x1 and x2). Returns:. toString; public String toString(). Overrides:; toString in class Object. isSymmetric; public boolean isSymmetric(); Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). Returns:. isEmpty; public boolean isEmpty(); Returns true of the padding is zero. Returns:. add; public Padding add(Padding padding); Add this padding",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/Padding.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/Padding.html
Availability,down,downsample,". RegionRequest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class RegionRequest. java.lang.Object; qupath.lib.regions.ImageRegion; qupath.lib.regions.RegionRequest. public class RegionRequest; extends ImageRegion; Class for defining an image region that can also be used to request these region from an ImageServer.; ; In addition to the information contained within an ImageRegion, also contains the path to the image; (and optionally an additional image name stored within it) and a downsample value. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static List<RegionRequest>; createAllRequests(ImageServer<?> server,; double downsample). Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height). Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Create a request for a region specified in terms of its bounding box, z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/RegionRequest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html
Deployability,update,updated,"height of an ImageServer, for the default plane (first z-slice, time point). boolean; equals(Object obj);  ; double; getDownsample(). Get the requested downsample factor, defining the resolution at which pixels should be returned. String; getPath(). Get the requested ImageServer path, used as an identifier. int; hashCode();  ; RegionRequest; intersect2D(int x,; int y,; int width,; int height). Intersect to the specified 2D region. RegionRequest; intersect2D(ImageRegion region). Intersect to the specified 2D region, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequest; translate(int dx,; int dy). Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. RegionRequest; updateDownsample(double downsample). Create a RegionRequest equivalent to this one with the updated downsample value. RegionRequest; updatePath(String path). Create a RegionRequest equivalent to this one with the updated path. RegionRequest; updateT(int t). Create a RegionRequest equivalent to this one with the updated t value. RegionRequest; updateZ(int z). Create a RegionRequest equivalent to this one with the updated z value. Methods inherited from class qupath.lib.regions.ImageRegion; contains, createInstance, createInstance, createInstance, getHeight, getImagePlane, getMaxX, getMaxY, getMinX, getMinY, getPlane, getT, getWidth, getX, getY, getZ, intersects, intersects. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest cre",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/RegionRequest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html
Modifiability,extend,extends,". RegionRequest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class RegionRequest. java.lang.Object; qupath.lib.regions.ImageRegion; qupath.lib.regions.RegionRequest. public class RegionRequest; extends ImageRegion; Class for defining an image region that can also be used to request these region from an ImageServer.; ; In addition to the information contained within an ImageRegion, also contains the path to the image; (and optionally an additional image name stored within it) and a downsample value. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static List<RegionRequest>; createAllRequests(ImageServer<?> server,; double downsample). Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height). Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Create a request for a region specified in terms of its bounding box, z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/RegionRequest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html
Security,hash,hashCode,"nRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static RegionRequest; createInstance(ImageServer<?> server). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). static RegionRequest; createInstance(ImageServer<?> server,; double downsample). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). boolean; equals(Object obj);  ; double; getDownsample(). Get the requested downsample factor, defining the resolution at which pixels should be returned. String; getPath(). Get the requested ImageServer path, used as an identifier. int; hashCode();  ; RegionRequest; intersect2D(int x,; int y,; int width,; int height). Intersect to the specified 2D region. RegionRequest; intersect2D(ImageRegion region). Intersect to the specified 2D region, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequest; translate(int dx,; int dy). Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. RegionRequest; updateDownsample(double downsample). Create a RegionRequest equivalent to this one with the updated downsample value. RegionRequest; updatePath(String path). Create a RegionRequest equivalent to this one with the updated path. RegionRequest; updateT(int t). Create a RegionRequest equiv",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/RegionRequest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html
Testability,test,test,"f its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; Returns:. overlapsRequest; public boolean overlapsRequest(RegionRequest request); Returns true if the region specified by this request overlaps with that of another request.; The test includes insuring that they refer to the same image by checking the paths are the same. Parameters:; request - ; Returns:. getPath; public String getPath(); Get the requested ImageServer path, used as an identifier. Returns:; See Also:. ImageServer.getPath(). getDownsample; public double getDownsample(); Get the requested downsample factor, defining the resolution at which pixels should be returned. Returns:. intersect2D; public RegionRequest intersect2D(ImageRegion region); Intersect to the specified 2D region, ignoring z and t. Parameters:; region - the region defining the x, y, width and height of the maximum permitted bounding box.; Returns:; the clipped RegionRequest, which may be this if no clipping is required. intersect2D; public RegionRequest intersect2D(int x,; int y,; int width,; int height); Intersect to the specified 2D region. Parameters:; x - x-coordinate of the second region's bounding box; y - y-coordinate of the second region's bounding box; width - width of the second region's bounding box; height - heig",MatchSource.WIKI,javadoc/docs/qupath/lib/regions/RegionRequest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html
Availability,avail,available,"ate different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Get the x coordinate of the ROI centroid;. double; getCentroidY(). Get the y coordinate of the ROI centroid;. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/AreaROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html
Deployability,update,updatePlane,"ated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the number of vertices used to represent this area. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/AreaROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html
Energy Efficiency,efficient,efficient,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/AreaROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html
Integrability,depend,dependency,". AreaROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class AreaROI. java.lang.Object; qupath.lib.roi.AreaROI. All Implemented Interfaces:; Serializable, ROI. public class AreaROI; extends Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/AreaROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html
Modifiability,extend,extends,". AreaROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class AreaROI. java.lang.Object; qupath.lib.roi.AreaROI. All Implemented Interfaces:; Serializable, ROI. public class AreaROI; extends Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/AreaROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html
Performance,cache,caches,"this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Get the x coordinate of the ROI centroid;. double; getCentroidY(). Get the y coordinate of the ROI centroid;. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) po",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/AreaROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html
Safety,avoid,avoid,". AreaROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class AreaROI. java.lang.Object; qupath.lib.roi.AreaROI. All Implemented Interfaces:; Serializable, ROI. public class AreaROI; extends Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/AreaROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html
Security,hash,hashCode," java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the number of vertices used to represent this area. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; Se",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/AreaROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html
Usability,simpl,simple,". AreaROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class AreaROI. java.lang.Object; qupath.lib.roi.AreaROI. All Implemented Interfaces:; Serializable, ROI. public class AreaROI; extends Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/AreaROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html
Energy Efficiency,efficient,efficient,". ConvexHull (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ConvexHull. java.lang.Object; qupath.lib.roi.ConvexHull. public class ConvexHull; extends Object; Helper method for calculating the convex hull from a list of points. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ConvexHull();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<Point2>; getConvexHull(List<Point2> points). TODO: Consider a more efficient convex hull calculation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ConvexHull; public ConvexHull(). Method Details. getConvexHull; public static List<Point2> getConvexHull(List<Point2> points); TODO: Consider a more efficient convex hull calculation.; ; For implementation details, see; ; http://en.wikipedia.org/wiki/Gift_wrapping_algorithm; http://en.wikipedia.org/wiki/Graham_scan. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ConvexHull.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ConvexHull.html
Modifiability,extend,extends,". ConvexHull (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ConvexHull. java.lang.Object; qupath.lib.roi.ConvexHull. public class ConvexHull; extends Object; Helper method for calculating the convex hull from a list of points. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ConvexHull();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<Point2>; getConvexHull(List<Point2> points). TODO: Consider a more efficient convex hull calculation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ConvexHull; public ConvexHull(). Method Details. getConvexHull; public static List<Point2> getConvexHull(List<Point2> points); TODO: Consider a more efficient convex hull calculation.; ; For implementation details, see; ; http://en.wikipedia.org/wiki/Gift_wrapping_algorithm; http://en.wikipedia.org/wiki/Graham_scan. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ConvexHull.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ConvexHull.html
Security,hash,hashCode,". ConvexHull (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ConvexHull. java.lang.Object; qupath.lib.roi.ConvexHull. public class ConvexHull; extends Object; Helper method for calculating the convex hull from a list of points. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ConvexHull();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<Point2>; getConvexHull(List<Point2> points). TODO: Consider a more efficient convex hull calculation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ConvexHull; public ConvexHull(). Method Details. getConvexHull; public static List<Point2> getConvexHull(List<Point2> points); TODO: Consider a more efficient convex hull calculation.; ; For implementation details, see; ; http://en.wikipedia.org/wiki/Gift_wrapping_algorithm; http://en.wikipedia.org/wiki/Graham_scan. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ConvexHull.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ConvexHull.html
Integrability,interface,interface,". DefaultROIComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class DefaultROIComparator. java.lang.Object; qupath.lib.roi.DefaultROIComparator. All Implemented Interfaces:; Comparator<ROI>. public class DefaultROIComparator; extends Object; implements Comparator<ROI>; Default comparator to enable ROIs to be sorted in a more predictable manner.; ; The aim is to help sorted lists to sort first on ROI location (time, z, channel, y coordinate, then x); and afterwards on ROI type. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultROIComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(ROI o1,; ROI o2);  ; static Comparator<ROI>; getInstance(). Get a static instance of this comparator, to avoid needing to construct it. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultROIComparator; public DefaultROIComparator(). Method Details. compare; public int compare(ROI o1,; ROI o2). Specified by:; compare in interface Comparator<ROI>. getInstance; public static Comparator<ROI> getInstance(); Get a static instance of this comparator, to avoid needing to construct it. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html
Modifiability,extend,extends,". DefaultROIComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class DefaultROIComparator. java.lang.Object; qupath.lib.roi.DefaultROIComparator. All Implemented Interfaces:; Comparator<ROI>. public class DefaultROIComparator; extends Object; implements Comparator<ROI>; Default comparator to enable ROIs to be sorted in a more predictable manner.; ; The aim is to help sorted lists to sort first on ROI location (time, z, channel, y coordinate, then x); and afterwards on ROI type. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultROIComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(ROI o1,; ROI o2);  ; static Comparator<ROI>; getInstance(). Get a static instance of this comparator, to avoid needing to construct it. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultROIComparator; public DefaultROIComparator(). Method Details. compare; public int compare(ROI o1,; ROI o2). Specified by:; compare in interface Comparator<ROI>. getInstance; public static Comparator<ROI> getInstance(); Get a static instance of this comparator, to avoid needing to construct it. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html
Safety,predict,predictable,". DefaultROIComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class DefaultROIComparator. java.lang.Object; qupath.lib.roi.DefaultROIComparator. All Implemented Interfaces:; Comparator<ROI>. public class DefaultROIComparator; extends Object; implements Comparator<ROI>; Default comparator to enable ROIs to be sorted in a more predictable manner.; ; The aim is to help sorted lists to sort first on ROI location (time, z, channel, y coordinate, then x); and afterwards on ROI type. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultROIComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(ROI o1,; ROI o2);  ; static Comparator<ROI>; getInstance(). Get a static instance of this comparator, to avoid needing to construct it. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultROIComparator; public DefaultROIComparator(). Method Details. compare; public int compare(ROI o1,; ROI o2). Specified by:; compare in interface Comparator<ROI>. getInstance; public static Comparator<ROI> getInstance(); Get a static instance of this comparator, to avoid needing to construct it. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html
Security,hash,hashCode,". DefaultROIComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class DefaultROIComparator. java.lang.Object; qupath.lib.roi.DefaultROIComparator. All Implemented Interfaces:; Comparator<ROI>. public class DefaultROIComparator; extends Object; implements Comparator<ROI>; Default comparator to enable ROIs to be sorted in a more predictable manner.; ; The aim is to help sorted lists to sort first on ROI location (time, z, channel, y coordinate, then x); and afterwards on ROI type. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultROIComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(ROI o1,; ROI o2);  ; static Comparator<ROI>; getInstance(). Get a static instance of this comparator, to avoid needing to construct it. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultROIComparator; public DefaultROIComparator(). Method Details. compare; public int compare(ROI o1,; ROI o2). Specified by:; compare in interface Comparator<ROI>. getInstance; public static Comparator<ROI> getInstance(); Get a static instance of this comparator, to avoid needing to construct it. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html
Availability,avail,available,"d Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double xx,; double yy). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 4 (since the ellipse is defined by its bounding box). String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/EllipseROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html
Deployability,update,updatePlane,"ossible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isCircle(). Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. boolean; isCircle(double pixelWidth,; double pixelHeight). Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCir",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/EllipseROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html
Energy Efficiency,efficient,efficient,"Plane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoi",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/EllipseROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html
Integrability,interface,interfaces,". EllipseROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class EllipseROI. java.lang.Object; qupath.lib.roi.EllipseROI. All Implemented Interfaces:; Serializable, ROI. public class EllipseROI; extends Object; implements Serializable; ROI implementing a circle, or (unrotated) ellipse. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double xx,; double yy). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeo",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/EllipseROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html
Modifiability,extend,extends,". EllipseROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class EllipseROI. java.lang.Object; qupath.lib.roi.EllipseROI. All Implemented Interfaces:; Serializable, ROI. public class EllipseROI; extends Object; implements Serializable; ROI implementing a circle, or (unrotated) ellipse. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double xx,; double yy). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeo",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/EllipseROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html
Security,hash,hashCode,"olean; isArea(). Returns true if this ROI encloses an area. boolean; isCircle(). Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. boolean; isCircle(double pixelWidth,; double pixelHeight). Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/EllipseROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html
Usability,simpl,simple,"Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class EllipseROI. java.lang.Object; qupath.lib.roi.EllipseROI. All Implemented Interfaces:; Serializable, ROI. public class EllipseROI; extends Object; implements Serializable; ROI implementing a circle, or (unrotated) ellipse. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double xx,; double yy). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 4 (since the ellipse",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/EllipseROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html
Availability,avail,available,"tly compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; g",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html
Deployability,update,updatePlane,"dth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns th",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html
Energy Efficiency,efficient,efficient,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html
Integrability,interface,interfaces,"QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConve",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html
Modifiability,extend,extends,". GeometryROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html
Performance,perform,performant,". GeometryROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html
Security,validat,validated,". GeometryROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html
Modifiability,extend,extends,". GeometryTools.GeometryConverter.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryTools.GeometryConverter.Builder. java.lang.Object; qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Enclosing class:; GeometryTools.GeometryConverter. public static class GeometryTools.GeometryConverter.Builder; extends Object; Builder to help define how ROIs and Geometry objects should be converted. Constructor Summary; Constructors. Constructor; Description; Builder(). Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; GeometryTools.GeometryConverter; build(). Build a new converter with the specified parameters. GeometryTools.GeometryConverter.Builder; factory(GeometryFactory factory). Specify the GeometryFactory, which can define a precision model in JTS. GeometryTools.GeometryConverter.Builder; flatness(double flatness). Specify the flatness for any operation where a PathIterator is required. GeometryTools.GeometryConverter.Builder; pixelSize(double pixelWidth,; double pixelHeight). Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Details. pixelSize; public GeometryTools.GeometryConverter.Builder pixelSize(double pixelWidth,; double pixelHeight); Specify the pixel width and height, used to scale x and y c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html
Security,hash,hashCode,"Object; Builder to help define how ROIs and Geometry objects should be converted. Constructor Summary; Constructors. Constructor; Description; Builder(). Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; GeometryTools.GeometryConverter; build(). Build a new converter with the specified parameters. GeometryTools.GeometryConverter.Builder; factory(GeometryFactory factory). Specify the GeometryFactory, which can define a precision model in JTS. GeometryTools.GeometryConverter.Builder; flatness(double flatness). Specify the flatness for any operation where a PathIterator is required. GeometryTools.GeometryConverter.Builder; pixelSize(double pixelWidth,; double pixelHeight). Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Details. pixelSize; public GeometryTools.GeometryConverter.Builder pixelSize(double pixelWidth,; double pixelHeight); Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). Parameters:; pixelWidth - ; pixelHeight - ; Returns:. flatness; public GeometryTools.GeometryConverter.Builder flatness(double flatness); Specify the flatness for any operation where a PathIterator is required. Parameters:; flatness - ; Returns:. factory; public GeometryTools.GeometryConverter.Builder factory(GeometryFactory factory); Specify the GeometryFactory, which can define a precision model in JTS. Parameters:; factory - ; Returns:. build; public GeometryTools.GeometryConverter build(); Build a new converter with the specified parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html
Modifiability,extend,extends,". GeometryTools.GeometryConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryTools.GeometryConverter. java.lang.Object; qupath.lib.roi.GeometryTools.GeometryConverter. Enclosing class:; GeometryTools. public static class GeometryTools.GeometryConverter; extends Object; Converter to help switch from a ROI to a Geometry. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Geometry; roiToGeometry(ROI roi). Convert a QuPath ROI to a JTS Geometry. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. roiToGeometry; public Geometry roiToGeometry(ROI roi); Convert a QuPath ROI to a JTS Geometry. Parameters:; roi - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.html
Security,hash,hashCode,". GeometryTools.GeometryConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryTools.GeometryConverter. java.lang.Object; qupath.lib.roi.GeometryTools.GeometryConverter. Enclosing class:; GeometryTools. public static class GeometryTools.GeometryConverter; extends Object; Converter to help switch from a ROI to a Geometry. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Geometry; roiToGeometry(ROI roi). Convert a QuPath ROI to a JTS Geometry. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. roiToGeometry; public Geometry roiToGeometry(ROI roi); Convert a QuPath ROI to a JTS Geometry. Parameters:; roi - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.html
Availability,recover,recover,"- ; Returns:. convertTransform; public static AffineTransformation convertTransform(AffineTransform transform); Convert an AffineTransform to an AffineTransformation. Parameters:; transform - ; Returns:. shapeToGeometry; public static Geometry shapeToGeometry(Shape shape); Convert a java.awt.Shape to a JTS Geometry. Parameters:; shape - ; Returns:. envelopToRegion; public static ImageRegion envelopToRegion(Envelope env,; int z,; int t); Convert an Envelope to an ImageRegion. Parameters:; env - envelop; z - z index for the region (default is 0); t - timepoint for the region (default is 0); Returns:; the smallest ImageRegion that contains the specified envelop. attemptOperation; public static Geometry attemptOperation(Geometry input,; Function<Geometry,Geometry> fun); Attempt to apply a function to a geometry, returning the input unchanged if there was an exception.; ; The purpose of this is to make it easier to apply non-essential functions that might fail (e.g. with a TopologyException ; and to recover easily. Parameters:; input - the input geometry; fun - the function to (attempt) to apply; Returns:; the new geometry if the function succeeded, otherwise the original geometry. roundCoordinates; public static Geometry roundCoordinates(Geometry geometry); Round coordinates in a Geometry to integer values. Parameters:; geometry - the updated Geometry; Returns:. constrainToBounds; public static Geometry constrainToBounds(Geometry geometry,; double x,; double y,; double width,; double height); Compute the intersection of a Geometry and a specified bounding box.; The original Geometry may be returned unchanged if no changes are required to fit within the bounds. Parameters:; geometry - the updated Geometry; x - ; y - ; width - ; height - ; Returns:. createRectangle; public static Geometry createRectangle(double x,; double y,; double width,; double height); Create a rectangular Geometry for the specified bounding box. Parameters:; x - ; y - ; width - ; height - ; Returns:.",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html
Deployability,update,updated,"nvelopToRegion; public static ImageRegion envelopToRegion(Envelope env,; int z,; int t); Convert an Envelope to an ImageRegion. Parameters:; env - envelop; z - z index for the region (default is 0); t - timepoint for the region (default is 0); Returns:; the smallest ImageRegion that contains the specified envelop. attemptOperation; public static Geometry attemptOperation(Geometry input,; Function<Geometry,Geometry> fun); Attempt to apply a function to a geometry, returning the input unchanged if there was an exception.; ; The purpose of this is to make it easier to apply non-essential functions that might fail (e.g. with a TopologyException ; and to recover easily. Parameters:; input - the input geometry; fun - the function to (attempt) to apply; Returns:; the new geometry if the function succeeded, otherwise the original geometry. roundCoordinates; public static Geometry roundCoordinates(Geometry geometry); Round coordinates in a Geometry to integer values. Parameters:; geometry - the updated Geometry; Returns:. constrainToBounds; public static Geometry constrainToBounds(Geometry geometry,; double x,; double y,; double width,; double height); Compute the intersection of a Geometry and a specified bounding box.; The original Geometry may be returned unchanged if no changes are required to fit within the bounds. Parameters:; geometry - the updated Geometry; x - ; y - ; width - ; height - ; Returns:. createRectangle; public static Geometry createRectangle(double x,; double y,; double width,; double height); Create a rectangular Geometry for the specified bounding box. Parameters:; x - ; y - ; width - ; height - ; Returns:. geometryToROI; public static ROI geometryToROI(Geometry geometry,; ImagePlane plane); Convert a JTS Geometry to a QuPath ROI. Parameters:; geometry - ; plane - ; Returns:. roiToGeometry; public static Geometry roiToGeometry(ROI roi); Convert to QuPath ROI to a JTS Geometry. Parameters:; roi - ; Returns:. geometryToShape; public static Shape geometry",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html
Modifiability,extend,extends,". GeometryTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryTools. java.lang.Object; qupath.lib.roi.GeometryTools. public class GeometryTools; extends Object; Convert between QuPath ROI objects and Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. Constructor Summary; Constructors. Constructor; Description; GeometryTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Geometry; attemptOperation(Geometry input,; Function<Geometry,Geometry> fun). Attempt to apply a function to a geometry, returning the input unchanged if there was an exception. static Geometry; constrainToBounds(Geometry geometry,; double x,; double y,; double width,; double height). Compute the intersection of a Geometry and a specified bounding box. static AffineTransformation; convertTransform(AffineTransform transform). Convert an AffineTransform to an AffineTransformation. static AffineTransform; convertTransform(AffineTransformation transform). Convert an AffineTransformation to an AffineTransform. static Geometry; createRectangle(double x,; double y,; double width,; double height). Create a rectangular Geometry for the specified bounding box. static Geometry; ensurePolygonal(Geometry geometry). Strip non-polygonal parts from a GeometryCollection (non-recursive). static ImageRegion; envelopToRegion(Envelope env,; int z,; int t). Convert an Envelope to an ImageRegion. static Geometry; fillHoles(Geometry geometry). Fill all interior rings for the spec",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html
Performance,perform,performance,"lculate the union of multiple Geometry objects. Parameters:; geometries - ; Returns:. ensurePolygonal; public static Geometry ensurePolygonal(Geometry geometry); Strip non-polygonal parts from a GeometryCollection (non-recursive). Parameters:; geometry - ; Returns:; a Geometry containing only Polygons, which may be the same as the input Geometry or empty. homogenizeGeometryCollection; public static Geometry homogenizeGeometryCollection(Geometry geometry); Ensure a GeometryCollection contains only Geometries of the same type (Polygonal, Lineal or Puntal).; Other geometries (with lower dimension) are discarded. Parameters:; geometry - ; Returns:. removeInteriorRings; public static Geometry removeInteriorRings(Geometry geometry,; double minRingArea); Fill all interior rings for the specified geometry that have an area < a specified threshold.; ; Note that this assumes that the geometry is valid, and does not contain self-intersections or overlapping pieces. ; No checks are made to confirm this (for performance reasons). Parameters:; geometry - ; minRingArea - ; Returns:. fillHoles; public static Geometry fillHoles(Geometry geometry); Fill all interior rings for the specified geometry. Parameters:; geometry - ; Returns:. removeFragments; public static Geometry removeFragments(Geometry geometry,; double minArea); Remove fragments smaller than the specified area from a Geometry, ignoring internal rings. Parameters:; geometry - the geometry to refine; minArea - the minimum area of a fragment to retain. If ≤ 0, the geometry is returned unchanged.; Otherwise, polygons will be extracted from the geometry and all that have an external ring area smaller than minArea will be removed.; Returns:; the refined Geometry, or an empty polygon if all pieces of the geometry were removed. tryToFixPolygon; public static Geometry tryToFixPolygon(Polygon polygon); Test a polygon for validity, attempting to fix TopologyValidationErrors if possible.; This attempts a range of tricks (starting w",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html
Safety,recover,recover,"- ; Returns:. convertTransform; public static AffineTransformation convertTransform(AffineTransform transform); Convert an AffineTransform to an AffineTransformation. Parameters:; transform - ; Returns:. shapeToGeometry; public static Geometry shapeToGeometry(Shape shape); Convert a java.awt.Shape to a JTS Geometry. Parameters:; shape - ; Returns:. envelopToRegion; public static ImageRegion envelopToRegion(Envelope env,; int z,; int t); Convert an Envelope to an ImageRegion. Parameters:; env - envelop; z - z index for the region (default is 0); t - timepoint for the region (default is 0); Returns:; the smallest ImageRegion that contains the specified envelop. attemptOperation; public static Geometry attemptOperation(Geometry input,; Function<Geometry,Geometry> fun); Attempt to apply a function to a geometry, returning the input unchanged if there was an exception.; ; The purpose of this is to make it easier to apply non-essential functions that might fail (e.g. with a TopologyException ; and to recover easily. Parameters:; input - the input geometry; fun - the function to (attempt) to apply; Returns:; the new geometry if the function succeeded, otherwise the original geometry. roundCoordinates; public static Geometry roundCoordinates(Geometry geometry); Round coordinates in a Geometry to integer values. Parameters:; geometry - the updated Geometry; Returns:. constrainToBounds; public static Geometry constrainToBounds(Geometry geometry,; double x,; double y,; double width,; double height); Compute the intersection of a Geometry and a specified bounding box.; The original Geometry may be returned unchanged if no changes are required to fit within the bounds. Parameters:; geometry - the updated Geometry; x - ; y - ; width - ; height - ; Returns:. createRectangle; public static Geometry createRectangle(double x,; double y,; double width,; double height); Create a rectangular Geometry for the specified bounding box. Parameters:; x - ; y - ; width - ; height - ; Returns:.",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html
Security,hash,hashCode,", ignoring internal rings. static Geometry; removeInteriorRings(Geometry geometry,; double minRingArea). Fill all interior rings for the specified geometry that have an area < a specified threshold. static Geometry; roiToGeometry(ROI roi). Convert to QuPath ROI to a JTS Geometry. static Geometry; roundCoordinates(Geometry geometry). Round coordinates in a Geometry to integer values. static Geometry; shapeToGeometry(Shape shape). Convert a java.awt.Shape to a JTS Geometry. static List<Geometry>; splitGeometryByLineStrings(Geometry polygon,; Collection<? extends Geometry> splitLines). Split an input polygonal geometry using a collection of split lines. static Geometry; tryToFixPolygon(Polygon polygon). Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. static Geometry; union(Collection<? extends Geometry> geometries). Calculate the union of multiple Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GeometryTools; public GeometryTools(). Method Details. getDefaultFactory; public static GeometryFactory getDefaultFactory(); Get the default GeometryFactory to construct Geometries within QuPath. Returns:. parseTransformMatrix; public static AffineTransformation parseTransformMatrix(String text); throws ParseException; Parse the matrix (String) to create and return an AffineTransformation. ; ; The order of the matrix elements should be the following:. m00 m01 m02; m10 m11 m12. Parameters:; text - ; Returns:; affineTransformation; Throws:; ParseException. convertTransform; public static AffineTransform convertTransform(AffineTransformation transform); Convert an AffineTransformation to an AffineTransform. Parameters:; transform - ; Returns:. convertTransform; public static AffineTransformation convertTransform(AffineTransform transform); Convert an AffineTransform to an AffineTransformation. Parameters:; transform - ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html
Testability,test,test,"han the specified area from a Geometry, ignoring internal rings. Parameters:; geometry - the geometry to refine; minArea - the minimum area of a fragment to retain. If ≤ 0, the geometry is returned unchanged.; Otherwise, polygons will be extracted from the geometry and all that have an external ring area smaller than minArea will be removed.; Returns:; the refined Geometry, or an empty polygon if all pieces of the geometry were removed. tryToFixPolygon; public static Geometry tryToFixPolygon(Polygon polygon); Test a polygon for validity, attempting to fix TopologyValidationErrors if possible.; This attempts a range of tricks (starting with Geometry.buffer(0)), although none; are guaranteed to work. The first that largely preserves the polygon's area is returned.; ; The result is guaranteed to be valid, but not necessarily to be a close match to the ; original polygon; in particular, if everything failed the result will be empty.; ; Code that calls this method can test if the output is equal to the input to determine ; if any changes were made. Parameters:; polygon - input (possibly-invalid) polygon; Returns:; the input polygon (if valid), an adjusted polygon (if attempted fixes helped),; or an empty polygon if the situation could not be resolved. refineAreas; public static Geometry refineAreas(Geometry geometry,; double minSizePixels,; double minHoleSizePixels); Remove small fragments and fill small interior rings within a Geometry.; ; Note that any modifications to the geometry will result in points and lines being stripped away, ; leaving only polygons. Parameters:; geometry - input geometry to refine; minSizePixels - minimum area of a fragment to keep (the area of interior rings for polygons will be ignored); minHoleSizePixels - minimum size of an interior hole to keep; Returns:; the refined geometry (possibly the original unchanged), or empty geometry if the changes resulted in the Geometry disappearing; See Also:. removeFragments(Geometry, double); removeInterio",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/GeometryTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html
Availability,avail,available,"ct; implements Serializable; ROI representing a straight line, defined by its end points. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 2 (since the line is defined by its end points). String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/LineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html
Deployability,update,updatePlane,"epresenting this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. double; getX1(). Get the first x co-ordinate (start of the line). double; getX2(). Get the second x co-ordinate (end of the line). double; getY1(). Get the first y co-ordinate (start of the line). double; getY2(). Get the second y co-ordinate (end of the line). int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from i",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/LineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html
Energy Efficiency,efficient,efficient,"currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public R",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/LineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html
Integrability,interface,interfaces,". LineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class LineROI. java.lang.Object; qupath.lib.roi.LineROI. All Implemented Interfaces:; Serializable, ROI. public class LineROI; extends Object; implements Serializable; ROI representing a straight line, defined by its end points. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 2 (since the line is define",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/LineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html
Modifiability,extend,extends,". LineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class LineROI. java.lang.Object; qupath.lib.roi.LineROI. All Implemented Interfaces:; Serializable, ROI. public class LineROI; extends Object; implements Serializable; ROI representing a straight line, defined by its end points. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 2 (since the line is define",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/LineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html
Security,hash,hashCode,"). Get the first x co-ordinate (start of the line). double; getX2(). Get the second x co-ordinate (end of the line). double; getY1(). Get the first y co-ordinate (start of the line). double; getY2(). Get the second y co-ordinate (end of the line). int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/LineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html
Integrability,interface,interfaces,". qupath.lib.roi (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi. package qupath.lib.roi. Classes that define regions of interest (ROIs). Related Packages. Package; Description; qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). All Classes and InterfacesClassesEnum Classes. Class; Description; AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ConvexHull. Helper method for calculating the convex hull from a list of points. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. EllipseROI. ROI implementing a circle, or (unrotated) ellipse. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. LineROI. ROI representing a straight line, defined by its end points. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. RectangleROI. ROI representing a square or rectangle (unrotated). RoiEditor. Helper class for interactively modifying existing ROIs. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while re",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/package-summary.html
Safety,predict,predictable,". qupath.lib.roi (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi. package qupath.lib.roi. Classes that define regions of interest (ROIs). Related Packages. Package; Description; qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). All Classes and InterfacesClassesEnum Classes. Class; Description; AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ConvexHull. Helper method for calculating the convex hull from a list of points. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. EllipseROI. ROI implementing a circle, or (unrotated) ellipse. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. LineROI. ROI representing a straight line, defined by its end points. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. RectangleROI. ROI representing a square or rectangle (unrotated). RoiEditor. Helper class for interactively modifying existing ROIs. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while re",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/package-summary.html
Usability,simpl,simplifying,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi. package qupath.lib.roi. Classes that define regions of interest (ROIs). Related Packages. Package; Description; qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). All Classes and InterfacesClassesEnum Classes. Class; Description; AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ConvexHull. Helper method for calculating the convex hull from a list of points. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. EllipseROI. ROI implementing a circle, or (unrotated) ellipse. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. LineROI. ROI representing a straight line, defined by its end points. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. RectangleROI. ROI representing a square or rectangle (unrotated). RoiEditor. Helper class for interactively modifying existing ROIs. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/package-summary.html
Availability,avail,available,"ents Serializable; ROI representing a collection of 2D points (distinct x,y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y,; double maxDist). Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
Deployability,update,updateBounds,"e pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). It is not possible to convert a PointROI to a java.awt.Shape. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
Energy Efficiency,efficient,efficient,"leX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.a",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
Integrability,interface,interfaces,". PointsROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PointsROI. java.lang.Object; qupath.lib.roi.PointsROI. All Implemented Interfaces:; Serializable, ROI. public class PointsROI; extends Object; implements Serializable; ROI representing a collection of 2D points (distinct x,y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
Modifiability,extend,extends,". PointsROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PointsROI. java.lang.Object; qupath.lib.roi.PointsROI. All Implemented Interfaces:; Serializable, ROI. public class PointsROI; extends Object; implements Serializable; ROI representing a collection of 2D points (distinct x,y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
Performance,cache,caches,"ox. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y,; double maxDist). Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). It is not possible to convert a PointROI to a java.awt.Shape. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
Security,hash,hashCode,". Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
Availability,avail,available,"ject; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; g",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
Deployability,update,updatePlane," calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
Energy Efficiency,efficient,efficient,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
Integrability,interface,interfaces,". PolygonROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolygonROI. java.lang.Object; qupath.lib.roi.PolygonROI. All Implemented Interfaces:; Serializable, ROI. public class PolygonROI; extends Object; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
Modifiability,extend,extends,". PolygonROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolygonROI. java.lang.Object; qupath.lib.roi.PolygonROI. All Implemented Interfaces:; Serializable, ROI. public class PolygonROI; extends Object; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
Performance,cache,caches," list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) po",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
Security,hash,hashCode,"turns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
Availability,avail,available,"Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelH",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
Deployability,update,updatePlane,"dth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
Energy Efficiency,efficient,efficient," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
Integrability,interface,interfaces,". PolylineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolylineROI. java.lang.Object; qupath.lib.roi.PolylineROI. All Implemented Interfaces:; Serializable, ROI. public class PolylineROI; extends Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
Modifiability,extend,extends,". PolylineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolylineROI. java.lang.Object; qupath.lib.roi.PolylineROI. All Implemented Interfaces:; Serializable, ROI. public class PolylineROI; extends Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
Performance,cache,caches," the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) po",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
Security,hash,hashCode," length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from i",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
Availability,avail,available,"ry. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 4 (since the rectangle is defined by its bounding box). String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Re",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
Deployability,update,updatePlane,"dth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoi",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
Energy Efficiency,efficient,efficient,"he vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
Integrability,interface,interfaces,". RectangleROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RectangleROI. java.lang.Object; qupath.lib.roi.RectangleROI. All Implemented Interfaces:; Serializable, ROI. public class RectangleROI; extends Object; implements Serializable; ROI representing a square or rectangle (unrotated). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
Modifiability,extend,extends,". RectangleROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RectangleROI. java.lang.Object; qupath.lib.roi.RectangleROI. All Implemented Interfaces:; Serializable, ROI. public class RectangleROI; extends Object; implements Serializable; ROI representing a square or rectangle (unrotated). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
Security,hash,hashCode," length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
Availability,avail,available,"ht be too computationally expensive.; By consciously having to make changes via a RoiEditor, it is hoped that programmers will remember inform the PathObjectHierarchy; whenever an object has been changed (note that this does not happen automatically - the RoiEditor knows nothing of PathObjects; and hierarchies... only ROIs of various flavors).; ; Where any other ROI processing is required, the 'correct' approach is to create a new PathObject as required. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or an empty list if no handles are available. ROI; getROI(). Retrieve the ROI currently being edited (may be null). boolean; grabHandle(double x,; double y,; double maxDist,; boolean shiftDown). Try to grab a ROI handle. boolean; hasActiveHandle(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
Deployability,update,updated,"er and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or an empty list if no handles are available. ROI; getROI(). Retrieve the ROI currently being edited (may be null). boolean; grabHandle(double x,; double y,; double maxDist,; boolean shiftDown). Try to grab a ROI handle. boolean; hasActiveHandle(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public stat",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
Modifiability,extend,extends,". RoiEditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RoiEditor. java.lang.Object; qupath.lib.roi.RoiEditor. public class RoiEditor; extends Object; Helper class for interactively modifying existing ROIs.; ; Modification of ROIs has been made intentionally quite awkward to help ensure they are fairly consistent; (i.e. limited mutability), but this can be a bit infuriating when the user wishes to make annotations interactively.; ; Also, currently PathObjects have their ROIs set at creation time - adding further annoyance to the lack of easy ROI editability.; ; RoiEditors provide GUIs with a mechanism for controlled ROI manipulation, when the natural alternative ; (creating new ROIs) might be too computationally expensive.; By consciously having to make changes via a RoiEditor, it is hoped that programmers will remember inform the PathObjectHierarchy; whenever an object has been changed (note that this does not happen automatically - the RoiEditor knows nothing of PathObjects; and hierarchies... only ROIs of various flavors).; ; Where any other ROI processing is required, the 'correct' approach is to create a new PathObject as required. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
Safety,avoid,avoid,"s have their ROIs set at creation time - adding further annoyance to the lack of easy ROI editability.; ; RoiEditors provide GUIs with a mechanism for controlled ROI manipulation, when the natural alternative ; (creating new ROIs) might be too computationally expensive.; By consciously having to make changes via a RoiEditor, it is hoped that programmers will remember inform the PathObjectHierarchy; whenever an object has been changed (note that this does not happen automatically - the RoiEditor knows nothing of PathObjects; and hierarchies... only ROIs of various flavors).; ; Where any other ROI processing is required, the 'correct' approach is to create a new PathObject as required. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or an empty list if no handles are available. ROI; getROI(). Retrieve the ROI currently being edited (may be null). boolean; grabHandle(double x,; double y,; double maxDist,; boolean shiftDown). Try to grab a ROI handle. boolean; hasActiveHandle(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
Security,hash,hashCode,"hrough this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void setROI(ROI roi,; boolean stopTranslating); Set the active ROI, optionally stopping any ROI translation currently in progress. Parameters:; roi - ; stopTranslating - if true, then any ROI currently being translated will have its translation completed.; Normally this should be true, but it may be false if the new ROI being set is part of the same translation event. startTranslation; public boolean startTranslation(double x,; double y,; boolean snapToPixel); Returns true if the current ROI is translatable, and at the end of this call the translation has started. Parameters:; x - ; y - ; snapToPixel - if true, request that translations snap to pixel coordinates; Returns:. updateTranslati",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
Testability,log,logged,"through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest handle; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. setActiveHandlePosition; public ROI setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown); If a handle has been grabbed, update its displacement. Parameters:; x - ; y - ; minDisplacement - if > 0, smaller movements will be discarded to avoid unnecessary work.; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
Modifiability,extend,extends,". ROIs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ROIs. java.lang.Object; qupath.lib.roi.ROIs. public class ROIs; extends Object; This class consists exclusively of static methods that operate on or return regions of interest (ROIs).; ; These methods should be used rather than constructors for individual ROI types. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ROIs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI; createAreaROI(Shape shape,; ImagePlane plane). Create an area ROI representing a 2D shape. static ROI; createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane). Create an ellipse ROI defined by its bounding box. static ROI; createEmptyROI(). Create an 'empty' ROI with no length or area. static ROI; createLineROI(double x,; double y,; double x2,; double y2,; ImagePlane plane). Create a line ROI with start and end coordinates. static ROI; createLineROI(double x,; double y,; ImagePlane plane). Create a ROI representing a line with zero length. static ROI; createPointsROI(double[] x,; double[] y,; ImagePlane plane). Create a points ROI from an array of x and y coordinates. static ROI; createPointsROI(double x,; double y,; ImagePlane plane). Create a points ROI containing a single point. static ROI; createPointsROI(List<? extends Point2> points,; ImagePlane plane). Create a points ROI from a list of points. static ROI; createPointsROI(ImagePlane plane). Create an empty points ROI. static ROI; createPolygonROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolygonROI; crea",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ROIs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html
Security,hash,hashCode,"ROI; createPolygonROI(double x,; double y,; ImagePlane plane). Create an empty, closed polygon ROI consisting of a single point. static PolygonROI; createPolygonROI(List<Point2> points,; ImagePlane plane). Create a closed polygon ROI from a list of points. static ROI; createPolylineROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolylineROI; createPolylineROI(double x,; double y,; ImagePlane plane). Create an empty polyline ROI consisting of a single point. static PolylineROI; createPolylineROI(List<Point2> points,; ImagePlane plane). Create a polyline ROI from a list of points. static ROI; createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane). Create a rectangle ROI defined by its bounding box. static ROI; createRectangleROI(ImageRegion region). Create a rectangle ROI that matches an ImageRegion. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ROIs; public ROIs(). Method Details. createEmptyROI; public static ROI createEmptyROI(); Create an 'empty' ROI with no length or area.; ; The only guarantee is that it will return isEmpty() == true. Returns:. createRectangleROI; public static ROI createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create a rectangle ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createRectangleROI; public static ROI createRectangleROI(ImageRegion region); Create a rectangle ROI that matches an ImageRegion. Parameters:; region - ; Returns:. createEllipseROI; public static ROI createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create an ellipse ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createLineROI; public static ROI createLineROI(double x,; double y,",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ROIs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html
Integrability,interface,interfaces,". RoiTools.CombineOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi; Enum Class RoiTools.CombineOp. java.lang.Object; java.lang.Enum<RoiTools.CombineOp>; qupath.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
Modifiability,extend,extends,". RoiTools.CombineOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi; Enum Class RoiTools.CombineOp. java.lang.Object; java.lang.Enum<RoiTools.CombineOp>; qupath.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
Security,hash,hashCode,"path.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RoiTools.CombineOp valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - th",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
Availability,mask,mask," Description; RoiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs.",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
Deployability,update,updated,"-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outside parent. fillHoles; public static ROI fillHoles(ROI roi); Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. Parameters:; roi - ; Returns:. removeSmallPieces; public static ROI removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels); Remove small fragments and fill small holes of an area ROI. Parameters:; roi - the ROI to refine; minAreaPixels - the minimum size of a fragment to retain; minHoleAreaPixels - the minimum size of a hole to retain, or -1 if all holes should be retained; Returns:; an updated ROI - which may be empty if the modifications caused the ROI to disappear; See Also:. GeometryTools.refineAreas(Geometry, double, double). getCircularity; public static double getCircularity(ROI roi); Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2).; Non-area ROIs return Double.NaN.; ; This ranges between 0 (for a line) and 1 (for a circle). Note that the pixel (i.e. not scaled) areas and perimeters are used. Parameters:; roi - the ROI to measure; Returns:; a circularity value, between 0 (a line) and 1 (a perfect circle). getCircularity; public static double getCircularity(ROI roi,; double pixelWidth,; double pixelHeight); Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2).; Non-area ROIs return Double.NaN.; ; This ranges between 0 (for a line) and 1 (for a circle). This version optionally allows non-square pixels t",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
Energy Efficiency,efficient,efficient,"els; tileHeight - requested tile height, in pixels; trimToROI - if true, trim tiles at the ROI boundary according to the ROI shape, otherwise retain full tiles that may only partially overlap; Returns:. computeTiledROIs; public static Collection<? extends ROI> computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap); Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array return",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
Modifiability,extend,extends,". RoiTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RoiTools. java.lang.Object; qupath.lib.roi.RoiTools. public class RoiTools; extends Object; A collection of static methods for working with ROIs. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; RoiTools.CombineOp. Methods of combining two ROIs. Constructor Summary; Constructors. Constructor; Description; RoiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randoml",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
Performance,perform,performed,"subtract; public static ROI subtract(ROI roiMain,; ROI... roisToSubtract); Subtract one or more ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract); Subtract a collection of ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity transform, the original ROI is returned unchanged; Returns:; the transformed ROI, or the original if no (non-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outs",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
Safety,avoid,avoid,"els; tileHeight - requested tile height, in pixels; trimToROI - if true, trim tiles at the ROI boundary according to the ROI shape, otherwise retain full tiles that may only partially overlap; Returns:. computeTiledROIs; public static Collection<? extends ROI> computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap); Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array return",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
Security,hash,hashCode,"AreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(Colle",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
Testability,test,test,"subtract; public static ROI subtract(ROI roiMain,; ROI... roisToSubtract); Subtract one or more ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract); Subtract a collection of ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity transform, the original ROI is returned unchanged; Returns:; the transformed ROI, or the original if no (non-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outs",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
Modifiability,extend,extends,". ShapeSimplifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public s",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
Performance,perform,performance,". ShapeSimplifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public s",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
Security,hash,hashCode,"peSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
Usability,simpl,simplifying,". ShapeSimplifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public s",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
Integrability,message,messages,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
Modifiability,extend,extends,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
Security,hash,hashCode,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
Testability,log,logger,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
Availability,avail,available,"Get the ROI for the primary selected object within the current PathObjectHierarchy. static Collection<PathObject>; getTileObjects(). Get a list of the current tile objects. static List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an in",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Deployability,release,releases,"Annotation(boolean, int, int) instead. static void; createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measureme",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Energy Efficiency,green,green," modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). Parameters:; hierarchy - . getColorRGB; @Deprecated; public static Integer getColorRGB(int... v); Deprecated.; Use instead makeRGB(int, int, int) or makeARGB(int, int, int, int). Create a new packed-int representation of an RGB color.; . Parameters:; v - A value between 0 and 255. If a single value is give, the result will be; a shade of gray (RGB all with that value). Otherwise, 3 or 4 values may be given to generate ; either an RGB or RGBA color. Note: values are expected in order RGBA, but Java's packed ints are really ARGB.; Returns:. makeRGB; public static Integer makeRGB(int r,; int g,; int b); Make a packed int representation of an RGB color.; Alpha defaults to 255.; Red, green and blue values should be in the range 0-255; if they are not, they will be clipped. Parameters:; r - ; g - ; b - ; Returns:. makeARGB; public static Integer makeARGB(int a,; int r,; int g,; int b); Make a packed int representation of an ARGB color.; Alpha, red, green and blue values should be in the range 0-255; if they are not, they will be clipped. Parameters:; a - ; r - ; g - ; b - ; Returns:. getCurrentServerPath; public static String getCurrentServerPath(); Get the path to the ImageServer of the current ImageData. Returns:; See Also:. getCurrentImageData(). getCurrentImageData; public static ImageData<BufferedImage> getCurrentImageData(); Get the path to the current ImageData.; ; This returns getBatchImageData() if it is not null; otherwise, it returns ; the default image data last set through setDefaultImageData(ImageData). Returns:; See Also:. getBatchImageData(). getProject; public static Project<BufferedImage> getProject(); Get the current project.; ; This returns getBatchProject() if it is not null; otherwise,",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Integrability,interface,interface," the version is not known. Constructor Details. QP; public QP(). Method Details. describe; public static String describe(Object o); List the fields and methods of a specified object. Parameters:; o - ; Returns:. describe; public static String describe(Class<?> cls); List the fields and methods of a specified class. Parameters:; cls - ; Returns:. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. setDefaultProject; public static void setDefaultProject(Project<BufferedImage> project); Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current project in the user interface, when running interactively. Parameters:; project - . setDefaultImageData; public static void setDefaultImageData(ImageData<BufferedImage> imageData); Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage()",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Modifiability,extend,extends,". QP (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class QP. java.lang.Object; qupath.lib.scripting.QP. Direct Known Subclasses:; QPEx. public class QP; extends Object; Collection of static methods that are useful for scripting.; ; Prior to running a script, the ImageData should be set so that the script can make use of it.; ; A different ImageData may be stored for different threads.; ; Note: This design may change in the future, to enable a non-static class to encapsulate ; the context for a running script. The limited ability to subclass a class containing static methods ; makes this design a bit problematic, while its package location means it cannot have access to GUI features ; (which it shouldn't have, because of the need to run headless... but sometimes the GUI is needed, e.g. to ; export images with markup). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageData.ImageType; BRIGHTFIELD_H_DAB. Brightfield image type with hematoxylin and DAB staining. static final ImageData.ImageType; BRIGHTFIELD_H_E. Brightfield image type with hematoxylin and eosin staining. static final ImageData.ImageType; BRIGHTFIELD_OTHER. Brightfield image type. static final ImageData.ImageType; FLUORESCENCE. Fluorescence image type. static final ImageData.ImageType; OTHER. Any other image type (neither brightfield nor fluorescence). static final String; PROJECT_BASE_DIR. Placeholder for the path to the current project. static final Version; VERSION. The current QuPath version, parsed according to semantic versioning. Constructor Summary; Constructors. Constructor; Description; QP();  . Method Summary. All MethodsStatic MethodsConcrete MethodsD",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Performance,load,loadDensityMap,"athObjectHierarchy. static Collection<PathObject>; getTileObjects(). Get a list of the current tile objects. static List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current sel",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Safety,detect,detections,"directory path relative to the current project, but do not make ; any changes on the file system. static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarc",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Security,access,access,". QP (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class QP. java.lang.Object; qupath.lib.scripting.QP. Direct Known Subclasses:; QPEx. public class QP; extends Object; Collection of static methods that are useful for scripting.; ; Prior to running a script, the ImageData should be set so that the script can make use of it.; ; A different ImageData may be stored for different threads.; ; Note: This design may change in the future, to enable a non-static class to encapsulate ; the context for a running script. The limited ability to subclass a class containing static methods ; makes this design a bit problematic, while its package location means it cannot have access to GUI features ; (which it shouldn't have, because of the need to run headless... but sometimes the GUI is needed, e.g. to ; export images with markup). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageData.ImageType; BRIGHTFIELD_H_DAB. Brightfield image type with hematoxylin and DAB staining. static final ImageData.ImageType; BRIGHTFIELD_H_E. Brightfield image type with hematoxylin and eosin staining. static final ImageData.ImageType; BRIGHTFIELD_OTHER. Brightfield image type. static final ImageData.ImageType; FLUORESCENCE. Fluorescence image type. static final ImageData.ImageType; OTHER. Any other image type (neither brightfield nor fluorescence). static final String; PROJECT_BASE_DIR. Placeholder for the path to the current project. static final Version; VERSION. The current QuPath version, parsed according to semantic versioning. Constructor Summary; Constructors. Constructor; Description; QP();  . Method Summary. All MethodsStatic MethodsConcrete MethodsD",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Testability,log,logger,"archy(). Get the PathObjectHierarchy of the current ImageData. static ImageData<BufferedImage>; getCurrentImageData(). Get the path to the current ImageData. static String; getCurrentImageName(). Get the name of the current image. static String; getCurrentImageNameWithoutExtension(). Get the name of the current image, removing any file extension. static ImageServer<?>; getCurrentServer(). Get the ImageServer of the current ImageData. static String; getCurrentServerPath(). Get the path to the ImageServer of the current ImageData. static PathClass; getDerivedPathClass(PathClass baseClass,; String name). Get a PathClass with the specified name, derived from another PathClass. static PathClass; getDerivedPathClass(PathClass baseClass,; String name,; Integer rgb). Get a PathClass with the specified name, derived from another PathClass. static Collection<PathObject>; getDetectionObjects(). Get a list of the current detection objects. static org.slf4j.Logger; getLogger(). Get the logger associated with this class. static PathClass; getNonIntensityAncestorPathClass(PathObject pathObject). Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. static List<PathObject>; getObjects(Predicate<PathObject> predicate). Get a list of all objects in the current hierarchy according to a specified predicate. static List<PathObject>; getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Get a list of all objects in the specified hierarchy according to a specified predicate. static PathClass; getPathClass(String name). Get a PathClass with the specified name. static PathClass; getPathClass(String name,; Integer rgb). Get a PathClass with the specified name and color. static Project<BufferedImage>; getProject(). Get the current project. static ProjectImageEntry<BufferedImage>; getProjectEntry(). Get the project entry for the currently-open image within the current project, ; or null if no project/image is open. static String; g",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Usability,clear,clearAllObjects,"an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear t",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
Modifiability,extend,extends,". ScriptAttributes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptAttributes. java.lang.Object; qupath.lib.scripting.ScriptAttributes. public class ScriptAttributes; extends Object; Default attributes that can be set when running scripts.; Script implementations should try to set these where possible using ScriptParameters.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html
Security,access,access,". ScriptAttributes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptAttributes. java.lang.Object; qupath.lib.scripting.ScriptAttributes. public class ScriptAttributes; extends Object; Default attributes that can be set when running scripts.; Script implementations should try to set these where possible using ScriptParameters.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html
Availability,error,error,". Modifier and Type; Method; Description; ScriptParameters; build(). Build the ScriptParameters with the current options. ScriptParameters.Builder; doUpdateHierarchy(boolean requestUpdate). Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). ScriptParameters.Builder; setArgs(String[] args). Set optional string args to pass to the script. ScriptParameters.Builder; setBatchIndex(int ind). Set the current image index for batch processing (default is 0). ScriptParameters.Builder; setBatchSaveResult(boolean doSave). Specify whether the script that is running should save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
Deployability,update,update,. ScriptParameters.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters.Builder. java.lang.Object; qupath.lib.scripting.ScriptParameters.Builder. Enclosing class:; ScriptParameters. public static class ScriptParameters.Builder; extends Object; Builder class for ScriptParameters. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptParameters; build(). Build the ScriptParameters with the current options. ScriptParameters.Builder; doUpdateHierarchy(boolean requestUpdate). Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). ScriptParameters.Builder; setArgs(String[] args). Set optional string args to pass to the script. ScriptParameters.Builder; setBatchIndex(int ind). Set the current image index for batch processing (default is 0). ScriptParameters.Builder; setBatchSaveResult(boolean doSave). Specify whether the script that is running should save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.B,MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
Modifiability,extend,extends,. ScriptParameters.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters.Builder. java.lang.Object; qupath.lib.scripting.ScriptParameters.Builder. Enclosing class:; ScriptParameters. public static class ScriptParameters.Builder; extends Object; Builder class for ScriptParameters. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptParameters; build(). Build the ScriptParameters with the current options. ScriptParameters.Builder; doUpdateHierarchy(boolean requestUpdate). Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). ScriptParameters.Builder; setArgs(String[] args). Set optional string args to pass to the script. ScriptParameters.Builder; setBatchIndex(int ind). Set the current image index for batch processing (default is 0). ScriptParameters.Builder; setBatchSaveResult(boolean doSave). Specify whether the script that is running should save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.B,MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
Security,hash,hashCode,"ers.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
Testability,log,logger,"iptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:.",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
Availability,avail,available,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters. java.lang.Object; qupath.lib.scripting.ScriptParameters. public class ScriptParameters; extends Object; Class that stores key information that is useful for running scripts. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ScriptParameters.Builder. Builder class for ScriptParameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptParameters.Builder; builder(). Create a new builder for ScriptParameters. boolean; doUpdateHierarchy(). Request whether to fire an update event for the object hierarchy, if an image data ; object is available. String[]; getArgs(). Get an optional array of string arguments passed to the script. int; getBatchIndex(). Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. Boolean; getBatchSaveResult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
Deployability,update,update,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters. java.lang.Object; qupath.lib.scripting.ScriptParameters. public class ScriptParameters; extends Object; Class that stores key information that is useful for running scripts. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ScriptParameters.Builder. Builder class for ScriptParameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptParameters.Builder; builder(). Create a new builder for ScriptParameters. boolean; doUpdateHierarchy(). Request whether to fire an update event for the object hierarchy, if an image data ; object is available. String[]; getArgs(). Get an optional array of string arguments passed to the script. int; getBatchIndex(). Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. Boolean; getBatchSaveResult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
Energy Efficiency,adapt,adapt,"ote that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; public int getBatchSize(); Get the number of images being batch processed, or 1 if just a single image is being processed.; ; This is useful in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefau",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
Modifiability,extend,extends,". ScriptParameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters. java.lang.Object; qupath.lib.scripting.ScriptParameters. public class ScriptParameters; extends Object; Class that stores key information that is useful for running scripts. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ScriptParameters.Builder. Builder class for ScriptParameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptParameters.Builder; builder(). Create a new builder for ScriptParameters. boolean; doUpdateHierarchy(). Request whether to fire an update event for the object hierarchy, if an image data ; object is available. String[]; getArgs(). Get an optional array of string arguments passed to the script. int; getBatchIndex(). Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. Boolean; getBatchSaveResult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject().",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
Performance,perform,performance,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
Safety,avoid,avoid,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
Security,hash,hashCode,"BatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should be used with the script. String; getScript(). Get the text of the script. Writer; getWriter(). Get the main writer for script output. boolean; useCompiled(). Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getFile; public File getFile(); Get the file where the script is located.; This can return null if the script is purely in-memory.; ; Note that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
Usability,intuit,intuitive," last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
Energy Efficiency,green,greenOD,"Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class EstimateStainVectors. java.lang.Object; qupath.lib.analysis.algorithms.EstimateStainVectors. public class EstimateStainVectors; extends Object; Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors.; ; Aspects of the automated method take inspiration from Macenko's 2009 paper; 'A METHOD FOR NORMALIZING HISTOLOGY SLIDES FOR QUANTITATIVE ANALYSIS'; although it also differs through its use of preprocessing and parameters, as well as its selection of an actual pixel value ; rather than projecting on the identified plane. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; EstimateStainVectors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorDeconvolutionStains; estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Check colors only currently applies to H&E. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors). Estimate two stains from a BufferedImage, with default parameter settings. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntrie",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
Modifiability,extend,extends,". EstimateStainVectors (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class EstimateStainVectors. java.lang.Object; qupath.lib.analysis.algorithms.EstimateStainVectors. public class EstimateStainVectors; extends Object; Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors.; ; Aspects of the automated method take inspiration from Macenko's 2009 paper; 'A METHOD FOR NORMALIZING HISTOLOGY SLIDES FOR QUANTITATIVE ANALYSIS'; although it also differs through its use of preprocessing and parameters, as well as its selection of an actual pixel value ; rather than projecting on the identified plane. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; EstimateStainVectors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorDeconvolutionStains; estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Check colors only currently applies to H&E. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors). Estimate two stains from a BufferedImage, with default parameter settings. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packe",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
Safety,avoid,avoid,"olean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colo",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
Security,hash,hashCode,",; double ignorePercentage,; boolean checkColors). Check colors only currently applies to H&E. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors). Estimate two stains from a BufferedImage, with default parameter settings. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minSt",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
Availability,mask,mask,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
Modifiability,extend,extends,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
Performance,optimiz,optimizations,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
Security,hash,hashCode,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
Integrability,interface,interfaces,". qupath.lib.analysis.algorithms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.algorithms. package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. Watershed. Implementation of 2D watershed transform. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html
Usability,simpl,simple,". qupath.lib.analysis.algorithms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.algorithms. package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. Watershed. Implementation of 2D watershed transform. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html
Modifiability,extend,extends,". Watershed (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels;",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html
Performance,optimiz,optimizations,". Watershed (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels;",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html
Security,hash,hashCode,"ld; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; minThreshold - minimum threshold; labels will not expand into pixels with values below the threshold; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html
Modifiability,extend,extends,". CoocurranceMatrices (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class CoocurranceMatrices. java.lang.Object; qupath.lib.analysis.features.CoocurranceMatrices. public class CoocurranceMatrices; extends Object; Data structure to hold cooccurrence matrices for computation of Haralick features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CoocurranceMatrices(int n). Initialize coocurrence matrices. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; computeFeatures(). Compute features. HaralickFeatures; getMaxFeatures(). Compute maximum features from all four rotations. HaralickFeatures; getMeanFeatures(). Compute averaged features over all four rotations. HaralickFeatures; getMinFeatures(). Compute minimum features from all four rotations. void; put0(int i,; int j). Record coocurrence for a (binned) value pair without rotation. void; put135(int i,; int j). Record coocurrence for a (binned) value pair with 135 degree rotation. void; put45(int i,; int j). Record coocurrence for a (binned) value pair with 45 degree rotation. void; put90(int i,; int j). Record coocurrence for a (binned) value pair with 90 degree rotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CoocurranceMatrices; public CoocurranceMatrices(int n); Initialize coocurrence matrices. Parameters:; n - number of bins. Method Details. put0; public void put0(int i,; int j); Record coocurrence for a (binned) value pair without rotation. Parameters:; i - ; j - . put45; public void put45(int i,; int j);",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html
Security,hash,hashCode,"Constructor Summary; Constructors. Constructor; Description; CoocurranceMatrices(int n). Initialize coocurrence matrices. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; computeFeatures(). Compute features. HaralickFeatures; getMaxFeatures(). Compute maximum features from all four rotations. HaralickFeatures; getMeanFeatures(). Compute averaged features over all four rotations. HaralickFeatures; getMinFeatures(). Compute minimum features from all four rotations. void; put0(int i,; int j). Record coocurrence for a (binned) value pair without rotation. void; put135(int i,; int j). Record coocurrence for a (binned) value pair with 135 degree rotation. void; put45(int i,; int j). Record coocurrence for a (binned) value pair with 45 degree rotation. void; put90(int i,; int j). Record coocurrence for a (binned) value pair with 90 degree rotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CoocurranceMatrices; public CoocurranceMatrices(int n); Initialize coocurrence matrices. Parameters:; n - number of bins. Method Details. put0; public void put0(int i,; int j); Record coocurrence for a (binned) value pair without rotation. Parameters:; i - ; j - . put45; public void put45(int i,; int j); Record coocurrence for a (binned) value pair with 45 degree rotation. Parameters:; i - ; j - . put90; public void put90(int i,; int j); Record coocurrence for a (binned) value pair with 90 degree rotation. Parameters:; i - ; j - . put135; public void put135(int i,; int j); Record coocurrence for a (binned) value pair with 135 degree rotation. Parameters:; i - ; j - . computeFeatures; public void computeFeatures(); Compute features. getMeanFeatures; public HaralickFeatures getMeanFeatures(); Compute averaged features over all four rotations. Returns:. getMinFeatures; public HaralickFeatures getMinFeatures(); Compute ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html
Availability,mask,masking,". HaralickFeatureComputer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
Deployability,update,updateCooccurrenceMatrices,"n links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static Coocurrance",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
Modifiability,extend,extends,". HaralickFeatureComputer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
Security,hash,hashCode,"th.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matric",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
Modifiability,extend,extends,". HaralickFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatures. java.lang.Object; qupath.lib.analysis.features.HaralickFeatures. public class HaralickFeatures; extends Object; Helper class for computing Haralick features given a cooccurrence matrix. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getFeature(int n). Get the value of the specified feature. String; getFeatureName(int n). Get the name of the specified feature. int; nFeatures(). Total number of Haralick features. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. getFeatureName; public String getFeatureName(int n); Get the name of the specified feature. Parameters:; n - ; Returns:. nFeatures; public int nFeatures(); Total number of Haralick features. Returns:. getFeature; public double getFeature(int n); Get the value of the specified feature. Parameters:; n - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html
Security,hash,hashCode,". HaralickFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatures. java.lang.Object; qupath.lib.analysis.features.HaralickFeatures. public class HaralickFeatures; extends Object; Helper class for computing Haralick features given a cooccurrence matrix. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getFeature(int n). Get the value of the specified feature. String; getFeatureName(int n). Get the name of the specified feature. int; nFeatures(). Total number of Haralick features. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. getFeatureName; public String getFeatureName(int n); Get the name of the specified feature. Parameters:; n - ; Returns:. nFeatures; public int nFeatures(); Total number of Haralick features. Returns:. getFeature; public double getFeature(int n); Get the value of the specified feature. Parameters:; n - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html
Modifiability,extend,extends,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html
Security,hash,hashCode,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html
Testability,test,test,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html
Integrability,interface,interfaces,". ObjectMeasurements.Compartments (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Compartments. java.lang.Object; java.lang.Enum<ObjectMeasurements.Compartments>; qupath.lib.analysis.features.ObjectMeasurements.Compartments. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell regi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
Modifiability,extend,extends,". ObjectMeasurements.Compartments (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Compartments. java.lang.Object; java.lang.Enum<ObjectMeasurements.Compartments>; qupath.lib.analysis.features.ObjectMeasurements.Compartments. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell regi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
Security,hash,hashCode,"Measurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell region, with nucleus removed. CELL; public static final ObjectMeasurements.Compartments CELL; Full cell region. MEMBRANE; public static final ObjectMeasurements.Compartments MEMBRANE; Cell boundary, with interior removed. Method Details. values; public static ObjectMeasurements.Compartments[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Compartments valueOf(String name); Returns the enum constant of this class with the specified name.; The string must",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
Availability,down,downsample,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class ObjectMeasurements. java.lang.Object; qupath.lib.analysis.features.ObjectMeasurements. public class ObjectMeasurements; extends Object; Experimental class to generate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add sh",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
Deployability,release,release,". ObjectMeasurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class ObjectMeasurements. java.lang.Object; qupath.lib.analysis.features.ObjectMeasurements. public class ObjectMeasurements; extends Object; Experimental class to generate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
Energy Efficiency,efficient,efficiently,"addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in the future, to enable neighboring cells to be ; measured more efficiently. Parameters:; server - the server containing the pixels (and channels) to be measured; pathObject - the cell to measure (the MeasurementList will be updated); downsample - resolution at which to request pixels; measurements - requested measurements to make; compartments - the cell compartments to measure; ignored if the object is not a cell; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
Modifiability,extend,extends,". ObjectMeasurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class ObjectMeasurements. java.lang.Object; qupath.lib.analysis.features.ObjectMeasurements. public class ObjectMeasurements; extends Object; Experimental class to generate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
Security,hash,hashCode,"es. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
Integrability,interface,interfaces,". ObjectMeasurements.Measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Measurements. java.lang.Object; java.lang.Enum<ObjectMeasurements.Measurements>; qupath.lib.analysis.features.ObjectMeasurements.Measurements. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Measurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median v",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
Modifiability,extend,extends,". ObjectMeasurements.Measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Measurements. java.lang.Object; java.lang.Enum<ObjectMeasurements.Measurements>; qupath.lib.analysis.features.ObjectMeasurements.Measurements. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Measurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median v",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
Security,hash,hashCode,"asurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median value. MIN; public static final ObjectMeasurements.Measurements MIN; Minimum value. MAX; public static final ObjectMeasurements.Measurements MAX; Maximum value. STD_DEV; public static final ObjectMeasurements.Measurements STD_DEV; Standard deviation value. VARIANCE; public static final ObjectMeasurements.Measurements VARIANCE; Variance value. Method Details. values; public static ObjectMeasurements.Measurements[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Measu",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
Availability,avail,available,"hodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETER; Minimum diameter. NUCLEUS_CELL_RATIO; public static final ObjectMeasurements.ShapeFeatures NUCLEUS_CELL_RATIO; Nucleus/cell area ratio (only relevant to cell objects). Method Details. values; public static ObjectMeasurements.ShapeFeatures[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.ShapeFeatures valueOf(String name); Returns the enum constant of this class with the specified name.; The string must m",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
Integrability,interface,interfaces,". ObjectMeasurements.ShapeFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.ShapeFeatures. java.lang.Object; java.lang.Enum<ObjectMeasurements.ShapeFeatures>; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.ShapeFeatures>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.ShapeFeatures; extends Enum<ObjectMeasurements.ShapeFeatures>; Standard measurements that may be computed from shapes. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
Modifiability,extend,extends,". ObjectMeasurements.ShapeFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.ShapeFeatures. java.lang.Object; java.lang.Enum<ObjectMeasurements.ShapeFeatures>; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.ShapeFeatures>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.ShapeFeatures; extends Enum<ObjectMeasurements.ShapeFeatures>; Standard measurements that may be computed from shapes. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
Security,hash,hashCode,"um; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETER; Minimum diameter. NUCLEUS_CELL_RATIO; public static final ObjectMeasurements",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
Integrability,interface,interfaces,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html
Testability,test,test,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html
Usability,simpl,simple,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html
Integrability,interface,interface,. ColorModels.ColorModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Interface ColorModels.ColorModelBuilder. Enclosing class:; ColorModels. public static interface ColorModels.ColorModelBuilder; Simple builder to create a ColorModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ColorModel; build(). Build a ColorModel. Method Details. build; ColorModel build(); Build a ColorModel. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.ColorModelBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.ColorModelBuilder.html
Modifiability,extend,extends,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html
Safety,avoid,avoid,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html
Security,hash,hashCode,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html
Integrability,interface,interface,". ColorModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels. public class ColorModels; extends Object; Helper class for creating a JSON-serializable way to generate a ColorModel. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColo",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html
Modifiability,extend,extends,". ColorModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels. public class ColorModels; extends Object; Helper class for creating a JSON-serializable way to generate a ColorModel. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColo",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html
Security,hash,hashCode,"lass to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel); Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Parameters:; mainChannel - the main channel to display (colormap will be used); alphaChannel - an optional alpha channel (colormap will be ignored); Returns:; the ColorModels.ColorModelBuilder. createBand; public static ColorModels.DisplayBand createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay); Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). Parameters:; colorMapName - name of the ColorMaps.ColorMap; band - image band (the BufferedImage term - QuPath often refers to this as a channel); minDisplay - value associated with the first e",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html
Availability,error,errors," in DensityMaps.builder(PathObjectPredicate) to ; extract a subset of objects for which densities are determined. Parameters:; name - name of the filter; usually this is the name of a classification that the objects should have; filter - the filter itself (predicate that must be JSON-serializable); Returns:; this builder. colorModel; public DensityMaps.DensityMapBuilder colorModel(ColorModels.ColorModelBuilder colorModelBuilder); Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData).; If this is not set, the default ColorModel used with buildServer(ImageData) may not ; convert well to RGB. Parameters:; colorModelBuilder - ; Returns:. radius; public DensityMaps.DensityMapBuilder radius(double radius); The radius of the filter used to calculate densities. Parameters:; radius - ; Returns:; this builder. buildParameters; public DensityMaps.DensityMapParameters buildParameters(); Build a DensityMaps.DensityMapParameters object containing the main density map parameters. Returns:. buildClassifier; public PixelClassifier buildClassifier(ImageData<BufferedImage> imageData); Build a PixelClassifier for a density map using the current parameters and the specified ImageData. Parameters:; imageData - ; Returns:; the density map; See Also:. buildServer(ImageData). buildServer; public ImageServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData); Build an ImageServer representing this density map.; ; Note that this involved generating a unique ID and caching all tiles.; The reason is that density maps can change over time as the object hierarchy changes, ; and therefore one should be generated that represents a snapshot in time.; However, this imposes a limit on the size of density map that can be generated to ; avoid memory errors.; ; If greater control is needed over when and how the density map is created, using buildClassifier(ImageData) instead. Parameters:; imageData - ; Returns:; See Also:. buildClassifier(ImageData). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
Modifiability,extend,extends,". DensityMaps.DensityMapBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class DensityMaps.DensityMapBuilder. java.lang.Object; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Enclosing class:; DensityMaps. public static class DensityMaps.DensityMapBuilder; extends Object; Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapBuilder; addDensities(String name,; PathObjectPredicates.PathObjectPredicate filter). Add a filter for computing densities. PixelClassifier; buildClassifier(ImageData<BufferedImage> imageData). Build a PixelClassifier for a density map using the current parameters and the specified ImageData. DensityMaps.DensityMapParameters; buildParameters(). Build a DensityMaps.DensityMapParameters object containing the main density map parameters. ImageServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData). Build an ImageServer representing this density map. DensityMaps.DensityMapBuilder; colorModel(ColorModels.ColorModelBuilder colorModelBuilder). Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData). DensityMaps.DensityMapBuilder; pixelSize(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
Performance,perform,performance,"e(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. pixelSize; public DensityMaps.DensityMapBuilder pixelSize(PixelCalibration requestedPixelSize); Requested pixel size to determine the resolution of the density map, in calibrated units.; ; If this is not specified, an ImageData should be provided to buildClassifier(ImageData) ; and used to determine a suitable pixel size based upon the radius value and the image dimensions.; ; This is recommended, since specifying a pixel size could potentially result in creating maps ; that are too large or too small, causing performance or memory problems. Parameters:; requestedPixelSize - ; Returns:; this builder; See Also:. radius(double). type; public DensityMaps.DensityMapBuilder type(DensityMaps.DensityMapType type); The type of the density map, which determines any associated normalization. Parameters:; type - ; Returns:; this builder. addDensities; public DensityMaps.DensityMapBuilder addDensities(String name,; PathObjectPredicates.PathObjectPredicate filter); Add a filter for computing densities.; This is added on top of the filter specified in DensityMaps.builder(PathObjectPredicate) to ; extract a subset of objects for which densities are determined. Parameters:; name - name of the filter; usually this is the name of a classification that the objects should have; filter - the filter itself (predicate that must be JSON-serializable); Returns:; this builder. colorModel; public DensityMaps.DensityMapBuilder colorModel(ColorModels.ColorModelBuilde",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
Safety,avoid,avoid," in DensityMaps.builder(PathObjectPredicate) to ; extract a subset of objects for which densities are determined. Parameters:; name - name of the filter; usually this is the name of a classification that the objects should have; filter - the filter itself (predicate that must be JSON-serializable); Returns:; this builder. colorModel; public DensityMaps.DensityMapBuilder colorModel(ColorModels.ColorModelBuilder colorModelBuilder); Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData).; If this is not set, the default ColorModel used with buildServer(ImageData) may not ; convert well to RGB. Parameters:; colorModelBuilder - ; Returns:. radius; public DensityMaps.DensityMapBuilder radius(double radius); The radius of the filter used to calculate densities. Parameters:; radius - ; Returns:; this builder. buildParameters; public DensityMaps.DensityMapParameters buildParameters(); Build a DensityMaps.DensityMapParameters object containing the main density map parameters. Returns:. buildClassifier; public PixelClassifier buildClassifier(ImageData<BufferedImage> imageData); Build a PixelClassifier for a density map using the current parameters and the specified ImageData. Parameters:; imageData - ; Returns:; the density map; See Also:. buildServer(ImageData). buildServer; public ImageServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData); Build an ImageServer representing this density map.; ; Note that this involved generating a unique ID and caching all tiles.; The reason is that density maps can change over time as the object hierarchy changes, ; and therefore one should be generated that represents a snapshot in time.; However, this imposes a limit on the size of density map that can be generated to ; avoid memory errors.; ; If greater control is needed over when and how the density map is created, using buildClassifier(ImageData) instead. Parameters:; imageData - ; Returns:; See Also:. buildClassifier(ImageData). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
Security,hash,hashCode," the specified ImageData. DensityMaps.DensityMapParameters; buildParameters(). Build a DensityMaps.DensityMapParameters object containing the main density map parameters. ImageServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData). Build an ImageServer representing this density map. DensityMaps.DensityMapBuilder; colorModel(ColorModels.ColorModelBuilder colorModelBuilder). Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData). DensityMaps.DensityMapBuilder; pixelSize(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. pixelSize; public DensityMaps.DensityMapBuilder pixelSize(PixelCalibration requestedPixelSize); Requested pixel size to determine the resolution of the density map, in calibrated units.; ; If this is not specified, an ImageData should be provided to buildClassifier(ImageData) ; and used to determine a suitable pixel size based upon the radius value and the image dimensions.; ; This is recommended, since specifying a pixel size could potentially result in creating maps ; that are too large or too small, causing performance or memory problems. Parameters:; requestedPixelSize - ; Returns:; this builder; See Also:. radius(double). type; public DensityMaps.DensityMapBuilder type(DensityMaps.DensityMapType type); The type of the density map, which determines any associated normalization. Parameters:; type - ; Returns:; this builder. addDensities; public DensityMaps.DensityMapBuilder addDensities(String name,; PathObjectPredica",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
Modifiability,extend,extends,". DensityMaps.DensityMapParameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class DensityMaps.DensityMapParameters. java.lang.Object; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Enclosing class:; DensityMaps. public static class DensityMaps.DensityMapParameters; extends Object; Class for storing parameters to build a ImageServer representing a density map. See Also:. DensityMaps.DensityMapBuilder. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapType; getDensityType(). Get the normalization type of the density map. PathObjectPredicates.PathObjectPredicate; getMainObjectFilter(). Get the primary object filter. int; getMaxHeight(). Get the maximum height of the density map. int; getMaxWidth(). Get the maximum width of the density map. PixelCalibration; getPixelSize(). Get the requested pixel size for the density map. double; getRadius(). Get the radius for the density map, in calibrated units. Map<String,PathObjectPredicates.PathObjectPredicate>; getSecondaryObjectFilters(). Get the secondary object filters. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRadius; public double getRadius(); Get the radius for the density map, in calibrated units. Returns:. getMaxWidth; public int getMaxWidth(); Get the maximum width of the density map. Ignored if getPixelSize() is not null. Returns:. getMaxHeight; public int getMaxHeight(); Get the maximum height of the density map. Ignored if getPixelSize() is not null. Returns:. getPixelSize; public PixelCalibration getPixelSize(); ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html
Security,hash,hashCode,"ing class:; DensityMaps. public static class DensityMaps.DensityMapParameters; extends Object; Class for storing parameters to build a ImageServer representing a density map. See Also:. DensityMaps.DensityMapBuilder. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapType; getDensityType(). Get the normalization type of the density map. PathObjectPredicates.PathObjectPredicate; getMainObjectFilter(). Get the primary object filter. int; getMaxHeight(). Get the maximum height of the density map. int; getMaxWidth(). Get the maximum width of the density map. PixelCalibration; getPixelSize(). Get the requested pixel size for the density map. double; getRadius(). Get the radius for the density map, in calibrated units. Map<String,PathObjectPredicates.PathObjectPredicate>; getSecondaryObjectFilters(). Get the secondary object filters. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRadius; public double getRadius(); Get the radius for the density map, in calibrated units. Returns:. getMaxWidth; public int getMaxWidth(); Get the maximum width of the density map. Ignored if getPixelSize() is not null. Returns:. getMaxHeight; public int getMaxHeight(); Get the maximum height of the density map. Ignored if getPixelSize() is not null. Returns:. getPixelSize; public PixelCalibration getPixelSize(); Get the requested pixel size for the density map. This may be null if an appropriate resolution can be generated automatically. Returns:. getDensityType; public DensityMaps.DensityMapType getDensityType(); Get the normalization type of the density map. Returns:. getMainObjectFilter; public PathObjectPredicates.PathObjectPredicate getMainObjectFilter(); Get the primary object filter. Returns:. getSecondaryObjectFilters; public Map<String,PathObjectPredicates.PathObjectPredicate> getSecondaryObjectFilters(); ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html
Integrability,interface,interfaces,". DensityMaps.DensityMapType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Enum Class DensityMaps.DensityMapType. java.lang.Object; java.lang.Enum<DensityMaps.DensityMapType>; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. All Implemented Interfaces:; Serializable, Comparable<DensityMaps.DensityMapType>, Constable. Enclosing class:; DensityMaps. public static enum DensityMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts i",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
Modifiability,extend,extends,". DensityMaps.DensityMapType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Enum Class DensityMaps.DensityMapType. java.lang.Object; java.lang.Enum<DensityMaps.DensityMapType>; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. All Implemented Interfaces:; Serializable, Comparable<DensityMaps.DensityMapType>, Constable. Enclosing class:; DensityMaps. public static enum DensityMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts i",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
Security,hash,hashCode,"yMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts in a defined radius.; This is equivalent to applying a circular sum filter to object counts per pixel. GAUSSIAN; public static final DensityMaps.DensityMapType GAUSSIAN; Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius.; This is equivalent to applying a Gaussian filter to object counts per pixel. PERCENT; public static final DensityMaps.DensityMapType PERCENT; Maps contain at least two channels. The last channel contains the total count of objects within ; the density region.; All other channels contain the proportion of objects meeting specific criteria, expressed as a ; percentage of the corresponding total object count.; ; This is useful, for example, to ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
Modifiability,extend,extends,". DensityMaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class DensityMaps. java.lang.Object; qupath.lib.analysis.heatmaps.DensityMaps. public class DensityMaps; extends Object; Class for constructing and using density maps.; ; A density map is an ImageServer with the channel type ImageServerMetadata.ChannelType.DENSITY.; The pixel values relate to the density of objects of some kind, based upon applying one or more predicates.; ; Currently, only 2D density maps are supported.; There are several supported density map types, defined with DensityMaps.DensityMapType. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. static class ; DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. static enum ; DensityMaps.DensityMapType. Density map types. Field Summary; Fields. Modifier and Type; Field; Description; static final String; CHANNEL_ALL_OBJECTS. Channel name for the channel with all object counts (not always present). static final String; PROJECT_LOCATION. Default location to use when storing density maps in a project. Constructor Summary; Constructors. Constructor; Description; DensityMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DensityMaps.DensityMapBuilder; builder(DensityMaps.DensityMapBuilder builder). Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. static DensityMaps.DensityMapBuilder; buil",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
Performance,load,loadDensityMap,"ject counts (not always present). static final String; PROJECT_LOCATION. Default location to use when storing density maps in a project. Constructor Summary; Constructors. Constructor; Description; DensityMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DensityMaps.DensityMapBuilder; builder(DensityMaps.DensityMapBuilder builder). Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. static DensityMaps.DensityMapBuilder; builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter). Create a new DensityMaps.DensityMapBuilder to generate a customized density map. static void; findHotspots(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
Security,hash,hashCode,"rchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.DensityMapBuilder builder); Create a new DensityMaps.DensityMapBuilder initia",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
Integrability,interface,interfaces,. qupath.lib.analysis.heatmaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.heatmaps. package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ColorModels. Helper class for creating a JSON-serializable way to generate a ColorModel. ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html
Usability,simpl,simple,. qupath.lib.analysis.heatmaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.heatmaps. package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ColorModels. Helper class for creating a JSON-serializable way to generate a ColorModel. ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html
Modifiability,extend,extends,". ContourTracing.ChannelThreshold (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class ContourTracing.ChannelThreshold. java.lang.Object; qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Enclosing class:; ContourTracing. public static class ContourTracing.ChannelThreshold; extends Object; Helper class defining global thresholds to apply to a single image channel. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ContourTracing.ChannelThreshold; create(int channel). Create a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html
Security,hash,hashCode,"a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold create(int channel); Create a simple channel threshold. This contains no intensity values (min/max thresholds are infinity) ; but it is useful for thresholding classification images. In this case, the channel refers to the classification ; label. Parameters:; channel - ; Returns:. create; public static ContourTracing.ChannelThreshold create(int channel,; double minThreshold,; double maxThreshold); Create a threshold to select values between a minimum and maximum (inclusive). Parameters:; channel - channel to threshold; minThreshold - minimum value (inclusive); maxThreshold - maximum value (inclusive); Returns:. createAbove; public static ContourTracing.ChannelThreshold createAbove(int channel,; double minThreshold); Create a threshold to select values greater than or equal to a specified threshold. Parameters:; channel - the channel to threshold; minThreshold - the minimum",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html
Usability,simpl,simple,". ContourTracing.ChannelThreshold (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class ContourTracing.ChannelThreshold. java.lang.Object; qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Enclosing class:; ContourTracing. public static class ContourTracing.ChannelThreshold; extends Object; Helper class defining global thresholds to apply to a single image channel. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ContourTracing.ChannelThreshold; create(int channel). Create a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html
Availability,error,error,"eServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of obje",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
Modifiability,extend,extends,". ContourTracing (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class ContourTracing. java.lang.Object; qupath.lib.analysis.images.ContourTracing. public class ContourTracing; extends Object; Class to convert labelled images to Geometry objects, ROIs and PathObjects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. Constructor Summary; Constructors. Constructor; Description; ContourTracing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<PathObject>; createAnnotations(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects from a labelled image. static List<PathObject>; createCells(Raster raster,; int bandNuclei,; int bandCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from two bands of a raster representing a labelled image. static List<PathObject>; createCells(SimpleImage imageNuclei,; SimpleImage imageCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from a pair of labelled images. static List<PathObject>; createDetections(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects from a labelled image. static BiFunction<ROI,Number,PathObject>; createNumberedObjectFunction(Function<ROI,PathObject> creator). Create a (bi)function to generate an object from a ROI and a number, setting the name of the object to match the number. static BiFunction<ROI,Number,PathObject>; createObjectFunctio",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
Safety,detect,detection,"tourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. Constructor Summary; Constructors. Constructor; Description; ContourTracing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<PathObject>; createAnnotations(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects from a labelled image. static List<PathObject>; createCells(Raster raster,; int bandNuclei,; int bandCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from two bands of a raster representing a labelled image. static List<PathObject>; createCells(SimpleImage imageNuclei,; SimpleImage imageCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from a pair of labelled images. static List<PathObject>; createDetections(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects from a labelled image. static BiFunction<ROI,Number,PathObject>; createNumberedObjectFunction(Function<ROI,PathObject> creator). Create a (bi)function to generate an object from a ROI and a number, setting the name of the object to match the number. static BiFunction<ROI,Number,PathObject>; createObjectFunction(Function<ROI,PathObject> creator,; BiConsumer<PathObject,Number> numberer). Create a (bi)function to generate an object from a ROI and a number. static List<PathObject>; createObjects(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects from one band of a raster containing integer labels. static List<PathObject>; createObjects(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects from a labelled image. static Map<Number,ROI>; createROIs(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
Security,hash,hashCode," to generate cell objects, by providing a nucleus and corresponding cell labels. static boolean; maybeCellLabels(SimpleImage imageNuclei,; SimpleImage imageCells,; int minLabel). Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeometries(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the l",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
Integrability,interface,interfaces,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html
Security,access,accessing,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html
Usability,simpl,simple,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html
Integrability,interface,interface,". SimpleImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleImage. All Known Subinterfaces:; SimpleModifiableImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleImage; A minimal interface for accessing pixel values in a single-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. Method Details. getValue; float getValue(int x,; int y); Get the value of a single pixel as a float. Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. getWidth; int getWidth(); Get the image width. Returns:. getHeight; int getHeight(); Get the image height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html
Security,access,accessing,". SimpleImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleImage. All Known Subinterfaces:; SimpleModifiableImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleImage; A minimal interface for accessing pixel values in a single-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. Method Details. getValue; float getValue(int x,; int y); Get the value of a single pixel as a float. Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. getWidth; int getWidth(); Get the image width. Returns:. getHeight; int getHeight(); Get the image height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html
Modifiability,extend,extends,". SimpleImages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class SimpleImages. java.lang.Object; qupath.lib.analysis.images.SimpleImages. public class SimpleImages; extends Object; Create SimpleImage instances for basic pixel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleImages();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SimpleModifiableImage; createFloatImage(float[] data,; int width,; int height). Create a SimpleImage backed by an existing float array of pixels. static SimpleModifiableImage; createFloatImage(int width,; int height). Create a SimpleImage backed by a float array of pixels. static float[]; getPixels(SimpleImage image,; boolean direct). Get the pixel values for the image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleImages; public SimpleImages(). Method Details. getPixels; public static float[] getPixels(SimpleImage image,; boolean direct); Get the pixel values for the image. Parameters:; image - ; direct - if true, return the direct pixel buffer if possible. The caller should not modify this.; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(float[] data,; int width,; int height); Create a SimpleImage backed by an existing float array of pixels.; ; Pixels are stored in row-major order. Parameters:; data - ; width - ; height - ; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(int width,; int height); Create a SimpleImage backed by a float array of p",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html
Security,hash,hashCode,"d on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class SimpleImages. java.lang.Object; qupath.lib.analysis.images.SimpleImages. public class SimpleImages; extends Object; Create SimpleImage instances for basic pixel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleImages();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SimpleModifiableImage; createFloatImage(float[] data,; int width,; int height). Create a SimpleImage backed by an existing float array of pixels. static SimpleModifiableImage; createFloatImage(int width,; int height). Create a SimpleImage backed by a float array of pixels. static float[]; getPixels(SimpleImage image,; boolean direct). Get the pixel values for the image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleImages; public SimpleImages(). Method Details. getPixels; public static float[] getPixels(SimpleImage image,; boolean direct); Get the pixel values for the image. Parameters:; image - ; direct - if true, return the direct pixel buffer if possible. The caller should not modify this.; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(float[] data,; int width,; int height); Create a SimpleImage backed by an existing float array of pixels.; ; Pixels are stored in row-major order. Parameters:; data - ; width - ; height - ; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(int width,; int height); Create a SimpleImage backed by a float array of pixels. Parameters:; width - ; height - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html
Integrability,interface,interface,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html
Modifiability,extend,extends,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html
Security,access,access,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html
Integrability,interface,interface,". ArrayWrappers.ArrayWrapper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Interface ArrayWrappers.ArrayWrapper. Enclosing class:; ArrayWrappers. public static interface ArrayWrappers.ArrayWrapper; Simple wrapper for an array or list, enabling values to be returned as doubles. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDouble(int ind). Extract one entry from the array, converting to double as necessary. boolean; isIntegerWrapper(). Returns true if the array wrapper only supports integer values. int; size(). Number of entries in the array. Method Details. size; int size(); Number of entries in the array. Returns:. getDouble; double getDouble(int ind); Extract one entry from the array, converting to double as necessary. Parameters:; ind - ; Returns:. isIntegerWrapper; boolean isIntegerWrapper(); Returns true if the array wrapper only supports integer values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html
Integrability,wrap,wrappers,". ArrayWrappers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Cr",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
Modifiability,extend,extends,". ArrayWrappers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Cr",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
Safety,predict,predictably,"kip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles.",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
Security,hash,hashCode,"rned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
Integrability,depend,depend,"istogrammed. Returns:. getSum; public double getSum(); Get the sum of all the values being histogrammed. Returns:. nValues; public long nValues(); Number of values represented in the histogram (i.e. the length of the input array). Returns:. nMissingValues; public long nMissingValues(); Number of NaNs in the input array. Returns:. getBinIndexForValue; public int getBinIndexForValue(double value,; double binWidth); Get the index of the bin that should contain the specified value. ; This assumes that all bins have the same width (binWidth). Parameters:; value - ; binWidth - ; Returns:; bin index; See Also:. getBinIndexForValue(double). getMaxCount; public long getMaxCount(); Get the highest count found for any bin. Returns:; getMaxNormalizedCount(). getMaxNormalizedCount; public double getMaxNormalizedCount(); Get the highest count found for any bin, divided by the total counts across the entire histogram. Returns:; getMaxCount(). nBins; public int nBins(); Total number of histogram bins. Returns:. getCountSum; public long getCountSum(); Sum of all histogram counts. Returns:. toString; public String toString(). Overrides:; toString in class Object. getMeasurementValues; public static double[] getMeasurementValues(Collection<PathObject> pathObjects,; String measurementName); Extract a specific measurement for each PathObject in a collection, storing the result in an array.; ; The order of entries in the array will depend upon the iteration order of the collection (usually a list). Parameters:; pathObjects - ; measurementName - ; Returns:; See Also:. makeMeasurementHistogram(Collection, String, int). makeMeasurementHistogram; public static Histogram makeMeasurementHistogram(Collection<PathObject> pathObjects,; String measurementName,; int nBins); Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. Parameters:; pathObjects - ; measurementName - ; nBins - ; Returns:; See Also:. getMeasurementValues(Collection, String). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html
Modifiability,extend,extends,". Histogram (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class Histogram. java.lang.Object; qupath.lib.analysis.stats.Histogram. public class Histogram; extends Object; Class for storing histogram data & basic statistics.; ; TODO: Document int check - if all values are integers, the bin size cannot be < 1. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Histogram(double[] values,; int nBins). Create histogram from a double array, using a specified number of bins and the data min/max as the min/max edges. Histogram(double[] valuesArray,; int nBins,; double minEdge,; double maxEdge). Create a histogram from an array of values, optionally specifying the minimum & maximum values to include. Histogram(float[] values,; int nBins). Create histogram from a float array, using a specified number of bins and the data min/max as the min/max edges. Histogram(float[] valuesArray,; int nBins,; double minEdge,; double maxEdge). Create a histogram from an array of values, optionally specifying the minimum & maximum values to include. Histogram(int[] valuesArray,; int nBins,; double minEdge,; double maxEdge). Create a histogram from an array of values, optionally specifying the minimum & maximum values to include. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getBinIndexForValue(double value,; double binWidth). Get the index of the bin that should contain the specified value. double; getBinLeftEdge(int ind). Get the lower edge for a specified bin. double; getBinRightEdge(int ind). Get the upper edge for a specified bin. double; getBinWidth(int ind). Get the width of a bin, which ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html
Security,hash,hashCode,"le; getMinValue(). Get the minimum of all the values being histogrammed. double; getNormalizedCountsForBin(int ind). Get the normalized histogram count for the specified bin. double; getStdDev(). Get the standard deviation of all the values being histogrammed. double; getSum(). Get the sum of all the values being histogrammed. double; getVariance(). Get the variance of all the values being histogrammed. boolean; isInteger(). Check if the histogram has been generated from integer values only. static Histogram; makeMeasurementHistogram(Collection<PathObject> pathObjects,; String measurementName,; int nBins). Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. int; nBins(). Total number of histogram bins. long; nMissingValues(). Number of NaNs in the input array. long; nValues(). Number of values represented in the histogram (i.e. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Histogram; public Histogram(double[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be computed; nBins - number of histogram bins (will be number of edges - 1); minEdge - the minimum (edge) value to include in the histogram, or Double.NaN (to use the data minimum); maxEdge - the maximum (edge) value to include in the histogram, or Double.NaN (to use the data maximum). Histogram; public Histogram(float[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be com",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html
Integrability,interface,interfaces,". qupath.lib.analysis.stats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats. package qupath.lib.analysis.stats. Calculate simple statistics from arrays. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. All Classes and InterfacesInterfacesClasses. Class; Description; ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Histogram. Class for storing histogram data & basic statistics. RunningStatistics. Helper class for computing basic statistics from values as they are added. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html
Usability,simpl,simple,". qupath.lib.analysis.stats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats. package qupath.lib.analysis.stats. Calculate simple statistics from arrays. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. All Classes and InterfacesInterfacesClasses. Class; Description; ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Histogram. Class for storing histogram data & basic statistics. RunningStatistics. Helper class for computing basic statistics from values as they are added. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html
Availability,mask,masked,". RunningStatistics (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class RunningStatistics. java.lang.Object; qupath.lib.analysis.stats.RunningStatistics. public class RunningStatistics; extends Object; Helper class for computing basic statistics from values as they are added.; ; This is useful e.g. when iterating through pixels, computing statistics from masked/labelled values.; ; Warning! This maintains a sum as a double - for many pixels and/or 16-bit data this may lead to imprecision ; (although for small regions, and especially optical densities having low values, it should be fine).; ; A warning is logged for particularly large values. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
Modifiability,extend,extends,". RunningStatistics (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class RunningStatistics. java.lang.Object; qupath.lib.analysis.stats.RunningStatistics. public class RunningStatistics; extends Object; Helper class for computing basic statistics from values as they are added.; ; This is useful e.g. when iterating through pixels, computing statistics from masked/labelled values.; ; Warning! This maintains a sum as a double - for many pixels and/or 16-bit data this may lead to imprecision ; (although for small regions, and especially optical densities having low values, it should be fine).; ; A warning is logged for particularly large values. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
Security,hash,hashCode,"ructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. size; protected long size. Constructor Details. RunningStatistics; public RunningStatistics(); Default constructor. Method Details. size; public long size(); Get count of the number of non-NaN values added. Returns:; See Also:. getNumNaNs(). addValue; public void addValue(double val); Add another value; NaN values are counted but do not contribute to the statistics. Parameters:; val - ; See Also:. getNumNaNs(). getNumNaNs; public long getNumNaNs(); Get count of the number of NaN values added. Returns:; See Also:. size(). getSum; public double getSum(); Get the sum of all non-NaN values that were added. Returns:. getMean; public double getMean(); Get the mean of all non-NaN values that were added. Returns:. getVariance; public double getVariance(); Get the variance of all non-NaN values that were added. Returns:. getStdDev; public double getStdDev(); Get the standard deviation of all non-NaN values that were added. Returns:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
Testability,log,logged,". RunningStatistics (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class RunningStatistics. java.lang.Object; qupath.lib.analysis.stats.RunningStatistics. public class RunningStatistics; extends Object; Helper class for computing basic statistics from values as they are added.; ; This is useful e.g. when iterating through pixels, computing statistics from masked/labelled values.; ; Warning! This maintains a sum as a double - for many pixels and/or 16-bit data this may lead to imprecision ; (although for small regions, and especially optical densities having low values, it should be fine).; ; A warning is logged for particularly large values. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
Deployability,update,updateRunningStatistics,"Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RunningStatistics; computeRunningStatistics(double[] values). Create a RunningStatistics object using all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics compu",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html
Modifiability,extend,extends,". StatisticsHelper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class StatisticsHelper. java.lang.Object; qupath.lib.analysis.stats.StatisticsHelper. public class StatisticsHelper; extends Object; Static methods for computing statistics from images, with or without a corresponding labeled image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; StatisticsHelper();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RunningStatistics; computeRunningStatistics(double[] values). Create a RunningStatistics object using all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper;",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html
Security,hash,hashCode,"ng all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(double[] values); Create a RunningStatistics object using all the values from a specified array. Parameters:; values - ; Returns:. computeRunningStatistics; public static void computeRu",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html
Modifiability,extend,extends,". KaplanMeierData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData. public class KaplanMeierData; extends Object; Structure used to store data related to generating Kaplan-Meier survival curves. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. Constructor Summary; Constructors. Constructor; Description; KaplanMeierData(String name). Create a new KaplanMeierData object with the specified display name. KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events). Create a new KaplanMeierData object with the specified display name and events. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; KaplanMeierData; addEvent(double time,; boolean censored). Insert a new event. KaplanMeierData; addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events). Add a collection of events. double[]; getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing t",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html
Safety,risk,risk,"survival curves. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. Constructor Summary; Constructors. Constructor; Description; KaplanMeierData(String name). Create a new KaplanMeierData object with the specified display name. KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events). Create a new KaplanMeierData object with the specified display name and events. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; KaplanMeierData; addEvent(double time,; boolean censored). Insert a new event. KaplanMeierData; addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events). Add a collection of events. double[]; getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). boolean; isEmpty(). Returns true if there are no events included. int; nCensored(). Get the number of censored events. int; nEvents(). Get the number of events, either observed or censored. int; nObserved(). Get the number of observed (not censored) events. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. KaplanMeierData; public KaplanMeierData(String name); Create a new KaplanMeierData object wi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html
Security,hash,hashCode," getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). boolean; isEmpty(). Returns true if there are no events included. int; nCensored(). Get the number of censored events. int; nEvents(). Get the number of events, either observed or censored. int; nObserved(). Get the number of observed (not censored) events. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. KaplanMeierData; public KaplanMeierData(String name); Create a new KaplanMeierData object with the specified display name. Parameters:; name - . KaplanMeierData; public KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events); Create a new KaplanMeierData object with the specified display name and events. Parameters:; name - ; events - . Method Details. addEvents; public KaplanMeierData addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events); Add a collection of events. Parameters:; events - ; Returns:. addEvent; public KaplanMeierData addEvent(double time,; boolean censored); Insert a new event. Parameters:; time - the time of the event (units are not specified, but should be consistent for all events added); censored - if true the event is censored, if false the event is observed.; Returns:. getName; public String getName(); Get the name of this data, generally used for display. Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html
Integrability,interface,interface,". KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData.KaplanMeierEvent. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. All Implemented Interfaces:; Comparable<KaplanMeierData.KaplanMeierEvent>. Enclosing class:; KaplanMeierData. public static class KaplanMeierData.KaplanMeierEvent; extends Object; implements Comparable<KaplanMeierData.KaplanMeierEvent>; Simple class to store event time and censored flag. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(KaplanMeierData.KaplanMeierEvent event);  ; double; getTimeToEvent(). Get the stored time to event (units are unspecified). boolean; isCensored(). Returns true if the event should be considered right-censored. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getTimeToEvent; public double getTimeToEvent(); Get the stored time to event (units are unspecified). Returns:. isCensored; public boolean isCensored(); Returns true if the event should be considered right-censored. Returns:. compareTo; public int compareTo(KaplanMeierData.KaplanMeierEvent event). Specified by:; compareTo in interface Comparable<KaplanMeierData.KaplanMeierEvent>. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html
Modifiability,extend,extends,". KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData.KaplanMeierEvent. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. All Implemented Interfaces:; Comparable<KaplanMeierData.KaplanMeierEvent>. Enclosing class:; KaplanMeierData. public static class KaplanMeierData.KaplanMeierEvent; extends Object; implements Comparable<KaplanMeierData.KaplanMeierEvent>; Simple class to store event time and censored flag. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(KaplanMeierData.KaplanMeierEvent event);  ; double; getTimeToEvent(). Get the stored time to event (units are unspecified). boolean; isCensored(). Returns true if the event should be considered right-censored. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getTimeToEvent; public double getTimeToEvent(); Get the stored time to event (units are unspecified). Returns:. isCensored; public boolean isCensored(); Returns true if the event should be considered right-censored. Returns:. compareTo; public int compareTo(KaplanMeierData.KaplanMeierEvent event). Specified by:; compareTo in interface Comparable<KaplanMeierData.KaplanMeierEvent>. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html
Security,hash,hashCode,". KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData.KaplanMeierEvent. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. All Implemented Interfaces:; Comparable<KaplanMeierData.KaplanMeierEvent>. Enclosing class:; KaplanMeierData. public static class KaplanMeierData.KaplanMeierEvent; extends Object; implements Comparable<KaplanMeierData.KaplanMeierEvent>; Simple class to store event time and censored flag. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(KaplanMeierData.KaplanMeierEvent event);  ; double; getTimeToEvent(). Get the stored time to event (units are unspecified). boolean; isCensored(). Returns true if the event should be considered right-censored. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getTimeToEvent; public double getTimeToEvent(); Get the stored time to event (units are unspecified). Returns:. isCensored; public boolean isCensored(); Returns true if the event should be considered right-censored. Returns:. compareTo; public int compareTo(KaplanMeierData.KaplanMeierEvent event). Specified by:; compareTo in interface Comparable<KaplanMeierData.KaplanMeierEvent>. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html
Modifiability,extend,extends,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
Security,hash,hashCode,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
Testability,log,log-rank,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
Modifiability,extend,extends,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
Safety,hazard,hazard,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
Security,hash,hashCode,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
Testability,log,log,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
Testability,log,log-rank,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html
Usability,simpl,simple,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html
Integrability,depend,dependencies,". AffineTransforms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class AffineTransforms. java.lang.Object; qupath.lib.awt.common.AffineTransforms. public class AffineTransforms; extends Object; Helper class for working with affine transforms.; ; QuPath's core dependencies have two affine transform implementations: AffineTransform from Java itself ; and AffineTransformation from Java Topology Suite.; Inconveniently, both are initialized from flattened double arrays using a different ordering (assuming ; columns-first or rows-first) - so it is easy to make mistakes.; ; QuPath primarily uses AffineTransform from Java.; This class exists to make creating a transform more explicit, and facilitate conversion when needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; AffineTransforms();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AffineTransform; from2D(double[][] mat). Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. static AffineTransform; fromColumns(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static Affin",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html
Modifiability,extend,extends,". AffineTransforms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class AffineTransforms. java.lang.Object; qupath.lib.awt.common.AffineTransforms. public class AffineTransforms; extends Object; Helper class for working with affine transforms.; ; QuPath's core dependencies have two affine transform implementations: AffineTransform from Java itself ; and AffineTransformation from Java Topology Suite.; Inconveniently, both are initialized from flattened double arrays using a different ordering (assuming ; columns-first or rows-first) - so it is easy to make mistakes.; ; QuPath primarily uses AffineTransform from Java.; This class exists to make creating a transform more explicit, and facilitate conversion when needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; AffineTransforms();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AffineTransform; from2D(double[][] mat). Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. static AffineTransform; fromColumns(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static Affin",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html
Security,hash,hashCode,"ith 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static AffineTransform; fromScale(double scaleX,; double scaleY). Create an affine transform representing scaling, optionally using a different scale for x and y. static AffineTransform; identity(). Create an affine transform representing the identity transform. static AffineTransformation; toJTS(AffineTransform transform). Create a Java Topology Suite affine transformation from a Java affine transform. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AffineTransforms; public AffineTransforms(). Method Details. from2D; public static AffineTransform from2D(double[][] mat); throws IllegalArgumentException; Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong shape. fromRows; public static AffineTransform fromRows(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong length. fromColumns; public static AffineTransform fromColumns(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. Parameters:; mat - ; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html
Modifiability,extend,extends,". AwtTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class AwtTools. java.lang.Object; qupath.lib.awt.common.AwtTools. public final class AwtTools; extends Object; A collection of static methods useful when working with AWT shapes and ImageRegions. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Rectangle; getBounds(ImageRegion region). Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ImageRegion region,; Rectangle rect). Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ROI roi). Create a Rectangle corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi). Create a Rectangle2D corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi,; Rectangle2D rect). Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. static ImageRegion; getImageRegion(Rectangle rectangle,; int z,; int t). Create an ImageRegion corresponding to a specified Rectangle bounding box. static ImageRegion; getImageRegion(Shape shape,; int z,; int t). Create an ImageRegion corresponding to a the bounding box of a Shape. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getBounds; public static Rectangle getBounds(ImageRegion region); Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. Parameters:; region - ; Returns:. getBounds; public static Rectangle getBounds(ImageRegion region,; Rectangle rect); Set the bounds of an",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AwtTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html
Security,hash,hashCode,"hod; Description; static Rectangle; getBounds(ImageRegion region). Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ImageRegion region,; Rectangle rect). Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ROI roi). Create a Rectangle corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi). Create a Rectangle2D corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi,; Rectangle2D rect). Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. static ImageRegion; getImageRegion(Rectangle rectangle,; int z,; int t). Create an ImageRegion corresponding to a specified Rectangle bounding box. static ImageRegion; getImageRegion(Shape shape,; int z,; int t). Create an ImageRegion corresponding to a the bounding box of a Shape. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getBounds; public static Rectangle getBounds(ImageRegion region); Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. Parameters:; region - ; Returns:. getBounds; public static Rectangle getBounds(ImageRegion region,; Rectangle rect); Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion.; ; If no Rectangle is provided, a new one will be created. Parameters:; region - ; rect - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi); Create a Rectangle2D corresponding to bounding box of a ROI. Parameters:; roi - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi,; Rectangle2D rect); Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI.; ; If no Rectangle2D is provided, a new one will be created. Parameters:; roi - ; rect - ; Returns:. getBounds; public static Rectangle getBounds(ROI roi); Create a Rectangle corres",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AwtTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html
Availability,mask,mask,". BufferedImageTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class BufferedImageTools. java.lang.Object; qupath.lib.awt.common.BufferedImageTools. public final class BufferedImageTools; extends Object; Static methods for working with BufferedImages and QuPath objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask). Count the number of above-threshold pixels in a specified band of a raster, with optional mask. static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds). Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaste",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
Deployability,update,updated,"olation. Parameters:; img - input image to be resized; finalWidth - target output width; finalHeight - target output height; smoothInterpolate - if true, the resize method is permitted to use a smooth interpolation method.; If false, nearest-neighbor interpolation is used.; Returns:; resized image. computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle de",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
Modifiability,extend,extends,". BufferedImageTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class BufferedImageTools. java.lang.Object; qupath.lib.awt.common.BufferedImageTools. public final class BufferedImageTools; extends Object; Static methods for working with BufferedImages and QuPath objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask). Count the number of above-threshold pixels in a specified band of a raster, with optional mask. static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds). Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaste",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
Performance,perform,performed,"nt finalHeight,; boolean smoothInterpolate); Resize the image to have the requested width/height, using area averaging and bilinear interpolation. Parameters:; img - input image to be resized; finalWidth - target output width; finalHeight - target output height; smoothInterpolate - if true, the resize method is permitted to use a smooth interpolation method.; If false, nearest-neighbor interpolation is used.; Returns:; resized image. computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - o",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
Security,hash,hashCode,"atic BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
Integrability,interface,interface,". AbstractObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class AbstractObjectClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: O",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
Modifiability,extend,extends,". AbstractObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class AbstractObjectClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: O",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
Security,hash,hashCode,"r<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCo",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
Availability,avail,available,"s:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
Integrability,interface,interface,". ObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Interface ObjectClassifier<T>. Type Parameters:; T - . All Known Implementing Classes:; AbstractObjectClassifier, DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public interface ObjectClassifier<T>; Interface defining object classifiers, which assign PathClasses to PathObjects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPat",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
Modifiability,extend,extends,"Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Interface ObjectClassifier<T>. Type Parameters:; T - . All Known Implementing Classes:; AbstractObjectClassifier, DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public interface ObjectClassifier<T>; Interface defining object classifiers, which assign PathClasses to PathObjects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPathClasses(); Get the classifications set by this classifier. Returns:. classifyObjects; int classifyObjects(ImageData<T> imageData,; boolean resetExisting",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
Safety,avoid,avoiding,"hen storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPathClasses(); Get the classifications set by this classifier. Returns:. classifyObjects; int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing featur",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
Testability,test,test,"s:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
Modifiability,extend,extends,". ObjectClassifiers.ClassifyByMeasurementBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ClassifyByMeasurementBuilder<T>. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Type Parameters:; T - . Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ClassifyByMeasurementBuilder<T>; extends Object; Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. Constructor Summary; Constructors. Constructor; Description; ClassifyByMeasurementBuilder(String measurementName). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(String pathClassName). Set the classification ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
Safety,detect,detections,"easurementBuilder<T>; below(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifier<T>; build(). Build the classifier defined by the parameters of this builder. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; cells(). Set the filter to accept cell objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
Security,hash,hashCode,"Classifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter to accept all detection objects only. Returns:; this builder. threshold",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
Usability,simpl,simple,". ObjectClassifiers.ClassifyByMeasurementBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ClassifyByMeasurementBuilder<T>. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Type Parameters:; T - . Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ClassifyByMeasurementBuilder<T>; extends Object; Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. Constructor Summary; Constructors. Constructor; Description; ClassifyByMeasurementBuilder(String measurementName). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(String pathClassName). Set the classification ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
Modifiability,extend,extends,". ObjectClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers. public class ObjectClassifiers; extends Object; Helper class for creating ObjectClassifiers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. static class ; ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Constructor Summary; Constructors. Constructor; Description; ObjectClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ObjectClassifier<T>; createChannelClassifier(PathObjectFilter filter,; ImageChannel channel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html
Security,hash,hashCode,"nel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory to handle ObjectClassifier instances. static <T> ObjectClassifier<T>; readClassifier(Path path). Read the classifier from a file. static <T> void; writeClassifier(ObjectClassifier<T> classifier,; Path path). Write the classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifiers; public ObjectClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get a TypeAdapterFactory to handle ObjectClassifier instances. Returns:. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(ObjectClassifier<T>... classifiers); Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers.; This can be used for multiplexed images, where a single classifier may be trained for each marker. Type Parameters:; T - ; Parameters:; classifiers - an array of classifiers to combine; Returns:; the composite object classifier. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers); Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers.",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html
Usability,simpl,simple,". ObjectClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers. public class ObjectClassifiers; extends Object; Helper class for creating ObjectClassifiers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. static class ; ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Constructor Summary; Constructors. Constructor; Description; ObjectClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ObjectClassifier<T>; createChannelClassifier(PathObjectFilter filter,; ImageChannel channel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html
Integrability,interface,interface,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html
Modifiability,extend,extends,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html
Security,hash,hashCode,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html
Integrability,interface,interfaces,". qupath.lib.classifiers.object (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.object. package qupath.lib.classifiers.object. Classes for object classification in QuPath. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.pixel. Core support for pixel classification. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html
Usability,learn,learning,". qupath.lib.classifiers.object (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.object. package qupath.lib.classifiers.object. Classes for object classification in QuPath. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.pixel. Core support for pixel classification. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html
Integrability,interface,interfaces,. qupath.lib.classifiers.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.pixel. package qupath.lib.classifiers.pixel. Core support for pixel classification. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. All Classes and InterfacesInterfacesClasses. Class; Description; PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassifier. Interface defining a pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. ,MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html
Usability,learn,learning,. qupath.lib.classifiers.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.pixel. package qupath.lib.classifiers.pixel. Core support for pixel classification. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. All Classes and InterfacesInterfacesClasses. Class; Description; PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassifier. Interface defining a pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. ,MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html
Availability,avail,available,"geServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
Integrability,interface,interface,"id; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTi",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
Modifiability,extend,extends,". PixelClassificationImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.pixel; Class PixelClassificationImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.classifiers.pixel.PixelClassificationImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class PixelClassificationImageServer; extends AbstractTileableImageServer; ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Constructor. PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a random UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; g",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
Performance,cache,cached,"rs.pixel.PixelClassificationImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class PixelClassificationImageServer; extends AbstractTileableImageServer; ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Constructor. PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a random UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmpt",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
Security,hash,hashCode,"URIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.;",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
Usability,simpl,simply,"rited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTiles; public void readAllTiles(); Read all the tiles.; This is useful for a classifier that can be applied in full to an image without causing memory issues ; (e.g. a density map), particularly if it is is dependent upon a changing property of the image ; (e.g. its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
Availability,down,downsampling,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
Energy Efficiency,adapt,adapt,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
Integrability,interface,interface,". PixelClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.pixel; Interface PixelClassifier. public interface PixelClassifier; Interface defining a pixel classifier.; ; Pixel classifiers can be applied directly to an image, typically using colors and textures. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a Buf",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
Modifiability,adapt,adapt,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
Energy Efficiency,reduce,reduce,"width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. build; public PixelClassifierMetadata build(); Build a new PixelClassifierMetadata object. Returns:. inputPadding; public PixelClassifierMetadata.Builder inputPadding(int inputPadding); Amount of padding requested for the left, right, top and bottom of the image tile being classified.; This can be used to reduce boundary artifacts. Parameters:; inputPadding - ; Returns:. setChannelType; public PixelClassifierMetadata.Builder setChannelType(ImageServerMetadata.ChannelType type); Specify the output channel type. Parameters:; type - ; Returns:. inputResolution; public PixelClassifierMetadata.Builder inputResolution(PixelCalibration inputResolution); Pixel size defining the resolution at which the classifier should operate. Parameters:; inputResolution - ; Returns:. inputShape; public PixelClassifierMetadata.Builder inputShape(int width,; int height); Preferred input image width and height. This may either be a hint or strictly enforced. Parameters:; width - ; height - ; Returns:. outputPixelType; public PixelClassifierMetadata.Builder outputPixelType(PixelType pixelType); Output pixel type. Parameters:; pixelType - ; Returns:. outputChannels; public PixelClassifierMetadata.Builder outputChannels(ImageChannel... channels); Specify channels for output. Parameters:; channels - ; Returns:. outpu",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html
Modifiability,extend,extends,". PixelClassifierMetadata.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.pixel; Class PixelClassifierMetadata.Builder. java.lang.Object; qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Enclosing class:; PixelClassifierMetadata. public static class PixelClassifierMetadata.Builder; extends Object; Builder to create PixelClassifierMetadata objects. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierMetadata; build(). Build a new PixelClassifierMetadata object. PixelClassifierMetadata.Builder; classificationLabels(Map<Integer,PathClass> labels). Specify classification labels. PixelClassifierMetadata.Builder; inputPadding(int inputPadding). Amount of padding requested for the left, right, top and bottom of the image tile being classified. PixelClassifierMetadata.Builder; inputResolution(PixelCalibration inputResolution). Pixel size defining the resolution at which the classifier should operate. PixelClassifierMetadata.Builder; inputShape(int width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, noti",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html
Security,hash,hashCode,",PathClass> labels). Specify classification labels. PixelClassifierMetadata.Builder; inputPadding(int inputPadding). Amount of padding requested for the left, right, top and bottom of the image tile being classified. PixelClassifierMetadata.Builder; inputResolution(PixelCalibration inputResolution). Pixel size defining the resolution at which the classifier should operate. PixelClassifierMetadata.Builder; inputShape(int width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. build; public PixelClassifierMetadata build(); Build a new PixelClassifierMetadata object. Returns:. inputPadding; public PixelClassifierMetadata.Builder inputPadding(int inputPadding); Amount of padding requested for the left, right, top and bottom of the image tile being classified.; This can be used to reduce boundary artifacts. Parameters:; inputPadding - ; Returns:. setChannelType; public PixelClassifierMetadata.Builder setChannelType(ImageServerMetadata.ChannelType type); Specify the output channel type. Parameters:; type - ; Returns:. inputResolution; public PixelClassifierMetadata.Builder inputResolution(PixelCalibration inputResolution); Pixel size defining the resolution at which the classifier should operate. Parameters:; inputResolution - ; Returns:. inputShape; public PixelClassifierMetadata.Builder inputShape(int width,; int height); Preferred input image widt",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html
Modifiability,extend,extends,". PixelClassifierMetadata (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.pixel; Class PixelClassifierMetadata. java.lang.Object; qupath.lib.classifiers.pixel.PixelClassifierMetadata. public class PixelClassifierMetadata; extends Object; Metadata to control the behavior of a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<Integer,PathClass>; getClassificationLabels(). Map between integer labels and classifications. int; getInputHeight(). Requested height of input image, or -1 if the classifier is not fussy. int; getInputNumChannels(). Requested number of channels in input image; default is 3 (consistent with assuming RGB). int; getInputPadding(). Requested input padding (above, below, left and right). PixelCalibration; getInputResolution(). Requested pixel size for input. int; getInputWidth(). Requested width of input image, or -1 if the classifier is not fussy. List<ImageChannel>; getOutputChannels(). List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. PixelType; getOutputPixelType(). Pixel type of output; default is null indicating the pixel type is unknown. ImageServerMetadata.ChannelType; getOutputType(). Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html
Security,hash,hashCode,"ls and classifications. int; getInputHeight(). Requested height of input image, or -1 if the classifier is not fussy. int; getInputNumChannels(). Requested number of channels in input image; default is 3 (consistent with assuming RGB). int; getInputPadding(). Requested input padding (above, below, left and right). PixelCalibration; getInputResolution(). Requested pixel size for input. int; getInputWidth(). Requested width of input image, or -1 if the classifier is not fussy. List<ImageChannel>; getOutputChannels(). List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. PixelType; getOutputPixelType(). Pixel type of output; default is null indicating the pixel type is unknown. ImageServerMetadata.ChannelType; getOutputType(). Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputResolution; public PixelCalibration getInputResolution(); Requested pixel size for input. Returns:. getInputPadding; public int getInputPadding(); Requested input padding (above, below, left and right). Returns:. getInputWidth; public int getInputWidth(); Requested width of input image, or -1 if the classifier is not fussy. Returns:. getInputHeight; public int getInputHeight(); Requested height of input image, or -1 if the classifier is not fussy. Returns:. getInputNumChannels; public int getInputNumChannels(); Requested number of channels in input image; default is 3 (consistent with assuming RGB). Returns:. getOutputType; public ImageServerMetadata.ChannelType getOutputType(); Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Returns:. getOutputPixelType; public PixelType getOutputPixelType(); Pixel type of output; default is null indicating the pixel type is unknown. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html
Energy Efficiency,green,green,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
Modifiability,extend,extends,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
Security,hash,hashCode,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
Usability,simpl,simple,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
Modifiability,extend,extends,". ChannelSettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelSettings. java.lang.Object; qupath.lib.display.settings.ChannelSettings. public class ChannelSettings; extends Object; A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html
Security,hash,hashCode,"ation needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns:. getMinDisplay; public float getMinDisplay(); Get the requested minimum display value for the channel.; This should be used with the first entry in any lookup table. Returns:. getMaxDisplay; public float getMaxDisplay(); Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. Returns:. getColor; public ChannelColor getColor(); Get the color used to display the channel, or null if a color is not relevant. Returns:. isShowing; public boolean isShowing(); Get whether the ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html
Usability,simpl,simple,". ChannelSettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelSettings. java.lang.Object; qupath.lib.display.settings.ChannelSettings. public class ChannelSettings; extends Object; A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html
Modifiability,extend,extends,". DisplaySettingUtils (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class DisplaySettingUtils. java.lang.Object; qupath.lib.display.settings.DisplaySettingUtils. public class DisplaySettingUtils; extends Object; Utility class for working with image display and image display settings objects.; The former is used by QuPath to display images, while the latter is used to store; the settings in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; DisplaySettingUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings). Apply the settings to the display, if they are compatible. static ImageDisplaySettings; displayToSettings(ImageDisplay display,; String name). Create a new image display settings object from the image display. static ResourceManager.Manager<ImageDisplaySettings>; getResourcesForProject(Project<?> project). Get the resource manager for image display settings from a project. static Optional<ImageDisplaySettings>; parseDisplaySettings(JsonElement element). Parse the JSON element into an image display settings object, if possible. static ImageDisplaySettings; parseDisplaySettings(Path path). Parse the JSON element into an image display settings object. static boolean; settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings). Check if the settings are compatible with the display. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DisplaySettingUtils; public Di",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html
Security,hash,hashCode,"ion; static boolean; applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings). Apply the settings to the display, if they are compatible. static ImageDisplaySettings; displayToSettings(ImageDisplay display,; String name). Create a new image display settings object from the image display. static ResourceManager.Manager<ImageDisplaySettings>; getResourcesForProject(Project<?> project). Get the resource manager for image display settings from a project. static Optional<ImageDisplaySettings>; parseDisplaySettings(JsonElement element). Parse the JSON element into an image display settings object, if possible. static ImageDisplaySettings; parseDisplaySettings(Path path). Parse the JSON element into an image display settings object. static boolean; settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings). Check if the settings are compatible with the display. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DisplaySettingUtils; public DisplaySettingUtils(). Method Details. displayToSettings; public static ImageDisplaySettings displayToSettings(ImageDisplay display,; String name); Create a new image display settings object from the image display.; This is typically used to save the settings to a file. Parameters:; display - ; name - ; Returns:. settingsCompatibleWithDisplay; public static boolean settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings); Check if the settings are compatible with the display.; This is true if the number and names of the channels match. Parameters:; display - ; settings - ; Returns:. applySettingsToDisplay; public static boolean applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings); Apply the settings to the display, if they are compatible. Parameters:; display - ; settings - ; Returns:; true if the settings were applied, false otherwise. p",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html
Availability,avail,available,"disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluor",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
Modifiability,extend,extends,". ImageDisplaySettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the backgroun",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
Security,hash,hashCode,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluorescence image look more like a brightfield image,; and vice versa. Returns:. getChannels; public List<ChannelSettings> getChannels(); Get all the available channels. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
Usability,simpl,simple,". ImageDisplaySettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the backgroun",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
Usability,simpl,simple,". qupath.lib.display.settings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.display.settings. package qupath.lib.display.settings. Classes to support storing and retrieving image display settings.; ; These are intended to be simple and JSON-friendly. Related Packages. Package; Description; qupath.lib.display. Classes to control the display of images in a QuPathViewer. Classes. Class; Description; ChannelColor. A simple class to store the color of an image channel. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. DisplaySettingUtils. Utility class for working with image display and image display settings objects. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html
Energy Efficiency,reduce,reduces,"ePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the class to handle; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. builder; public static PixelProcessor.Builder<ImagePlus,ImagePlus,Object> builder(Processor<ImagePlus,ImagePlus,Object> processor); Create a PixelProcessor.Builder for an ImageJ ImagePlus.; By default, this will attempt to convert any output to detection objects - but the builder may be further; customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
Integrability,depend,depends,"dler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createDetectionConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
Modifiability,extend,extends,". ImageJProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class ImageJProcessor. java.lang.Object; qupath.lib.experimental.pixels.ImageJProcessor. public class ImageJProcessor; extends Object; Class to generate a PixelProcessor when using ImageJ for the primary image representation. Constructor Summary; Constructors. Constructor; Description; ImageJProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<ImagePlus,ImagePlus,Object>; builder(Processor<ImagePlus,ImagePlus,Object> processor). Create a PixelProcessor.Builder for an ImageJ ImagePlus. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToOb",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
Safety,detect,detection,"ct; Class to generate a PixelProcessor when using ImageJ for the primary image representation. Constructor Summary; Constructors. Constructor; Description; ImageJProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<ImagePlus,ImagePlus,Object>; builder(Processor<ImagePlus,ImagePlus,Object> processor). Create a PixelProcessor.Builder for an ImageJ ImagePlus. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getCl",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
Security,hash,hashCode,"output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupplier; public static ImageSupplier<ImagePlus> createImagePlusImageSupplier(); Create an ImageSupplier that returns an ImageJ ImagePlus. Returns:. createImagePlusMaskSupplier; public static MaskSupplier<ImagePlus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePl",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
Integrability,interface,interface,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html
Safety,avoid,avoid,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html
Security,access,access,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html
Availability,mask,mask,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
Integrability,interface,interface,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
Integrability,interface,interface,". MeasurementProcessor.CustomMeasurement (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MeasurementProcessor.CustomMeasurement<S,T>. Type Parameters:; S - ; T - . Enclosing class:; MeasurementProcessor. public static interface MeasurementProcessor.CustomMeasurement<S,T>; Interface for calculating one custom measurement from an image, using Parameters. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getName();  ; double; getValue(Parameters<S,T> params);  . Method Details. getName; String getName(). getValue; double getValue(Parameters<S,T> params); throws IOException. Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.CustomMeasurement.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.CustomMeasurement.html
Modifiability,extend,extends,". MeasurementProcessor.Functions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor.Functions. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Enclosing class:; MeasurementProcessor. public static class MeasurementProcessor.Functions; extends Object; Functions for calculating measurements from an array of pixels. Constructor Summary; Constructors. Constructor; Description; Functions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Function<double[],Double>; max(). Create a function to calculate the maximum value of an array. static Function<double[],Double>; mean(). Create a function to calculate the mean (average) value of an array. static Function<double[],Double>; min(). Create a function to calculate the minimum value of an array. static Function<double[][],Double>; pearsonsCorrelation(). Create a function to calculate Pearson's correlation coefficient. static Function<double[],Double>; percentile(double percentile). Create a function to calculate a percentile. static Function<double[][],Double>; spearmansCorrelation(). Create a function to calculate Spearman's correlation coefficient. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Functions; public Functions(). Method Details. percentile; public static Function<double[],Double> percentile(double percentile); Create a function to calculate a percentile. Parameters:; percentile - ; Returns:. min; public static Function<double[],Double> min(); Create a function to calculate the minimum va",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html
Security,hash,hashCode,"ns for calculating measurements from an array of pixels. Constructor Summary; Constructors. Constructor; Description; Functions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Function<double[],Double>; max(). Create a function to calculate the maximum value of an array. static Function<double[],Double>; mean(). Create a function to calculate the mean (average) value of an array. static Function<double[],Double>; min(). Create a function to calculate the minimum value of an array. static Function<double[][],Double>; pearsonsCorrelation(). Create a function to calculate Pearson's correlation coefficient. static Function<double[],Double>; percentile(double percentile). Create a function to calculate a percentile. static Function<double[][],Double>; spearmansCorrelation(). Create a function to calculate Spearman's correlation coefficient. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Functions; public Functions(). Method Details. percentile; public static Function<double[],Double> percentile(double percentile); Create a function to calculate a percentile. Parameters:; percentile - ; Returns:. min; public static Function<double[],Double> min(); Create a function to calculate the minimum value of an array. Returns:. max; public static Function<double[],Double> max(); Create a function to calculate the maximum value of an array. Returns:. mean; public static Function<double[],Double> mean(); Create a function to calculate the mean (average) value of an array. Returns:. pearsonsCorrelation; public static Function<double[][],Double> pearsonsCorrelation(); Create a function to calculate Pearson's correlation coefficient.; This requires a double[2][n] input array, where n is the number of pixels. Returns:. spearmansCorrelation; public static Function<double[][],Double> spearmansCorrelation(); Create a ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html
Energy Efficiency,efficient,efficient,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
Integrability,interface,interface,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
Modifiability,extend,extends,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
Security,hash,hashCode,"ary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
Usability,simpl,simplify,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
Availability,mask,mask,"   ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor.Measurements. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Enclosing class:; MeasurementProcessor. public static class MeasurementProcessor.Measurements; extends Object; Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; Measurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function). Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
Modifiability,extend,extends,". MeasurementProcessor.Measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor.Measurements. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Enclosing class:; MeasurementProcessor. public static class MeasurementProcessor.Measurements; extends Object; Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; Measurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function). Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object mea",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
Security,hash,hashCode,"object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function); Create a new object measurement that requires multiple channels as input, usin",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
Availability,mask,mask,"sificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output).; ; If the input is a processor that is already known to have this behavior, it is returned unchanged. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
Deployability,release,released,"). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
Integrability,wrap,wrapInPointerScope,". Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> cre",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
Modifiability,extend,extends,". OpenCVProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OpenCVProcessor. java.lang.Object; qupath.lib.experimental.pixels.OpenCVProcessor. public class OpenCVProcessor; extends Object; Class to generate a PixelProcessor when using OpenCV for the primary image representation. Constructor Summary; Constructors. Constructor; Description; OpenCVProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<Mat,Mat,Mat>; builder(Processor<Mat,Mat,Mat> processor). Create a PixelProcessor.Builder for an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetect",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
Safety,detect,detection,"essor.Builder for an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an Output",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
Security,hash,hashCode,"Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String>",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
Availability,mask,mask,". OutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
Integrability,interface,interface,". OutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
Modifiability,extend,extends,"parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask. static <S,; T,; U> OutputHandler<S,T,U>; createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object. boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. static boolean; handleOutputClassification(Parameters<?,?> params,; String output). Handle the output of a pixel processor by setting a PathClass, given by its name. static boolean; handleOutputClassification(Parameters<?,?> params,; PathClass output). Handle the output of a pixel processor by setting a PathClass. static boolean; handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output). Handle the output of a pixel processor by adding measurements to the path object. default OutputHandler<S,T,U>; orElse(OutputHandler<S,T,U> after). Append a second output handler to this one, but only call it if this one returns false. Method Details. handleOutput; boolean handleOutput(Parameters<S,T> params,; U output); Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Parameters:; params - the processing parameters; output - the generated output. andThen; default OutputHandler<S,T,U> andThen(OutputHandler<S,T,U> after); Append a second output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handle",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
Safety,avoid,avoid,"ond output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
Integrability,interface,interface,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
Modifiability,extend,extends,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
Security,hash,hashCode,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
Availability,avail,available,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html
Integrability,interface,interface,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html
Safety,detect,detected,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html
Availability,mask,mask,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
Integrability,interface,interface,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
Testability,test,tested,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
Usability,simpl,simplify,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
Availability,mask,mask,". Parameters.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters.Builder<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters.Builder<S,T>. Type Parameters:; S - the image type; T - the mask type. Enclosing class:; Parameters<S,T>. public static class Parameters.Builder<S,T>; extends Object; Builder class for Parameters. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the i",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
Modifiability,extend,extends,". Parameters.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters.Builder<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters.Builder<S,T>. Type Parameters:; S - the image type; T - the mask type. Enclosing class:; Parameters<S,T>. public static class Parameters.Builder<S,T>; extends Object; Builder class for Parameters. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the i",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
Security,hash,hashCode,"Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate contour tracing across tile boundaries. Parameters:; tile - ; Returns:; See A",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
Availability,mask,mask,". Parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
Modifiability,extend,extends,". Parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
Performance,cache,cached,"ile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; dire",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
Security,hash,hashCode,"ription; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws I",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
Availability,mask,mask,". PixelProcessor.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
Deployability,update,updates,"Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
Modifiability,extend,extends,". PixelProcessor.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
Security,hash,hashCode,"use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
Availability,mask,mask,". PixelProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor<S,T,U>. Type Parameters:; S - The type of image to process; T - The type of mask to use; often the same as S; U - The type of output to generate. public class PixelProcessor<S,T,U>; extends Object; A class for tiled image processing.; ; The aim of this class is to make it easy to write pixel-based processing algorithms using a variety; of different image representations, and also to run these in parallel.; . There are four main components:; ; An ImageSupplier that provides the image data; A MaskSupplier that can generate binary masks that correspond to the image; A Processor that processes the image data; An OutputHandler that handles the output of the Processor. The idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(Ima",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
Modifiability,extend,extends,". PixelProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor<S,T,U>. Type Parameters:; S - The type of image to process; T - The type of mask to use; often the same as S; U - The type of output to generate. public class PixelProcessor<S,T,U>; extends Object; A class for tiled image processing.; ; The aim of this class is to make it easy to write pixel-based processing algorithms using a variety; of different image representations, and also to run these in parallel.; . There are four main components:; ; An ImageSupplier that provides the image data; A MaskSupplier that can generate binary masks that correspond to the image; A Processor that processes the image data; An OutputHandler that handles the output of the Processor. The idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(Ima",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
Security,hash,hashCode,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
Availability,mask,mask,"inks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessorUtils. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessorUtils. public class PixelProcessorUtils; extends Object; Utility functions to help with the PixelProcessor class. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; PixelProcessorUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains di",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
Integrability,depend,depending,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
Modifiability,extend,extends,". PixelProcessorUtils (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessorUtils. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessorUtils. public class PixelProcessorUtils; extends Object; Utility functions to help with the PixelProcessor class. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; PixelProcessorUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
Security,hash,hashCode,"fferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Para",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
Availability,mask,masks,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html
Integrability,interface,interface,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html
Security,access,access,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html
Deployability,install,installExtension,"sted; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension. java.lang.Object; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtensio",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
Integrability,interface,interface,"t; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the e",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
Modifiability,extend,extends,". SvgExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension. java.lang.Object; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in in",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
Security,hash,hashCode," Package qupath.lib.extension.svg; Class SvgExtension. java.lang.Object; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Descriptio",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
Testability,test,test,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
Modifiability,extend,extends,". SvgExtension.SvgActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension.SvgActions. java.lang.Object; qupath.lib.extension.svg.SvgExtension.SvgActions. Enclosing class:; SvgExtension. public class SvgExtension.SvgActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionExport;  ; final org.controlsfx.control.action.Action; actionSnapshot;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionExport; @ActionMenu({""Menu.File"",""Menu.File.ExportImage""}); @ActionConfig(""Action.SVG.exportImage""); public final org.controlsfx.control.action.Action actionExport. actionSnapshot; @ActionMenu({""Menu.File"",""Menu.File.ExportSnapshot""}); @ActionConfig(""Action.SVG.exportSnapshot""); public final org.controlsfx.control.action.Action actionSnapshot. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html
Security,hash,hashCode,". SvgExtension.SvgActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension.SvgActions. java.lang.Object; qupath.lib.extension.svg.SvgExtension.SvgActions. Enclosing class:; SvgExtension. public class SvgExtension.SvgActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionExport;  ; final org.controlsfx.control.action.Action; actionSnapshot;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionExport; @ActionMenu({""Menu.File"",""Menu.File.ExportImage""}); @ActionConfig(""Action.SVG.exportImage""); public final org.controlsfx.control.action.Action actionExport. actionSnapshot; @ActionMenu({""Menu.File"",""Menu.File.ExportSnapshot""}); @ActionConfig(""Action.SVG.exportSnapshot""); public final org.controlsfx.control.action.Action actionSnapshot. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html
Modifiability,extend,extends,". SvgTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgTools. java.lang.Object; qupath.lib.extension.svg.SvgTools. public class SvgTools; extends Object; Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. Constructor Summary; Constructors. Constructor; Description; SvgTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; writeViewerSnapshot(QuPathViewer viewer,; File fileSVG). Write an SVG image representing the contents of the specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgTools; public SvgTools(). Method Details. writeViewerSnapshot; public static void writeViewerSnapshot(QuPathViewer viewer,; File fileSVG); throws IOException; Write an SVG image representing the contents of the specified viewer. Parameters:; viewer - the viewer to render; fileSVG - SVG file for the export; should have the extension "".svg""; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html
Security,hash,hashCode,". SvgTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgTools. java.lang.Object; qupath.lib.extension.svg.SvgTools. public class SvgTools; extends Object; Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. Constructor Summary; Constructors. Constructor; Description; SvgTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; writeViewerSnapshot(QuPathViewer viewer,; File fileSVG). Write an SVG image representing the contents of the specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgTools; public SvgTools(). Method Details. writeViewerSnapshot; public static void writeViewerSnapshot(QuPathViewer viewer,; File fileSVG); throws IOException; Write an SVG image representing the contents of the specified viewer. Parameters:; viewer - the viewer to render; fileSVG - SVG file for the export; should have the extension "".svg""; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html
Availability,down,downsample,"gBuilder. Enclosing class:; SvgTools. public static class SvgTools.SvgBuilder; extends Object; Builder class to enable the export of rendered QuPath objects as SVG images.; This can be useful to generate high-quality figures using a vector representation of objects, ; which may be further customized in other applications (e.g. to change line thickness, color). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
Modifiability,extend,extends,". SvgTools.SvgBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgTools.SvgBuilder. java.lang.Object; qupath.lib.extension.svg.SvgTools.SvgBuilder. Enclosing class:; SvgTools. public static class SvgTools.SvgBuilder; extends Object; Builder class to enable the export of rendered QuPath objects as SVG images.; This can be useful to generate high-quality figures using a vector representation of objects, ; which may be further customized in other applications (e.g. to change line thickness, color). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarch",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
Safety,detect,detections,"nd Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion regio",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
Security,hash,hashCode," be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion region). Specify the region (in terms of the full resolution image space) for export. SvgTools.SvgBuilder; showSelection(boolean doShow). Request whether selected objects are displayed. SvgTools.SvgBuilder; size(int width,; int height). Export image size. SvgTools.SvgBuilder; width(int width). Export image width. void; writeSVG(File file). Write the SVG image to a file, including any references images if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgBuilder; public SvgBuilder(QuPathViewer viewer); Create a builder initialized according to the current viewer. Parameters:; viewer - . SvgBuilder; public SvgBuilder(); Create a new builder, which will later be customized. Method Details. imageData; public SvgTools.SvgBuilder imageData(ImageData<BufferedImage> imageData); Specify the ImageData. This is required if the underlying raster image will be included in any export. Parameters:; imageData - ; Returns:; this builder. hierarchy; public SvgTools.SvgBuilder hierarchy(PathObjectHierarchy hierarchy); Specify the PathObjectHierarchy. This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; hierarchy - ; Returns:; this builder. pathObjects; public SvgTools.SvgBuilder pathObjects(Collection<? extends PathObject> pathObjects); Specify a collection of objects to export.; This may be used instead of imageData(ImageData) if the ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
Integrability,interface,interfaces,". SvgTools.SvgBuilder.ImageIncludeType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.extension.svg; Enum Class SvgTools.SvgBuilder.ImageIncludeType. java.lang.Object; java.lang.Enum<SvgTools.SvgBuilder.ImageIncludeType>; qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. All Implemented Interfaces:; Serializable, Comparable<SvgTools.SvgBuilder.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
Modifiability,extend,extends,". SvgTools.SvgBuilder.ImageIncludeType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.extension.svg; Enum Class SvgTools.SvgBuilder.ImageIncludeType. java.lang.Object; java.lang.Enum<SvgTools.SvgBuilder.ImageIncludeType>; qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. All Implemented Interfaces:; Serializable, Comparable<SvgTools.SvgBuilder.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
Security,hash,hashCode," static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not include images. EMBED; public static final SvgTools.SvgBuilder.ImageIncludeType EMBED; Embed the image (as Base64-encoded PNG). LINK; public static final SvgTools.SvgBuilder.ImageIncludeType LINK; Link the image (to a separate PNG). Method Details. values; public static SvgTools.SvgBuilder.ImageIncludeType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SvgTools.SvgBuilder.ImageIncludeType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
Modifiability,extend,extends,". ActionTools.ActionBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class ActionTools.ActionBuilder. java.lang.Object; qupath.lib.gui.actions.ActionTools.ActionBuilder. Enclosing class:; ActionTools. public static class ActionTools.ActionBuilder; extends Object; Builder class for custom Action objects.; These can be used to create GUI components (e.g. buttons, menu items). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ActionTools.ActionBuilder; accelerator(ObservableValue<KeyCombination> value). Bind the accelerator property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; accelerator(KeyCombination value). Set the accelerator property of the action. org.controlsfx.control.action.Action; build(). Create an Action with this builder. ActionTools.ActionBuilder; disabled(boolean value). Set the disabled property of the action. ActionTools.ActionBuilder; disabled(ObservableValue<Boolean> value). Bind the disabled property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; graphic(ObservableValue<Node> value). Bind the graphic property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; graphic(Node value). Set the graphic property of the action. ActionTools.ActionBuilder; longText(String value). Set the long text property of the action. ActionTools.ActionBuilder; longText(ObservableValue<String> value). Bind the long text property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; selectable(boolean isSelectable). Sets the selectable property of the acti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html
Security,hash,hashCode,"raphic(Node value). Set the graphic property of the action. ActionTools.ActionBuilder; longText(String value). Set the long text property of the action. ActionTools.ActionBuilder; longText(ObservableValue<String> value). Bind the long text property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; selectable(boolean isSelectable). Sets the selectable property of the action. ActionTools.ActionBuilder; selected(boolean value). Set the selected property of the action. ActionTools.ActionBuilder; selected(ObservableValue<Boolean> value). Bind the selected property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; text(String value). Set the text property of the action. ActionTools.ActionBuilder; text(ObservableValue<String> value). Bind the text property of the action to an ObservableValue, bidirectionally if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. text; public ActionTools.ActionBuilder text(String value); Set the text property of the action. Parameters:; value - ; Returns:; this builder. selectable; public ActionTools.ActionBuilder selectable(boolean isSelectable); Sets the selectable property of the action. Parameters:; isSelectable - ; Returns:; this builder. longText; public ActionTools.ActionBuilder longText(String value); Set the long text property of the action. Parameters:; value - ; Returns:; this builder. graphic; public ActionTools.ActionBuilder graphic(Node value); Set the graphic property of the action. Parameters:; value - ; Returns:; this builder. accelerator; public ActionTools.ActionBuilder accelerator(KeyCombination value); Set the accelerator property of the action. Parameters:; value - ; Returns:; this builder. selected; public ActionTools.ActionBuilder selected(boolean value); Set the selected property of the action. Parameters:; value - ; Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html
Availability,avail,available,"ructors. Constructor; Description; ActionTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ActionTools.ActionBuilder; actionBuilder(). Create an ActionTools.ActionBuilder with no properties set. static ActionTools.ActionBuilder; actionBuilder(String text,; Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified text and event handler. static ActionTools.ActionBuilder; actionBuilder(Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified event handler. static org.controlsfx.control.action.Action; createAction(Runnable command). Create an action whose event handler calls a runnable. static org.controlsfx.control.action.Action; createAction(Runnable command,; String name). Create an action whose event handler calls a runnable, with a specified name. static Button; createButton(org.controlsfx.control.action.Action action). Create a button from an action, showing both the text and graphic if available. static Button; createButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a button from an action, showing only the graphic and not any text. static CheckBox; createCheckBox(org.controlsfx.control.action.Action action). Create a checkbox from an action. static MenuItem; createCheckMenuItem(org.controlsfx.control.action.Action action). Create a menu item from an action that makes use of a selected property. static MenuItem; createCheckMenuItem(org.controlsfx.control.action.Action action,; ToggleGroup group). Create a menu item from an action that makes use of a selected property. static MenuItem; createMenuItem(org.controlsfx.control.action.Action action). Create a menu item from an action. static org.controlsfx.control.action.Action; createSelectableAction(ObservableValue<Boolean> property). Create an unnamed action with its Action.selectedProperty() bound to a specified property. static org.controlsfx.control.action.Action",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
Deployability,toggle,toggle,"ic org.controlsfx.control.action.Action; createSelectableCommandAction(ObservableBooleanValue value);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name). Create an action from a selectable icon. static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator);  ; static org.controlsfx.control.action.Action; createSeparator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.act",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
Integrability,message,message,"g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.contro",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
Modifiability,extend,extends,". ActionTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class ActionTools. java.lang.Object; qupath.lib.gui.actions.ActionTools. public class ActionTools; extends Object; Helper methods for generating and configuring Actions and UI elements.; ; This has some similarities with ActionUtils, however has QuPath-specific behavior that make it ; a better choice when working with actions related to QuPathGUI. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ActionTools.ActionBuilder. Builder class for custom Action objects. Constructor Summary; Constructors. Constructor; Description; ActionTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ActionTools.ActionBuilder; actionBuilder(). Create an ActionTools.ActionBuilder with no properties set. static ActionTools.ActionBuilder; actionBuilder(String text,; Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified text and event handler. static ActionTools.ActionBuilder; actionBuilder(Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified event handler. static org.controlsfx.control.action.Action; createAction(Runnable command). Create an action whose event handler calls a runnable. static org.controlsfx.control.action.Action; createAction(Runnable command,; String name). Create an action whose event handler calls a runnable, with a specified name. static Button; createButton(org.controlsfx.control.action.Action action). Create a button from an action, showing both the text and graphic if available. static Button; createButtonWithGraphicOnly",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
Security,access,accessible,"mbination accelerator);  ; static org.controlsfx.control.action.Action; createSeparator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
Modifiability,extend,extends,". AutomateActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class AutomateActions. java.lang.Object; qupath.lib.gui.actions.AutomateActions. public class AutomateActions; extends Object; Default actions associated with QuPath's 'Automate' (scripting) menu. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; HISTORY_SCRIPT;  ; final org.controlsfx.control.action.Action; HISTORY_SHOW;  ; final org.controlsfx.control.action.Action; SCRIPT_EDITOR;  ; final org.controlsfx.control.action.Action; SCRIPT_INTERPRETER;  . Constructor Summary; Constructors. Constructor; Description; AutomateActions(QuPathGUI qupath);  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SCRIPT_EDITOR; @ActionAccelerator(""shortcut+[""); @ActionConfig(""Action.Automate.scriptEditor""); @ActionIcon(SCRIPT_EDITOR); public final org.controlsfx.control.action.Action SCRIPT_EDITOR. SCRIPT_INTERPRETER; @ActionConfig(""Action.Automate.scriptInterpreter""); public final org.controlsfx.control.action.Action SCRIPT_INTERPRETER. HISTORY_SHOW; @ActionAccelerator(""shortcut+shift+w""); @ActionConfig(""Action.Automate.commandWorkflow""); public final org.controlsfx.control.action.Action HISTORY_SHOW. HISTORY_SCRIPT; @ActionConfig(""Action.Automate.commandScript""); public final org.controlsfx.control.action.Action HISTORY_SCRIPT. Constructor Details. AutomateActions; public AutomateActions(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/AutomateActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html
Security,hash,hashCode,". AutomateActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class AutomateActions. java.lang.Object; qupath.lib.gui.actions.AutomateActions. public class AutomateActions; extends Object; Default actions associated with QuPath's 'Automate' (scripting) menu. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; HISTORY_SCRIPT;  ; final org.controlsfx.control.action.Action; HISTORY_SHOW;  ; final org.controlsfx.control.action.Action; SCRIPT_EDITOR;  ; final org.controlsfx.control.action.Action; SCRIPT_INTERPRETER;  . Constructor Summary; Constructors. Constructor; Description; AutomateActions(QuPathGUI qupath);  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SCRIPT_EDITOR; @ActionAccelerator(""shortcut+[""); @ActionConfig(""Action.Automate.scriptEditor""); @ActionIcon(SCRIPT_EDITOR); public final org.controlsfx.control.action.Action SCRIPT_EDITOR. SCRIPT_INTERPRETER; @ActionConfig(""Action.Automate.scriptInterpreter""); public final org.controlsfx.control.action.Action SCRIPT_INTERPRETER. HISTORY_SHOW; @ActionAccelerator(""shortcut+shift+w""); @ActionConfig(""Action.Automate.commandWorkflow""); public final org.controlsfx.control.action.Action HISTORY_SHOW. HISTORY_SCRIPT; @ActionConfig(""Action.Automate.commandScript""); public final org.controlsfx.control.action.Action HISTORY_SCRIPT. Constructor Details. AutomateActions; public AutomateActions(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/AutomateActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html
Modifiability,extend,extends,". CommonActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class CommonActions. java.lang.Object; qupath.lib.gui.actions.CommonActions. public class CommonActions; extends Object; Default actions associated with a specific QuPath instance.; These are useful for generating toolbars and context menus, ensuring that the same actions are used consistently. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BRIGHTNESS_CONTRAST;  ; final org.controlsfx.control.action.Action; CONVEX_POINTS;  ; final org.controlsfx.control.action.Action; HELP_VIEWER;  ; final org.controlsfx.control.action.Action; MEASURE_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; MEASURE_DETECTIONS;  ; final org.controlsfx.control.action.Action; MEASURE_GRID_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; MEASURE_GRID_TMA_CORES;  ; final org.controlsfx.control.action.Action; MEASURE_TMA;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; PROJECT_ADD_IMAGES;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SHOW_ANALYSIS_PANE;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  ; final org.controlsfx.control.action.Action; SHOW_POINTS_DIALOG;  ; final org.controlsfx.control.action.Action; TMA_ADD_NOTE;  . Constructor Summary; Constructors. Constructor; Description; CommonActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsC",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/CommonActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html
Security,hash,hashCode,"; final org.controlsfx.control.action.Action; MEASURE_TMA;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; PROJECT_ADD_IMAGES;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SHOW_ANALYSIS_PANE;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  ; final org.controlsfx.control.action.Action; SHOW_POINTS_DIALOG;  ; final org.controlsfx.control.action.Action; TMA_ADD_NOTE;  . Constructor Summary; Constructors. Constructor; Description; CommonActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; QuPathGUI; getQuPath(). Get the QuPath instance associated with these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_ADD_IMAGES; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_ADD_IMAGES. BRIGHTNESS_CONTRAST; @ActionIcon(CONTRAST); @ActionAccelerator(""shift+c""); @ActionConfig(""CommonActions.showBrightnessContrast""); public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SHOW_POINTS_DIALOG; @ActionIcon(POINTS_TOOL); @ActionConfig(""CommonActions.showCountingTool""); public final org.controlsfx.control.action.Action SHOW_POINTS_DIALOG. TMA_ADD_NOTE; @ActionConfig(""CommonActions.addTMANote""); public final org.controlsfx.control.action.Action TMA_ADD_NOTE. CONVEX_POINTS; @ActionConfig(""CommonActions.showPoin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/CommonActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html
Availability,error,error,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
Integrability,message,message,". InfoMessage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(Strin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
Modifiability,extend,extends,". InfoMessage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(Strin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
Security,hash,hashCode,"ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
Integrability,message,message,". InfoMessage.MessageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.actions; Enum Class InfoMessage.MessageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
Modifiability,extend,extends,". InfoMessage.MessageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.actions; Enum Class InfoMessage.MessageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
Security,hash,hashCode,".actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static InfoMessage.MessageType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to b",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
Modifiability,extend,extends,. OverlayActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class OverlayActions. java.lang.Object; qupath.lib.gui.actions.OverlayActions. public class OverlayActions; extends Object; Actions that interact with OverlayOptions.; These can be used as a basis for creating UI controls that operate on the same options. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; FILL_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; FILL_DETECTIONS;  ; final org.controlsfx.control.action.Action; GRID_SPACING;  ; final org.controlsfx.control.action.Action; SHOW_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES;  ; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  . Constructor Summary; Constructors. Constructor; Description; OverlayActions(OverlayOptions overlayOptions);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OverlayOptions; getOverlayOptions(). Get the overlay options controlled by these a,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/OverlayActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html
Security,hash,hashCode,"BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  . Constructor Summary; Constructors. Constructor; Description; OverlayActions(OverlayOptions overlayOptions);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OverlayOptions; getOverlayOptions(). Get the overlay options controlled by these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_GRID; @ActionIcon(GRID); @ActionAccelerator(""shift+g""); @ActionConfig(""OverlayActions.showCountingGrid""); public final org.controlsfx.control.action.Action SHOW_GRID. GRID_SPACING; @ActionConfig(""OverlayActions.setCountingGridSpacing""); public final org.controlsfx.control.action.Action GRID_SPACING. SHOW_PIXEL_CLASSIFICATION; @ActionIcon(PIXEL_CLASSIFICATION); @ActionAccelerator(""c""); @ActionConfig(""OverlayActions.showPixelOverlay""); public final org.controlsfx.control.action.Action SHOW_PIXEL_CLASSIFICATION. SHOW_CELL_BOUNDARIES; @ActionIcon(CELL_ONLY); @ActionConfig(""OverlayActions.showCellBoundaries""); public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES. SHOW_CELL_NUCLEI; @ActionIcon(NUCLEI_ONLY); @ActionConfig(""OverlayActions.showCellNuclei""); public final org.controlsfx.control.action.Action SHOW_CELL_NUCLEI. SHOW_CELL_BOUNDARIES_AND_NUCLEI; @ActionIcon(CELL_NUCLEI_BOTH); @ActionConfig(""Overla",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/OverlayActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html
Integrability,interface,interface,". qupath.lib.gui.actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions. package qupath.lib.gui.actions. Classes to manage Actions.; ; This encapsulate QuPath's functionality in a way that is separate from specific UI elements.; It's possible to then generate (for example) one or more menu items and buttons for each action, ; while binding the text, graphic and tooltip to the data stored in the action. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. All Classes and InterfacesClassesEnum Classes. Class; Description; ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. CommonActions. Default actions associated with a specific QuPath instance. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. OverlayActions. Actions that interact with OverlayOptions. ViewerActions. Actions that interact with one or more viewers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html
Modifiability,config,configure,". qupath.lib.gui.actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions. package qupath.lib.gui.actions. Classes to manage Actions.; ; This encapsulate QuPath's functionality in a way that is separate from specific UI elements.; It's possible to then generate (for example) one or more menu items and buttons for each action, ; while binding the text, graphic and tooltip to the data stored in the action. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. All Classes and InterfacesClassesEnum Classes. Class; Description; ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. CommonActions. Default actions associated with a specific QuPath instance. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. OverlayActions. Actions that interact with OverlayOptions. ViewerActions. Actions that interact with one or more viewers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html
Integrability,synchroniz,synchronize,"erManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @ActionConfig(""ViewerActions.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. SHOW_OVERVIEW; @ActionIcon(OVERVIEW); @ActionConfig(""ViewerActions.overview""); public final org.controlsfx.control.action.Action SHOW_OVERVIEW. SHOW_LOCATION; @ActionIcon(LOCATION); @ActionConfig(""ViewerActions.location""); public final org.controlsfx.control.action.Action SHOW_LOCATION. SHOW_SCALEBAR; @ActionIcon(SHOW_SCALEBAR); @ActionConfig(""ViewerActions.scalebar""); public final org.controlsfx.control.action.Action SHOW_SCALEBAR. TOGGLE_SYNCHRONIZE_VIEWERS; @ActionAccelerator(""shortcut+alt+s""); @ActionConfig(""ViewerActions.synchronize""); public final org.controlsfx.control.action.Action TOGGLE_SYNCHRONIZE_VIEWERS. VIEWER_GRID_1x1; @ActionConfig(""ViewerActions.grid1x1""); @ActionIcon(VIEWER_GRID_1x1); public final org.controlsfx.control.action.Action VIEWER_GRID_1x1. VIEWER_GRID_1x2; @ActionConfig(""ViewerActions.grid1x2""); @ActionIcon(VIEWER_GRID_1x2); public final org.controlsfx.control.action.Action VIEWER_GRID_1x2. VIEWER_GRID_2x1; @ActionConfig(""ViewerActions.grid2x1""); @ActionIcon(VIEWER_GRID_2x1); public final org.controlsfx.control.action.Action VIEWER_GRID_2x1. VIEWER_GRID_2x2; @ActionConfig(""ViewerActions.grid2x2""); @ActionIcon(VIEWER_GRID_2x2); public final org.controlsfx.control.action.Action VIEWER_GRID_2x2. VIEWER_GRID_3x3; @ActionConfig(""ViewerActions.grid3x3""); @ActionIcon(VIEWER_GRID_3x3); public final org.controlsfx.control.action.Action VIEWER_GRID_3x3. MATCH_VIEWER_RESOLUTIONS; @ActionConfig(""ViewerActions.matchResolutions""); public final org.controlsfx.control.action.Action MATCH_VIEWER_RESOLUTIONS. DE",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html
Modifiability,extend,extends,". ViewerActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class ViewerActions. java.lang.Object; qupath.lib.gui.actions.ViewerActions. public class ViewerActions; extends Object; Actions that interact with one or more viewers.; These can be used as a basis for creating UI controls that operate on the same options. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ATTACH_VIEWER;  ; final org.controlsfx.control.action.Action; DETACH_VIEWER;  ; final org.controlsfx.control.action.Action; MATCH_VIEWER_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; TOGGLE_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_3x3;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Constructor Summary; Constructors. Constructor; Description; ViewerActions(ViewerManager viewerManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @Ac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html
Security,hash,hashCode,"_VIEWER_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; TOGGLE_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_3x3;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Constructor Summary; Constructors. Constructor; Description; ViewerActions(ViewerManager viewerManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @ActionConfig(""ViewerActions.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. SHOW_OVERVIEW; @ActionIcon(OVERVIEW); @ActionConfig(""ViewerActions.overview""); public final org.controlsfx.control.action.Action SHOW_OVERVIEW. SHOW_LOCATION; @ActionIcon(LOCATION); @ActionConfig(""ViewerActions.location""); public final org.controlsfx.control.action.Action SHOW_LOCATION. SHOW_SCALEBAR; @ActionIcon(SHOW_SCALEBAR); @ActionConfig(""ViewerActions.scalebar""); public final org.controlsfx.control.action.Action SHOW_SCALEBAR. TOGGLE_SYNCHRONIZE_VIEWERS; @ActionAccelerator(""shortcut+alt+s""); @ActionConfig(""ViewerActions.synchronize""); public final org.controlsfx.control.action.Action TOGGLE_SYNCHRONIZE_VIEWERS. VIEWER_GRID_1x1; @ActionConfig(""ViewerActions.grid1x1""); @ActionIcon(VIEWER_GRID_1x1); public final org.controlsfx.control.action.Action VIEWER_GRID_1x1. VIEWER_GRID_",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html
Deployability,update,updateChart," object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the chart. Charts.BarChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.BarChartBuilder; xLabel(String label). Specify the x-axis label. Charts.BarChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.BarChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.BarChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.BarChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected St",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
Modifiability,extend,extends,". Charts.BarChartBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts.BarChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.BarChartBuilder. Enclosing class:; Charts. public static class Charts.BarChartBuilder; extends Object; Builder for creating scatter charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  ; protected String; xLabel;  ; protected String; yLabel;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BarChart<String,Number>; build(). Build a chart according to the specified parameters. Charts.BarChartBuilder; classifications(Collection<? extends PathObject> pathObjects). Plot two measurements against one another for the specified objects. protected BarChart<String,Number>; createNewChart();  ; protected BarChart<String,Number>; createNewChart(Axis<String> xAxis,; Axis<Number> yAxis);  ; protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.BarChartBuilder; getThis();  ; Charts.BarChartBuilder; height(double height). Set the preferred height of the chart. Charts.BarChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.BarChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.BarChartBuilder; legend(String side). Specify the side of the chart where th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
Safety,avoid,avoid," charts 'live', e.g. if they ; relate to objects within the hierarchy of this data. Parameters:; imageData - the imageData to associated with this chart; Returns:; this builder. viewer; public Charts.BarChartBuilder viewer(QuPathViewer viewer); Specify a viewer. This can be used to make some charts 'live', e.g. if they ; relate to objects within the viewer. Parameters:; viewer - the viewer to associated with this chart; Returns:; this builder. width; public Charts.BarChartBuilder width(double width); Set the preferred width of the chart. Parameters:; width - preferred width; Returns:; this builder. height; public Charts.BarChartBuilder height(double height); Set the preferred height of the chart. Parameters:; height - preferred height; Returns:; this builder. size; public Charts.BarChartBuilder size(double width,; double height); Set the preferred size of the chart. Parameters:; width - preferred width; height - preferred height; Returns:; this builder. parent; public Charts.BarChartBuilder parent(Window parent); Set the parent window. If not set, QuPath will try to choose a sensible default.; This is useful to avoid the chart falling 'behind' other windows when not in focus.; ; This is relevant only if show() or toStage() will be called. Parameters:; parent - the requested parent window; Returns:; this builder. windowTitle; public Charts.BarChartBuilder windowTitle(String title); Title to use for the window, if the chart is shown.; ; This is relevant only if show() or toStage() will be called. Parameters:; title - window title; Returns:; this builder. build; public BarChart<String,Number> build(); Build a chart according to the specified parameters. Returns:; the chart. toStage; public Stage toStage(); Add the chart to a stage, but do not show it. Returns:; the stage containing this Chart.; See Also:. show(). show; public Stage show(); Add the chart to a stage, and show it in the Application thread. Returns:; the stage containing this Chart.; See Also:. toStage(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
Security,hash,hashCode," Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the chart. Charts.BarChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.BarChartBuilder; xLabel(String label). Specify the x-axis label. Charts.BarChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.BarChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.BarChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.BarChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x locatio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
Modifiability,extend,extends,". Charts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts. java.lang.Object; qupath.lib.gui.charts.Charts. public class Charts; extends Object; Helper class for generating interactive charts. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Charts.BarChartBuilder. Builder for creating scatter charts. static class ; Charts.PieChartBuilder. Builder for creating pie charts. static class ; Charts.ScatterChartBuilder. Builder for creating scatter charts. Constructor Summary; Constructors. Constructor; Description; Charts();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Charts.BarChartBuilder; barChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. static Charts.PieChartBuilder; pieChart(). Create a Charts.PieChartBuilder for generating a custom pie chart. static Charts.ScatterChartBuilder; scatterChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Charts; public Charts(). Method Details. scatterChart; public static Charts.ScatterChartBuilder scatterChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. pieChart; public static Charts.PieChartBuilder pieChart(); Create a Charts.PieChartBuilder for generating a custom pie chart. Returns:; the builder. barChart; public static Charts.BarChartBuilder barChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html
Security,hash,hashCode,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts. java.lang.Object; qupath.lib.gui.charts.Charts. public class Charts; extends Object; Helper class for generating interactive charts. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Charts.BarChartBuilder. Builder for creating scatter charts. static class ; Charts.PieChartBuilder. Builder for creating pie charts. static class ; Charts.ScatterChartBuilder. Builder for creating scatter charts. Constructor Summary; Constructors. Constructor; Description; Charts();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Charts.BarChartBuilder; barChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. static Charts.PieChartBuilder; pieChart(). Create a Charts.PieChartBuilder for generating a custom pie chart. static Charts.ScatterChartBuilder; scatterChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Charts; public Charts(). Method Details. scatterChart; public static Charts.ScatterChartBuilder scatterChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. pieChart; public static Charts.PieChartBuilder pieChart(); Create a Charts.PieChartBuilder for generating a custom pie chart. Returns:; the builder. barChart; public static Charts.BarChartBuilder barChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html
Deployability,update,updateChart,"tBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.PieChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.PieChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.PieChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.PieChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.PieChartBuilder; title(String title). Specify the chart title. Charts.PieChartBuilder; tooltips(boolean showTooltips). Request tooltips to be shown when the cursor hovers over the pie chart. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(PieChart chart). Method that applies properties of this builder to the chart. Charts.PieChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.PieChartBuilder; width(double width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
Modifiability,extend,extends,". Charts.PieChartBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts.PieChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.PieChartBuilder. Enclosing class:; Charts. public static class Charts.PieChartBuilder; extends Object; Builder for creating pie charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Charts.PieChartBuilder; addSlice(Object name,; Number value). Add a slice to the pie. PieChart; build(). Build a chart according to the specified parameters. Charts.PieChartBuilder; convertToPercentages(boolean doConvert). Request that pie chart values are converted to percentages for tooltips. protected PieChart; createNewChart();  ; Charts.PieChartBuilder; data(Map<?,? extends Number> data). Specify data for the pie chart as a map. protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.PieChartBuilder; getThis();  ; Charts.PieChartBuilder; height(double height). Set the preferred height of the chart. Charts.PieChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.PieChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.PieChartBuilder; legend(String side). Specify the side of the chart where the legend should be",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
Safety,avoid,avoid,"ed to make some charts 'live', e.g. if they ; relate to objects within the hierarchy of this data. Parameters:; imageData - the imageData to associated with this chart; Returns:; this builder. viewer; public Charts.PieChartBuilder viewer(QuPathViewer viewer); Specify a viewer. This can be used to make some charts 'live', e.g. if they ; relate to objects within the viewer. Parameters:; viewer - the viewer to associated with this chart; Returns:; this builder. width; public Charts.PieChartBuilder width(double width); Set the preferred width of the chart. Parameters:; width - preferred width; Returns:; this builder. height; public Charts.PieChartBuilder height(double height); Set the preferred height of the chart. Parameters:; height - preferred height; Returns:; this builder. size; public Charts.PieChartBuilder size(double width,; double height); Set the preferred size of the chart. Parameters:; width - preferred width; height - preferred height; Returns:; this builder. parent; public Charts.PieChartBuilder parent(Window parent); Set the parent window. If not set, QuPath will try to choose a sensible default.; This is useful to avoid the chart falling 'behind' other windows when not in focus.; ; This is relevant only if show() or toStage() will be called. Parameters:; parent - the requested parent window; Returns:; this builder. windowTitle; public Charts.PieChartBuilder windowTitle(String title); Title to use for the window, if the chart is shown.; ; This is relevant only if show() or toStage() will be called. Parameters:; title - window title; Returns:; this builder. build; public PieChart build(); Build a chart according to the specified parameters. Returns:; the chart. toStage; public Stage toStage(); Add the chart to a stage, but do not show it. Returns:; the stage containing this Chart.; See Also:. show(). show; public Stage show(); Add the chart to a stage, and show it in the Application thread. Returns:; the stage containing this Chart.; See Also:. toStage(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
Security,hash,hashCode,"e opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.PieChartBuilder; title(String title). Specify the chart title. Charts.PieChartBuilder; tooltips(boolean showTooltips). Request tooltips to be shown when the cursor hovers over the pie chart. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(PieChart chart). Method that applies properties of this builder to the chart. Charts.PieChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.PieChartBuilder; width(double width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - the data map to show; Returns:; this builder. convertToPercentages; public",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
Deployability,update,updateChart,"erChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that applies properties of this builder to the chart. Charts.ScatterChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.ScatterChartBuilder; width(double width). Set the preferred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; doub",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
Modifiability,extend,extends,". Charts.ScatterChartBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts.ScatterChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.ScatterChartBuilder. Enclosing class:; Charts. public static class Charts.ScatterChartBuilder; extends Object; Builder for creating scatter charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  ; protected String; xLabel;  ; protected String; yLabel;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScatterChart<Number,Number>; build(). Build a chart according to the specified parameters. Charts.ScatterChartBuilder; centroids(Collection<? extends PathObject> pathObjects). Plot centroids for the specified objects in pixel units. <T> Charts.ScatterChartBuilder; centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal). Plot centroids for the specified objects using a fixed pixel calibration. protected ScatterChart<Number,Number>; createNewChart();  ; protected ScatterChart<Number,Number>; createNewChart(Axis<Number> xAxis,; Axis<Number> yAxis);  ; protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.ScatterChartBuilder; getThis();  ; Charts.ScatterChartBuilder; height(double height). Set the preferred height of the chart. Charts.ScatterChartBuilder; imageData(ImageData<?> imageData",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
Performance,perform,performance,"ollections of numeric values, with an associated custom object. Charts.ScatterChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that applies properties of this builder to the chart. Charts.ScatterChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.ScatterChartBuilder; width(double width). Set the preferred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
Safety,avoid,avoid," ; relate to objects within the hierarchy of this data. Parameters:; imageData - the imageData to associated with this chart; Returns:; this builder. viewer; public Charts.ScatterChartBuilder viewer(QuPathViewer viewer); Specify a viewer. This can be used to make some charts 'live', e.g. if they ; relate to objects within the viewer. Parameters:; viewer - the viewer to associated with this chart; Returns:; this builder. width; public Charts.ScatterChartBuilder width(double width); Set the preferred width of the chart. Parameters:; width - preferred width; Returns:; this builder. height; public Charts.ScatterChartBuilder height(double height); Set the preferred height of the chart. Parameters:; height - preferred height; Returns:; this builder. size; public Charts.ScatterChartBuilder size(double width,; double height); Set the preferred size of the chart. Parameters:; width - preferred width; height - preferred height; Returns:; this builder. parent; public Charts.ScatterChartBuilder parent(Window parent); Set the parent window. If not set, QuPath will try to choose a sensible default.; This is useful to avoid the chart falling 'behind' other windows when not in focus.; ; This is relevant only if show() or toStage() will be called. Parameters:; parent - the requested parent window; Returns:; this builder. windowTitle; public Charts.ScatterChartBuilder windowTitle(String title); Title to use for the window, if the chart is shown.; ; This is relevant only if show() or toStage() will be called. Parameters:; title - window title; Returns:; this builder. build; public ScatterChart<Number,Number> build(); Build a chart according to the specified parameters. Returns:; the chart. toStage; public Stage toStage(); Add the chart to a stage, but do not show it. Returns:; the stage containing this Chart.; See Also:. show(). show; public Stage show(); Add the chart to a stage, and show it in the Application thread. Returns:; the stage containing this Chart.; See Also:. toStage(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
Security,hash,hashCode,"referred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.ScatterChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unli",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
Deployability,update,updateBounds,"ixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, get",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
Integrability,interface,interface,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line. Parameters:; val - ; color - . addThreshold; public ObservableN",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
Modifiability,extend,extends,". ChartThresholdPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseC",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
Performance,cache,cacheShape,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
Security,access,accessibleHelp," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance Methods",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
Usability,clear,clearThresholds,"ht, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableNumberValue; addThreshold(double x). Add a threshold value. ObservableNumberValue; addThreshold(double x,; Color color). Add a threshold value with its display color. ObservableNumberValue; addThreshold(ObservableNumberValue d). Add a threshold value. void; clearThresholds(). Clear all thresholds. double; getLineWidth(). Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, comp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
Deployability,update,update,"rtInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers... which isn't much use ; when line strokes distinguish between different Series.; ; This method addresses this by setting the graphics for legend labels to be lines with the appropriate strokes. Parameters:; chart - ; length - . expandChartClip; public static void expandChartClip(Chart chart,; double pad); Expand the clip region for a chart.; ; This helps to avoid clipping off markers at the chart boundaries. Parameters:; chart - ; pad - The amount by which to expand the clip rectangle in each direction; if < 0, the clip will be completely removed. setPieChartData; public static <T> void setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips); Set pie chart data from a count map. Type Parameters:; T - the type of the data being counted; Parameters:; chart - the pie chart to update; counts - mapping between items and their counts; stringFun - function to extract a string from each item (may be null to use default toString() method); colorFun - function to extract a color from each item (may be null to use default colors); convertToPercentages - if true, convert counts to percentages; if false, use original values; includeTooltips - if true, install tooltips for each 'slice' to display the numeric information. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
Energy Efficiency,adapt,adapting,". ChartTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartTools. java.lang.Object; qupath.lib.gui.charts.ChartTools. public class ChartTools; extends Object; Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ChartTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
Modifiability,extend,extends,". ChartTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartTools. java.lang.Object; qupath.lib.gui.charts.ChartTools. public class ChartTools; extends Object; Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ChartTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
Safety,avoid,avoid,"rtInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers... which isn't much use ; when line strokes distinguish between different Series.; ; This method addresses this by setting the graphics for legend labels to be lines with the appropriate strokes. Parameters:; chart - ; length - . expandChartClip; public static void expandChartClip(Chart chart,; double pad); Expand the clip region for a chart.; ; This helps to avoid clipping off markers at the chart boundaries. Parameters:; chart - ; pad - The amount by which to expand the clip rectangle in each direction; if < 0, the clip will be completely removed. setPieChartData; public static <T> void setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips); Set pie chart data from a count map. Type Parameters:; T - the type of the data being counted; Parameters:; chart - the pie chart to update; counts - mapping between items and their counts; stringFun - function to extract a string from each item (may be null to use default toString() method); colorFun - function to extract a color from each item (may be null to use default colors); convertToPercentages - if true, convert counts to percentages; if false, use original values; includeTooltips - if true, install tooltips for each 'slice' to display the numeric information. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
Security,hash,hashCode,"mber,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataAsString(XYChart<Number,Number> chart); Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. Parameters:; chart - ; Returns:. makeChartInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
Integrability,interface,interfaces,". HistogramChart.CountsTransformMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransf",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
Modifiability,extend,extends,". HistogramChart.CountsTransformMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransf",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
Security,hash,hashCode,"stable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
Testability,log,logarithm,"ser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARIT",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
Integrability,interface,interfaces,". HistogramChart.DisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.DisplayMode. java.lang.Object; java.lang.Enum<HistogramChart.DisplayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
Modifiability,extend,extends,". HistogramChart.DisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.DisplayMode. java.lang.Object; java.lang.Enum<HistogramChart.DisplayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
Security,hash,hashCode,"splayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. values; public static HistogramChart.DisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.DisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
Modifiability,extend,extends,". HistogramChart.HistogramData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramChart.HistogramData. java.lang.Object; qupath.lib.gui.charts.HistogramChart.HistogramData. Enclosing class:; HistogramChart. public static class HistogramChart.HistogramData; extends Object; Helper class for representing data that may be visualized with a HistogramChart. Constructor Summary; Constructors. Constructor; Description; HistogramData(Histogram histogram,; Color color). Wrapper for histogram & data relevant to its display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Color; getFill(). Get the histogram fill color. Histogram; getHistogram(). Get the histogram. Color; getStroke(). Get the histogram stroke color. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramData; public HistogramData(Histogram histogram,; Color color); Wrapper for histogram & data relevant to its display. Parameters:; histogram - ; color - . Method Details. getStroke; public Color getStroke(); Get the histogram stroke color. Returns:. getFill; public Color getFill(); Get the histogram fill color. Returns:. getHistogram; public Histogram getHistogram(); Get the histogram. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html
Security,hash,hashCode,". HistogramChart.HistogramData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramChart.HistogramData. java.lang.Object; qupath.lib.gui.charts.HistogramChart.HistogramData. Enclosing class:; HistogramChart. public static class HistogramChart.HistogramData; extends Object; Helper class for representing data that may be visualized with a HistogramChart. Constructor Summary; Constructors. Constructor; Description; HistogramData(Histogram histogram,; Color color). Wrapper for histogram & data relevant to its display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Color; getFill(). Get the histogram fill color. Histogram; getHistogram(). Get the histogram. Color; getStroke(). Get the histogram stroke color. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramData; public HistogramData(Histogram histogram,; Color color); Wrapper for histogram & data relevant to its display. Parameters:; histogram - ; color - . Method Details. getStroke; public Color getStroke(); Get the histogram stroke color. Returns:. getFill; public Color getFill(); Get the histogram fill color. Returns:. getHistogram; public Histogram getHistogram(); Get the histogram. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html
Deployability,update,updateAxisRange,"ayMode; getDisplayMode(). Get the histogram display mode. boolean; getHideIfEmpty(). Query whether the chart is automatically hidden (visibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(HistogramChart.DisplayMode mode). Set the histogram display mode. void; setHideIfEmpty(boolean doHide). Request that the chart is automatically hidden (visibility set to false) when there is no data. void; setShowTickLabels(boolean showTickLabels). Request that tick labels are visible or not for both x and y axis. Methods inherited from class javafx.scene.chart.AreaChart; createSymbolsProperty, dataItemAdded, dataItemChanged, dataItemRemoved, getClassCssMetaData, getCreateSymbols, getCssMetaData, layoutPlotChildren, seriesAdded, seriesChanged, seriesRemoved, setCreateSymbols, updateAxisRange. Methods inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisibleProperty, alternativeRowFillVisibleProperty, currentDisplayedExtraValueProperty, currentDisplayedXValueProperty, currentDisplayedYValueProperty, dataProperty, getCurrentDisplayedExtraValue, getCurrentDisplayedXValue, getCurrentDisplayedYValue, getData, getDisplayedDataIterator, getDisplayedSeriesIterator, getPlotChildren, getVerticalGridLinesVisible, getXAxis, getYAxis, horizontalGridLinesVisibleProperty, horizontalZeroLineVisibleProperty, isAlternativeColumnFillVisible, isAlternativeRowFillVisible, isHorizontalGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeriesFromDisplay, setAlternativeColumnFillVisible, setAlternativeRowFillVisible, setCurrentDisplayedExtraValue, setCurrentDisplayedXValue, setCurrentDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
Integrability,interface,interfaces,"yTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectPrope",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
Modifiability,extend,extends,". HistogramChart (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramChart. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.chart.Chart; javafx.scene.chart.XYChart<Number,Number>; javafx.scene.chart.AreaChart<Number,Number>; qupath.lib.gui.charts.HistogramChart. All Implemented Interfaces:; Styleable, EventTarget. public class HistogramChart; extends AreaChart<Number,Number>; JavaFX chart for displaying histograms.; If multiple histograms are shown, these will overlap with one another.; ; Important!> This implementation does not behave quite like the built-in JavaFX charts, by presenting the core; data within XYChart.Series objects.; Instead, the data is stored in HistogramChart.HistogramData objects, which are then used to populate the chart.; ; One advantage of this is that it is easier to control the color of each histogram being displayed.; ; This behavior may change in the future, but for now the user must be careful to only interact with the data through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
Performance,cache,cacheShape,"perty; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
Security,access,accessibleHelp,", legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
Availability,avail,available,"upath.lib.gui.charts.HistogramDisplay. All Implemented Interfaces:; ParameterChangeListener. public class HistogramDisplay; extends Object; implements ParameterChangeListener; Wrapper close to enable the generation and display of histograms relating to a data table.; Other UI controls are provided to enable selection of specific data columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pan",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
Integrability,interface,interface,"st,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a specified data column. Parameters:; column - the name of the column to show. parameterChanged; public void parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting); Description copied from interface: ParameterChangeListener; Notify listener that a parameter value has changed. Specified by:; parameterChanged in interface ParameterChangeListener; Parameters:; parameterList - list containing the parameter; key - key to identify the parameter; isAdjusting - if the parameter is in the process of being changed. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
Modifiability,extend,extends,". HistogramDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramDisplay. java.lang.Object; qupath.lib.gui.charts.HistogramDisplay. All Implemented Interfaces:; ParameterChangeListener. public class HistogramDisplay; extends Object; implements ParameterChangeListener; Wrapper close to enable the generation and display of histograms relating to a data table.; Other UI controls are provided to enable selection of specific data columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a me",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
Security,hash,hashCode,"columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a spe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
Energy Efficiency,adapt,adapting,". qupath.lib.gui.charts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.charts. package qupath.lib.gui.charts. Classes for plotting and charting. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html
Integrability,interface,interface,". qupath.lib.gui.charts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.charts. package qupath.lib.gui.charts. Classes for plotting and charting. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html
Modifiability,adapt,adapting,". qupath.lib.gui.charts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.charts. package qupath.lib.gui.charts. Classes for plotting and charting. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html
Modifiability,plugin,plugins,". qupath.lib.gui.charts Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.charts. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.charts.Charts; qupath.lib.gui.charts.Charts.BarChartBuilder; qupath.lib.gui.charts.Charts.PieChartBuilder; qupath.lib.gui.charts.Charts.ScatterChartBuilder; qupath.lib.gui.charts.ChartTools; qupath.lib.gui.charts.HistogramChart.HistogramData; qupath.lib.gui.charts.HistogramDisplay (implements qupath.lib.plugins.parameters.ParameterChangeListener); javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.chart.Chart. javafx.scene.chart.XYChart<X,Y>. javafx.scene.chart.AreaChart<X,Y>. qupath.lib.gui.charts.HistogramChart. javafx.scene.layout.Pane. javafx.scene.layout.BorderPane. qupath.lib.gui.charts.ChartThresholdPane. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.charts.HistogramChart.CountsTransformMode; qupath.lib.gui.charts.HistogramChart.DisplayMode. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-tree.html
Integrability,interface,interface,". BrightnessContrastCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class BrightnessContrastCommand. java.lang.Object; qupath.lib.gui.commands.BrightnessContrastCommand. All Implemented Interfaces:; Runnable. public class BrightnessContrastCommand; extends Object; implements Runnable; Command to show a Brightness/Contrast dialog to adjust the image display. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression; infoMessage(). Get a string expression to draw attention to any warnings associated with the current display settings. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrightnessContrastCommand; public BrightnessContrastCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. infoMessage; public ObjectExpression infoMessage(); Get a string expression to draw attention to any warnings associated with the current display settings.; This can be used to notify the user that something is amiss, even if the dialog is not open. Returns:; a string expression that evaluates to the warning text, or null if there are no warnings. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html
Modifiability,extend,extends,". BrightnessContrastCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class BrightnessContrastCommand. java.lang.Object; qupath.lib.gui.commands.BrightnessContrastCommand. All Implemented Interfaces:; Runnable. public class BrightnessContrastCommand; extends Object; implements Runnable; Command to show a Brightness/Contrast dialog to adjust the image display. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression; infoMessage(). Get a string expression to draw attention to any warnings associated with the current display settings. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrightnessContrastCommand; public BrightnessContrastCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. infoMessage; public ObjectExpression infoMessage(); Get a string expression to draw attention to any warnings associated with the current display settings.; This can be used to notify the user that something is amiss, even if the dialog is not open. Returns:; a string expression that evaluates to the warning text, or null if there are no warnings. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html
Security,hash,hashCode,". BrightnessContrastCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class BrightnessContrastCommand. java.lang.Object; qupath.lib.gui.commands.BrightnessContrastCommand. All Implemented Interfaces:; Runnable. public class BrightnessContrastCommand; extends Object; implements Runnable; Command to show a Brightness/Contrast dialog to adjust the image display. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression; infoMessage(). Get a string expression to draw attention to any warnings associated with the current display settings. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrightnessContrastCommand; public BrightnessContrastCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. infoMessage; public ObjectExpression infoMessage(); Get a string expression to draw attention to any warnings associated with the current display settings.; This can be used to notify the user that something is amiss, even if the dialog is not open. Returns:; a string expression that evaluates to the warning text, or null if there are no warnings. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html
Availability,avail,available,"Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Deployability,install,installed,"; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Energy Efficiency,monitor,monitor,"Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). Show a dialog to adjust QuPath preferences. static void; createRotateImageDialog(QuPathGUI qupath). Create a dialog for rotating the image in the current viewer (for display only). static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuPath. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; String name). Create a named command that generates a persistent single dialog on demand. static Stage; createSpecifyAnnotationDialog(QuPathGUI qupath). Create a stage to prompt the user to specify an annotation to add. static Stage; cr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Integrability,depend,dependencies,"boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). Show a dialog to adjust QuPath preferences. static void; createRotateImageDialog(QuPathGUI qupath). Create a dialog for rotating the image in the current viewer (for display only). static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuPath. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; S",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Modifiability,extend,extends,". Commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measuremen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Performance,perform,performed,"e selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetection",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Safety,detect,detection,"; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; cre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Security,hash,hashCode,"ns installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Commands; public Commands(). Method Details. insertSelectedObjectsInHierarchy; public static void insertSelectedObjectsInHierarchy(ImageData<?> imageData); Insert the selected objects in the hierarchy, resolving positions accordingly.; ; This causes smaller 'completely-contained' annotations to be positioned below larger containing annotations, ; and detections to be assigned to other annotations based on centroid location. Parameters:; imageData - the image data containing the hierarchy. promptToResolveHierarchy; public static void promptToResolveHierarchy(ImageData<?> imageData); Resolve parent-child relationships within the object hierarchy.; This means that objects will be arranged hierarchically, rather than as a flat list. Parameters:; imageData - the image data to process. createFullImageAnnotation; public static void createFullImageAnnotation(QuPathViewer viewer); Create a full image annotation for the image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Testability,log,logging,"athGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjects",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Usability,simpl,simple,". Commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measuremen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
Availability,avail,available,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
Integrability,depend,dependent,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
Modifiability,extend,extends,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
Security,hash,hashCode,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
Integrability,interface,interface,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
Modifiability,extend,extends,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
Security,hash,hashCode,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
Modifiability,extend,extends,". ExportObjectsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ExportObjectsCommand. java.lang.Object; qupath.lib.gui.commands.ExportObjectsCommand. public final class ExportObjectsCommand; extends Object; Command to export object(s) in GeoJSON format to an output file. Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; runGeoJsonExport(QuPathGUI qupath). Run the path object GeoJSON export command. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. runGeoJsonExport; public static boolean runGeoJsonExport(QuPathGUI qupath); throws IOException; Run the path object GeoJSON export command. Parameters:; qupath - ; Returns:; success; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html
Security,hash,hashCode,". ExportObjectsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ExportObjectsCommand. java.lang.Object; qupath.lib.gui.commands.ExportObjectsCommand. public final class ExportObjectsCommand; extends Object; Command to export object(s) in GeoJSON format to an output file. Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; runGeoJsonExport(QuPathGUI qupath). Run the path object GeoJSON export command. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. runGeoJsonExport; public static boolean runGeoJsonExport(QuPathGUI qupath); throws IOException; Run the path object GeoJSON export command. Parameters:; qupath - ; Returns:; success; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html
Deployability,update,update,"e; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class InteractiveObjectImporter. java.lang.Object; qupath.lib.gui.commands.InteractiveObjectImporter. public final class InteractiveObjectImporter; extends Object; Static methods to import object(s) from different sources. Author:; Melvin Gelbard, Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; MIME_TYPE_GEOJSON. Mime type for GeoJson. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DataFormat; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See Also:. Constant Field Values. Method Details. getGeoJsonDataFormat; public static DataFormat getGeoJsonDataForma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
Modifiability,extend,extends,". InteractiveObjectImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class InteractiveObjectImporter. java.lang.Object; qupath.lib.gui.commands.InteractiveObjectImporter. public final class InteractiveObjectImporter; extends Object; Static methods to import object(s) from different sources. Author:; Melvin Gelbard, Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; MIME_TYPE_GEOJSON. Mime type for GeoJson. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DataFormat; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
Security,hash,hashCode,"Format; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See Also:. Constant Field Values. Method Details. getGeoJsonDataFormat; public static DataFormat getGeoJsonDataFormat(); Get a DataFormat suitable for storing GeoJSON data on a clipboard. Returns:. promptToImportObjectsProjectEntry; public static boolean promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry); Prompt to import objects from a project entry. Parameters:; imageData - the image to which the objects should be added; entry - the entry containing the objects to add; Returns:; true if objects were added, false otherwise. readObjectsFromClipboard; public static List<PathObject> readObjectsFromClipboard(ImageData<BufferedImage> imageData); throws IOException,; JsonSyntaxException,; JsonParseException; Try to read objects from the system clipboard. Parameters:; imageData - the image to w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
Availability,error,error,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
Integrability,message,messages,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
Modifiability,extend,extends,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
Security,hash,hashCode," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
Testability,log,log,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
Integrability,interface,interface,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
Modifiability,extend,extends,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
Security,hash,hashCode,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
Usability,simpl,simple,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
Deployability,update,updated,". MiniViewers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers. java.lang.Object; qupath.lib.gui.commands.MiniViewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
Energy Efficiency,efficient,efficient,". MiniViewers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers. java.lang.Object; qupath.lib.gui.commands.MiniViewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
Integrability,depend,depending,". MiniViewers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers. java.lang.Object; qupath.lib.gui.commands.MiniViewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
Modifiability,extend,extends,". MiniViewers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers. java.lang.Object; qupath.lib.gui.commands.MiniViewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
Security,hash,hashCode,"ewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers.MiniViewerManager associated with a specified viewer. Parameters:; viewer - ; Returns:; Since:; v0.4.0. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels); Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Parameters:; viewer - ; channels - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
Availability,down,downsample,"p. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers.MiniViewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(do",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
Integrability,interface,interface,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
Modifiability,extend,extends,". MiniViewers.MiniViewerManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers.MiniViewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to inc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
Security,hash,hashCode,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
Integrability,interface,interface,". qupath.lib.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simpl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
Modifiability,extend,extends,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
Safety,detect,detection,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
Testability,log,log,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
Usability,simpl,simple,". qupath.lib.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simpl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
Integrability,interface,interfaces,". PathObjectGridView.GridDisplaySize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.commands; Enum Class PathObjectGridView.GridDisplaySize. java.lang.Object; java.lang.Enum<PathObjectGridView.GridDisplaySize>; qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. All Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
Modifiability,extend,extends,". PathObjectGridView.GridDisplaySize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.commands; Enum Class PathObjectGridView.GridDisplaySize. java.lang.Object; java.lang.Enum<PathObjectGridView.GridDisplaySize>; qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. All Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
Security,hash,hashCode," Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static final PathObjectGridView.GridDisplaySize LARGE. Method Details. values; public static PathObjectGridView.GridDisplaySize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectGridView.GridDisplaySize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
Integrability,interface,interface,"ectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view. refresh; public void refresh(); Refresh the data in the grid view. imageDataProperty; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty(). Returns:; the imageData property. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
Modifiability,extend,extends,". PathObjectGridView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class PathObjectGridView. java.lang.Object; qupath.lib.gui.commands.PathObjectGridView. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener. public class PathObjectGridView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Grid display of objects.; ; Previously this was TMAGridView, but it was generalized for v0.4.0 to support other kinds of object.; ; This requires cores in memory, so does not scale wonderfully... but it can be quite useful for individual slides. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageData<BufferedImage>>; imageData;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathObjectGridView.GridDisplaySize;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent even",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
Security,hash,hashCode,"; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
Deployability,install,installed,"lly, false if it was cancelled; Throws:; IOException. promptToImportImages; public static List<ProjectImageEntry<BufferedImage>> promptToImportImages(QuPathGUI qupath,; String... defaultPaths); Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. Parameters:; qupath - the QuPath instance; defaultPaths - image paths to include when the dialog is shown (useful when the dialog is shown with some paths already known); Returns:; a list of project entries for all images that were successfully added to the project. promptToImportImages; public static List<ProjectImageEntry<BufferedImage>> promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths); Show prompt for the user to select images to import into the current project in QuPath. Parameters:; qupath - the QuPath instance; builder - if not null, this will be used to create the servers. If null, a combobox will be shown to choose an installed builder.; defaultPaths - image paths to include when the dialog is shown (useful when the dialog is shown with some paths already known); Returns:; a list of project entries for all images that were successfully added to the project. addSingleImageToProject; public static ProjectImageEntry<BufferedImage> addSingleImageToProject(Project<BufferedImage> project,; ImageServer<BufferedImage> server,; ImageData.ImageType type); Add a single image to a project. Parameters:; project - the project; server - the image to add; type - optional image type, if known; Returns:; an entry corresponding to the image that was added. getThumbnailRGB; public static BufferedImage getThumbnailRGB(ImageServer<BufferedImage> server); throws IOException; Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. Parameters:; server - ; Returns:; an RGB thumbnail for server; Throws:; IOException. showProjectMetadataEditor; public static void showProjectMetadat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html
Modifiability,extend,extends,". ProjectCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ProjectCommands. java.lang.Object; qupath.lib.gui.commands.ProjectCommands. public class ProjectCommands; extends Object; Helper class implementing simple 'single-method' commands related to projects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectCommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; addSingleImageToProject(Project<BufferedImage> project,; ImageServer<BufferedImage> server,; ImageData.ImageType type). Add a single image to a project. static BufferedImage; getThumbnailRGB(ImageServer<BufferedImage> server). Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. static boolean; promptToCheckURIs(Project<?> project,; boolean onlyIfMissing). Check the URIs within a project, prompting the user to correct any broken links if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html
Security,hash,hashCode," if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user to select a legacy project file, and then import the images into ; the current project. static void; showProjectMetadataEditor(Project<?> project). Show the metadata editor for the specified project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectCommands; public ProjectCommands(). Method Details. promptToCheckURIs; public static boolean promptToCheckURIs(Project<?> project,; boolean onlyIfMissing); throws IOException; Check the URIs within a project, prompting the user to correct any broken links if required. Parameters:; project - the project containing URIs to check; onlyIfMissing - if true, only display a prompt if some links are broken; Returns:; true if the dialog was shown and closed successfully, false if it was cancelled; Throws:; IOException. promptToImportImages; public static List<ProjectImageEntry<BufferedImage>> promptToImportImages(QuPathGUI qupath,; String... defaultPaths); Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. Parameters:; qupath - the QuPath instance; defaultPaths - image paths to include when the dialog is shown (useful when the dialog is shown",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html
Usability,simpl,simple,". ProjectCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ProjectCommands. java.lang.Object; qupath.lib.gui.commands.ProjectCommands. public class ProjectCommands; extends Object; Helper class implementing simple 'single-method' commands related to projects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectCommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; addSingleImageToProject(Project<BufferedImage> project,; ImageServer<BufferedImage> server,; ImageData.ImageType type). Add a single image to a project. static BufferedImage; getThumbnailRGB(ImageServer<BufferedImage> server). Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. static boolean; promptToCheckURIs(Project<?> project,; boolean onlyIfMissing). Check the URIs within a project, prompting the user to correct any broken links if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html
Modifiability,extend,extends,". SummaryMeasurementTableCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class SummaryMeasurementTableCommand. java.lang.Object; qupath.lib.gui.commands.SummaryMeasurementTableCommand. public class SummaryMeasurementTableCommand; extends Object; Show a summary table for an object of a particular type (annotation, detection, TMA core...). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SummaryMeasurementTableCommand(QuPathGUI qupath). Command to show a summary measurement table, for PathObjects of a specified type (e.g. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
Safety,detect,detection,". SummaryMeasurementTableCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class SummaryMeasurementTableCommand. java.lang.Object; qupath.lib.gui.commands.SummaryMeasurementTableCommand. public class SummaryMeasurementTableCommand; extends Object; Show a summary table for an object of a particular type (annotation, detection, TMA core...). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SummaryMeasurementTableCommand(QuPathGUI qupath). Command to show a summary measurement table, for PathObjects of a specified type (e.g. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
Security,hash,hashCode,"s. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - the data type for the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:. getTableModelString; public static <T> String getTableModelString(PathTableData<T> model,; String ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
Deployability,install,installDragAndDropHandler,. TMACommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class TMACommands. java.lang.Object; qupath.lib.gui.commands.TMACommands. public class TMACommands; extends Object; Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMACommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; installDragAndDropHandler(QuPathGUI qupath). Command to install a drag and drop file handler for exported TMA data. static boolean; promptToAddColumnAfterSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid after the column containing the currently-selected object. static boolean; promptToAddColumnBeforeSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid before the column containing the currently-selected object. static void; promptToAddNoteToSelectedCores(ImageData<?> imageData). Prompt to type a node to associate with the selected TMA cores. static boolean; promptToAddRowAfterSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> image,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
Modifiability,extend,extends,. TMACommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class TMACommands. java.lang.Object; qupath.lib.gui.commands.TMACommands. public class TMACommands; extends Object; Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMACommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; installDragAndDropHandler(QuPathGUI qupath). Command to install a drag and drop file handler for exported TMA data. static boolean; promptToAddColumnAfterSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid after the column containing the currently-selected object. static boolean; promptToAddColumnBeforeSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid before the column containing the currently-selected object. static void; promptToAddNoteToSelectedCores(ImageData<?> imageData). Prompt to type a node to associate with the selected TMA cores. static boolean; promptToAddRowAfterSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> image,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
Security,hash,hashCode," currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> imageData). Prompt to delete a row from a TMA grid. static void; promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Prompt to export summary TMA data for a specific image to a directory. static void; promptToImportTMAData(ImageData<?> imageData). Prompt to import TMA data for the specified image data. static void; promptToRelabelTMAGrid(ImageData<?> imageData). Prompt to relabel the core names within a TMA grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMACommands; public TMACommands(). Method Details. promptToAddNoteToSelectedCores; public static void promptToAddNoteToSelectedCores(ImageData<?> imageData); Prompt to type a node to associate with the selected TMA cores. Parameters:; imageData - . promptToExportTMAData; public static void promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Prompt to export summary TMA data for a specific image to a directory. Parameters:; qupath - ; imageData - . installDragAndDropHandler; public static void installDragAndDropHandler(QuPathGUI qupath); Command to install a drag and drop file handler for exported TMA data. Parameters:; qupath - QuPath instance to which the handler should be installed. promptToImportTMAData; public static void promptToImportTMAData(ImageData<?> imageData); Prompt to import TMA data for the specified image data. Parameters:; imageData - the image data for which the TMA data s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
Usability,simpl,simple,. TMACommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class TMACommands. java.lang.Object; qupath.lib.gui.commands.TMACommands. public class TMACommands; extends Object; Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMACommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; installDragAndDropHandler(QuPathGUI qupath). Command to install a drag and drop file handler for exported TMA data. static boolean; promptToAddColumnAfterSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid after the column containing the currently-selected object. static boolean; promptToAddColumnBeforeSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid before the column containing the currently-selected object. static void; promptToAddNoteToSelectedCores(ImageData<?> imageData). Prompt to type a node to associate with the selected TMA cores. static boolean; promptToAddRowAfterSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> image,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
Deployability,update,updated,". UpdateUrisCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the num",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
Modifiability,extend,extends,". UpdateUrisCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the num",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
Security,hash,hashCode," Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; Throws:; IOException - if there was a problem accessing the URIs. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
Availability,error,error,"ed; public static class Dialogs.Builder; extends Object; Deprecated.; Builder class to create a custom Dialog. Constructor Summary; Constructors. Constructor; Description; Builder(). Deprecated.;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Dialogs.Builder; alertType(Alert.AlertType type). Deprecated.; Create a dialog styled as a specified alert type. Dialog<ButtonType>; build(). Deprecated.; Build the dialog. Dialogs.Builder; buttons(String... buttonNames). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; buttons(ButtonType... buttonTypes). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; confirmation(). Deprecated.; Create an confirmation alert dialog. Dialogs.Builder; content(Node content). Deprecated.; Specify a Node to display within the dialog. Dialogs.Builder; contentText(String content). Deprecated.; Specify the dialog content text. Dialogs.Builder; error(). Deprecated.; Create an error alert dialog. Dialogs.Builder; expandableContent(Node content). Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. Dialogs.Builder; headerText(String header). Deprecated.; Specify the dialog header text. Dialogs.Builder; height(double height). Deprecated.; Specify the dialog height. Dialogs.Builder; information(). Deprecated.; Create an information alert dialog. Dialogs.Builder; modality(Modality modality). Deprecated.; Specify the modality of the dialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
Modifiability,extend,extends,". Dialogs.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class Dialogs.Builder. java.lang.Object; qupath.lib.gui.dialogs.Dialogs.Builder. Enclosing class:; Dialogs. @Deprecated; public static class Dialogs.Builder; extends Object; Deprecated.; Builder class to create a custom Dialog. Constructor Summary; Constructors. Constructor; Description; Builder(). Deprecated.;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Dialogs.Builder; alertType(Alert.AlertType type). Deprecated.; Create a dialog styled as a specified alert type. Dialog<ButtonType>; build(). Deprecated.; Build the dialog. Dialogs.Builder; buttons(String... buttonNames). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; buttons(ButtonType... buttonTypes). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; confirmation(). Deprecated.; Create an confirmation alert dialog. Dialogs.Builder; content(Node content). Deprecated.; Specify a Node to display within the dialog. Dialogs.Builder; contentText(String content). Deprecated.; Specify the dialog content text. Dialogs.Builder; error(). Deprecated.; Create an error alert dialog. Dialogs.Builder; expandableContent(Node content). Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. Dialogs.Builder; headerText(String header). Deprecated.; Specify the dialog header text. Dialogs.Builder; height(double height). Deprecated.; Specify the dialog height. Dialogs.Builder; information(). Deprecated.; Create an information alert dialog. Dialogs.Builder; modality(Modality modality). Deprecated.; Specify",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
Security,hash,hashCode,"ialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable (but default it is not). void; show(). Deprecated.; Show the dialog. Optional<ButtonType>; showAndWait(). Deprecated.; Show the dialog. Dialogs.Builder; size(double width,; double height). Deprecated.; Specify the dialog height. Dialogs.Builder; title(String title). Deprecated.; Specify the dialog title. Dialogs.Builder; warning(). Deprecated.; Create a warning alert dialog. Dialogs.Builder; width(double width). Deprecated.; Specify the dialog width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Deprecated. Method Details. title; public Dialogs.Builder title(String title); Deprecated.; Specify the dialog title. Parameters:; title - dialog title; Returns:; this builder. headerText; public Dialogs.Builder headerText(String header); Deprecated.; Specify the dialog header text.; This is text that is displayed prominently within the dialog. Parameters:; header - dialog header; Returns:; this builder; See Also:. contentText(String). contentText; public Dialogs.Builder contentText(String content); Deprecated.; Specify the dialog content text.; This is text that is displayed within the dialog. Parameters:; content - dialog content text; Returns:; this builder; See Also:. headerText(String). content; public Dialogs.Builder content(Node content); Deprecated.; Specify a Node to display within the dialog. Parameters:; content - dialog content; Returns:; this builder; See Also:. contentText(St",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
Integrability,interface,interfaces,". Dialogs.DialogButton (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Enum Class Dialogs.DialogButton. java.lang.Object; java.lang.Enum<Dialogs.DialogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the orde",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
Modifiability,extend,extends,". Dialogs.DialogButton (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Enum Class Dialogs.DialogButton. java.lang.Object; java.lang.Enum<Dialogs.DialogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the orde",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
Security,hash,hashCode,"alogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Dialogs.DialogButton valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
Availability,error,error,"erName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
Integrability,message,message,"ted.; Prompt user to select a file. static File; promptForFile(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt the user for a file with some kind of file dialog. static String; promptForFilePathOrURL(String title,; String defaultPath,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt user to select a file or input a URL. static List<File>; promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt to open a list of files. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; String filterName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String me",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
Modifiability,extend,extends,". Dialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class Dialogs. java.lang.Object; qupath.lib.gui.dialogs.Dialogs. @Deprecated; public class Dialogs; extends Object; Deprecated.; since v0.5.0. Legacy class, deprecated since v0.5.0.; Replaced by Dialogs and FileChoosers. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Dialogs.Builder. Deprecated. static enum ; Dialogs.DialogButton. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. Constructor Summary; Constructors. Constructor; Description; Dialogs(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Dialogs.Builder; builder(). Deprecated.; Create a new builder to generate a custom dialog. static qupath.lib.gui.dialogs.QuPathChooser; getChooser(Window window). Deprecated.; Get a QuPathChooser instance linked to a specific window. static File; promptForDirectory(File dirBase). Deprecated.; Prompt user to select a directory. static File; promptForDirectory(String title,; File dirBase). Deprecated.; Prompt user to select a directory. static File; promptForFile(File dirBase). Deprecated.; Prompt user to select a file. static File; promptForFile(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt the user for a file with some kind of file dialog. static String; promptForFilePathOrURL(String title,; String defaultPath,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt user to select a file or input a URL. static List<File>; promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
Security,hash,hashCode,"or message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
Integrability,interface,interface,". qupath.lib.gui.dialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.dialogs. package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Dialogs; Deprecated.; since v0.5.0. Dialogs.Builder; Deprecated.; Dialogs.DialogButton. Possible buttons pressed in a yes/no/cancel dialog. ParameterPanelFX. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ProjectDialogs. Dialogs specifically related to managing projects. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/package-summary.html
Deployability,update,updated,"listener - ; See Also:. removeParameterChangeListener(ParameterChangeListener). removeParameterChangeListener; public void removeParameterChangeListener(ParameterChangeListener listener); Remove a ParameterChangeListener. Parameters:; listener - ; See Also:. addParameterChangeListener(ParameterChangeListener). setTextFieldFromNumber; protected static void setTextFieldFromNumber(TextField text,; Number value,; String unit). getTextField; protected TextField getTextField(Parameter<?> param,; int cols). getParameterEnabled; public boolean getParameterEnabled(String key); Returns true if a parameter exists with the given key and is enabled (and is therefore editable). Parameters:; key - ; Returns:. getParameterEnabled; public boolean getParameterEnabled(Parameter<?> param); Returns true if a parameter is enabled (and is therefore editable). Parameters:; param - ; Returns:. setParameterEnabled; public void setParameterEnabled(String key,; boolean enabled); Set the enabled status of a parameter by key, to determine if it can be edited. Parameters:; key - ; enabled - . setParameterEnabled; public void setParameterEnabled(Parameter<?> param,; boolean enabled); Set the enabled status of a parameter, to determine if it can be edited. Parameters:; param - ; enabled - . setNumericParameterValue; public boolean setNumericParameterValue(String key,; Number value); Set a numeric parameter value (either int or double).; ; The reason for using this method rather than setting the parameter value directly is that it ensures that; any displayed components (text fields, sliders...) are updated accordingly. Parameters:; key - ; value - ; Returns:. setNumericParameterValueRange; public boolean setNumericParameterValueRange(String key,; double minValue,; double maxValue); Set the minimum and maximum value for a numeric parameter.; ; If the parameter is being displayed with a slider, the slider range will also be updated accordingly. Parameters:; key - ; minValue - ; maxValue - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html
Modifiability,extend,extends,". ParameterPanelFX (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ParameterPanelFX. java.lang.Object; qupath.lib.gui.dialogs.ParameterPanelFX. public class ParameterPanelFX; extends Object; A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ParameterPanelFX(ParameterList params). Create a ParameterPanelFX. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addParameterChangeListener(ParameterChangeListener listener). Add a ParameterChangeListener to be notified as parameters are modified by the user. Pane; getPane(). Get the Pane that can be displayed. boolean; getParameterEnabled(String key). Returns true if a parameter exists with the given key and is enabled (and is therefore editable). boolean; getParameterEnabled(Parameter<?> param). Returns true if a parameter is enabled (and is therefore editable). ParameterList; getParameters(). Get the ParameterList displayed in this panel. protected TextField; getTextField(Parameter<?> param,; int cols);  ; void; removeParameterChangeListener(ParameterChangeListener listener). Remove a ParameterChangeListener. boolean; setNumericParameterValue(String key,; Number value). Set a numeric parameter value (either int or double). boolean; setNumericParameterValueRange(String key,; double minValue,; double maxValue). Set the minimum and maximum value for a numeric parameter. void; setParameterEnabled(String key,; boolean enabled). Set the enabled status of a parameter by key, to determine if it can be edited. void; setParameterEnabled(Parameter<?",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html
Security,hash,hashCode,"d is therefore editable). ParameterList; getParameters(). Get the ParameterList displayed in this panel. protected TextField; getTextField(Parameter<?> param,; int cols);  ; void; removeParameterChangeListener(ParameterChangeListener listener). Remove a ParameterChangeListener. boolean; setNumericParameterValue(String key,; Number value). Set a numeric parameter value (either int or double). boolean; setNumericParameterValueRange(String key,; double minValue,; double maxValue). Set the minimum and maximum value for a numeric parameter. void; setParameterEnabled(String key,; boolean enabled). Set the enabled status of a parameter by key, to determine if it can be edited. void; setParameterEnabled(Parameter<?> param,; boolean enabled). Set the enabled status of a parameter, to determine if it can be edited. protected static void; setTextFieldFromNumber(TextField text,; Number value,; String unit);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterPanelFX; public ParameterPanelFX(ParameterList params); Create a ParameterPanelFX. Parameters:; params - . Method Details. getParameters; public ParameterList getParameters(); Get the ParameterList displayed in this panel. Returns:. getPane; public Pane getPane(); Get the Pane that can be displayed. Returns:. addParameterChangeListener; public void addParameterChangeListener(ParameterChangeListener listener); Add a ParameterChangeListener to be notified as parameters are modified by the user. Parameters:; listener - ; See Also:. removeParameterChangeListener(ParameterChangeListener). removeParameterChangeListener; public void removeParameterChangeListener(ParameterChangeListener listener); Remove a ParameterChangeListener. Parameters:; listener - ; See Also:. addParameterChangeListener(ParameterChangeListener). setTextFieldFromNumber; protected static void setTextFieldFromNumber(TextField text,; Number valu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html
Availability,avail,availableImages,". ProjectDialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
Modifiability,extend,extends,". ProjectDialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
Security,hash,hashCode," ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry f",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
Integrability,interface,interface,". GitHubProject.GitHubRepo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
Modifiability,extend,extends,". GitHubProject.GitHubRepo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
Security,hash,hashCode," disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
Usability,user-friendly,user-friendly,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
Deployability,release,releases,. GitHubProject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface GitHubProject. public interface GitHubProject; Helper class to represent a project hosted on GitHub.; May be used in combination with UpdateChecker to query new releases. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; GitHubProject.GitHubRepo; getRepository(). Get the GitHub repository associated with the project. Method Details. getRepository; GitHubProject.GitHubRepo getRepository(); Get the GitHub repository associated with the project. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html
Integrability,interface,interface,. GitHubProject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface GitHubProject. public interface GitHubProject; Helper class to represent a project hosted on GitHub.; May be used in combination with UpdateChecker to query new releases. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; GitHubProject.GitHubRepo; getRepository(). Get the GitHub repository associated with the project. Method Details. getRepository; GitHubProject.GitHubRepo getRepository(); Get the GitHub repository associated with the project. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html
Deployability,update,updates,. qupath.lib.gui.extensions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.extensions. package qupath.lib.gui.extensions. Interface to define QuPath extensions. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. QuPathExtension. Simple interface for QuPath extensions. Subcommand. A subcommand for the command line interface. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html
Integrability,interface,interface,. qupath.lib.gui.extensions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.extensions. package qupath.lib.gui.extensions. Interface to define QuPath extensions. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. QuPathExtension. Simple interface for QuPath extensions. Subcommand. A subcommand for the command line interface. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html
Deployability,install,installExtension," Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface QuPathExtension. All Known Implementing Classes:; BioFormatsOptionsExtension, IJExtension, OpenSlideExtension, ProcessingExtension, RichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
Integrability,interface,interface,". QuPathExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface QuPathExtension. All Known Implementing Classes:; BioFormatsOptionsExtension, IJExtension, OpenSlideExtension, ProcessingExtension, RichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extens",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
Performance,load,loaded,"e QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Returns:; See Also:. GeneralTools.getPackageVersion(Class). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
Testability,test,test,"ichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
Integrability,interface,interface,". Subcommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface Subcommand. All Known Implementing Classes:; ConvertCommand. public interface Subcommand; A subcommand for the command line interface.; This should further implement either Runnable or Callable, ; and be annotated according to the expectations of picocli. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/Subcommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/Subcommand.html
Deployability,update,updates,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
Modifiability,extend,extends,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
Security,hash,hashCode,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
Availability,avail,available,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
Deployability,release,release,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
Modifiability,extend,extends,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
Security,hash,hashCode,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
Usability,user-friendly,user-friendly,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
Integrability,interface,interface,. qupath.lib.gui.localization (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.localization. package qupath.lib.gui.localization. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; QuPathResources. Load strings from the default resource bundle. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/package-summary.html
Deployability,update,update,". QuPathResources (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.localization; Class QuPathResources. java.lang.Object; qupath.lib.gui.localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle us",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
Integrability,interface,interface,"  ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.localization; Class QuPathResources. java.lang.Object; qupath.lib.gui.localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface st",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
Modifiability,extend,extends,". QuPathResources (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.localization; Class QuPathResources. java.lang.Object; qupath.lib.gui.localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle us",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
Security,hash,hashCode,"ct; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString(String bundleName,; String key). hasBundleForLocale; public static bool",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
Deployability,update,updated,"ass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log le",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
Modifiability,extend,extends,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
Security,hash,hashCode," root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
Testability,log,logging,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
Integrability,interface,interfaces,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
Modifiability,extend,extends,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
Security,hash,hashCode,".LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
Testability,log,logging,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
Integrability,interface,interface,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html
Testability,log,logging,. qupath.lib.gui.logging (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.logging. package qupath.lib.gui.logging. Support for logging. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. TextAppendable. Interface to indicate anything for which text can be appended. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-summary.html
Testability,log,logging,". qupath.lib.gui.logging Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.logging. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.logging.LogManager. Interface Hierarchy. qupath.lib.gui.logging.TextAppendable. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.logging.LogManager.LogLevel. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/package-tree.html
Integrability,interface,interface,". TextAppendable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Interface TextAppendable. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface TextAppendable; Interface to indicate anything for which text can be appended. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. Method Details. appendText; void appendText(String text); Append the specified text to the appendable. Parameters:; text - the text to be appended. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html
Testability,log,logging,". TextAppendable (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Interface TextAppendable. All Known Subinterfaces:; ScriptEditorControl<T>. All Known Implementing Classes:; CodeAreaControl, TextAreaControl. public interface TextAppendable; Interface to indicate anything for which text can be appended. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. Method Details. appendText; void appendText(String text); Append the specified text to the appendable. Parameters:; text - the text to be appended. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/TextAppendable.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/TextAppendable.html
Deployability,update,updateMeasurementList," an ImageData. String; getStringValue(PathObject pathObject,; String column). Get a string representation of the value. String; getStringValue(PathObject pathObject,; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
Integrability,interface,interface," object or data. Parameters:; pathObject - ; column - ; Returns:. createStringMeasurement; @Deprecated; public Binding<String> createStringMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific String measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
Modifiability,extend,extends,". ObservableMeasurementTableData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.measure; Class ObservableMeasurementTableData. java.lang.Object; qupath.lib.gui.measure.ObservableMeasurementTableData. All Implemented Interfaces:; PathTableData<PathObject>. public class ObservableMeasurementTableData; extends Object; implements PathTableData<PathObject>; A table data model to supply observable measurements of PathObjects.; ; This includes dynamically-calculated summaries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; NAME_OBJECT_ID. The name used for the Object ID column. Constructor Summary; Constructors. Constructor; Description; ObservableMeasurementTableData();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Binding<Number>; createNumericMeasurement(PathObject pathObject,; String column). Deprecated. Binding<String>; createStringMeasurement(PathObject pathObject,; String column). Deprecated. List<String>; getAllNames(). Return an ordered list of all names, including both numeric measurements and String values. ObservableList<PathObject>; getBackingListEntries(). Access the underlying entries, for which getEntries provides a filtered view. double[]; getDoubleValues(String column). Get all double values for all items. ObservableList<PathObject>; getItems(). Get internal list of the items used to provide measurements. ReadOnlyListWrapper<String>; getMeasurementNames(). Get the names of all numeric measurements. ReadOnlyListWrapper<String>; getMetadataNames(). Get the names of all columns corresponding to metadata (String) values. double; g",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
Security,hash,hashCode,"; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live measurements.; ; Note that this method is subject to change (in location an",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html
Integrability,interface,interface,". qupath.lib.gui.measure (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.measure. package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/package-summary.html
Integrability,interface,interface,". PathTableData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.measure; Interface PathTableData<T>. Type Parameters:; T - . All Known Implementing Classes:; ObservableMeasurementTableData. public interface PathTableData<T>; Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate).; ; This can be thought of a table, where items (often PathObject correspond to rows and named columns either return ; numeric or String data.; ; This provides a useful method of wrapping one or more objects, and providing access to metadata, stored measurements and dynamically computed values ; in a way that is amenable to display within a table. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<String>; getAllNames(). Return an ordered list of all names, including both numeric measurements and String values. double[]; getDoubleValues(String column). Get all double values for all items. List<T>; getItems(). Get internal list of the items used to provide measurements. List<String>; getMeasurementNames(). Get the names of all numeric measurements. double; getNumericValue(T pathObject,; String column). Get the numeric value from an object for the specific measurement. String; getStringValue(T item,; String name). Get a string representation of the value. String; getStringValue(T item,; String name,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. Method Details. getAllNames; List<String> getAllNames(); Return an ordered list of all names, including both numeric measurements and String values. Returns:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/PathTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html
Security,access,access,". PathTableData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.measure; Interface PathTableData<T>. Type Parameters:; T - . All Known Implementing Classes:; ObservableMeasurementTableData. public interface PathTableData<T>; Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate).; ; This can be thought of a table, where items (often PathObject correspond to rows and named columns either return ; numeric or String data.; ; This provides a useful method of wrapping one or more objects, and providing access to metadata, stored measurements and dynamically computed values ; in a way that is amenable to display within a table. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<String>; getAllNames(). Return an ordered list of all names, including both numeric measurements and String values. double[]; getDoubleValues(String column). Get all double values for all items. List<T>; getItems(). Get internal list of the items used to provide measurements. List<String>; getMeasurementNames(). Get the names of all numeric measurements. double; getNumericValue(T pathObject,; String column). Get the numeric value from an object for the specific measurement. String; getStringValue(T item,; String name). Get a string representation of the value. String; getStringValue(T item,; String name,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. Method Details. getAllNames; List<String> getAllNames(); Return an ordered list of all names, including both numeric measurements and String values. Returns:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/measure/PathTableData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html
Deployability,update,updates,". AnnotationPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class AnnotationPane. java.lang.Object; qupath.lib.gui.panes.AnnotationPane. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class AnnotationPane; extends Object; implements PathObjectSelectionListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Component for displaying annotations within the active image.; ; Also shows the PathClass list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherite",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
Integrability,interface,interface," event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
Modifiability,extend,extends,". AnnotationPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class AnnotationPane. java.lang.Object; qupath.lib.gui.panes.AnnotationPane. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class AnnotationPane; extends Object; implements PathObjectSelectionListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Component for displaying annotations within the active image.; ; Also shows the PathClass list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherite",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
Performance,perform,performance,"; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
Security,hash,hashCode," Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html
Integrability,interface,interface,"isplaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
Modifiability,extend,extends,". ImageDetailsPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ImageDetailsPane. java.lang.Object; qupath.lib.gui.panes.ImageDetailsPane. All Implemented Interfaces:; PropertyChangeListener, EventListener, ChangeListener<ImageData<BufferedImage>>. public class ImageDetailsPane; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PropertyChangeListener; A panel used for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
Security,hash,hashCode,"d for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageDat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html
Deployability,update,updateMeasurements,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
Modifiability,extend,extends,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
Safety,detect,detection,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
Security,hash,hashCode,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html
Availability,avail,available,". ObjectDescriptionPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectDescriptionPane<T>. java.lang.Object; qupath.lib.gui.panes.ObjectDescriptionPane<T>. Type Parameters:; T - generic parameter for ImageData. public class ObjectDescriptionPane<T>; extends Object; Wraps a pane used to display an object description, if one is available. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData);  ; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell);  ; static <T> Stage; createWindow(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData). createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell). createWindow; public static <T> Stage createWindow(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html
Modifiability,extend,extends,". ObjectDescriptionPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectDescriptionPane<T>. java.lang.Object; qupath.lib.gui.panes.ObjectDescriptionPane<T>. Type Parameters:; T - generic parameter for ImageData. public class ObjectDescriptionPane<T>; extends Object; Wraps a pane used to display an object description, if one is available. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData);  ; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell);  ; static <T> Stage; createWindow(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData). createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell). createWindow; public static <T> Stage createWindow(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html
Security,hash,hashCode,". ObjectDescriptionPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectDescriptionPane<T>. java.lang.Object; qupath.lib.gui.panes.ObjectDescriptionPane<T>. Type Parameters:; T - generic parameter for ImageData. public class ObjectDescriptionPane<T>; extends Object; Wraps a pane used to display an object description, if one is available. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData);  ; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell);  ; static <T> Stage; createWindow(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData). createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell). createWindow; public static <T> Stage createWindow(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html
Modifiability,extend,extends,". ObjectTreeBrowser (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provide",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html
Security,access,accessed,"links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElem",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html
Availability,avail,available,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
Integrability,interface,interface,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
Safety,detect,detection,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
Testability,log,logged,"; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. WorkflowCommandLogView. Show logged commands, and optionally generate a script. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
Usability,simpl,simple,"; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. WorkflowCommandLogView. Show logged commands, and optionally generate a script. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html
Modifiability,plugin,plugins,"s.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); qupath.lib.gui.panes.ImageDetailsPane (implements javafx.beans.value.ChangeListener<T>, java.beans.PropertyChangeListener); qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.panes.ObjectDescriptionPane<T>; qupath.lib.gui.panes.ObjectTreeBrowser; qupath.lib.gui.panes.PathObjectHierarchyView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); qupath.lib.gui.panes.PreferencePane; qupath.lib.gui.panes.PreferencePane.AppearancePreferences; qupath.lib.gui.panes.PreferencePane.DrawingPreferences; qupath.lib.gui.panes.PreferencePane.ExtensionPreferences; qupath.lib.gui.panes.PreferencePane.GeneralPreferences; qupath.lib.gui.panes.PreferencePane.InputOutputPreferences; qupath.lib.gui.panes.PreferencePane.LocalePreferences; qupath.lib.gui.panes.PreferencePane.MeasurementPreferences; qupath.lib.gui.panes.PreferencePane.ObjectPreferences; qupath.lib.gui.panes.PreferencePane.ScriptingPreferences; qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences; qupath.lib.gui.panes.PreferencePane.ViewerPreferences; qupath.lib.gui.panes.ProjectBrowser (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.panes.SelectedMeasurementTableView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener, java.beans.PropertyChangeListener); qupath.lib.gui.panes.ServerSelector; qupath.lib.gui.panes.SimpleImageViewer; qupath.lib.gui.panes.SlideLabelView (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.panes.WorkflowCommandLogView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.plugins.workflow.WorkflowListener). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-tree.html
Deployability,update,updates,". PathObjectHierarchyView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PathObjectHierarchyView. java.lang.Object; qupath.lib.gui.panes.PathObjectHierarchyView. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class PathObjectHierarchyView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectSelectionListener, PathObjectHierarchyListener; Component for showing a tree-based view of the object hierarchy. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have ch",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
Integrability,interface,interface," by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
Modifiability,extend,extends,". PathObjectHierarchyView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PathObjectHierarchyView. java.lang.Object; qupath.lib.gui.panes.PathObjectHierarchyView. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class PathObjectHierarchyView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectSelectionListener, PathObjectHierarchyListener; Component for showing a tree-based view of the object hierarchy. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have ch",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
Performance,perform,performance," void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
Security,hash,hashCode,"ription; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every h",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html
Modifiability,extend,extends,". PreferencePane.AppearancePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.AppearancePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.AppearancePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Appearance""); public static class PreferencePane.AppearancePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<QuPathStyleManager.Fonts>; autoUpdate;  ; final BooleanProperty; badges;  ; final ObjectProperty<QuPathStyleManager.StyleOption>; theme;  . Constructor Summary; Constructors. Constructor; Description; AppearancePreferences();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final ObservableList<QuPathStyleManager.StyleOption>; getStyles();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. theme; @Pref(value=""Prefs.Appearance.theme"",; type=StyleOption.class,; choiceMethod=""getStyles""); public final ObjectProperty<QuPathStyleManager.StyleOption> theme. autoUpdate; @Pref(value=""Prefs.Appearance.font"",; type=Fonts.class); public final ObjectProperty<QuPathStyleManager.Fonts> autoUpdate. badges; @BooleanPref(""Prefs.Appearance.badges""); public final BooleanProperty badges. Constructor Details. AppearancePreferences; public AppearancePreferences(). Method Details. getStyles; public final ObservableList<QuPathStyleManager.StyleOption> getStyles(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html
Security,hash,hashCode,". PreferencePane.AppearancePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.AppearancePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.AppearancePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Appearance""); public static class PreferencePane.AppearancePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<QuPathStyleManager.Fonts>; autoUpdate;  ; final BooleanProperty; badges;  ; final ObjectProperty<QuPathStyleManager.StyleOption>; theme;  . Constructor Summary; Constructors. Constructor; Description; AppearancePreferences();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final ObservableList<QuPathStyleManager.StyleOption>; getStyles();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. theme; @Pref(value=""Prefs.Appearance.theme"",; type=StyleOption.class,; choiceMethod=""getStyles""); public final ObjectProperty<QuPathStyleManager.StyleOption> theme. autoUpdate; @Pref(value=""Prefs.Appearance.font"",; type=Fonts.class); public final ObjectProperty<QuPathStyleManager.Fonts> autoUpdate. badges; @BooleanPref(""Prefs.Appearance.badges""); public final BooleanProperty badges. Constructor Details. AppearancePreferences; public AppearancePreferences(). Method Details. getStyles; public final ObservableList<QuPathStyleManager.StyleOption> getStyles(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html
Modifiability,extend,extends,". PreferencePane.DrawingPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.DrawingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.DrawingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Drawing""); public static class PreferencePane.DrawingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; brushDiameter;  ; final BooleanProperty; brushScaleByMag;  ; final BooleanProperty; clipROIsForHierarchy;  ; final BooleanProperty; pixelSnapping;  ; final IntegerProperty; pointRadius;  ; final BooleanProperty; returnToMove;  ; final BooleanProperty; tileBrush;  ; final BooleanProperty; useMultipoint;  . Constructor Summary; Constructors. Constructor; Description; DrawingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. returnToMove; @BooleanPref(""Prefs.Drawing.returnToMove""); public final BooleanProperty returnToMove. pixelSnapping; @BooleanPref(""Prefs.Drawing.pixelSnapping""); public final BooleanProperty pixelSnapping. clipROIsForHierarchy; @BooleanPref(""Prefs.Drawing.clipROIsForHierarchy""); public final BooleanProperty clipROIsForHierarchy. brushDiameter; @IntegerPref(""Prefs.Drawing.brushDiameter""); public final IntegerProperty brushDiameter. tileBrush; @BooleanPref(""Prefs.Drawing.tileBrush""); public final BooleanProperty tileBrush. brushScaleByMag; @BooleanPref(""Prefs.Drawing.brushScaleByMag""); public final BooleanProperty brushScaleByMag. useMultipoint; @BooleanPref(""Prefs.Drawing.useMultipoint""); public final BooleanPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html
Security,hash,hashCode," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.DrawingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.DrawingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Drawing""); public static class PreferencePane.DrawingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; brushDiameter;  ; final BooleanProperty; brushScaleByMag;  ; final BooleanProperty; clipROIsForHierarchy;  ; final BooleanProperty; pixelSnapping;  ; final IntegerProperty; pointRadius;  ; final BooleanProperty; returnToMove;  ; final BooleanProperty; tileBrush;  ; final BooleanProperty; useMultipoint;  . Constructor Summary; Constructors. Constructor; Description; DrawingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. returnToMove; @BooleanPref(""Prefs.Drawing.returnToMove""); public final BooleanProperty returnToMove. pixelSnapping; @BooleanPref(""Prefs.Drawing.pixelSnapping""); public final BooleanProperty pixelSnapping. clipROIsForHierarchy; @BooleanPref(""Prefs.Drawing.clipROIsForHierarchy""); public final BooleanProperty clipROIsForHierarchy. brushDiameter; @IntegerPref(""Prefs.Drawing.brushDiameter""); public final IntegerProperty brushDiameter. tileBrush; @BooleanPref(""Prefs.Drawing.tileBrush""); public final BooleanProperty tileBrush. brushScaleByMag; @BooleanPref(""Prefs.Drawing.brushScaleByMag""); public final BooleanProperty brushScaleByMag. useMultipoint; @BooleanPref(""Prefs.Drawing.useMultipoint""); public final BooleanProperty useMultipoint. pointRadius; @IntegerPref(""Prefs.Drawing.pointRadius""); public final IntegerProperty pointRadius. Constructor Details. DrawingPreferences; public DrawingPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html
Modifiability,extend,extends,". PreferencePane.ExtensionPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ExtensionPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ExtensionPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Extensions""); public static class PreferencePane.ExtensionPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final Property<String>; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ExtensionPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Extensions.userPath""); public final Property<String> scriptsPath. Constructor Details. ExtensionPreferences; public ExtensionPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html
Security,hash,hashCode,". PreferencePane.ExtensionPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ExtensionPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ExtensionPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Extensions""); public static class PreferencePane.ExtensionPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final Property<String>; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ExtensionPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Extensions.userPath""); public final Property<String> scriptsPath. Constructor Details. ExtensionPreferences; public ExtensionPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html
Availability,mask,maskImageNames,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
Modifiability,extend,extends,". PreferencePane.GeneralPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Pref",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
Security,hash,hashCode,"inderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskIma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
Testability,log,logLevel,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringPropert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html
Deployability,update,updated,"ropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors are regenerated.; This is useful if the Locale has changed, and so the text may need to be updated. addPropertyPreference; @Deprecated; public <T> void addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; name - ; category - ; description - . addColorPropertyPreference; @Deprecated; public void addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new color preference based on a specified IntegerProperty (storing a packed RGBA value). Parameters:; prop - ; name - ; category - ; description - . addDirectoryPropertyPreference; @Deprecated; public void addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new directory preference based on a specified S",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
Modifiability,extend,extends,". PreferencePane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane. java.lang.Object; qupath.lib.gui.panes.PreferencePane. public class PreferencePane; extends Object; QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PreferencePane.AppearancePreferences;  ; static class ; PreferencePane.DrawingPreferences;  ; static class ; PreferencePane.ExtensionPreferences;  ; static class ; PreferencePane.GeneralPreferences;  ; static class ; PreferencePane.InputOutputPreferences;  ; static class ; PreferencePane.LocalePreferences;  ; static class ; PreferencePane.MeasurementPreferences;  ; static class ; PreferencePane.ObjectPreferences;  ; static class ; PreferencePane.ScriptingPreferences;  ; static class ; PreferencePane.UndoRedoPreferences;  ; static class ; PreferencePane.ViewerPreferences;  . Constructor Summary; Constructors. Constructor; Description; PreferencePane();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; Str",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
Security,hash,hashCode,"yItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors are regenerated.; This is useful if the Locale has changed, and so the text may need to be updated. addPropertyPreference; @Deprecated; public <T> void addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; nam",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html
Modifiability,extend,extends,". PreferencePane.InputOutputPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.InputOutputPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.InputOutputPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.InputOutput""); public static class PreferencePane.InputOutputPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; minimumPyramidDimension;  ; final DoubleProperty; tmaExportDownsample;  . Constructor Summary; Constructors. Constructor; Description; InputOutputPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. minimumPyramidDimension; @IntegerPref(""Prefs.InputOutput.minPyramidDimension""); public final IntegerProperty minimumPyramidDimension. tmaExportDownsample; @DoublePref(""Prefs.InputOutput.tmaExportDownsample""); public final DoubleProperty tmaExportDownsample. Constructor Details. InputOutputPreferences; public InputOutputPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html
Security,hash,hashCode,". PreferencePane.InputOutputPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.InputOutputPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.InputOutputPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.InputOutput""); public static class PreferencePane.InputOutputPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; minimumPyramidDimension;  ; final DoubleProperty; tmaExportDownsample;  . Constructor Summary; Constructors. Constructor; Description; InputOutputPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. minimumPyramidDimension; @IntegerPref(""Prefs.InputOutput.minPyramidDimension""); public final IntegerProperty minimumPyramidDimension. tmaExportDownsample; @DoublePref(""Prefs.InputOutput.tmaExportDownsample""); public final DoubleProperty tmaExportDownsample. Constructor Details. InputOutputPreferences; public InputOutputPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html
Availability,avail,availableLanguagesOnly,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html
Modifiability,extend,extends,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html
Security,hash,hashCode,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html
Modifiability,extend,extends,". PreferencePane.MeasurementPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.MeasurementPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.MeasurementPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Measurements""); public static class PreferencePane.MeasurementPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; showMeasurementTableObjectIDs;  ; final BooleanProperty; showMeasurementTableThumbnails;  . Constructor Summary; Constructors. Constructor; Description; MeasurementPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. showMeasurementTableThumbnails; @BooleanPref(""Prefs.Measurements.thumbnails""); public final BooleanProperty showMeasurementTableThumbnails. showMeasurementTableObjectIDs; @BooleanPref(""Prefs.Measurements.ids""); public final BooleanProperty showMeasurementTableObjectIDs. Constructor Details. MeasurementPreferences; public MeasurementPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html
Security,hash,hashCode,". PreferencePane.MeasurementPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.MeasurementPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.MeasurementPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Measurements""); public static class PreferencePane.MeasurementPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; showMeasurementTableObjectIDs;  ; final BooleanProperty; showMeasurementTableThumbnails;  . Constructor Summary; Constructors. Constructor; Description; MeasurementPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. showMeasurementTableThumbnails; @BooleanPref(""Prefs.Measurements.thumbnails""); public final BooleanProperty showMeasurementTableThumbnails. showMeasurementTableObjectIDs; @BooleanPref(""Prefs.Measurements.ids""); public final BooleanProperty showMeasurementTableObjectIDs. Constructor Details. MeasurementPreferences; public MeasurementPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html
Modifiability,extend,extends,". PreferencePane.ObjectPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @C",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
Safety,detect,detectonStrokeThickness,". PreferencePane.ObjectPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @C",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
Security,hash,hashCode,"d; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final IntegerProperty tmaMissingColor. Constructor Details. ObjectPreferences;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html
Modifiability,extend,extends,". PreferencePane.ScriptingPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ScriptingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ScriptingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Scripting""); public static class PreferencePane.ScriptingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final StringProperty; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ScriptingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Scripting.scriptsPath""); public final StringProperty scriptsPath. Constructor Details. ScriptingPreferences; public ScriptingPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html
Security,hash,hashCode,". PreferencePane.ScriptingPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ScriptingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ScriptingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Scripting""); public static class PreferencePane.ScriptingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final StringProperty; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ScriptingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Scripting.scriptsPath""); public final StringProperty scriptsPath. Constructor Details. ScriptingPreferences; public ScriptingPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html
Modifiability,extend,extends,". PreferencePane.UndoRedoPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.UndoRedoPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Undo""); public static class PreferencePane.UndoRedoPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; maxUndoHierarchySize;  ; final IntegerProperty; maxUndoLevels;  . Constructor Summary; Constructors. Constructor; Description; UndoRedoPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxUndoLevels; @IntegerPref(""Prefs.Undo.maxUndoLevels""); public final IntegerProperty maxUndoLevels. maxUndoHierarchySize; @IntegerPref(""Prefs.Undo.maxUndoHierarchySize""); public final IntegerProperty maxUndoHierarchySize. Constructor Details. UndoRedoPreferences; public UndoRedoPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html
Security,hash,hashCode,". PreferencePane.UndoRedoPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.UndoRedoPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Undo""); public static class PreferencePane.UndoRedoPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; maxUndoHierarchySize;  ; final IntegerProperty; maxUndoLevels;  . Constructor Summary; Constructors. Constructor; Description; UndoRedoPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxUndoLevels; @IntegerPref(""Prefs.Undo.maxUndoLevels""); public final IntegerProperty maxUndoLevels. maxUndoHierarchySize; @IntegerPref(""Prefs.Undo.maxUndoHierarchySize""); public final IntegerProperty maxUndoHierarchySize. Constructor Details. UndoRedoPreferences; public UndoRedoPreferences(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html
Modifiability,extend,extends,". PreferencePane.ViewerPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ViewerPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ViewerPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Viewer""); public static class PreferencePane.ViewerPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; alwaysPaintSelected;  ; final DoubleProperty; autoSaturationPercent;  ; final IntegerProperty; backgroundColor;  ; final BooleanProperty; calibratedLocationString;  ; final BooleanProperty; doubleClickToZoom;  ; final BooleanProperty; enableFreehand;  ; final BooleanProperty; gridScaleMicrons;  ; final DoubleProperty; gridSpacingX;  ; final DoubleProperty; gridSpacingY;  ; final BooleanProperty; interpolateBilinear;  ; final BooleanProperty; invertScrolling;  ; final BooleanProperty; invertZSlider;  ; final BooleanProperty; iseScrollGestures;  ; final BooleanProperty; keepDisplaySettings;  ; final ObjectProperty<PathPrefs.FontSize>; locationFontSize;  ; final BooleanProperty; navigationAcceleration;  ; final IntegerProperty; navigationSpeed;  ; final ObjectProperty<PathPrefs.FontSize>; scalebarFontSize;  ; final ObjectProperty<FontWeight>; scalebarFontWeight;  ; final DoubleProperty; scalebarLineWidth;  ; final IntegerProperty; scrollSpeed;  ; final BooleanProperty; skipMissingCores;  ; final BooleanProperty; useRotateGestures;  ; final BooleanProperty; useZoomGestures;  . Constructor Summary; Constructors. Constructor; Description; ViewerPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html
Security,hash,hashCode,"idScaleMicrons;  ; final DoubleProperty; gridSpacingX;  ; final DoubleProperty; gridSpacingY;  ; final BooleanProperty; interpolateBilinear;  ; final BooleanProperty; invertScrolling;  ; final BooleanProperty; invertZSlider;  ; final BooleanProperty; iseScrollGestures;  ; final BooleanProperty; keepDisplaySettings;  ; final ObjectProperty<PathPrefs.FontSize>; locationFontSize;  ; final BooleanProperty; navigationAcceleration;  ; final IntegerProperty; navigationSpeed;  ; final ObjectProperty<PathPrefs.FontSize>; scalebarFontSize;  ; final ObjectProperty<FontWeight>; scalebarFontWeight;  ; final DoubleProperty; scalebarLineWidth;  ; final IntegerProperty; scrollSpeed;  ; final BooleanProperty; skipMissingCores;  ; final BooleanProperty; useRotateGestures;  ; final BooleanProperty; useZoomGestures;  . Constructor Summary; Constructors. Constructor; Description; ViewerPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. backgroundColor; @ColorPref(""Prefs.Viewer.backgroundColor""); public final IntegerProperty backgroundColor. alwaysPaintSelected; @BooleanPref(""Prefs.Viewer.alwaysPaintSelected""); public final BooleanProperty alwaysPaintSelected. keepDisplaySettings; @BooleanPref(""Prefs.Viewer.keepDisplaySettings""); public final BooleanProperty keepDisplaySettings. interpolateBilinear; @BooleanPref(""Prefs.Viewer.interpolateBilinear""); public final BooleanProperty interpolateBilinear. autoSaturationPercent; @DoublePref(""Prefs.Viewer.autoSaturationPercent""); public final DoubleProperty autoSaturationPercent. invertZSlider; @BooleanPref(""Prefs.Viewer.invertZSlider""); public final BooleanProperty invertZSlider. scrollSpeed; @IntegerPref(""Prefs.Viewer.scrollSpeed""); public final IntegerProperty scrollSpeed. navigationSpeed; @IntegerPref(""Prefs.Viewer.navigationSpeed""); public final IntegerProperty navigationSpeed. navigationAcceleration; @Boolea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html
Availability,error,error,"g.Object; qupath.lib.gui.panes.ProjectBrowser. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
Integrability,message,message,"g.Object; qupath.lib.gui.panes.ProjectBrowser. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
Modifiability,extend,extends,". ProjectBrowser (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ProjectBrowser. java.lang.Object; qupath.lib.gui.panes.ProjectBrowser. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
Security,hash,hashCode,"lic class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html
Integrability,interface,interface,"ata<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). property",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
Modifiability,extend,extends,". SelectedMeasurementTableView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SelectedMeasurementTableView. java.lang.Object; qupath.lib.gui.panes.SelectedMeasurementTableView. All Implemented Interfaces:; PropertyChangeListener, EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class SelectedMeasurementTableView; extends Object; implements PathObjectSelectionListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PropertyChangeListener; Component to show measurements for a currently-selected object. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<Buff",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
Security,hash,hashCode,"tener; Component to show measurements for a currently-selected object. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathO",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html
Modifiability,extend,extends,". ServerSelector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html
Security,hash,hashCode,"ail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; public List<ImageServer<BufferedImage>> promptToSelectImages(String prompt); Prompt to select multiple ImageServers. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Ope",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html
Availability,avail,available,"ublic class SimpleImageViewer; extends Object; A simple viewer for a single image, with options to save or copy.; ; This is primarily intended for RGB images, but can also be used for other types after; applying automatic brightness/contrast settings.; . This stores (and can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). BufferedImage; getBufferedImage(). Get the buffered image. boolean; getExpandToWindow(). Query whether the image is allowed to expand beyond its preferred width and height to fill the window. Image; getImage(). Get the JavaFX image. String; getName(). Get the name of the image. String; getPlaceholderText(). Get the placeholder tex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
Deployability,update,updated,". SimpleImageViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SimpleImageViewer. java.lang.Object; qupath.lib.gui.panes.SimpleImageViewer. public class SimpleImageViewer; extends Object; A simple viewer for a single image, with options to save or copy.; ; This is primarily intended for RGB images, but can also be used for other types after; applying automatic brightness/contrast settings.; . This stores (and can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
Modifiability,extend,extends,". SimpleImageViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SimpleImageViewer. java.lang.Object; qupath.lib.gui.panes.SimpleImageViewer. public class SimpleImageViewer; extends Object; A simple viewer for a single image, with options to save or copy.; ; This is primarily intended for RGB images, but can also be used for other types after; applying automatic brightness/contrast settings.; . This stores (and can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
Security,hash,hashCode,"ad-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the nam",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
Usability,simpl,simple,". SimpleImageViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SimpleImageViewer. java.lang.Object; qupath.lib.gui.panes.SimpleImageViewer. public class SimpleImageViewer; extends Object; A simple viewer for a single image, with options to save or copy.; ; This is primarily intended for RGB images, but can also be used for other types after; applying automatic brightness/contrast settings.; . This stores (and can be updated with) a BufferedImage or a JavaFX Image,; because both serve different purposes can be useful in different contexts.; . Since:; v0.5.0. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImage. Get a read-only property representing the buffered image. BooleanProperty; expandToWindow. Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). ReadOnlyObjectProperty<String>; imageName. Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; image. Get a read-only property representing the JavaFX image. StringProperty; placeholderText. Get the placeholder text to show if no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html
Integrability,interface,interface,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
Modifiability,extend,extends,". SlideLabelView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
Security,hash,hashCode,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
Usability,simpl,simple,". SlideLabelView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html
Deployability,update,updated,"Listener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public voi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
Integrability,depend,dependent,"Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
Modifiability,extend,extends,". WorkflowCommandLogView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class WorkflowCommandLogView. java.lang.Object; qupath.lib.gui.panes.WorkflowCommandLogView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, WorkflowListener. public class WorkflowCommandLogView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, WorkflowListener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-act",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
Security,hash,hashCode,"uctor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been upda",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
Testability,log,logged,". WorkflowCommandLogView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class WorkflowCommandLogView. java.lang.Object; qupath.lib.gui.panes.WorkflowCommandLogView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, WorkflowListener. public class WorkflowCommandLogView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, WorkflowListener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-act",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html
Integrability,interface,interface,. qupath.lib.gui.prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.prefs. package qupath.lib.gui.prefs. Custom preferences. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html
Safety,detect,detections,. qupath.lib.gui.prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.prefs. package qupath.lib.gui.prefs. Custom preferences. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html
Deployability,release,releases," is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static fi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
Integrability,interface,interfaces,". PathPrefs.AutoUpdateType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
Modifiability,extend,extends,". PathPrefs.AutoUpdateType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.AutoUpdateType. java.lang.Object; java.lang.Enum<PathPrefs.AutoUpdateType>; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.AutoUpdateType>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
Security,hash,hashCode,"UpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.AutoUpdateType valueOf(String name); Returns the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html
Integrability,interface,interfaces,"DisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
Modifiability,extend,extends,". PathPrefs.DetectionTreeDisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static fin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
Safety,detect,detections,". PathPrefs.DetectionTreeDisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static fin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
Security,hash,hashCode,"ectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html
Integrability,interface,interfaces,". PathPrefs.FontSize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.FontSize. java.lang.Object; java.lang.Enum<PathPrefs.FontSize>; qupath.lib.gui.prefs.PathPrefs.FontSize. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
Modifiability,extend,extends,". PathPrefs.FontSize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.FontSize. java.lang.Object; java.lang.Enum<PathPrefs.FontSize>; qupath.lib.gui.prefs.PathPrefs.FontSize. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
Security,hash,hashCode,"All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static PathPrefs.FontSize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.FontSize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html
Availability,down,downsample,"rcentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Ca",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
Deployability,update,updates,"t; Central storage of QuPath preferences.; ; Most of these are 'persistent', and stored in a platform-dependent way using ; Java's Preferences API. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; allredMinPercentagePositive. The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
Energy Efficiency,adapt,adapt,"llredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; a bound boolean property, which is ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
Integrability,depend,dependent,". PathPrefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class PathPrefs. java.lang.Object; qupath.lib.gui.prefs.PathPrefs. public class PathPrefs; extends Object; Central storage of QuPath preferences.; ; Most of these are 'persistent', and stored in a platform-dependent way using ; Java's Preferences API. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; allredMinPercentagePositive. The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created acciden",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
Modifiability,extend,extends,". PathPrefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class PathPrefs. java.lang.Object; qupath.lib.gui.prefs.PathPrefs. public class PathPrefs; extends Object; Central storage of QuPath preferences.; ; Most of these are 'persistent', and stored in a platform-dependent way using ; Java's Preferences API. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static DoubleProperty; allredMinPercentagePositive. The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created acciden",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
Performance,load,load,"available color transforms are shown for RGB images. static boolean; getSkipMissingCoresProperty(). Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. static Preferences; getUserPreferences(). Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). static BooleanProperty; gridScaleMicronsProperty(). Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingXProperty(). Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingYProperty(). Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartXProperty(). Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartYProperty(). Starting y coordinate for any counting grid (usually 0). static boolean; hasJavaPreferences(). Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSettingProperty(). Specify how setting the image type should be handled for images when they are opened for the first time. static void; importPreferences(InputStream stream). Import preferences from a stream. static BooleanProperty; invertScrollingProperty(). Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSliderProperty(). Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
Safety,detect,detectionStrokeThickness,"ted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static Doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html
