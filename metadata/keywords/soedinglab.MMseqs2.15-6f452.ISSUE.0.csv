id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/soedinglab/MMseqs2/issues/1:60,Availability,error,error,60,"when I run the mmseqs2 to search sequence, I encounter a an error at blastp.sh:. $ mmseqs createdb queryDB.fasta queryDB; $ mmseqs createdb targetDB.fasta targetDB; $ mmseqs createindex targetDB; $ mkdir -p tmp/; $ mmseqs search queryDB targetDB resultDB tmp --use-index. Program call:; queryDB targetDB resultDB tmp --use-index . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:513,Safety,Detect,Detect,513,"when I run the mmseqs2 to search sequence, I encounter a an error at blastp.sh:. $ mmseqs createdb queryDB.fasta queryDB; $ mmseqs createdb targetDB.fasta targetDB; $ mmseqs createindex targetDB; $ mkdir -p tmp/; $ mmseqs search queryDB targetDB resultDB tmp --use-index. Program call:; queryDB targetDB resultDB tmp --use-index . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:5253,Safety,Detect,Detect,5253,"urnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode Alignment died; - [ 0 -ne 0 ]; - [ 4 -gt 4 ]; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - [ 4 -lt 4 ]; - let SENS=SENS+SENS_STEP_SIZE; /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: 57: /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: let: not found. I am running MMseqs2 on Ubuntu 14.04 (trusty) x86-64. On Ubuntu and Debian, the default shell /bi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:1641,Testability,test,test,1641,de identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:1692,Testability,test,test,1692,lse; Add backtrace false; Realign hit false; Threads 32; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:1755,Testability,test,test,1755,; Verbosity 3; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/P,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:1802,Testability,test,test,1802,21; Split DB 0; Split mode 2; Search mode 2; Diagonal Scoring 1; Minimum Diagonal score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 214,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:1910,Testability,test,test,1910, score 30; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide f,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:1965,Testability,test,test,1965,1; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:2053,Testability,test,test,2053,m seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 100; Pseudo count a 1; Pseudo count b 1.5; First sequence as respresentative false; Number search iterations 1; Start sensitivity 4; Sensitivity step size 1; Use index true; Sets the MPI runner ; - [ -z /home/zcx/Program/MMseqs/2.0 ]; - [ 4 -ne 4 ]; - [ ! -f queryDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode 2; Search mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 30;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:2407,Testability,test,test,2407,yDB ]; - [ ! -f targetDB ]; - [ -f resultDB ]; - [ ! -d tmp ]; - export OMP_PROC_BIND=TRUE; - dirname queryDB; - cd .; - basename queryDB; - QUERY_FILE=queryDB; - pwd; - ABS_QUERY=/home/zcx/Program/MMseqs/2.0/test/queryDB; - cd -; /home/zcx/Program/MMseqs/2.0/test; - cd tmp; - pwd; - TMP_PATH=/home/zcx/Program/MMseqs/2.0/test/tmp; - cd -; /home/zcx/Program/MMseqs/2.0/test; - INPUT=queryDB; - TARGET=targetDB; - SENS=4; - [ 4 -le 4 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 ]; - mmseqs prefilter queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4; Program call:; queryDB targetDB.sk7 /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out -k 7 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --split 0 --split-mode 2 --search-mode 2 --comp-bias-corr 1 --diag-score 1 --min-diag-score 30 --spaced-kmer-mode 1 --threads 32 -v 3 -s 4 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Sensitivity 4; K-mer size 7; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Nucleotide false; Max. results per query 300; Split DB 0; Split mode 2; Search mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 30; Include identical Seq. Id. false; Spaced Kmer 1; Threads 32; Verbosity 3. Initialising data structures...; Using 32 threads. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: queryDB(size=246); Target database: targetDB.sk7(size=10000); Needed memory (14434761936 byte) of total memory (2704,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:4344,Testability,test,test,4344,e=10000); Needed memory (14434761936 byte) of total memory (270462795776 byte); Substitution matrices...; Time for init: 0 h 0 m 3s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per quer,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:4398,Testability,test,test,4398,5776 byte); Substitution matrices...; Time for init: 0 h 0 m 3s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucle,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:4481,Testability,test,test,4481, Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit fal,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:4526,Testability,test,test,4526,774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Copy 1650981 Entries (9905886 byte); Setup Sizes ; Read IndexTable ... Done; k-mer similarity threshold: 115; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:4806,Testability,test,test,4806,Query db start 0 to 246; Target db start 0 to 10000. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per que,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:4851,Testability,test,test,4851,0. 736 k-mers per position.; 448 DB matches per sequence.; 553 Double diagonal matches per sequence.; 0 Overflows .; 25 sequences passed prefiltering per query sequence.; Median result list size: 21; 5 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 2 m 18s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 2 m 32s; - checkReturnCode Prefilter died; - [ 0 -ne 0 ]; - notExists /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4; - [ ! -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/1:5991,Testability,test,test,5991,"_4 ]; - mmseqs alignment queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode Alignment died; - [ 0 -ne 0 ]; - [ 4 -gt 4 ]; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - [ 4 -lt 4 ]; - let SENS=SENS+SENS_STEP_SIZE; /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: 57: /home/zcx/Program/MMseqs/2.0/bin/blastp.sh: let: not found. I am running MMseqs2 on Ubuntu 14.04 (trusty) x86-64. On Ubuntu and Debian, the default shell /bin/sh is dash, not bash. dash does not support ""let"". I recommend changing the first line of ""blastp.sh"" from ""#!/bin/sh -ex"" to ""#!/bin/bash -ex""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1
https://github.com/soedinglab/MMseqs2/issues/3:112,Availability,fault,faults,112,"Hello,; I'm eager to try mmseqs but have been unsuccessful at building the database for UniRef90, as mmseqs seg faults and core dumps during the ""createindex"" phase. I tried both the precompiled mmseqs and my own compiled version, without --split or --threads, as well as with various combinations of both --split and --threads. My machine has 128 GB RAM (and same size swap space) and 6TB free space on hard drive. The process dies before ever reaching more than 40% of RAM. The output is:. ``` bash; mmseqs createdb uniref90/uniref90.fasta uniref90.mms. ls -ltr uniref90/; -rw-r--r-- 1 hingamp.p MIO 19965315337 sept. 28 22:51 uniref90.fasta; -rw-r--r-- 1 hingamp.p MIO 1244574423 sept. 29 00:07 uniref90.mms.lookup; -rw-r--r-- 1 hingamp.p MIO 4652608129 sept. 29 00:07 uniref90.mms_h; -rw-r--r-- 1 hingamp.p MIO 1025056829 sept. 29 00:09 uniref90.mms_h.index; -rw-r--r-- 1 hingamp.p MIO 15172645206 sept. 29 00:09 uniref90.mms; -rw-r--r-- 1 hingamp.p MIO 1063262010 sept. 29 00:11 uniref90.mms.index. mmseqs createindex uniref90/uniref90.mms --split 10 --threads 20; Program call:; uniref90/uniref90.mms --split 10 --threads 20 . MMseqs Version: ab6d7b3105611a0860c801603997f1721785916a; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; max. sequence length 32000; Split DB 10; spaced Kmer 1; Threads 20; Verbosity 3. Substitution matrices...; Index table: counting k-mers...; .WARNING: Sequence (dbKey=10870) contains only ATGC. It might be a nucleotide sequence.; .................................................................................................. 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: Masked residues: 26370434; Index table: fill...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3
https://github.com/soedinglab/MMseqs2/issues/3:1954,Availability,Mask,Masked,1954,sept. 29 00:11 uniref90.mms.index. mmseqs createindex uniref90/uniref90.mms --split 10 --threads 20; Program call:; uniref90/uniref90.mms --split 10 --threads 20 . MMseqs Version: ab6d7b3105611a0860c801603997f1721785916a; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; max. sequence length 32000; Split DB 10; spaced Kmer 1; Threads 20; Verbosity 3. Substitution matrices...; Index table: counting k-mers...; .WARNING: Sequence (dbKey=10870) contains only ATGC. It might be a nucleotide sequence.; .................................................................................................. 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: Masked residues: 26370434; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Index table: counting k-mers...; ................................................................................................... 1 Mio. sequences processed; ...........................................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ........ 2 Mio. sequen,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3
https://github.com/soedinglab/MMseqs2/issues/3:3284,Availability,Mask,Masked,3284," processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: Masked residues: 26370434; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Index table: counting k-mers...; ................................................................................................... 1 Mio. sequences processed; ...........................................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ........ 2 Mio. sequences processed; ...........................................................WARNING: Sequence (dbKey=6387662) contains only ATGC. It might be a nucleotide sequence.; ........................................ 3 Mio. sequences processed; ...................................................................; Index table: Masked residues: 47802947; Index table: fill...; Erreur de segmentation (core dumped); ```. Many thanks for any help or advice. I have watched the mmseqs demo on https://www.youtube.com/watch?v=LqiHyCLjPno and am looking forward to enjoying the huge simplification it promises (the last example in the demo is the 2bLCA we applied to metagenomics data and my workflow was much more complex and slow than with mmseqs!)...; Best, ; Pascal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3
https://github.com/soedinglab/MMseqs2/issues/3:3534,Usability,simpl,simplification,3534," processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: Masked residues: 26370434; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ...............................................................................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Index table: counting k-mers...; ................................................................................................... 1 Mio. sequences processed; ...........................................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ........ 2 Mio. sequences processed; ...........................................................WARNING: Sequence (dbKey=6387662) contains only ATGC. It might be a nucleotide sequence.; ........................................ 3 Mio. sequences processed; ...................................................................; Index table: Masked residues: 47802947; Index table: fill...; Erreur de segmentation (core dumped); ```. Many thanks for any help or advice. I have watched the mmseqs demo on https://www.youtube.com/watch?v=LqiHyCLjPno and am looking forward to enjoying the huge simplification it promises (the last example in the demo is the 2bLCA we applied to metagenomics data and my workflow was much more complex and slow than with mmseqs!)...; Best, ; Pascal",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3
https://github.com/soedinglab/MMseqs2/issues/4:60,Availability,error,error,60,When I am trying to run mmseq_update on some data set below error was popping up.; ERROR:; mmseqs_update: Problem with data file. Is it empty or is another process readning it?: Invalid argument; commons/DBReader.cpp:49 ffindex_index_parse: /anno/narsapvi/fern_clustering/run/tmp/A.index: Invalid argument; What can be the possible solution for this..!!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4
https://github.com/soedinglab/MMseqs2/issues/4:83,Availability,ERROR,ERROR,83,When I am trying to run mmseq_update on some data set below error was popping up.; ERROR:; mmseqs_update: Problem with data file. Is it empty or is another process readning it?: Invalid argument; commons/DBReader.cpp:49 ffindex_index_parse: /anno/narsapvi/fern_clustering/run/tmp/A.index: Invalid argument; What can be the possible solution for this..!!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4
https://github.com/soedinglab/MMseqs2/issues/5:727,Integrability,depend,depend,727,"Congrats [from the lambda-author] to the preprint of the paper, first of all :+1:. Although the contribution of the SeqAn library to MMSeqs2 is rather small, I would still ask you politely to include notice of its use, according to the license:. ```; // * Redistributions in binary form must reproduce the above copyright; // notice, this list of conditions and the following disclaimer in the; // documentation and/or other materials provided with the distribution.; ```. AFAICT the binaries don't do this and the shipped license file doesn't mention them. This likely affects other code-parts used in MMSeqs, as well, I am not sure. In any case, not a big deal, but would be nice if you could change this.; Also of course we depend on people citing the SeqAn library in their academic work if they use it. If this is still possible it would be great, but there is no (legal) requirement to do so. On an unrelated note: The ""non-commercial"" header in `src/alignment/smith_waterman_sse2.cpp` is incompatible with the GPL-license. I don't know if the header is just outdated, but if not, this might cause you trouble with the original author and/or make it impossible for other people to distribute mmseqs2...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/5
https://github.com/soedinglab/MMseqs2/issues/6:186,Availability,error,error,186,"When I use createseqfiledb on a clusterDB file, as described in the readme, I get a continuous stream of ""Invalid entry in line x!"" messages, where x are different lines. What does this error mean? The resulting clu_seq file is empty.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6
https://github.com/soedinglab/MMseqs2/issues/6:84,Deployability,continuous,continuous,84,"When I use createseqfiledb on a clusterDB file, as described in the readme, I get a continuous stream of ""Invalid entry in line x!"" messages, where x are different lines. What does this error mean? The resulting clu_seq file is empty.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6
https://github.com/soedinglab/MMseqs2/issues/6:132,Integrability,message,messages,132,"When I use createseqfiledb on a clusterDB file, as described in the readme, I get a continuous stream of ""Invalid entry in line x!"" messages, where x are different lines. What does this error mean? The resulting clu_seq file is empty.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6
https://github.com/soedinglab/MMseqs2/issues/7:716,Deployability,install,installed,716,"I'm having trouble setting some command line args with the `cluster` command. When I run this command. ```bash; time ~/projects/MMseqs2/build/bin/mmseqs cluster DB clu . --threads 3 -v 2 --min-seq-id 0.25; ```. I get the following output showing that the threads, verbosity, and seq id are the default values rather than those specified on the command line. ```; Set cluster settings automatic to s=6 cascaded=1; Program call:; DB ./aln_redundancy. MMseqs Version: 	fb43334f0594c4b6a345d7419965cb0beae48430; Sub Matrix 	blosum62.out; Alphabet size 	3; Seq. Id Threshold 	0; Max. sequence length	32000; Threads 	1; Verbosity 	3; ```. The version of the program I'm using is `fb43334f0594c4b6a345d7419965cb0beae48430` installed from source on Mac 10.10.5.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7
https://github.com/soedinglab/MMseqs2/issues/8:394,Performance,optimiz,optimization,394,"I get the following when compiling on mac:. ```bash; make VERBOSE=1; ...; [ 69%] Linking CXX executable mmseqs; cd /Users/rfonseca/Programs/mmseqs2/build/src && /usr/local/Cellar/cmake/3.6.3/bin/cmake -E cmake_link_script CMakeFiles/mmseqs.dir/link.txt --verbose=1; /usr/local/bin/gcc-6 -DOPENMP=1 -fopenmp -mavx2 -mfpmath=sse -Wa,-q -std=c++0x -m64 -pedantic -Wall -Wextra -Winline -Wdisabled-optimization -Wno-unused-parameter -O3 -DNDEBUG -mavx2 -mfpmath=sse -Wa,-q -O3 -DNDEBUG -ffast-math -fno-exceptions -ftree-vectorize -fno-strict-aliasing -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/mmseqs.dir/mmseqs.cpp.o -o mmseqs util/libutil.a workflow/libworkflow.a /usr/lib/libz.dylib util/libutil.a prefiltering/libprefiltering.a alignment/libalignment.a clustering/libclustering.a commons/libcommons.a; Undefined symbols for architecture x86_64:; ""std::ctype<char>::_M_widen_init() const"", referenced from:; diffseqdbs(int, char const**, Command const&) in libutil.a(diffseqdbs.cpp.o); createsubdb(int, char const**, Command const&) in libutil.a(createsubdb.cpp.o); readAllKeysIntoMap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) in libutil.a(swapresults.cpp.o); mergeClusteringResults(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) in libutil.a(mergeclusters.cpp.o); readLength(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) in libutil.a(summarizetabs.cpp.o); getEntries(unsigned int, char*, unsigned long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/8
https://github.com/soedinglab/MMseqs2/issues/9:83,Availability,error,error,83,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9
https://github.com/soedinglab/MMseqs2/issues/9:113,Testability,test,test,113,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9
https://github.com/soedinglab/MMseqs2/issues/9:146,Testability,test,test,146,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9
https://github.com/soedinglab/MMseqs2/issues/9:154,Testability,test,test,154,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9
https://github.com/soedinglab/MMseqs2/issues/9:178,Testability,test,test,178,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9
https://github.com/soedinglab/MMseqs2/issues/9:186,Testability,test,test,186,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9
https://github.com/soedinglab/MMseqs2/issues/9:464,Testability,test,test,464,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9
https://github.com/soedinglab/MMseqs2/issues/9:490,Testability,test,test,490,I just compiled mmseqs2 from latest source in a AVX2 machine and got the following error: . ```; **$ grep -c '>' test.fa**; 50; $ mmseqs createdb test.fa test.db; Program call:; test.fa test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Max. sequence length 32000; Split Seq. by len true; Use fasta header false; Offset of numeric ids 0; Verbosity 3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; **$ mmseqs createindex test.db**; Program call:; test.db. MMseqs Version: 7885b8e5b2d4cb016d1c84455ae7d35b728497bd; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 0; Spaced Kmer 1; Threads 40; Verbosity 3. Substitution matrices...; Can not fit databased into 65536 byte. Please use a computer with more main memory.; ```; same happened using the linux avx2 binaries... but not with the sse4.1 binaries,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/9
https://github.com/soedinglab/MMseqs2/issues/10:90,Availability,error,error,90,"I just tried building the latest version and using mmseqs cluster, but it fails with this error:. ```; Could not open data file tmp/clu_step0!; mv: cannot stat `tmp/clu': No such file or directory; mv: cannot stat `tmp/clu.index': No such file or directory; Could not move result to clu. ```. Reverting to an older copy (latest before Jan 17) solves the problem.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/10
https://github.com/soedinglab/MMseqs2/issues/11:123,Availability,error,error,123,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11
https://github.com/soedinglab/MMseqs2/issues/11:129,Integrability,message,message,129,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11
https://github.com/soedinglab/MMseqs2/issues/11:20,Performance,perform,perform,20,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11
https://github.com/soedinglab/MMseqs2/issues/11:39,Testability,test,tests,39,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11
https://github.com/soedinglab/MMseqs2/issues/11:557,Usability,simpl,simple,557,"I've been trying to perform some basic tests with MMSeqs2 and have encountered an issue where I repeated get the following error message:. Init data structures...; Compute score only.; Could not open data file [path_to_dir]/mmseqs_tmp/pref_4!. The ""[path_to_dir]/mmseqs_tmp/"" directory contains two temporary files (pref_4.index_tmp_0.0 and pref_4_tmp_0.0) along with a blastp.sh script. I'm not using any advanced options for my search, and both input databases are (as far as I can see) formatted correctly. Maybe I'm overlooking something embarrassingly simple?. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11
https://github.com/soedinglab/MMseqs2/issues/12:2678,Availability,error,error,2678,"Z; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. ## Unexpected Behavior 3:; It seems like there is a minimal length for sequences, but I'm not sure this error is intended. #### Fasta:; ```; >0000_A; ABCDEFGHIJ; >0001_A; ABCDEFGHIJ; >0002_A; ABCDEFGHIJ; ```. #### Error:; ```; World` Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4World Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4Could not open data file /.../tmp/pref_7!; mv: cannot stat ‘/.../tmp/aln_7’: No such file or directory; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12
https://github.com/soedinglab/MMseqs2/issues/12:2788,Availability,Error,Error,2788,"Z; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. ## Unexpected Behavior 3:; It seems like there is a minimal length for sequences, but I'm not sure this error is intended. #### Fasta:; ```; >0000_A; ABCDEFGHIJ; >0001_A; ABCDEFGHIJ; >0002_A; ABCDEFGHIJ; ```. #### Error:; ```; World` Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4World Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4Could not open data file /.../tmp/pref_7!; mv: cannot stat ‘/.../tmp/aln_7’: No such file or directory; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12
https://github.com/soedinglab/MMseqs2/issues/12:1545,Testability,TEST,TESTSEAAENCE,1545," ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0000_A,1.000; 0001_A,0002_A,1.000; 0002_A,0002_A,1.000; 0002_A,0000_A,1.000; ```; I would expect 9 rows, 3 sequences with 3 similarities each. It seems like similarities are treated as undirected edges in this case. But when I replace ""MNO"" with ""AAA"" in the first sequence, I get the expected 9 similarities:. #### Fasta:; ```; >0000_A; ABCDEFGHIJKLAAAPQRSTUVWXYZ; >0001_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12
https://github.com/soedinglab/MMseqs2/issues/12:1568,Testability,TEST,TESTSEQUENCE,1568," ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0000_A,1.000; 0001_A,0002_A,1.000; 0002_A,0002_A,1.000; 0002_A,0000_A,1.000; ```; I would expect 9 rows, 3 sequences with 3 similarities each. It seems like similarities are treated as undirected edges in this case. But when I replace ""MNO"" with ""AAA"" in the first sequence, I get the expected 9 similarities:. #### Fasta:; ```; >0000_A; ABCDEFGHIJKLAAAPQRSTUVWXYZ; >0001_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12
https://github.com/soedinglab/MMseqs2/issues/12:1591,Testability,TEST,TESTSEQUENCE,1591," ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0000_A,1.000; 0001_A,0002_A,1.000; 0002_A,0002_A,1.000; 0002_A,0000_A,1.000; ```; I would expect 9 rows, 3 sequences with 3 similarities each. It seems like similarities are treated as undirected edges in this case. But when I replace ""MNO"" with ""AAA"" in the first sequence, I get the expected 9 similarities:. #### Fasta:; ```; >0000_A; ABCDEFGHIJKLAAAPQRSTUVWXYZ; >0001_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12
https://github.com/soedinglab/MMseqs2/issues/12:1994,Testability,TEST,TESTSEQUENCE,1994,"# Fasta:; ```; >0000_A; ABCDEFGHIJKLAAAPQRSTUVWXYZ; >0001_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; >0002_A; ABCDEFGHIJKLMNOPQRSTUVWXYZ; ```; #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0000_A,0002_A,0.885; 0000_A,0001_A,0.885; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.885; 0002_A,0002_A,1.000; 0002_A,0001_A,1.000; 0002_A,0000_A,0.885; ```. This doesn't happen in all cases, though. Here is another case with two exact copies and a third sequence that has a small change (QU -> AA) that does not lead to 9 similarities:. #### Fasta; ```; >0000_A; TESTSEAAENCE; >0001_A; TESTSEQUENCE; >0002_A; TESTSEQUENCE; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0001_A,0002_A,1.000; 0001_A,0000_A,0.833; 0002_A,0002_A,1.000; 0002_A,0000_A,0.833; ```. I wasn't able to deduce what exactly made those two cases behave differently, unfortunately. ## Unexpected Behavior 2:. When I use a very similar sequence as I used in the former example (SEQUENCETEST instead of TESTSEQUENCE), something entirely different happens. These three exact copies show up as unrelated. #### Fasta:; ```; >0000_A; SEQUENCETEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:; ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. In this case it also doesn't matter if I edit (CE -> AA) the first sequence:. #### Fasta:; ```; >0000_A; SEQUENAATEST; >0001_A; SEQUENCETEST; >0002_A; SEQUENCETEST; ```. #### Result:. ```; source,target,seq_id; 0000_A,0000_A,1.000; 0001_A,0001_A,1.000; 0002_A,0002_A,1.000; ```. ## Unexpected Behavior 3:; It seems like there is a minimal length for sequences, but I'm not sure this error is intended. #### Fasta:; ```; >0000_A; ABCDEFGHIJ; >0001_A; ABCDEFGHIJ; >0002_A; ABCDEFGHIJ; ```. #### Error:; ```; World` Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4World Size: 4 aaSize: 3; World Size: World Size: 4 aaSize: 3; World Size: 4Could not open data fi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12
https://github.com/soedinglab/MMseqs2/issues/13:175,Deployability,pipeline,pipeline,175,"Hi,; thank you very much for mmseqs2, it's really amazing! . We are clustering a few million of sequences following a similar approach than the one described in your uniclust pipeline. Before reinventing the wheel, we are wondering if mmseqs has an easy workaround to extract the sequence identities for each pair of sequences in a cluster from the _alignment_ file. Our aim would be to be able to integrate the identities between pairs to the output of _createtsv_. Do you have any recommendations?. Many thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13
https://github.com/soedinglab/MMseqs2/issues/13:398,Deployability,integrat,integrate,398,"Hi,; thank you very much for mmseqs2, it's really amazing! . We are clustering a few million of sequences following a similar approach than the one described in your uniclust pipeline. Before reinventing the wheel, we are wondering if mmseqs has an easy workaround to extract the sequence identities for each pair of sequences in a cluster from the _alignment_ file. Our aim would be to be able to integrate the identities between pairs to the output of _createtsv_. Do you have any recommendations?. Many thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13
https://github.com/soedinglab/MMseqs2/issues/13:398,Integrability,integrat,integrate,398,"Hi,; thank you very much for mmseqs2, it's really amazing! . We are clustering a few million of sequences following a similar approach than the one described in your uniclust pipeline. Before reinventing the wheel, we are wondering if mmseqs has an easy workaround to extract the sequence identities for each pair of sequences in a cluster from the _alignment_ file. Our aim would be to be able to integrate the identities between pairs to the output of _createtsv_. Do you have any recommendations?. Many thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13
https://github.com/soedinglab/MMseqs2/issues/15:95,Availability,error,error,95,"While clustering a database of about 10 million proteins, we receive lots of ""there must be an error"" messages, e.g.:. there must be an error: 1835775 deleted from 4496505 that now is empty, but not assigned to a cluster; there must be an error: 6964402 deleted from 7957737 that now is empty, but not assigned to a cluster; there must be an error: 2422408 deleted from 2413081 that now is empty, but not assigned to a cluster; ... This is the script running the clustering:; ```; MMSEQS=mmseqs-static_avx2; SEQFILE=eggnog4.proteins.core_periphery.fa.gz; pigz -dc $SEQFILE >$TMPDIR/db.fasta; $MMSEQS createdb $TMPDIR/db.fasta $TMPDIR/db; mkdir $TMPDIR/clutmp; $MMSEQS cluster $TMPDIR/db $TMPDIR/db_clu $TMPDIR/clutmp --cascaded -e 1 --threads 16; ```. The effect is independent from the mmseqs2 binary (your static avx2 binary, self-compiled sse4.1 binary). We run Fedora 25 with 4.9.5 kernel. The machine has 40 cores and 1 TB RAM. Thanks for your help,; Thomas Rattei",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15
https://github.com/soedinglab/MMseqs2/issues/15:136,Availability,error,error,136,"While clustering a database of about 10 million proteins, we receive lots of ""there must be an error"" messages, e.g.:. there must be an error: 1835775 deleted from 4496505 that now is empty, but not assigned to a cluster; there must be an error: 6964402 deleted from 7957737 that now is empty, but not assigned to a cluster; there must be an error: 2422408 deleted from 2413081 that now is empty, but not assigned to a cluster; ... This is the script running the clustering:; ```; MMSEQS=mmseqs-static_avx2; SEQFILE=eggnog4.proteins.core_periphery.fa.gz; pigz -dc $SEQFILE >$TMPDIR/db.fasta; $MMSEQS createdb $TMPDIR/db.fasta $TMPDIR/db; mkdir $TMPDIR/clutmp; $MMSEQS cluster $TMPDIR/db $TMPDIR/db_clu $TMPDIR/clutmp --cascaded -e 1 --threads 16; ```. The effect is independent from the mmseqs2 binary (your static avx2 binary, self-compiled sse4.1 binary). We run Fedora 25 with 4.9.5 kernel. The machine has 40 cores and 1 TB RAM. Thanks for your help,; Thomas Rattei",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15
https://github.com/soedinglab/MMseqs2/issues/15:239,Availability,error,error,239,"While clustering a database of about 10 million proteins, we receive lots of ""there must be an error"" messages, e.g.:. there must be an error: 1835775 deleted from 4496505 that now is empty, but not assigned to a cluster; there must be an error: 6964402 deleted from 7957737 that now is empty, but not assigned to a cluster; there must be an error: 2422408 deleted from 2413081 that now is empty, but not assigned to a cluster; ... This is the script running the clustering:; ```; MMSEQS=mmseqs-static_avx2; SEQFILE=eggnog4.proteins.core_periphery.fa.gz; pigz -dc $SEQFILE >$TMPDIR/db.fasta; $MMSEQS createdb $TMPDIR/db.fasta $TMPDIR/db; mkdir $TMPDIR/clutmp; $MMSEQS cluster $TMPDIR/db $TMPDIR/db_clu $TMPDIR/clutmp --cascaded -e 1 --threads 16; ```. The effect is independent from the mmseqs2 binary (your static avx2 binary, self-compiled sse4.1 binary). We run Fedora 25 with 4.9.5 kernel. The machine has 40 cores and 1 TB RAM. Thanks for your help,; Thomas Rattei",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15
https://github.com/soedinglab/MMseqs2/issues/15:342,Availability,error,error,342,"While clustering a database of about 10 million proteins, we receive lots of ""there must be an error"" messages, e.g.:. there must be an error: 1835775 deleted from 4496505 that now is empty, but not assigned to a cluster; there must be an error: 6964402 deleted from 7957737 that now is empty, but not assigned to a cluster; there must be an error: 2422408 deleted from 2413081 that now is empty, but not assigned to a cluster; ... This is the script running the clustering:; ```; MMSEQS=mmseqs-static_avx2; SEQFILE=eggnog4.proteins.core_periphery.fa.gz; pigz -dc $SEQFILE >$TMPDIR/db.fasta; $MMSEQS createdb $TMPDIR/db.fasta $TMPDIR/db; mkdir $TMPDIR/clutmp; $MMSEQS cluster $TMPDIR/db $TMPDIR/db_clu $TMPDIR/clutmp --cascaded -e 1 --threads 16; ```. The effect is independent from the mmseqs2 binary (your static avx2 binary, self-compiled sse4.1 binary). We run Fedora 25 with 4.9.5 kernel. The machine has 40 cores and 1 TB RAM. Thanks for your help,; Thomas Rattei",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15
https://github.com/soedinglab/MMseqs2/issues/15:102,Integrability,message,messages,102,"While clustering a database of about 10 million proteins, we receive lots of ""there must be an error"" messages, e.g.:. there must be an error: 1835775 deleted from 4496505 that now is empty, but not assigned to a cluster; there must be an error: 6964402 deleted from 7957737 that now is empty, but not assigned to a cluster; there must be an error: 2422408 deleted from 2413081 that now is empty, but not assigned to a cluster; ... This is the script running the clustering:; ```; MMSEQS=mmseqs-static_avx2; SEQFILE=eggnog4.proteins.core_periphery.fa.gz; pigz -dc $SEQFILE >$TMPDIR/db.fasta; $MMSEQS createdb $TMPDIR/db.fasta $TMPDIR/db; mkdir $TMPDIR/clutmp; $MMSEQS cluster $TMPDIR/db $TMPDIR/db_clu $TMPDIR/clutmp --cascaded -e 1 --threads 16; ```. The effect is independent from the mmseqs2 binary (your static avx2 binary, self-compiled sse4.1 binary). We run Fedora 25 with 4.9.5 kernel. The machine has 40 cores and 1 TB RAM. Thanks for your help,; Thomas Rattei",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15
https://github.com/soedinglab/MMseqs2/issues/16:142,Availability,avail,available,142,"Hi there,; I have been trying to use `mmseqs createindex` to process the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:668,Availability,mask,mask,668,"Hi there,; I have been trying to use `mmseqs createindex` to process the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:744,Availability,fault,fault,744,"Hi there,; I have been trying to use `mmseqs createindex` to process the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:2282,Availability,mask,mask,2282,"e ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .............................................................................	1 Mio. sequences processed; ..........................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ....................................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .....	2 Mio. sequences processed. ... ...................................................................................................	107 Mio. sequences processed; .....",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:2450,Availability,Mask,Mask,2450,"ecurity protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .............................................................................	1 Mio. sequences processed; ..........................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ....................................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .....	2 Mio. sequences processed. ... ...................................................................................................	107 Mio. sequences processed; ...................................................................................................	108 Mio. sequences processed; ..........................................................................",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:3561,Availability,fault,fault,3561,"(xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .............................................................................	1 Mio. sequences processed; ..........................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ....................................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .....	2 Mio. sequences processed. ... ...................................................................................................	107 Mio. sequences processed; ...................................................................................................	108 Mio. sequences processed; ...................................................................................................	109 Mio. sequences processed; .................Segmentation fault (core dumped); ```. If it's useful, this is the `mmseqs createdb` command I ran first:. ```; Program call:; nr_1-31-17.fasta nr --use-fasta-header. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Max. sequence length 	32000; Split Seq. by len 	true; Use fasta header 	true; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 1 m 16 s; Time for merging files: 0 h 1 m 18 s; ```. Any thoughts?; -Steve",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1258,Deployability,configurat,configuration,1258,"e same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1396,Deployability,configurat,configuration,1396,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1258,Modifiability,config,configuration,1258,"e same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1396,Modifiability,config,configuration,1396,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1025,Performance,load,loading,1025,"s the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1065,Performance,load,load,1065,"s the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1113,Performance,load,load,1113,"s the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1169,Performance,load,load-safe-path,1169," as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1365,Performance,load,load,1365,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1508,Performance,load,loading,1508,"ay:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1598,Performance,load,loading,1598,"ult.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ............",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:2001,Performance,optimiz,optimized,2001,"8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; .............................................................................	1 Mio. sequences processed; ..........................................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ...............",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1070,Safety,safe,safe-path,1070,"s the NR database, but it keeps SegFaulting on me. The job had 750G memory available, and as far as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1174,Safety,safe,safe-path,1174," as I can tell it doesn't seem to be overblowing that (the core dump is <400G). I ran createindex in the same directory as the database, using an empty tmp dir. This is off of a fresh build from commit c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib6",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1370,Safety,safe,safe-path,1370,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1516,Safety,safe,safe,1516,"ay:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1606,Safety,safe,safe,1606,"ult.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1; Threads 	30; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using split mode; Index table: counting k-mers...; ......................WARNING: Sequence (dbKey=0) contains only ATGC. It might be a nucleotide sequence.; ............",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1330,Security,secur,security,1330,"c4436fbec572c7e9ce02ec36af238f8b7e7f700d, using cmake 2.8.12.2 and gcc 4.8.5 on Linux 2.6.32-642.11.1.el6.x86_64. GDB has this to say:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/16:1473,Security,secur,security,1473,"ay:. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `mmseqs createindex nr nr tmp --mask 0 --threads 30'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); [Current thread is 1 (Thread 0x2b6aefeaf700 (LWP 63514))]; warning: File ""/opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /opt/sw/software/gcc/4.8.5/lib64/libstdc++.so.6.0.19-gdb.py; line to your configuration file ""/home/bondsr/.gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/bondsr/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; (gdb) bt; #0 0x00000000004fbb68 in Sequence::mapSequence(unsigned long, unsigned int, std::pair<unsigned char const*, unsigned int const>) (); #1 0x000000000048f4a3 in Prefiltering::fillDatabase(DBReader<unsigned int>*, Sequence*, IndexTable*, BaseMatrix*, unsigned long, unsigned long, bool, bool, int, int) [clone ._omp_fn.4] (); #2 0x00002b5f9ede530a in gomp_thread_start (xdata=<optimized out>) at ../../../libgomp/team.c:115; #3 0x000000346c207aa1 in start_thread () from /lib64/libpthread.so.0; #4 0x000000346bae8aad in clone () from /lib64/libc.so.6; (gdb); ```. And the output from MMseqs (I've truncated progress output):. ```; Program call:; nr nr tmp --mask 0 --threads 30. MMseqs Version: 	c4436fbec572c7e9ce02ec36af238f8b7e7f700d; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	0; Split DB 	0; Spaced Kmer 	1;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16
https://github.com/soedinglab/MMseqs2/issues/17:271,Availability,error,error,271,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:1643,Availability,Mask,Mask,1643," also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search iterations 	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > Cluster mode 	0; > Max depth connected component 	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Match sequences by their ID 	false; > ; > Program call:; > DB_trimmed DB_new tmp/removedSeqs tmp/mappingSeqs tmp/newSeqs --threads 4 -v 3 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Match sequences by their ID	false; > Threads 	4; > Verbosity 	3; > ; > =================================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:5200,Availability,mask,mask,5200,	false; > Add internal id 	false; > Compositional bias 	1; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Threads 	4; > Verbosity 	3; > Compress MSA 	false; > Summarize headers 	false; > Summary prefix 	cl; > Representative sequence 	true; > ; > Start computing representative sequences.; > Time for merging files: 0 h 0 m 0 s; > ; > Done.; > Time for processing: 0 h 0 m 0s; > ===================================================; > ======= Search the new sequences against ==========; > ========= previous (rep seq of) clusters ==========; > ===================================================; > Program call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq tmp/newSeqsHits tmp --max-seqs 1 --sub-mat blosum62.out --alignment-mode 0 -e 0.001 --min-seq-id 0 -c 0 --max-seq-len 32000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 4 -v 3 -s 4 -k 0 --k-score 2147483647 --alph-size 21 --offset-result 0 --split 0 --split-mode 2 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --e-profile 0.001 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 100 --pca 1 --pcb 1.5 --num-iterations 1 --start-sens 4 --sens-step-size 1 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Max. results per query 	1; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Pro,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:6044,Availability,Mask,Mask,6044,eq-len 32000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 4 -v 3 -s 4 -k 0 --k-score 2147483647 --alph-size 21 --offset-result 0 --split 0 --split-mode 2 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --e-profile 0.001 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 100 --pca 1 --pcb 1.5 --num-iterations 1 --start-sens 4 --sens-step-size 1 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Max. results per query 	1; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search iterations 	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > ; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > Program call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 1 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:6956,Availability,mask,mask,6956,size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search iterations 	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > ; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > Program call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 1 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	1; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/NEWDB.newSeqs(size=182); > Target database: tmp/OLDDB.mapped.repSeq(size=3); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381015863 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 1s; > ; > ; > Process prefilt,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:7409,Availability,Mask,Mask,7409,do count b 	1.5; > Number search iterations 	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > ; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp; > Program call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq /Users/delia/Documents/Clustering/Conversions_updates/trial_rmtmp/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 1 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	1; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/NEWDB.newSeqs(size=182); > Target database: tmp/OLDDB.mapped.repSeq(size=3); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381015863 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 1s; > ; > ; > Process prefiltering step 0 of 1; > ; > Index table: counting k-mers...; > WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence.; > WARNING: Sequence (dbKey=21) contains only ATGC. It might be a nucleotide sequence.; > ; > Index table: Masked residues: 0; > Index table: fill...; > Index table: removing duplicate entries...; > Index table init done.; > ; > DB statistic; > Entries: 181; > DB Size:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:8208,Availability,Mask,Masked,8208,ce length 	32000; > Profile 	false; > Max. results per query 	1; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/NEWDB.newSeqs(size=182); > Target database: tmp/OLDDB.mapped.repSeq(size=3); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381015863 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 1s; > ; > ; > Process prefiltering step 0 of 1; > ; > Index table: counting k-mers...; > WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence.; > WARNING: Sequence (dbKey=21) contains only ATGC. It might be a nucleotide sequence.; > ; > Index table: Masked residues: 0; > Index table: fill...; > Index table: removing duplicate entries...; > Index table init done.; > ; > DB statistic; > Entries: 181; > DB Size: 686130054 (byte); > Avg Kmer Size: 2.11039e-06; > Top 10 Kmers; > 	LRIDDA		1; > 	YSLDDA		1; > 	RRLGEA		1; > 	IGEREA		1; > 	RDKPGA		1; > 	GFTIIA		1; > 	WIRAKA		1; > 	LRRDPA		1; > 	HKRERA		1; > 	KTEKRA		1; > Min Kmer Size: 0; > Empty list: 85765939; > ; > Time for index table init: 0 h 0 m 1s; > ; > ; > k-mer similarity threshold: 103; > k-mer match probability: 0; > ; > Starting prefiltering scores calculation (step 0 of 1); > Query db start 0 to 182; > Target db start 0 to 3; > ; > 67 k-mers per position.; > 0 DB matches per sequence.; > 0 Overflows .; > 0 sequences passed prefiltering per query sequence.; > Median result list size: 0; > 176 sequences with 0 size result lists.; > ; > ; > Time for prefiltering scores calculation: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > ; > Overall time for prefiltering run: 0 h 0 m 1s; > Pr,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:12801,Availability,mask,mask,12801,=================================================; > =========== Extract unmapped sequences ============; > ===================================================; > Program call:; > tmp/noHitSeqList DB_new tmp/toBeClusteredSeparately ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/toBeClusteredSeparately; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ===== Cluster separately the alone sequences ======; > ===================================================; > mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv: rename tmp/input_* to tmp/search/input_*: No such file or directory; > Program call:; > tmp/toBeClusteredSeparately tmp/newClusters tmp --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 --alignment-mode 0 -e 0.001 --min-seq-id 0 --max-rejected 2147483647 --max-accept 2147483647 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	300; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth c,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:13403,Availability,Mask,Mask,13403,n_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv: rename tmp/input_* to tmp/search/input_*: No such file or directory; > Program call:; > tmp/toBeClusteredSeparately tmp/newClusters tmp --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 --alignment-mode 0 -e 0.001 --min-seq-id 0 --max-rejected 2147483647 --max-accept 2147483647 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	300; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G ->,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:15994,Availability,mask,mask,15994,se...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 176; > Size of the alignment database: 176; > Number of clusters: 169; > Program call:; > tmp/order_redundancy tmp/toBeClusteredSeparately tmp/input_step_redundancy ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/input_step_redundancy; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/input_step_redundancy tmp/input_step_redundancy tmp/pref --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	300; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/input_step_redundancy(size=169); > Target database: tmp/input_step_redundancy(size=169); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381292076 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 0s; > ; > ; > ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:16444,Availability,Mask,Mask,16444, alignment database: 176; > Number of clusters: 169; > Program call:; > tmp/order_redundancy tmp/toBeClusteredSeparately tmp/input_step_redundancy ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/input_step_redundancy; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/input_step_redundancy tmp/input_step_redundancy tmp/pref --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	300; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/input_step_redundancy(size=169); > Target database: tmp/input_step_redundancy(size=169); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381292076 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 0s; > ; > ; > Process prefiltering step 0 of 1; > ; > Index table: counting k-mers...; > ; > Index table: Masked residues: 166; > Index table: fill...; > Index table: removing duplicate entries...; > Index table init done.; > ; > DB statistic; > Entries: 30623; > DB Size: 686312706 (byte); > Avg Kmer Size: 0.000357052; > Top 10 Kmers; > 	GTKRRA		13; > 	NTLRYA		13; > 	RLRRLR		13; > 	RIRRLR		12; > 	GRRANL		11; > 	TWYINL		11; > ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:17081,Availability,Mask,Masked,17081,68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	32000; > Profile 	false; > Max. results per query 	300; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > ; > Initialising data structures...; > Using 4 threads.; > ; > Cound not find precomputed index. Compute index.; > Query database: tmp/input_step_redundancy(size=169); > Target database: tmp/input_step_redundancy(size=169); > Use kmer size 6 and split 1 using split mode 0; > Needed memory (1381292076 byte) of total memory (25769803776 byte); > Substitution matrices...; > Time for init: 0 h 0 m 0s; > ; > ; > Process prefiltering step 0 of 1; > ; > Index table: counting k-mers...; > ; > Index table: Masked residues: 166; > Index table: fill...; > Index table: removing duplicate entries...; > Index table init done.; > ; > DB statistic; > Entries: 30623; > DB Size: 686312706 (byte); > Avg Kmer Size: 0.000357052; > Top 10 Kmers; > 	GTKRRA		13; > 	NTLRYA		13; > 	RLRRLR		13; > 	RIRRLR		12; > 	GRRANL		11; > 	TWYINL		11; > 	SITLMR		11; > 	GVITGR		10; > 	FSWYAT		10; > 	AELQFV		9; > Min Kmer Size: 0; > Empty list: 85740284; > ; > Time for index table init: 0 h 0 m 1s; > ; > ; > k-mer similarity threshold: 103; > k-mer match probability: 0; > ; > Starting prefiltering scores calculation (step 0 of 1); > Query db start 0 to 169; > Target db start 0 to 169; > ; > 68 k-mers per position.; > 375 DB matches per sequence.; > 0 Overflows .; > 25 sequences passed prefiltering per query sequence.; > Median result list size: 21; > 0 sequences with 0 size result lists.; > ; > ; > Time for prefiltering scores calculation: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > ; > Overall time for prefiltering run: ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:37,Deployability,update,update,37,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:556,Deployability,update,updated,556,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:840,Deployability,update,update,840,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:2992,Deployability,Update,Update,2992,"	1; > Start sensitivity 	4; > sensitivity step size 	1; > Sets the MPI runner 	; > Cluster mode 	0; > Max depth connected component 	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Match sequences by their ID 	false; > ; > Program call:; > DB_trimmed DB_new tmp/removedSeqs tmp/mappingSeqs tmp/newSeqs --threads 4 -v 3 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Match sequences by their ID	false; > Threads 	4; > Verbosity 	3; > ; > ===================================================; > ====== Filter out the new from old sequences ======; > ===================================================; > Program call:; > tmp/newSeqs DB_new tmp/NEWDB.newSeqs ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/NEWDB.newSeqs; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > === Update the old clustering with the new keys ===; > ===================================================; > Program call:; > DB_trimmed_clu tmp/OLDCLUST.mapped --mapping-file tmp/mappingSeqs ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Filter column 	1; > Filter regex 	^.*$; > Positive filter 	true; > Filter file 	; > Mapping file 	tmp/mappingSeqs; > Threads 	4; > Verbosity 	3; > trim the results to one column 	false; > Extract n lines 	0; > Numerical comparison operator 	; > Numerical comparison value 	0; > Sort (increasing:1, decreasing: 2, shuffle: 3) the entries by numerical value	0; > ; > Mapping keys by file tmp/mappingSeqs; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ======= Extract representative sequences ==========; > ===================================================; > Program call:; > DB_new DB_new tmp/OLDCLUST.mapped tmp/OLDDB.mapped.repSeq --only-rep-seq ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d57",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:11482,Deployability,update,updatedClust,11482,"ram call:; > tmp/NEWDB.newSeqs tmp/OLDDB.mapped.repSeq tmp/newSeqsHits tmp/newSeqsHits.swapped.all ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Threads 	4; > Verbosity	3; > ; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/newSeqsHits.swapped.all tmp/newSeqsHits.swapped --trim-to-one-column ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Filter column 	1; > Filter regex 	^.*$; > Positive filter 	true; > Filter file 	; > Mapping file 	; > Threads 	4; > Verbosity 	3; > trim the results to one column 	true; > Extract n lines 	0; > Numerical comparison operator 	; > Numerical comparison value 	0; > Sort (increasing:1, decreasing: 2, shuffle: 3) the entries by numerical value	0; > ; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > = Merge found sequences with previous clustering =; > ===================================================; > Program call:; > tmp/OLDCLUST.mapped tmp/updatedClust tmp/newSeqsHits.swapped tmp/OLDCLUST.mapped ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Merge prefixes	; > Verbosity 	3; > ; > Merging the results to tmp/updatedClust; > Done; > Time for merging files: 0 h 0 m 0 s; > Time for merging: 0 h 0 m 0s; > ===================================================; > =========== Extract unmapped sequences ============; > ===================================================; > Program call:; > tmp/noHitSeqList DB_new tmp/toBeClusteredSeparately ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/toBeClusteredSeparately; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ===== Cluster separately the alone sequences ======; > ===================================================; > mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:11673,Deployability,update,updatedClust,11673,"cal comparison operator 	; > Numerical comparison value 	0; > Sort (increasing:1, decreasing: 2, shuffle: 3) the entries by numerical value	0; > ; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > = Merge found sequences with previous clustering =; > ===================================================; > Program call:; > tmp/OLDCLUST.mapped tmp/updatedClust tmp/newSeqsHits.swapped tmp/OLDCLUST.mapped ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Merge prefixes	; > Verbosity 	3; > ; > Merging the results to tmp/updatedClust; > Done; > Time for merging files: 0 h 0 m 0 s; > Time for merging: 0 h 0 m 0s; > ===================================================; > =========== Extract unmapped sequences ============; > ===================================================; > Program call:; > tmp/noHitSeqList DB_new tmp/toBeClusteredSeparately ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Start writing to file tmp/toBeClusteredSeparately; > Time for merging files: 0 h 0 m 0 s; > ===================================================; > ===== Cluster separately the alone sequences ======; > ===================================================; > mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; > mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; > mv: rename tmp/input_* to tmp/search/input_*: No such file or directory; > Program call:; > tmp/toBeClusteredSeparately tmp/newClusters tmp --sub-mat blosum62.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 --alignment-mode 0 -e 0.001 --min-seq-id 0 --max-rejected 2147483647 --max-accept 2147483647 --cluster-mode 0 --max-iterations 1000 --similarity-type 2 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; >",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:20561,Deployability,update,updated,20561,core only.; > Using 4 threads.; > Calculation of Smith-Waterman alignments.; > Time for merging files: 0 h 0 m 0 s; > ; > All sequences processed.; > ; > 4237 alignments calculated.; > 4235 sequence pairs passed the thresholds (0.999528 of overall calculated).; > 25.0592 hits per query sequence.; > Time for alignments calculation: 0 h 0 m 0s; > Program call:; > tmp/input_step_redundancy tmp/aln tmp/clu_step0 --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 656 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 169; > Size of the alignment database: 169; > Number of clusters: 17; > Program call:; > tmp/toBeClusteredSeparately tmp/clu tmp/clu_redundancy tmp/clu_step0 ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > List amount 176; > Clustering step 1...; > Clustering step 2...; > Writing the results...; > Time for merging files: 0 h 0 m 0 s; > ...done.; > ===================================================; > ==== Merge the updated clustering together with ===; > ===== the new clusters ======; > ===================================================; > Program call:; > tmp/updatedClust tmp/newClusters DB_clusterupdate ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Time for merging files: 0 h 0 m 0 s; > Time for concatenating DBs: 0 h 0 m 0s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:20710,Deployability,update,updatedClust,20710,core only.; > Using 4 threads.; > Calculation of Smith-Waterman alignments.; > Time for merging files: 0 h 0 m 0 s; > ; > All sequences processed.; > ; > 4237 alignments calculated.; > 4235 sequence pairs passed the thresholds (0.999528 of overall calculated).; > 25.0592 hits per query sequence.; > Time for alignments calculation: 0 h 0 m 0s; > Program call:; > tmp/input_step_redundancy tmp/aln tmp/clu_step0 --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 656 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 169; > Size of the alignment database: 169; > Number of clusters: 17; > Program call:; > tmp/toBeClusteredSeparately tmp/clu tmp/clu_redundancy tmp/clu_step0 ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > List amount 176; > Clustering step 1...; > Clustering step 2...; > Writing the results...; > Time for merging files: 0 h 0 m 0 s; > ...done.; > ===================================================; > ==== Merge the updated clustering together with ===; > ===== the new clusters ======; > ===================================================; > Program call:; > tmp/updatedClust tmp/newClusters DB_clusterupdate ; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Verbosity	3; > ; > Time for merging files: 0 h 0 m 0 s; > Time for concatenating DBs: 0 h 0 m 0s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:14389,Energy Efficiency,Reduce,Reduced,14389,plit DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G -> A; > D -> A; > A -> A; > Reduced amino acid alphabet:; > F W X ; > Hashing sequences ... ; > Done.; > Compute 169 unique hashes.; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy tmp/clu_redundancy --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:633,Integrability,depend,depending,633,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:147,Modifiability,extend,extended,147,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:14431,Security,Hash,Hashing,14431,plit DB 	0; > Split mode 	2; > Coverage threshold 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G -> A; > D -> A; > A -> A; > Reduced amino acid alphabet:; > F W X ; > Hashing sequences ... ; > Done.; > Compute 169 unique hashes.; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy tmp/clu_redundancy --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:14485,Security,hash,hashes,14485,d. 	false; > Spaced Kmer 	1; > Threads 	4; > Verbosity 	3; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Target Coverage threshold 	0; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Cluster mode 	0; > Max depth connected component	1000; > Similarity type 	2; > Cascaded clustering 	false; > Cluster fragments 	false; > Remove Temporary Files 	false; > Sets the MPI runner 	; > ; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Alphabet size 	3; > Seq. Id Threshold 	0; > Max. sequence length	32000; > Threads 	4; > Verbosity 	3; > ; > Y -> F; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > S -> A; > N -> D; > L -> I; > H -> E; > K -> E; > P -> C; > E -> D; > C -> A; > I -> F; > G -> A; > D -> A; > A -> A; > Reduced amino acid alphabet:; > F W X ; > Hashing sequences ... ; > Done.; > Compute 169 unique hashes.; > Time for merging files: 0 h 0 m 0 s; > Program call:; > tmp/toBeClusteredSeparately tmp/aln_redundancy tmp/clu_redundancy --cluster-mode 0 --max-seqs 300 -v 3 --max-iterations 1000 --similarity-type 2 --threads 4 ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Cluster mode 	0; > Max. results per query 	300; > Verbosity 	3; > Max depth connected component	1000; > Similarity type 	2; > Threads 	4; > ; > Init...; > Opening sequence database...; > Opening alignment database...; > done.; > Clustering mode: Set Cover; > ; > Sort entries.; > ; > Find missing connections.; > ; > Found 7 new connections.; > ; > Reconstruct initial order.; > ; > Add missing connections.; > ; > Time for Read in: 0 m 0s; > ; > Writing results...; > ...done.; > Time for clustering: 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Total time: 0 m 0s; > ; > Size of the sequence database: 176; > Size of the alignment database: 176; > Number of clusters: 169; > Program call:; > t,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:581,Testability,log,log,581,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/issues/17:821,Testability,log,log,821,"I was trying to use clusterupdate to update a clustering (DB_trimmed_clu) build from DB_trimmed (a library of proteins) to DB_clusterupdate from a extended version of the library (DB_new) with 2 sequences overlap. However, the program is not able to finish and I get the error:. mv: rename tmp/aln_* to tmp/search/aln_*: No such file or directory; mv: rename tmp/clu_* to tmp/search/clu_*: No such file or directory; mv: rename tmp/input_* to tmp/search/input_*: No such file or directory. Although the program is able to continue until the merging of the updated clusterings (see log below). I also get a random number of warnings (depending on the execution) pointing out that I am using DNA, but I am not. For instance:. WARNING: Sequence (dbKey=17) contains only ATGC. It might be a nucleotide sequence. I attach the log of the cluster update call:. `mmseqs clusterupdate DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp &> update_log.txt`. > Program call:; > DB_trimmed DB_new DB_trimmed_clu DB_clusterupdate tmp ; > ; > MMseqs Version: 	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Sub Matrix 	blosum62.out; > Add backtrace 	false; > Alignment mode 	0; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Coverage threshold 	0; > Target Coverage threshold 	0; > Max. sequence length 	32000; > Compositional bias 	1; > Profile 	false; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	false; > Threads 	4; > Verbosity 	3; > Sensitivity 	4; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Diagonal Scoring 	1; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Profile e-value threshold 	0.001; > Use global sequence weighting 	false; > Maximum sequence identity threshold	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	100; > Pseudo count a 	1; > Pseudo count b 	1.5; > Number search",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17
https://github.com/soedinglab/MMseqs2/pull/18:50,Deployability,install,installation,50,"Since the documentation was moved to the wiki the installation using brew fails when `doc.install ""userguide.pdf""`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/18
https://github.com/soedinglab/MMseqs2/pull/18:90,Deployability,install,install,90,"Since the documentation was moved to the wiki the installation using brew fails when `doc.install ""userguide.pdf""`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/18
https://github.com/soedinglab/MMseqs2/issues/19:114,Performance,perform,performes,114,## Expected Behavior; Both versions should have the same ROC1 value in our benchmark. . ## Current Behavior; AVX2 performes worse than SSE4.1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/19
https://github.com/soedinglab/MMseqs2/issues/19:75,Testability,benchmark,benchmark,75,## Expected Behavior; Both versions should have the same ROC1 value in our benchmark. . ## Current Behavior; AVX2 performes worse than SSE4.1,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/19
https://github.com/soedinglab/MMseqs2/issues/22:23,Availability,avail,available,23,The following options (available in `mmseqs search` but not in `mmseqs prefilter`) would be extremely useful when running a prefilter analysis:; ```; -e evalue cut-off; --max-accept max number of hits to report (currently all matches are reported creating very big files); --start-sens start sensitivity; --sens-step-size sensitivity step sizes; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/22
https://github.com/soedinglab/MMseqs2/issues/23:67,Availability,Error,Error,67,"## Expected Behavior; Create a translated db; ## Current Behavior; Error in argument --translation-table. ## Steps to Reproduce (for bugs); `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 7`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 8`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 0`. ## MMseqs Output (for bugs); ```; mmseqs translatenucs:; Translate nucleotide sequence DB into protein sequence DB. Please cite:; Steinegger, M. & Soding, J. Sensitive protein sequence searching for the analysis of massive data sets. bioRxiv 079681 (2016). © Milot Mirdita <milot@mirdita.de>. Usage: <i:sequenceDB> <o:sequenceDB> [options]. misc options 	default 	description [value range]; --translation-table	0 	CANONICAL=0, VERT_MITOCHONDRIAL=1, YEAST_MITOCHONDRIAL=2,MOLD_MITOCHONDRIAL=3, INVERT_MITOCHONDRIAL=4, CILIATE=5, FLATWORM_MITOCHONDRIAL=6, EUPLOTID=7, PROKARYOTE=8, ALT_YEAST=9, ASCIDIAN_MITOCHONDRIAL=10, ALT_FLATWORM_MITOCHONDRIAL=11, BLEPHARISMA=12, CHLOROPHYCEAN_MITOCHONDRIAL=13, TREMATODE_MITOCHONDRIAL=14, SCENEDESMUS_MITOCHONDRIAL=15, THRAUSTOCHYTRIUM_MITOCHONDRIAL=16, PTEROBRANCHIA_MITOCHONDRIAL=17, GRACILIBACTERIA=18, PACHYSOLEN=19, KARYORELICT=20, CONDYLOSTOMA=21, MESODINIUM=22, PERTRICH=23, BLASTOCRITHIDIA=24 (Note gaps between tables). common options 	default 	description [value range]; -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Error in argument --translation-table; ```. ## Context; db_nuc.db file contains nucleotide sequences to be translated.; other --translation-table values (1,2...) seem to work except the value 0, 7 and 8, which produce this error: `Error in argument --translation-table`. ## Your Environment; mmseqs version 52c131baa80bc76d9e69b42faa22f14042a6d4fe; Fedora 25",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/23
https://github.com/soedinglab/MMseqs2/issues/23:1407,Availability,error,errors,1407,"## Expected Behavior; Create a translated db; ## Current Behavior; Error in argument --translation-table. ## Steps to Reproduce (for bugs); `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 7`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 8`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 0`. ## MMseqs Output (for bugs); ```; mmseqs translatenucs:; Translate nucleotide sequence DB into protein sequence DB. Please cite:; Steinegger, M. & Soding, J. Sensitive protein sequence searching for the analysis of massive data sets. bioRxiv 079681 (2016). © Milot Mirdita <milot@mirdita.de>. Usage: <i:sequenceDB> <o:sequenceDB> [options]. misc options 	default 	description [value range]; --translation-table	0 	CANONICAL=0, VERT_MITOCHONDRIAL=1, YEAST_MITOCHONDRIAL=2,MOLD_MITOCHONDRIAL=3, INVERT_MITOCHONDRIAL=4, CILIATE=5, FLATWORM_MITOCHONDRIAL=6, EUPLOTID=7, PROKARYOTE=8, ALT_YEAST=9, ASCIDIAN_MITOCHONDRIAL=10, ALT_FLATWORM_MITOCHONDRIAL=11, BLEPHARISMA=12, CHLOROPHYCEAN_MITOCHONDRIAL=13, TREMATODE_MITOCHONDRIAL=14, SCENEDESMUS_MITOCHONDRIAL=15, THRAUSTOCHYTRIUM_MITOCHONDRIAL=16, PTEROBRANCHIA_MITOCHONDRIAL=17, GRACILIBACTERIA=18, PACHYSOLEN=19, KARYORELICT=20, CONDYLOSTOMA=21, MESODINIUM=22, PERTRICH=23, BLASTOCRITHIDIA=24 (Note gaps between tables). common options 	default 	description [value range]; -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Error in argument --translation-table; ```. ## Context; db_nuc.db file contains nucleotide sequences to be translated.; other --translation-table values (1,2...) seem to work except the value 0, 7 and 8, which produce this error: `Error in argument --translation-table`. ## Your Environment; mmseqs version 52c131baa80bc76d9e69b42faa22f14042a6d4fe; Fedora 25",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/23
https://github.com/soedinglab/MMseqs2/issues/23:1439,Availability,Error,Error,1439,"## Expected Behavior; Create a translated db; ## Current Behavior; Error in argument --translation-table. ## Steps to Reproduce (for bugs); `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 7`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 8`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 0`. ## MMseqs Output (for bugs); ```; mmseqs translatenucs:; Translate nucleotide sequence DB into protein sequence DB. Please cite:; Steinegger, M. & Soding, J. Sensitive protein sequence searching for the analysis of massive data sets. bioRxiv 079681 (2016). © Milot Mirdita <milot@mirdita.de>. Usage: <i:sequenceDB> <o:sequenceDB> [options]. misc options 	default 	description [value range]; --translation-table	0 	CANONICAL=0, VERT_MITOCHONDRIAL=1, YEAST_MITOCHONDRIAL=2,MOLD_MITOCHONDRIAL=3, INVERT_MITOCHONDRIAL=4, CILIATE=5, FLATWORM_MITOCHONDRIAL=6, EUPLOTID=7, PROKARYOTE=8, ALT_YEAST=9, ASCIDIAN_MITOCHONDRIAL=10, ALT_FLATWORM_MITOCHONDRIAL=11, BLEPHARISMA=12, CHLOROPHYCEAN_MITOCHONDRIAL=13, TREMATODE_MITOCHONDRIAL=14, SCENEDESMUS_MITOCHONDRIAL=15, THRAUSTOCHYTRIUM_MITOCHONDRIAL=16, PTEROBRANCHIA_MITOCHONDRIAL=17, GRACILIBACTERIA=18, PACHYSOLEN=19, KARYORELICT=20, CONDYLOSTOMA=21, MESODINIUM=22, PERTRICH=23, BLASTOCRITHIDIA=24 (Note gaps between tables). common options 	default 	description [value range]; -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Error in argument --translation-table; ```. ## Context; db_nuc.db file contains nucleotide sequences to be translated.; other --translation-table values (1,2...) seem to work except the value 0, 7 and 8, which produce this error: `Error in argument --translation-table`. ## Your Environment; mmseqs version 52c131baa80bc76d9e69b42faa22f14042a6d4fe; Fedora 25",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/23
https://github.com/soedinglab/MMseqs2/issues/23:1662,Availability,error,error,1662,"## Expected Behavior; Create a translated db; ## Current Behavior; Error in argument --translation-table. ## Steps to Reproduce (for bugs); `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 7`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 8`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 0`. ## MMseqs Output (for bugs); ```; mmseqs translatenucs:; Translate nucleotide sequence DB into protein sequence DB. Please cite:; Steinegger, M. & Soding, J. Sensitive protein sequence searching for the analysis of massive data sets. bioRxiv 079681 (2016). © Milot Mirdita <milot@mirdita.de>. Usage: <i:sequenceDB> <o:sequenceDB> [options]. misc options 	default 	description [value range]; --translation-table	0 	CANONICAL=0, VERT_MITOCHONDRIAL=1, YEAST_MITOCHONDRIAL=2,MOLD_MITOCHONDRIAL=3, INVERT_MITOCHONDRIAL=4, CILIATE=5, FLATWORM_MITOCHONDRIAL=6, EUPLOTID=7, PROKARYOTE=8, ALT_YEAST=9, ASCIDIAN_MITOCHONDRIAL=10, ALT_FLATWORM_MITOCHONDRIAL=11, BLEPHARISMA=12, CHLOROPHYCEAN_MITOCHONDRIAL=13, TREMATODE_MITOCHONDRIAL=14, SCENEDESMUS_MITOCHONDRIAL=15, THRAUSTOCHYTRIUM_MITOCHONDRIAL=16, PTEROBRANCHIA_MITOCHONDRIAL=17, GRACILIBACTERIA=18, PACHYSOLEN=19, KARYORELICT=20, CONDYLOSTOMA=21, MESODINIUM=22, PERTRICH=23, BLASTOCRITHIDIA=24 (Note gaps between tables). common options 	default 	description [value range]; -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Error in argument --translation-table; ```. ## Context; db_nuc.db file contains nucleotide sequences to be translated.; other --translation-table values (1,2...) seem to work except the value 0, 7 and 8, which produce this error: `Error in argument --translation-table`. ## Your Environment; mmseqs version 52c131baa80bc76d9e69b42faa22f14042a6d4fe; Fedora 25",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/23
https://github.com/soedinglab/MMseqs2/issues/23:1670,Availability,Error,Error,1670,"## Expected Behavior; Create a translated db; ## Current Behavior; Error in argument --translation-table. ## Steps to Reproduce (for bugs); `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 7`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 8`; OR; `mmseqs translatenucs db_nuc.db db_prot.db --translation-table 0`. ## MMseqs Output (for bugs); ```; mmseqs translatenucs:; Translate nucleotide sequence DB into protein sequence DB. Please cite:; Steinegger, M. & Soding, J. Sensitive protein sequence searching for the analysis of massive data sets. bioRxiv 079681 (2016). © Milot Mirdita <milot@mirdita.de>. Usage: <i:sequenceDB> <o:sequenceDB> [options]. misc options 	default 	description [value range]; --translation-table	0 	CANONICAL=0, VERT_MITOCHONDRIAL=1, YEAST_MITOCHONDRIAL=2,MOLD_MITOCHONDRIAL=3, INVERT_MITOCHONDRIAL=4, CILIATE=5, FLATWORM_MITOCHONDRIAL=6, EUPLOTID=7, PROKARYOTE=8, ALT_YEAST=9, ASCIDIAN_MITOCHONDRIAL=10, ALT_FLATWORM_MITOCHONDRIAL=11, BLEPHARISMA=12, CHLOROPHYCEAN_MITOCHONDRIAL=13, TREMATODE_MITOCHONDRIAL=14, SCENEDESMUS_MITOCHONDRIAL=15, THRAUSTOCHYTRIUM_MITOCHONDRIAL=16, PTEROBRANCHIA_MITOCHONDRIAL=17, GRACILIBACTERIA=18, PACHYSOLEN=19, KARYORELICT=20, CONDYLOSTOMA=21, MESODINIUM=22, PERTRICH=23, BLASTOCRITHIDIA=24 (Note gaps between tables). common options 	default 	description [value range]; -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Error in argument --translation-table; ```. ## Context; db_nuc.db file contains nucleotide sequences to be translated.; other --translation-table values (1,2...) seem to work except the value 0, 7 and 8, which produce this error: `Error in argument --translation-table`. ## Your Environment; mmseqs version 52c131baa80bc76d9e69b42faa22f14042a6d4fe; Fedora 25",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/23
https://github.com/soedinglab/MMseqs2/issues/24:65,Availability,avail,available,65,metaclust50 and metaclust95 was clustered by mmseqs2. It is only available as gzip fasta. I was wondering if it is possible to get hhsuite compatible format of metaclust so that I can use hhblits to search my query against it.,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/24
https://github.com/soedinglab/MMseqs2/issues/25:32,Testability,test,tests,32,"Hi there,. I see that there are tests in `src/tests`, but there is no `make test` target or mention of tests in the README. Is there a recommended way of running the tests?. Thanks, ben.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25
https://github.com/soedinglab/MMseqs2/issues/25:46,Testability,test,tests,46,"Hi there,. I see that there are tests in `src/tests`, but there is no `make test` target or mention of tests in the README. Is there a recommended way of running the tests?. Thanks, ben.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25
https://github.com/soedinglab/MMseqs2/issues/25:76,Testability,test,test,76,"Hi there,. I see that there are tests in `src/tests`, but there is no `make test` target or mention of tests in the README. Is there a recommended way of running the tests?. Thanks, ben.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25
https://github.com/soedinglab/MMseqs2/issues/25:103,Testability,test,tests,103,"Hi there,. I see that there are tests in `src/tests`, but there is no `make test` target or mention of tests in the README. Is there a recommended way of running the tests?. Thanks, ben.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25
https://github.com/soedinglab/MMseqs2/issues/25:166,Testability,test,tests,166,"Hi there,. I see that there are tests in `src/tests`, but there is no `make test` target or mention of tests in the README. Is there a recommended way of running the tests?. Thanks, ben.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25
https://github.com/soedinglab/MMseqs2/issues/27:160,Availability,reliab,reliably,160,"Hi there,; what would be the best way to create a cluster DB containing only a subset of cluster IDs from a larger cluster DB? Does `mmseqs createsubdb` can be reliably used with the a set of human readable cluster IDs? ; thanks! CCing @kristinaka",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/27
https://github.com/soedinglab/MMseqs2/issues/28:373,Availability,error,error,373,"I was trying to use MMSEQS2 for clustering with:. mmseqs cluster DB clu tmp --cascaded -e 1e-5 --max-seqs 30000 --similarity-type 1. It was working fine (MMseqs version ad5b994c5f21d2117c359ecb748811cbd01eba73) but when I try to execute it in another machine (both macOS El Capitan 10.11.6, this time MMseqs version e3ca470308523cb3d997088c65e821cc79e2a422), I get several error messages as follows,. ERROR: Set 0 has more elements than allocated (1)!. and the clustering never finishes. Any idea of what is this due to or how to solve it?. Thank you in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28
https://github.com/soedinglab/MMseqs2/issues/28:401,Availability,ERROR,ERROR,401,"I was trying to use MMSEQS2 for clustering with:. mmseqs cluster DB clu tmp --cascaded -e 1e-5 --max-seqs 30000 --similarity-type 1. It was working fine (MMseqs version ad5b994c5f21d2117c359ecb748811cbd01eba73) but when I try to execute it in another machine (both macOS El Capitan 10.11.6, this time MMseqs version e3ca470308523cb3d997088c65e821cc79e2a422), I get several error messages as follows,. ERROR: Set 0 has more elements than allocated (1)!. and the clustering never finishes. Any idea of what is this due to or how to solve it?. Thank you in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28
https://github.com/soedinglab/MMseqs2/issues/28:437,Energy Efficiency,allocate,allocated,437,"I was trying to use MMSEQS2 for clustering with:. mmseqs cluster DB clu tmp --cascaded -e 1e-5 --max-seqs 30000 --similarity-type 1. It was working fine (MMseqs version ad5b994c5f21d2117c359ecb748811cbd01eba73) but when I try to execute it in another machine (both macOS El Capitan 10.11.6, this time MMseqs version e3ca470308523cb3d997088c65e821cc79e2a422), I get several error messages as follows,. ERROR: Set 0 has more elements than allocated (1)!. and the clustering never finishes. Any idea of what is this due to or how to solve it?. Thank you in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28
https://github.com/soedinglab/MMseqs2/issues/28:379,Integrability,message,messages,379,"I was trying to use MMSEQS2 for clustering with:. mmseqs cluster DB clu tmp --cascaded -e 1e-5 --max-seqs 30000 --similarity-type 1. It was working fine (MMseqs version ad5b994c5f21d2117c359ecb748811cbd01eba73) but when I try to execute it in another machine (both macOS El Capitan 10.11.6, this time MMseqs version e3ca470308523cb3d997088c65e821cc79e2a422), I get several error messages as follows,. ERROR: Set 0 has more elements than allocated (1)!. and the clustering never finishes. Any idea of what is this due to or how to solve it?. Thank you in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/28
https://github.com/soedinglab/MMseqs2/issues/29:278,Availability,Error,Error,278,"## Expected Behavior; The example file https://raw.githubusercontent.com/soedinglab/mmseqs2/master/examples/DB.fasta should be clustered; ## Current Behavior; After the installation of MMseqs Version: 1c45613a4166130d040b52241dc66f7d687f4e54 it fails when prefiltering with:. **Error: Could not allocate memory by memalign. Please report this bug to developers** . ## Steps to Reproduce (for bugs). mmseqs createdb DB.fasta DB; mkdir tmp; mmseqs cluster DB cluDB tmp. ## MMseqs Output (for bugs); Line [391](https://gist.github.com/genomewalker/dc566892b5300bc62e166dac844a9b65#file-mmseqs_v1c45613a4166130d040b52241dc66f7d687f4e54-L391). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Homebrew . * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.8.1 and g++ (Homebrew GCC 7.1.0 --without-multilib) 7.1.0. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): MacBook Pro (Retina, 13-inch, Late 2013) with 2.6 GHz Intel Core i5 and 16 GB 1600 MHz DDR3; * Operating system and version: Mac OS X 10.12.4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29
https://github.com/soedinglab/MMseqs2/issues/29:169,Deployability,install,installation,169,"## Expected Behavior; The example file https://raw.githubusercontent.com/soedinglab/mmseqs2/master/examples/DB.fasta should be clustered; ## Current Behavior; After the installation of MMseqs Version: 1c45613a4166130d040b52241dc66f7d687f4e54 it fails when prefiltering with:. **Error: Could not allocate memory by memalign. Please report this bug to developers** . ## Steps to Reproduce (for bugs). mmseqs createdb DB.fasta DB; mkdir tmp; mmseqs cluster DB cluDB tmp. ## MMseqs Output (for bugs); Line [391](https://gist.github.com/genomewalker/dc566892b5300bc62e166dac844a9b65#file-mmseqs_v1c45613a4166130d040b52241dc66f7d687f4e54-L391). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Homebrew . * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.8.1 and g++ (Homebrew GCC 7.1.0 --without-multilib) 7.1.0. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): MacBook Pro (Retina, 13-inch, Late 2013) with 2.6 GHz Intel Core i5 and 16 GB 1600 MHz DDR3; * Operating system and version: Mac OS X 10.12.4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29
https://github.com/soedinglab/MMseqs2/issues/29:295,Energy Efficiency,allocate,allocate,295,"## Expected Behavior; The example file https://raw.githubusercontent.com/soedinglab/mmseqs2/master/examples/DB.fasta should be clustered; ## Current Behavior; After the installation of MMseqs Version: 1c45613a4166130d040b52241dc66f7d687f4e54 it fails when prefiltering with:. **Error: Could not allocate memory by memalign. Please report this bug to developers** . ## Steps to Reproduce (for bugs). mmseqs createdb DB.fasta DB; mkdir tmp; mmseqs cluster DB cluDB tmp. ## MMseqs Output (for bugs); Line [391](https://gist.github.com/genomewalker/dc566892b5300bc62e166dac844a9b65#file-mmseqs_v1c45613a4166130d040b52241dc66f7d687f4e54-L391). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Homebrew . * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.8.1 and g++ (Homebrew GCC 7.1.0 --without-multilib) 7.1.0. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): MacBook Pro (Retina, 13-inch, Late 2013) with 2.6 GHz Intel Core i5 and 16 GB 1600 MHz DDR3; * Operating system and version: Mac OS X 10.12.4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/29
https://github.com/soedinglab/MMseqs2/issues/31:594,Availability,Mask,Mask,594,"## Expected Behavior; Obtaining similar sequences to the queries from the target database; ## Current Behavior; Floating point exception at the prefilter step; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; The target database is current nr (protein) from the NCBI (~120M sequences, 69GB).; Index creation runs ok:. mmseqs createindex nr. ```; Program call:; nr . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	64; Verbosity 	3; ...; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. . ```; ls -lrt; ```; -rw-r--r--. 1 root root 2773738984 may 11 14:05 nr.lookup; -rw-r--r--. 1 root root 28462541941 may 11 14:07 nr_h; -rw-r--r--. 1 root root 2967783911 may 11 14:07 nr_h.index; -rw-r--r--. 1 root root 44976760168 may 11 14:10 nr; -rw-r--r--. 1 root root 3020702058 may 11 14:10 nr.index; drwxr-xr-x. 2 root root 6 may 12 12:52 tmp; -rw-r--r--. 1 root root 3020702058 may 12 13:23 nr.sk7.mmseqsindex; -rw-r--r--. 1 root root 330684926197 may 12 13:23 nr.sk7; -rw-r--r--. 1 root root 344 may 12 13:23 nr.sk7.index; ```. When launching the search:. mmseqs search mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp; ```; Program call:; mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target q",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:2088,Availability,Mask,Mask,2088,0 nr.index; drwxr-xr-x. 2 root root 6 may 12 12:52 tmp; -rw-r--r--. 1 root root 3020702058 may 12 13:23 nr.sk7.mmseqsindex; -rw-r--r--. 1 root root 330684926197 may 12 13:23 nr.sk7; -rw-r--r--. 1 root root 344 may 12 13:23 nr.sk7.index; ```. When launching the search:. mmseqs search mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp; ```; Program call:; mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. /root/tmp/blast; /root/tmp/blast; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:2839,Availability,mask,mask,2839,lign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. /root/tmp/blast; /root/tmp/blast; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0; tmp/blastp.sh: línea 60: 68389 Excepc,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:3298,Availability,Mask,Mask,3298,"Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. /root/tmp/blast; /root/tmp/blast; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0; tmp/blastp.sh: línea 60: 68389 Excepción de coma flotante $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 /root/tmp/blast/tmp/aln_4 --sub-mat blosum62.out --alignment-mode 0 -e 0.001 --min-seq-id 0 -c 0 --target-cov 0 --max-seq-len 32000 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 64 -v 3 . MMseqs Version: 	a81227565da4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:6910,Availability,avail,available,6910,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:5774,Deployability,Release,Release,5774,"not open data file /root/tmp/blast/tmp/pref_4!; mv: no se puede efectuar `stat' sobre «/root/tmp/blast/tmp/aln_4»: No existe el fichero o el directorio; ```; The index creation and search is done in the same machine; # ; ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; ca",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:7047,Deployability,release,release,7047,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:7070,Deployability,release,release,7070,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:6587,Energy Efficiency,monitor,monitor,6587,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:6841,Energy Efficiency,power,power,6841,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:6160,Performance,cache,cache,6160,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:6904,Performance,cache,cache,6904,"ist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):. self-compiled. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:. cmake --version; cmake version 2.8.12.2; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; c++ --version; c++ (GCC) 6.2.1 20160916 (Red Hat 6.2.1-3). * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; cat /proc/cpuinfo. ```; processor	: 63; vendor_id	: GenuineIntel; cpu family	: 6; model		: 46; model name	: Intel(R) Xeon(R) CPU X7560 @ 2.27GHz; stepping	: 6; microcode	: 0xb; cpu MHz		: 1064.000; cache size	: 24576 KB; physical id	: 3; siblings	: 16; core id		: 11; cpu cores	: 8; apicid		: 119; initial apicid	: 119; fpu		: yes; fpu_exception	: yes; cpuid level	: 11; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 x2apic popcnt lahf_lm ida epb dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips	: 4527.83; clflush size	: 64; cache_alignment	: 64; address sizes	: 44 bits physical, 48 bits virtual; power management:; ```; free; ```; total used free shared buff/cache available; Mem: 528377212 3193792 142947764 9564 382235656 523907652; Swap: 0 0 0. ```; * Operating system and version:; cat /etc/redhat-release ; CentOS Linux release 7.3.1611 (Core)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:1322,Testability,test,testDB,1322,x creation runs ok:. mmseqs createindex nr. ```; Program call:; nr . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	64; Verbosity 	3; ...; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. . ```; ls -lrt; ```; -rw-r--r--. 1 root root 2773738984 may 11 14:05 nr.lookup; -rw-r--r--. 1 root root 28462541941 may 11 14:07 nr_h; -rw-r--r--. 1 root root 2967783911 may 11 14:07 nr_h.index; -rw-r--r--. 1 root root 44976760168 may 11 14:10 nr; -rw-r--r--. 1 root root 3020702058 may 11 14:10 nr.index; drwxr-xr-x. 2 root root 6 may 12 12:52 tmp; -rw-r--r--. 1 root root 3020702058 may 12 13:23 nr.sk7.mmseqsindex; -rw-r--r--. 1 root root 330684926197 may 12 13:23 nr.sk7; -rw-r--r--. 1 root root 344 may 12 13:23 nr.sk7.index; ```. When launching the search:. mmseqs search mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp; ```; Program call:; mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo co,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:1355,Testability,test,test-,1355,x creation runs ok:. mmseqs createindex nr. ```; Program call:; nr . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	64; Verbosity 	3; ...; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. . ```; ls -lrt; ```; -rw-r--r--. 1 root root 2773738984 may 11 14:05 nr.lookup; -rw-r--r--. 1 root root 28462541941 may 11 14:07 nr_h; -rw-r--r--. 1 root root 2967783911 may 11 14:07 nr_h.index; -rw-r--r--. 1 root root 44976760168 may 11 14:10 nr; -rw-r--r--. 1 root root 3020702058 may 11 14:10 nr.index; drwxr-xr-x. 2 root root 6 may 12 12:52 tmp; -rw-r--r--. 1 root root 3020702058 may 12 13:23 nr.sk7.mmseqsindex; -rw-r--r--. 1 root root 330684926197 may 12 13:23 nr.sk7; -rw-r--r--. 1 root root 344 may 12 13:23 nr.sk7.index; ```. When launching the search:. mmseqs search mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp; ```; Program call:; mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo co,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:1402,Testability,test,testDB,1402,x creation runs ok:. mmseqs createindex nr. ```; Program call:; nr . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	64; Verbosity 	3; ...; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. . ```; ls -lrt; ```; -rw-r--r--. 1 root root 2773738984 may 11 14:05 nr.lookup; -rw-r--r--. 1 root root 28462541941 may 11 14:07 nr_h; -rw-r--r--. 1 root root 2967783911 may 11 14:07 nr_h.index; -rw-r--r--. 1 root root 44976760168 may 11 14:10 nr; -rw-r--r--. 1 root root 3020702058 may 11 14:10 nr.index; drwxr-xr-x. 2 root root 6 may 12 12:52 tmp; -rw-r--r--. 1 root root 3020702058 may 12 13:23 nr.sk7.mmseqsindex; -rw-r--r--. 1 root root 330684926197 may 12 13:23 nr.sk7; -rw-r--r--. 1 root root 344 may 12 13:23 nr.sk7.index; ```. When launching the search:. mmseqs search mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp; ```; Program call:; mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo co,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:1435,Testability,test,test-,1435,x creation runs ok:. mmseqs createindex nr. ```; Program call:; nr . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	64; Verbosity 	3; ...; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. . ```; ls -lrt; ```; -rw-r--r--. 1 root root 2773738984 may 11 14:05 nr.lookup; -rw-r--r--. 1 root root 28462541941 may 11 14:07 nr_h; -rw-r--r--. 1 root root 2967783911 may 11 14:07 nr_h.index; -rw-r--r--. 1 root root 44976760168 may 11 14:10 nr; -rw-r--r--. 1 root root 3020702058 may 11 14:10 nr.index; drwxr-xr-x. 2 root root 6 may 12 12:52 tmp; -rw-r--r--. 1 root root 3020702058 may 12 13:23 nr.sk7.mmseqsindex; -rw-r--r--. 1 root root 330684926197 may 12 13:23 nr.sk7; -rw-r--r--. 1 root root 344 may 12 13:23 nr.sk7.index; ```. When launching the search:. mmseqs search mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp; ```; Program call:; mmseq-testDB /junk/databases/mmseqs/nr test-2-mmseqsDB tmp . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo co,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:2596,Testability,test,testDB,2596,; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	64; Verbosity 	3; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. /root/tmp/blast; /root/tmp/blast; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:3631,Testability,test,testDB,3631,"/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0; tmp/blastp.sh: línea 60: 68389 Excepción de coma flotante $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 /root/tmp/blast/tmp/aln_4 --sub-mat blosum62.out --alignment-mode 0 -e 0.001 --min-seq-id 0 -c 0 --target-cov 0 --max-seq-len 32000 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 64 -v 3 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; In",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/31:3938,Testability,test,testDB,3938," 3 -s 4 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	64; Verbosity 	3. Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 0 using split mode 0; tmp/blastp.sh: línea 60: 68389 Excepción de coma flotante $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Program call:; mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 /root/tmp/blast/tmp/aln_4 --sub-mat blosum62.out --alignment-mode 0 -e 0.001 --min-seq-id 0 -c 0 --target-cov 0 --max-seq-len 32000 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --threads 64 -v 3 . MMseqs Version: 	a81227565da4e95d233e3bcbd5c0cdc6ada1c14a; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; Threads 	64; Verbosity 	3. Init data structures...; Compute score only.; Using 64 threads.; Could not open data file /root/tmp/blast/tmp/pref_4!; mv: no se puede efectuar `stat' sobre «/root/tmp/blast/tmp/aln_4»: No existe el fichero o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31
https://github.com/soedinglab/MMseqs2/issues/32:87,Availability,Down,Download,87,"## Expected Behavior; Go to uniclust website (https://uniclust.mmseqs.com/) and click ""Download"" to download uniclust database from ""http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/"". ## Current Behavior; The website http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/ complaint:; Access forbidden!; You don't have permission to access the requested directory. There is either no index document or the directory is read-protected.; If you think this is a server error, please contact the webmaster.; Error 403; wwwuser.gwdg.de. ## Steps to Reproduce (for bugs); http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/32
https://github.com/soedinglab/MMseqs2/issues/32:100,Availability,down,download,100,"## Expected Behavior; Go to uniclust website (https://uniclust.mmseqs.com/) and click ""Download"" to download uniclust database from ""http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/"". ## Current Behavior; The website http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/ complaint:; Access forbidden!; You don't have permission to access the requested directory. There is either no index document or the directory is read-protected.; If you think this is a server error, please contact the webmaster.; Error 403; wwwuser.gwdg.de. ## Steps to Reproduce (for bugs); http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/32
https://github.com/soedinglab/MMseqs2/issues/32:479,Availability,error,error,479,"## Expected Behavior; Go to uniclust website (https://uniclust.mmseqs.com/) and click ""Download"" to download uniclust database from ""http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/"". ## Current Behavior; The website http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/ complaint:; Access forbidden!; You don't have permission to access the requested directory. There is either no index document or the directory is read-protected.; If you think this is a server error, please contact the webmaster.; Error 403; wwwuser.gwdg.de. ## Steps to Reproduce (for bugs); http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/32
https://github.com/soedinglab/MMseqs2/issues/32:517,Availability,Error,Error,517,"## Expected Behavior; Go to uniclust website (https://uniclust.mmseqs.com/) and click ""Download"" to download uniclust database from ""http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/"". ## Current Behavior; The website http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/ complaint:; Access forbidden!; You don't have permission to access the requested directory. There is either no index document or the directory is read-protected.; If you think this is a server error, please contact the webmaster.; Error 403; wwwuser.gwdg.de. ## Steps to Reproduce (for bugs); http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/32
https://github.com/soedinglab/MMseqs2/issues/32:298,Security,Access,Access,298,"## Expected Behavior; Go to uniclust website (https://uniclust.mmseqs.com/) and click ""Download"" to download uniclust database from ""http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/"". ## Current Behavior; The website http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/ complaint:; Access forbidden!; You don't have permission to access the requested directory. There is either no index document or the directory is read-protected.; If you think this is a server error, please contact the webmaster.; Error 403; wwwuser.gwdg.de. ## Steps to Reproduce (for bugs); http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/32
https://github.com/soedinglab/MMseqs2/issues/32:346,Security,access,access,346,"## Expected Behavior; Go to uniclust website (https://uniclust.mmseqs.com/) and click ""Download"" to download uniclust database from ""http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/"". ## Current Behavior; The website http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/ complaint:; Access forbidden!; You don't have permission to access the requested directory. There is either no index document or the directory is read-protected.; If you think this is a server error, please contact the webmaster.; Error 403; wwwuser.gwdg.de. ## Steps to Reproduce (for bugs); http://wwwuser.gwdg.de/~compbiol/uniclust/current_release/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/32
https://github.com/soedinglab/MMseqs2/issues/33:1118,Availability,echo,echo,1118,"I'm likely not understand the --min-seq-id parameter. I am clustering the same database with different min_seq_id levels. The database is comprised of the ORFs of ~800 _Vibrio_ genomes, with 3.5M ORFs. I don't expect the clusters to be the same for 95% and 30% similiarity threshold, many of the genomes in this database have less than 80% nucleotide identity. ## Steps to Reproduce; output from mmseqs here: https://gist.githubusercontent.com/elsherbini/381bad1c3e340489514502f4e0f62696/raw/00d47064944d11238edb2f49ffd0af0e94e737cb/mmseqs_output. example_fastadb here: https://gist.githubusercontent.com/elsherbini/381bad1c3e340489514502f4e0f62696/raw/00d47064944d11238edb2f49ffd0af0e94e737cb/example_fastadb. ```; >mkdir -p ./tmp30; >rm -rf ./tmp30/*; >mkdir -p ./tmp95; >rm -rf ./tmp95/*; >mmseqs createdb fastaDB DB; >mmseqs cluster DB clu_30 ./tmp30 --min-seq-id 30 --max-seqs 100000 -c 0.8; >mmseqs cluster DB clu_95 ./tmp95 --min-seq-id 95 --max-seqs 100000 -c 0.8; >mmseqs createtsv DB DB clu_30 clusters_30.tsv; >mmseqs createtsv DB DB clu_95 clusters_95.tsv; >cmp --silent clusters_30.tsv clusters_95.tsv && echo 'Files Are Identical! || echo 'Files Are Different!'; Files Are Identical!. ```; ## Your Environment; ```; MMseqs Version: 	b929632f1b419373143faa2a36179c6b964bdfe3; statically compiled; centos6; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/33
https://github.com/soedinglab/MMseqs2/issues/33:1148,Availability,echo,echo,1148,"I'm likely not understand the --min-seq-id parameter. I am clustering the same database with different min_seq_id levels. The database is comprised of the ORFs of ~800 _Vibrio_ genomes, with 3.5M ORFs. I don't expect the clusters to be the same for 95% and 30% similiarity threshold, many of the genomes in this database have less than 80% nucleotide identity. ## Steps to Reproduce; output from mmseqs here: https://gist.githubusercontent.com/elsherbini/381bad1c3e340489514502f4e0f62696/raw/00d47064944d11238edb2f49ffd0af0e94e737cb/mmseqs_output. example_fastadb here: https://gist.githubusercontent.com/elsherbini/381bad1c3e340489514502f4e0f62696/raw/00d47064944d11238edb2f49ffd0af0e94e737cb/example_fastadb. ```; >mkdir -p ./tmp30; >rm -rf ./tmp30/*; >mkdir -p ./tmp95; >rm -rf ./tmp95/*; >mmseqs createdb fastaDB DB; >mmseqs cluster DB clu_30 ./tmp30 --min-seq-id 30 --max-seqs 100000 -c 0.8; >mmseqs cluster DB clu_95 ./tmp95 --min-seq-id 95 --max-seqs 100000 -c 0.8; >mmseqs createtsv DB DB clu_30 clusters_30.tsv; >mmseqs createtsv DB DB clu_95 clusters_95.tsv; >cmp --silent clusters_30.tsv clusters_95.tsv && echo 'Files Are Identical! || echo 'Files Are Different!'; Files Are Identical!. ```; ## Your Environment; ```; MMseqs Version: 	b929632f1b419373143faa2a36179c6b964bdfe3; statically compiled; centos6; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/33
https://github.com/soedinglab/MMseqs2/issues/34:2345,Availability,Mask,Mask,2345,".so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	/usr/lib64/openmpi/bin/mpirun -np 32; Remove Temporary Files 	false; ```. It doesn't crash, but do not get any further.; Using additional MPI options:; ` RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 --report-bindings --map-by core --bind-to core"" /ngs/software/mmseqs/mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32`. Uses 32 CPU core, but get stuck at the same point.; Using same query and target databases with the regular parallel version, runs in under a minute.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/34:1438,Testability,test,testDB,1438,"++.so.6 (0x00007f439e4ad000); > 	libm.so.6 => /lib64/libm.so.6 (0x00007f439e1ab000); > 	libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f439df84000); > 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/34:1468,Testability,test,test-nr-,1468,"++.so.6 (0x00007f439e4ad000); > 	libm.so.6 => /lib64/libm.so.6 (0x00007f439e1ab000); > 	libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f439df84000); > 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/34:1480,Testability,test,test-,1480,"++.so.6 (0x00007f439e4ad000); > 	libm.so.6 => /lib64/libm.so.6 (0x00007f439e1ab000); > 	libgomp.so.1 => /lib64/libgomp.so.1 (0x00007f439df84000); > 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/34:1589,Testability,test,testDB,1589,"1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/34:1619,Testability,test,test-nr-,1619,"1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/34:1631,Testability,test,test-,1631,"1 => /lib64/libgcc_s.so.1 (0x00007f439dd6e000); > 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f439db52000); > 	libc.so.6 => /lib64/libc.so.6 (0x00007f439d790000); > 	libopen-rte.so.12 => /usr/lib64/openmpi/lib/libopen-rte.so.12 (0x00007f439d513000); > 	libopen-pal.so.13 => /usr/lib64/openmpi/lib/libopen-pal.so.13 (0x00007f439d26f000); > 	libdl.so.2 => /lib64/libdl.so.2 (0x00007f439d06a000); > 	librt.so.1 => /lib64/librt.so.1 (0x00007f439ce62000); > 	libutil.so.1 => /lib64/libutil.so.1 (0x00007f439cc5f000); > 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00007f439ca24000); > 	/lib64/ld-linux-x86-64.so.2 (0x00007f439ecc6000); > 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00007f439c818000); > 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/34:3072,Testability,test,testDB,3072,".so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	/usr/lib64/openmpi/bin/mpirun -np 32; Remove Temporary Files 	false; ```. It doesn't crash, but do not get any further.; Using additional MPI options:; ` RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 --report-bindings --map-by core --bind-to core"" /ngs/software/mmseqs/mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32`. Uses 32 CPU core, but get stuck at the same point.; Using same query and target databases with the regular parallel version, runs in under a minute.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/34:3102,Testability,test,test-nr-,3102,".so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	/usr/lib64/openmpi/bin/mpirun -np 32; Remove Temporary Files 	false; ```. It doesn't crash, but do not get any further.; Using additional MPI options:; ` RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 --report-bindings --map-by core --bind-to core"" /ngs/software/mmseqs/mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32`. Uses 32 CPU core, but get stuck at the same point.; Using same query and target databases with the regular parallel version, runs in under a minute.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/34:3114,Testability,test,test-,3114,".so.7 => /lib64/libltdl.so.7 (0x00007f439c60d000). When I launch:; RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 "" mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32. It just uses 4 CPU cores and doesn't get too far:; Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32 ; ```. MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	32; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	/usr/lib64/openmpi/bin/mpirun -np 32; Remove Temporary Files 	false; ```. It doesn't crash, but do not get any further.; Using additional MPI options:; ` RUNNER=""/usr/lib64/openmpi/bin/mpirun -np 32 --report-bindings --map-by core --bind-to core"" /ngs/software/mmseqs/mmseqs-MPI search mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 32`. Uses 32 CPU core, but get stuck at the same point.; Using same query and target databases with the regular parallel version, runs in under a minute.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34
https://github.com/soedinglab/MMseqs2/issues/35:202,Availability,error,error,202,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/35:624,Availability,error,error,624,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/35:656,Availability,error,errors,656,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/35:782,Availability,error,error,782,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/35:908,Availability,error,errors,908,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/35:944,Availability,error,error,944,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/35:955,Availability,error,error,955,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/35:1053,Availability,error,error,1053,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/35:1273,Availability,error,errors,1273,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/35:797,Integrability,depend,depend,797,"I'm trying to create clusters of a number of pre-clustered databases, all stored in multi-fasta files. The `createdb` command seems to runs fine on all files, however, the `cluster` command leads to an error on some, but not all, files:. ```; Invalid database read for database data file=tmp_clusters/DB, database index=tmp_clusters/DB.index; getData: local id (27) >= db size (27); Rescore diagonals.; Could not open data file tmp_clusters/tmp/linclust/pref!; Could not open data file tmp_clusters/tmp/linclust/pref_rescore1!; awk: can't open file tmp_clusters/tmp/linclust/pre_clust.index; source line number 1; ```. This error is followed by many other errors, all related to being unable to open data files (e.g. `Could not open data file tmp_clusters/tmp/linclust/pref!`). The error seems to depend on the sequences in the file. For example, if I merge two of the fasta-files, one of which runs without errors and one which leads to above error, the error is reproduced. I have not been able to identify which feature in the sequences leads to the error. Before every run of mmseqs, I delete all temp files. Regarding my environment:; * OSX 10.11.3; * Git commit - 3ff5b8e26c93420c04c589fc663734ee8c964c3c; * Self compiled . I've attached two files, one that leads to errors in my build, and one that does not. Hope you can help. . [DB_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089709/DB_errors.txt); [DB_no_errors.txt](https://github.com/soedinglab/MMseqs2/files/1089710/DB_no_errors.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35
https://github.com/soedinglab/MMseqs2/issues/36:181,Availability,fault,fault,181,"Dear MMseqs developers,; I have encountered a problem with converting clustering results into ca3m MSAs.; result2msa works fine but adding '--compress' option causes a segmentation fault. Below is the GDB output:. ```; Starting program: /usr/lusers/aivan/prog/MMseqs2/build/bin/mmseqs result2msa DB DB clu cluMsa --compress; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; MPI Init...; Rank: 0 Size: 1; Program call:; DB DB clu cluMsa --compress . MMseqs Version: 	31e25cb081a874f225d443eec307a6254f06a291; Sub Matrix 	blosum62.out; Query queryProfile 	false; Profile e-value threshold 	0.001; Allow Deletion 	false; Add internal id 	false; Compositional bias 	1; Filter MSA 	0; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Threads 	28; Verbosity 	3; Compress MSA 	true; Summarize headers 	false; Summary prefix 	cl; Omit Consensus 	false; Skip Query 	false. Compute split from 0 to 1089144; Using the first target sequence as center sequence for making each alignment.; [New Thread 0x2aaae4488700 (LWP 9149)]; [New Thread 0x2aaae4689700 (LWP 9150)]; [New Thread 0x2aaae488a700 (LWP 9151)]; [New Thread 0x2aaae4a8b700 (LWP 9152)]; [New Thread 0x2aaae4c8c700 (LWP 9153)]; [New Thread 0x2aaae4e8d700 (LWP 9154)]; [New Thread 0x2aaae508e700 (LWP 9155)]; [New Thread 0x2aaae528f700 (LWP 9156)]; [New Thread 0x2aaae5490700 (LWP 9157)]; [New Thread 0x2aaae5691700 (LWP 9158)]; [New Thread 0x2aaae5892700 (LWP 9159)]; [New Thread 0x2aaae5a93700 (LWP 9160)]; [New Thread 0x2aaae5c94700 (LWP 9161)]; [New Thread 0x2aaae5e95700 (LWP 9162)]; [New Thread 0x2aaae6096700 (LWP 9163)]; [New Thread 0x2aaae6297700 (LWP 9164)]; [New Thread 0x2aaae6498700 (LWP 9165)]; [New Thread 0x2aaae6699700 (LWP 9166)]; [New Thread 0x2aaae689a700 (LWP 9167)]; [New Thread 0x2aaae6a9b700 (LWP 9168)]; [New Thread 0x2aaae6c9c700 (LWP 9169)]; [New Thread 0x2aaae6e9d",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/36
https://github.com/soedinglab/MMseqs2/issues/36:2321,Availability,fault,fault,2321,"ew Thread 0x2aaae4c8c700 (LWP 9153)]; [New Thread 0x2aaae4e8d700 (LWP 9154)]; [New Thread 0x2aaae508e700 (LWP 9155)]; [New Thread 0x2aaae528f700 (LWP 9156)]; [New Thread 0x2aaae5490700 (LWP 9157)]; [New Thread 0x2aaae5691700 (LWP 9158)]; [New Thread 0x2aaae5892700 (LWP 9159)]; [New Thread 0x2aaae5a93700 (LWP 9160)]; [New Thread 0x2aaae5c94700 (LWP 9161)]; [New Thread 0x2aaae5e95700 (LWP 9162)]; [New Thread 0x2aaae6096700 (LWP 9163)]; [New Thread 0x2aaae6297700 (LWP 9164)]; [New Thread 0x2aaae6498700 (LWP 9165)]; [New Thread 0x2aaae6699700 (LWP 9166)]; [New Thread 0x2aaae689a700 (LWP 9167)]; [New Thread 0x2aaae6a9b700 (LWP 9168)]; [New Thread 0x2aaae6c9c700 (LWP 9169)]; [New Thread 0x2aaae6e9d700 (LWP 9170)]; [New Thread 0x2aaae709e700 (LWP 9171)]; [New Thread 0x2aaae729f700 (LWP 9172)]; [New Thread 0x2aaae74a0700 (LWP 9173)]; [New Thread 0x2aaae76a1700 (LWP 9174)]; [New Thread 0x2aaae78a2700 (LWP 9175)]; Start computing compressed multiple sequence alignments. Program received signal SIGSEGV, Segmentation fault.; 0x00000000004e0415 in result2outputmode () at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:349; 349	 if (res.keep[i + 1]) {; (gdb) bt; #0 0x00000000004e0415 in result2outputmode () at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:349; #1 0x00000000004dd47f in result2outputmode (par=..., outpath=""cluMsa_ca3m_tmp_0"", dbFrom=0, dbSize=1089144, mode=2, referenceDBr=0x8d6ca0) at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:166; #2 0x00000000004ded26 in result2outputmode (par=..., mode=2, mpiRank=0, mpiNumProc=1) at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:564; #3 0x00000000004df6f5 in result2msa (argc=5, argv=0x7fffffffd8d8, command=...) at /usr/lusers/aivan/prog/MMseqs2/src/util/result2profile.cpp:657; #4 0x00000000004d5184 in runCommand (p=..., argc=5, argv=0x7fffffffd8d8) at /usr/lusers/aivan/prog/MMseqs2/src/mmseqs.cpp:361; #5 0x00000000004d54b2 in main (argc=7, argv=0x7fffffffd8c8) at /usr/lusers/aiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/36
https://github.com/soedinglab/MMseqs2/issues/37:118,Availability,fault,fault,118,"I'm running uniclust_workflow.sh script on a custom fasta database. The first prefiltering step causes a segmentation fault. GDB output is provided below. ```; (gdb) run prefilter /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/tmp/pref_step_FRAG --max-seqs 4000 --min-ungapped-score 100 --comp-bias-corr 0 -s 1; Starting program: /usr/lusers/aivan/prog/MMseqs2/build/bin/mmseqs prefilter /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/tmp/pref_step_FRAG --max-seqs 4000 --min-ungapped-score 100 --comp-bias-corr 0 -s 1; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; Program call:; /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/tmp/pref_step_FRAG --max-seqs 4000 --min-ungapped-score 100 --comp-bias-corr 0 -s 1 . MMseqs Version: 	31e25cb081a874f225d443eec307a6254f06a291; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	4000; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	0; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	100; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	28; Verbosity 	3. Initialising data structures...; Using 28 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (5939332903 byte) of total memory (269768237056 byte); Target database: /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db(Size: 1282204); Substitution matrices...; [New Thread 0x2a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37
https://github.com/soedinglab/MMseqs2/issues/37:1484,Availability,Mask,Mask,1484,"aivan/prog/MMseqs2/build/bin/mmseqs prefilter /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/tmp/pref_step_FRAG --max-seqs 4000 --min-ungapped-score 100 --comp-bias-corr 0 -s 1; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; Program call:; /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db /usr/lusers/aivan/work/isolates/tmp/2017_06/tmp/pref_step_FRAG --max-seqs 4000 --min-ungapped-score 100 --comp-bias-corr 0 -s 1 . MMseqs Version: 	31e25cb081a874f225d443eec307a6254f06a291; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	4000; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	0; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	100; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	28; Verbosity 	3. Initialising data structures...; Using 28 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (5939332903 byte) of total memory (269768237056 byte); Target database: /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db(Size: 1282204); Substitution matrices...; [New Thread 0x2aaac5d87700 (LWP 8622)]; [New Thread 0x2aaac5f88700 (LWP 8623)]; [New Thread 0x2aaac6189700 (LWP 8624)]; [New Thread 0x2aaac638a700 (LWP 8625)]; [New Thread 0x2aaac658b700 (LWP 8626)]; [New Thread 0x2aaac678c700 (LWP 8627)]; [New Thread 0x2aaac698d700 (LWP 8628)]; [New Thread 0x2aaac6b8e700 (LWP 8629)]; [New Thread 0x2aaac6d8f700 (LWP 8630)]; [New Thread 0x2aaac6f90700 (LWP 8631)]; [New Thread 0x2aaac7191700 (LWP 8632)]; [New Thread 0x2aaac73927",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37
https://github.com/soedinglab/MMseqs2/issues/37:3416,Availability,Mask,Masked,3416,"Thread 0x2aaac7392700 (LWP 8633)]; [New Thread 0x2aaac7593700 (LWP 8634)]; [New Thread 0x2aaac7794700 (LWP 8635)]; [New Thread 0x2aaac7995700 (LWP 8636)]; [New Thread 0x2aaac7b96700 (LWP 8637)]; [New Thread 0x2aaac7d97700 (LWP 8638)]; [New Thread 0x2aaac7f98700 (LWP 8639)]; [New Thread 0x2aaac8199700 (LWP 8640)]; [New Thread 0x2aaac839a700 (LWP 8641)]; [New Thread 0x2aaac859b700 (LWP 8642)]; [New Thread 0x2aaac879c700 (LWP 8643)]; [New Thread 0x2aaac899d700 (LWP 8644)]; [New Thread 0x2aaac8b9e700 (LWP 8645)]; [New Thread 0x2aaac8d9f700 (LWP 8646)]; [New Thread 0x2aaac8fa0700 (LWP 8647)]; [New Thread 0x2aaac91a1700 (LWP 8648)]; Time for init: 0 h 0 m 2s. Query database: /usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db(size=1282204); Process prefiltering step 1 of 1. Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ............................; Index table: Masked residues: 4639530; Index table: fill...; ...................................................................................................	1 Mio. sequences processed; ............................; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 75296699; DB Size: 1137909162 (byte); Avg Kmer Size: 0.877931; Top 10 Kmers; 	YTGTPK		2496; 	GPGGTT		2371; 	HQSGQR		1210; 	AGDYKP		1057; 	PHFGRQ		943; 	PHLGRQ		837; 	DPVLEP		661; 	PFADTR		653; 	MVQFFP		588; 	NGAAHP		585; Min Kmer Size: 0; Empty list: 66045602. Time for index table init: 0 h 0 m 29s. k-mer similarity threshold: 130; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1282204; Target db start 1 to 1282204; Wrong prefiltering result: Query: 1 -> 1361079913	r; Invalid database read for id=1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; Wrong prefiltering result: Query: 71 -> 1361079913	r; Invalid database ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37
https://github.com/soedinglab/MMseqs2/issues/37:4772,Availability,fault,fault,4772,"init done. DB statistic; Entries: 75296699; DB Size: 1137909162 (byte); Avg Kmer Size: 0.877931; Top 10 Kmers; 	YTGTPK		2496; 	GPGGTT		2371; 	HQSGQR		1210; 	AGDYKP		1057; 	PHFGRQ		943; 	PHLGRQ		837; 	DPVLEP		661; 	PFADTR		653; 	MVQFFP		588; 	NGAAHP		585; Min Kmer Size: 0; Empty list: 66045602. Time for index table init: 0 h 0 m 29s. k-mer similarity threshold: 130; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1282204; Target db start 1 to 1282204; Wrong prefiltering result: Query: 1 -> 1361079913	r; Invalid database read for id=1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; Wrong prefiltering result: Query: 71 -> 1361079913	r; Invalid database read for id=getDbKey: local id (1361079913) >= db size (1282204); 1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; getDbKey: local id (1361079913) >= db size (1282204); Wrong prefiltering result: Query: 111 -> 1361079913	r; Invalid database read for id=; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x2aaac5d87700 (LWP 8622)]; 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install glibc-2.17-106.el7_2.8.x86_64 libgcc-4.8.5-4.el7.x86_64 libgomp-4.8.5-4.el7.x86_64 libstdc++-4.8.5-4.el7.x86_64 zlib-1.2.7-15.el7.x86_64; (gdb) bt; #0 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; #1 0x00002aaaabb70eb5 in exit () from /usr/lib64/libc.so.6; #2 0x00000000005de79f in DBReader<unsigned int>::getDbKey (this=0x8b8f10, id=1361079913) at /usr/lusers/aivan/prog/MMseqs2/src/commons/DBReader.cpp:344; #3 0x0000000000548023 in Prefiltering::writePrefilterOutput (this=0x7fffffffda10, qdbr=0x8b8f10, dbWriter=0x7fffffffcc80, thread_idx=1, id=0, prefResults=..., seqIdOffset=0, diagonalScoring=true, resultOffsetPos=0, maxResults=4000); at /usr/lusers/aivan/prog/MMseqs2/src/prefiltering/Prefil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37
https://github.com/soedinglab/MMseqs2/issues/37:4945,Deployability,install,install,4945,"85; Min Kmer Size: 0; Empty list: 66045602. Time for index table init: 0 h 0 m 29s. k-mer similarity threshold: 130; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1282204; Target db start 1 to 1282204; Wrong prefiltering result: Query: 1 -> 1361079913	r; Invalid database read for id=1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; Wrong prefiltering result: Query: 71 -> 1361079913	r; Invalid database read for id=getDbKey: local id (1361079913) >= db size (1282204); 1361079913, database index=/usr/lusers/aivan/work/isolates/tmp/2017_06/uniprot_db.index; getDbKey: local id (1361079913) >= db size (1282204); Wrong prefiltering result: Query: 111 -> 1361079913	r; Invalid database read for id=; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x2aaac5d87700 (LWP 8622)]; 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install glibc-2.17-106.el7_2.8.x86_64 libgcc-4.8.5-4.el7.x86_64 libgomp-4.8.5-4.el7.x86_64 libstdc++-4.8.5-4.el7.x86_64 zlib-1.2.7-15.el7.x86_64; (gdb) bt; #0 0x00002aaaabb70dcd in __run_exit_handlers () from /usr/lib64/libc.so.6; #1 0x00002aaaabb70eb5 in exit () from /usr/lib64/libc.so.6; #2 0x00000000005de79f in DBReader<unsigned int>::getDbKey (this=0x8b8f10, id=1361079913) at /usr/lusers/aivan/prog/MMseqs2/src/commons/DBReader.cpp:344; #3 0x0000000000548023 in Prefiltering::writePrefilterOutput (this=0x7fffffffda10, qdbr=0x8b8f10, dbWriter=0x7fffffffcc80, thread_idx=1, id=0, prefResults=..., seqIdOffset=0, diagonalScoring=true, resultOffsetPos=0, maxResults=4000); at /usr/lusers/aivan/prog/MMseqs2/src/prefiltering/Prefiltering.cpp:758; #4 0x00000000005494d4 in Prefiltering::runSplit () at /usr/lusers/aivan/prog/MMseqs2/src/prefiltering/Prefiltering.cpp:643; #5 0x00002aaaab4fcde5 in ?? () from /usr/lib64/libgomp.so.1; #6 0x00002aaaab923dc5 in start_thread () from /usr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/37
https://github.com/soedinglab/MMseqs2/issues/39:263,Availability,error,errors,263,"Based on the latest version from Master, it appears that the `--target-cov` option is not currently working with mmseqs cluster. Specifically, something like:. `mmseqs cluster DB DB_clu tmp --min-seq-id 0.4 --target-cov 0.8 --cluster-mode 2`. returns a number of errors. I think what's happening is that internally, the options `-c 0` and `--target-cov 0.8` are being based passed to other commands (e.g. linclust), and they're failing because they're not expecting both options at once. Note that I am not passing `-c 0` to the main command, but internally it's generated and passed to other commands.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/39
https://github.com/soedinglab/MMseqs2/issues/41:86,Availability,error,error,86,## Expected Behavior; Shouldn't segfault.; Ideally it should present the user with an error and some guidance on what to do. ## Current Behavior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Ver,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/41:1172,Availability,Mask,Mask,1172,ior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/41:1914,Availability,mask,mask,1914,ect 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3. Initialising data structures...; Using 40 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1374076390 byte) of total memory (270920568832 byte); Target database: db(Size: 1); Substitution matrices...; Time for init: 0 h 0 m 0s. Quer,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/41:2391,Availability,Mask,Mask,2391,threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3. Initialising data structures...; Using 40 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1374076390 byte) of total memory (270920568832 byte); Target database: db(Size: 1); Substitution matrices...; Time for init: 0 h 0 m 0s. Query database: /share/input.fasta(size=0); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 188; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 16342; DB Size: 686227020 (byte); Avg Kmer Size: 0.000190541; Top 10 Kmers; 	RHCCAA		1; 	QCICAA		1; 	WSQFAA		1; 	WQPHAA		1; 	HPKLAA		1; 	GHLLAA		1; 	WRPNAA		1; 	PHCQAA		1; 	HRCQAA		1; 	FHNQAA		1; Min Kmer Size: 0; Empty list: 8574,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/41:2983,Availability,Mask,Masked,2983,"0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3. Initialising data structures...; Using 40 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1374076390 byte) of total memory (270920568832 byte); Target database: db(Size: 1); Substitution matrices...; Time for init: 0 h 0 m 0s. Query database: /share/input.fasta(size=0); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 188; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 16342; DB Size: 686227020 (byte); Avg Kmer Size: 0.000190541; Top 10 Kmers; 	RHCCAA		1; 	QCICAA		1; 	WSQFAA		1; 	WQPHAA		1; 	HPKLAA		1; 	GHLLAA		1; 	WRPNAA		1; 	PHCQAA		1; 	HRCQAA		1; 	FHNQAA		1; Min Kmer Size: 0; Empty list: 85749779. Time for index table init: 0 h 0 m 1s. k-mer similarity threshold: 95; k-mer match probability: 0. tmp/blastp.sh: line 77: 32467 Segmentation fault $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; ```. ## Issue. This was due to lack of **RTFM** but in general a segfault is not a good way to say goodbye :). The source of the problem may have been:; ```; Query database: /share/input.fasta(size=0); ^; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/41:3495,Availability,fault,fault,3495,"0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3. Initialising data structures...; Using 40 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1374076390 byte) of total memory (270920568832 byte); Target database: db(Size: 1); Substitution matrices...; Time for init: 0 h 0 m 0s. Query database: /share/input.fasta(size=0); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 188; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 16342; DB Size: 686227020 (byte); Avg Kmer Size: 0.000190541; Top 10 Kmers; 	RHCCAA		1; 	QCICAA		1; 	WSQFAA		1; 	WQPHAA		1; 	HPKLAA		1; 	GHLLAA		1; 	WRPNAA		1; 	PHCQAA		1; 	HRCQAA		1; 	FHNQAA		1; Min Kmer Size: 0; Empty list: 85749779. Time for index table init: 0 h 0 m 1s. k-mer similarity threshold: 95; k-mer match probability: 0. tmp/blastp.sh: line 77: 32467 Segmentation fault $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; ```. ## Issue. This was due to lack of **RTFM** but in general a segfault is not a good way to say goodbye :). The source of the problem may have been:; ```; Query database: /share/input.fasta(size=0); ^; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/41:3602,Availability,Error,Error,3602,"0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Sensitivity 	5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Query queryProfile 	false; Target queryProfile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3. Initialising data structures...; Using 40 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1374076390 byte) of total memory (270920568832 byte); Target database: db(Size: 1); Substitution matrices...; Time for init: 0 h 0 m 0s. Query database: /share/input.fasta(size=0); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 188; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 16342; DB Size: 686227020 (byte); Avg Kmer Size: 0.000190541; Top 10 Kmers; 	RHCCAA		1; 	QCICAA		1; 	WSQFAA		1; 	WQPHAA		1; 	HPKLAA		1; 	GHLLAA		1; 	WRPNAA		1; 	PHCQAA		1; 	HRCQAA		1; 	FHNQAA		1; Min Kmer Size: 0; Empty list: 85749779. Time for index table init: 0 h 0 m 1s. k-mer similarity threshold: 95; k-mer match probability: 0. tmp/blastp.sh: line 77: 32467 Segmentation fault $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET_DB_PREF"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; ```. ## Issue. This was due to lack of **RTFM** but in general a segfault is not a good way to say goodbye :). The source of the problem may have been:; ```; Query database: /share/input.fasta(size=0); ^; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/41:427,Testability,test,test,427,## Expected Behavior; Shouldn't segfault.; Ideally it should present the user with an error and some guidance on what to do. ## Current Behavior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Ver,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/41:502,Testability,test,test,502,## Expected Behavior; Shouldn't segfault.; Ideally it should present the user with an error and some guidance on what to do. ## Current Behavior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Ver,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/41:101,Usability,guid,guidance,101,## Expected Behavior; Shouldn't segfault.; Ideally it should present the user with an error and some guidance on what to do. ## Current Behavior; Segfaults during prefilter stage due to:. ```; Query database: /share/input.fasta(size=0); ```. ## Steps to Reproduce (for bugs); * Create a FASTA file containing 1 sequence.; * Run `mmseqs createdb input.fasta db`; * `rm -rf tmp && mkdir tmp`; * Run `mmseqs search input.fasta db test tmp`. ## MMseqs Output (for bugs); ```; Program call:; input.fasta db test tmp . MMseqs Version: 	7947b0035eef9ba41b64b0c752b0432465aaeb7c; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	40; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Omit Consensus 	false; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; /share/input.fasta db /share/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 40 -v 3 -s 5 . MMseqs Ver,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41
https://github.com/soedinglab/MMseqs2/issues/42:22,Usability,Feedback,Feedback,22,"## Expected Behavior; Feedback to user presents bytes, which are very difficult to interpret. ## Current Behavior; In my machine (32GB of RAM), I saw some long number starting with a ""1"", and the RAM also in bytes, stating with a ""3"". I would not know if I was using 33% of my RAM (1/3), or 3.3% (1/33). The lengths of the bytes are difficult to asses by mere sight. So, in my personal copy of MMseqs2, I changed the feedback in two files:; ./src/prefiltering/Prefiltering.cpp; ./src/util/kmermatcher.cpp. I divided the bytes by pow(2,30) to get GB. That's so much better! (I made the changes only in printed feedback. Everything else I left untouched. Calculations are still in bytes, only feedback is given in GB.). I don't know if there's more files that give feedback to users in bytes, but that was a good start. Now I see my databases being created, and I see that I have more than enough RAM (it was 3.3%).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/42
https://github.com/soedinglab/MMseqs2/issues/42:417,Usability,feedback,feedback,417,"## Expected Behavior; Feedback to user presents bytes, which are very difficult to interpret. ## Current Behavior; In my machine (32GB of RAM), I saw some long number starting with a ""1"", and the RAM also in bytes, stating with a ""3"". I would not know if I was using 33% of my RAM (1/3), or 3.3% (1/33). The lengths of the bytes are difficult to asses by mere sight. So, in my personal copy of MMseqs2, I changed the feedback in two files:; ./src/prefiltering/Prefiltering.cpp; ./src/util/kmermatcher.cpp. I divided the bytes by pow(2,30) to get GB. That's so much better! (I made the changes only in printed feedback. Everything else I left untouched. Calculations are still in bytes, only feedback is given in GB.). I don't know if there's more files that give feedback to users in bytes, but that was a good start. Now I see my databases being created, and I see that I have more than enough RAM (it was 3.3%).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/42
https://github.com/soedinglab/MMseqs2/issues/42:609,Usability,feedback,feedback,609,"## Expected Behavior; Feedback to user presents bytes, which are very difficult to interpret. ## Current Behavior; In my machine (32GB of RAM), I saw some long number starting with a ""1"", and the RAM also in bytes, stating with a ""3"". I would not know if I was using 33% of my RAM (1/3), or 3.3% (1/33). The lengths of the bytes are difficult to asses by mere sight. So, in my personal copy of MMseqs2, I changed the feedback in two files:; ./src/prefiltering/Prefiltering.cpp; ./src/util/kmermatcher.cpp. I divided the bytes by pow(2,30) to get GB. That's so much better! (I made the changes only in printed feedback. Everything else I left untouched. Calculations are still in bytes, only feedback is given in GB.). I don't know if there's more files that give feedback to users in bytes, but that was a good start. Now I see my databases being created, and I see that I have more than enough RAM (it was 3.3%).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/42
https://github.com/soedinglab/MMseqs2/issues/42:691,Usability,feedback,feedback,691,"## Expected Behavior; Feedback to user presents bytes, which are very difficult to interpret. ## Current Behavior; In my machine (32GB of RAM), I saw some long number starting with a ""1"", and the RAM also in bytes, stating with a ""3"". I would not know if I was using 33% of my RAM (1/3), or 3.3% (1/33). The lengths of the bytes are difficult to asses by mere sight. So, in my personal copy of MMseqs2, I changed the feedback in two files:; ./src/prefiltering/Prefiltering.cpp; ./src/util/kmermatcher.cpp. I divided the bytes by pow(2,30) to get GB. That's so much better! (I made the changes only in printed feedback. Everything else I left untouched. Calculations are still in bytes, only feedback is given in GB.). I don't know if there's more files that give feedback to users in bytes, but that was a good start. Now I see my databases being created, and I see that I have more than enough RAM (it was 3.3%).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/42
https://github.com/soedinglab/MMseqs2/issues/42:763,Usability,feedback,feedback,763,"## Expected Behavior; Feedback to user presents bytes, which are very difficult to interpret. ## Current Behavior; In my machine (32GB of RAM), I saw some long number starting with a ""1"", and the RAM also in bytes, stating with a ""3"". I would not know if I was using 33% of my RAM (1/3), or 3.3% (1/33). The lengths of the bytes are difficult to asses by mere sight. So, in my personal copy of MMseqs2, I changed the feedback in two files:; ./src/prefiltering/Prefiltering.cpp; ./src/util/kmermatcher.cpp. I divided the bytes by pow(2,30) to get GB. That's so much better! (I made the changes only in printed feedback. Everything else I left untouched. Calculations are still in bytes, only feedback is given in GB.). I don't know if there's more files that give feedback to users in bytes, but that was a good start. Now I see my databases being created, and I see that I have more than enough RAM (it was 3.3%).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/42
https://github.com/soedinglab/MMseqs2/issues/46:197,Deployability,release,release,197,"Thanks for the awesome open-source tool. I can't find any tags except ""[vNatBiotech](https://github.com/soedinglab/MMseqs2/tree/vNatBiotech)"". I was wondering whether there is interest in making a release for a stable version (with a numerical version), which may help users and developers. Thanks!. Best wishes,",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46
https://github.com/soedinglab/MMseqs2/issues/48:460,Integrability,depend,depends,460,"Hello,. First, thank you for the fantastic work on mmseqs2, its super fast! I think I’ve come across an issue where exact matches arent being detected by the mmseqs2 search algorithm. . ## Expected Behavior; Exact matches hit eachother. ## Current Behavior; When a subset of sequences from a reference database are searched against the database, a surprisingly large fraction of proteins do not return themselves as their best hit. The severity of the problem depends on the database size, in the example below 2.8% of proteins do not hit themselves, but when I came across this issue I was generating a larger database where using the same test 31% of proteins were not hitting themselves at all. This result does not change if sensitivity is increased to the maximum (-s 8.5). I find this behaviour concerning given you’d expect an exact matches to be returned in a relatively small database. ## Steps to Reproduce (for bugs); If I grab 10 random genomes ([genome_proteins.tar.gz](https://github.com/soedinglab/MMseqs2/files/1444710/genome_proteins.tar.gz)) from NCBI and create a reference database using their proteins, and use one of these genomes as the query database:; ```; cat *faa > pooled.faa. mmseqs createdb \; 	pooled.faa \; 	reference_DB. mmseqs createdb \; 	GCF_000352185.1_protein.faa \; 	query_DB; ```; Then search query against the reference using default settings, and convert this to a blast-like output:; ```; mkdir tmp . mmseqs search \; 	query_DB \; 	reference_DB \; 	result_DB \; 	tmp . mmseqs convertalis \; 	query_DB \; 	reference_DB \; 	result_DB \; 	result_DB.m8; ```. and grab the top hit for each protein (i.e. first listed):. ```; for i in `cat result_DB.m8 | awk '{print $1}' | uniq `; 	do grep -m 1 -w ^$i result_DB.m8; done > result_DB.top_hits.m8; ```; Then, when we check the results in R:; ```; library('data.table'); d = fread('result_DB.top_hits.m8'); # Check if query matches the reference sequence ID; d$self_match = d$V1 == d$V2. # Check percentage of total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48
https://github.com/soedinglab/MMseqs2/issues/48:142,Safety,detect,detected,142,"Hello,. First, thank you for the fantastic work on mmseqs2, its super fast! I think I’ve come across an issue where exact matches arent being detected by the mmseqs2 search algorithm. . ## Expected Behavior; Exact matches hit eachother. ## Current Behavior; When a subset of sequences from a reference database are searched against the database, a surprisingly large fraction of proteins do not return themselves as their best hit. The severity of the problem depends on the database size, in the example below 2.8% of proteins do not hit themselves, but when I came across this issue I was generating a larger database where using the same test 31% of proteins were not hitting themselves at all. This result does not change if sensitivity is increased to the maximum (-s 8.5). I find this behaviour concerning given you’d expect an exact matches to be returned in a relatively small database. ## Steps to Reproduce (for bugs); If I grab 10 random genomes ([genome_proteins.tar.gz](https://github.com/soedinglab/MMseqs2/files/1444710/genome_proteins.tar.gz)) from NCBI and create a reference database using their proteins, and use one of these genomes as the query database:; ```; cat *faa > pooled.faa. mmseqs createdb \; 	pooled.faa \; 	reference_DB. mmseqs createdb \; 	GCF_000352185.1_protein.faa \; 	query_DB; ```; Then search query against the reference using default settings, and convert this to a blast-like output:; ```; mkdir tmp . mmseqs search \; 	query_DB \; 	reference_DB \; 	result_DB \; 	tmp . mmseqs convertalis \; 	query_DB \; 	reference_DB \; 	result_DB \; 	result_DB.m8; ```. and grab the top hit for each protein (i.e. first listed):. ```; for i in `cat result_DB.m8 | awk '{print $1}' | uniq `; 	do grep -m 1 -w ^$i result_DB.m8; done > result_DB.top_hits.m8; ```; Then, when we check the results in R:; ```; library('data.table'); d = fread('result_DB.top_hits.m8'); # Check if query matches the reference sequence ID; d$self_match = d$V1 == d$V2. # Check percentage of total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48
https://github.com/soedinglab/MMseqs2/issues/48:641,Testability,test,test,641,"Hello,. First, thank you for the fantastic work on mmseqs2, its super fast! I think I’ve come across an issue where exact matches arent being detected by the mmseqs2 search algorithm. . ## Expected Behavior; Exact matches hit eachother. ## Current Behavior; When a subset of sequences from a reference database are searched against the database, a surprisingly large fraction of proteins do not return themselves as their best hit. The severity of the problem depends on the database size, in the example below 2.8% of proteins do not hit themselves, but when I came across this issue I was generating a larger database where using the same test 31% of proteins were not hitting themselves at all. This result does not change if sensitivity is increased to the maximum (-s 8.5). I find this behaviour concerning given you’d expect an exact matches to be returned in a relatively small database. ## Steps to Reproduce (for bugs); If I grab 10 random genomes ([genome_proteins.tar.gz](https://github.com/soedinglab/MMseqs2/files/1444710/genome_proteins.tar.gz)) from NCBI and create a reference database using their proteins, and use one of these genomes as the query database:; ```; cat *faa > pooled.faa. mmseqs createdb \; 	pooled.faa \; 	reference_DB. mmseqs createdb \; 	GCF_000352185.1_protein.faa \; 	query_DB; ```; Then search query against the reference using default settings, and convert this to a blast-like output:; ```; mkdir tmp . mmseqs search \; 	query_DB \; 	reference_DB \; 	result_DB \; 	tmp . mmseqs convertalis \; 	query_DB \; 	reference_DB \; 	result_DB \; 	result_DB.m8; ```. and grab the top hit for each protein (i.e. first listed):. ```; for i in `cat result_DB.m8 | awk '{print $1}' | uniq `; 	do grep -m 1 -w ^$i result_DB.m8; done > result_DB.top_hits.m8; ```; Then, when we check the results in R:; ```; library('data.table'); d = fread('result_DB.top_hits.m8'); # Check if query matches the reference sequence ID; d$self_match = d$V1 == d$V2. # Check percentage of total ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48
https://github.com/soedinglab/MMseqs2/issues/49:214,Availability,error,error,214,"Hi,; I was trying to generate the index files of a huge database. To be precise the nr database from blast. It creates the database without problems but when I run the createindex module mmseqs2, it stops with the error. Could not allocate entries memory in IndexTable::initMemory. I'm aware that this is not a bug but the computer I'm trying to run it on runs out of memory. It processes all sequences though and stops right at the end when the index files should have been written. . I still can search the resulting database, its just indexing the database on the fly. The computer has 64 Gb of memory, which is used in the process to 94% before swap is used. Now my question. ; Is there anything I can do, except of extending the hardware to make this work? ; In future I would set the -s parameter to 8 as this gives about the same sensitivity as blast?; Would this further increase the memory usage?. Thank you in advance. Christoph. ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Could not allocate entries memory in IndexTable::initMemory. ## Context; createindex module fails . ## Your Environment; 64 bit latest debian linux ; 24 cpus; 64 gb of RAM; latest git hub version self compiled with cmake.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49
https://github.com/soedinglab/MMseqs2/issues/49:231,Energy Efficiency,allocate,allocate,231,"Hi,; I was trying to generate the index files of a huge database. To be precise the nr database from blast. It creates the database without problems but when I run the createindex module mmseqs2, it stops with the error. Could not allocate entries memory in IndexTable::initMemory. I'm aware that this is not a bug but the computer I'm trying to run it on runs out of memory. It processes all sequences though and stops right at the end when the index files should have been written. . I still can search the resulting database, its just indexing the database on the fly. The computer has 64 Gb of memory, which is used in the process to 94% before swap is used. Now my question. ; Is there anything I can do, except of extending the hardware to make this work? ; In future I would set the -s parameter to 8 as this gives about the same sensitivity as blast?; Would this further increase the memory usage?. Thank you in advance. Christoph. ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Could not allocate entries memory in IndexTable::initMemory. ## Context; createindex module fails . ## Your Environment; 64 bit latest debian linux ; 24 cpus; 64 gb of RAM; latest git hub version self compiled with cmake.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49
https://github.com/soedinglab/MMseqs2/issues/49:1151,Energy Efficiency,allocate,allocate,1151,"Hi,; I was trying to generate the index files of a huge database. To be precise the nr database from blast. It creates the database without problems but when I run the createindex module mmseqs2, it stops with the error. Could not allocate entries memory in IndexTable::initMemory. I'm aware that this is not a bug but the computer I'm trying to run it on runs out of memory. It processes all sequences though and stops right at the end when the index files should have been written. . I still can search the resulting database, its just indexing the database on the fly. The computer has 64 Gb of memory, which is used in the process to 94% before swap is used. Now my question. ; Is there anything I can do, except of extending the hardware to make this work? ; In future I would set the -s parameter to 8 as this gives about the same sensitivity as blast?; Would this further increase the memory usage?. Thank you in advance. Christoph. ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Could not allocate entries memory in IndexTable::initMemory. ## Context; createindex module fails . ## Your Environment; 64 bit latest debian linux ; 24 cpus; 64 gb of RAM; latest git hub version self compiled with cmake.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49
https://github.com/soedinglab/MMseqs2/issues/49:720,Modifiability,extend,extending,720,"Hi,; I was trying to generate the index files of a huge database. To be precise the nr database from blast. It creates the database without problems but when I run the createindex module mmseqs2, it stops with the error. Could not allocate entries memory in IndexTable::initMemory. I'm aware that this is not a bug but the computer I'm trying to run it on runs out of memory. It processes all sequences though and stops right at the end when the index files should have been written. . I still can search the resulting database, its just indexing the database on the fly. The computer has 64 Gb of memory, which is used in the process to 94% before swap is used. Now my question. ; Is there anything I can do, except of extending the hardware to make this work? ; In future I would set the -s parameter to 8 as this gives about the same sensitivity as blast?; Would this further increase the memory usage?. Thank you in advance. Christoph. ## Expected Behavior. ## Current Behavior. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Could not allocate entries memory in IndexTable::initMemory. ## Context; createindex module fails . ## Your Environment; 64 bit latest debian linux ; 24 cpus; 64 gb of RAM; latest git hub version self compiled with cmake.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49
https://github.com/soedinglab/MMseqs2/issues/51:161,Availability,error,error,161,## Expected Behavior; When using a MSA DB from a fasta MSA with multi-lines **msa2profile** should create a profile.; ## Current Behavior; Now it fails with the error `Member sequence 0 in entry 0 too long!`; ## Steps to Reproduce (for bugs); Fasta MSA with multi-line: [test_msa_ml.fa.gz](https://github.com/soedinglab/MMseqs2/files/1472820/test_msa_ml.fa.gz); Fasta MSA with single line: [test_msa_sl.fa.gz](https://github.com/soedinglab/MMseqs2/files/1472825/test_msa_sl.fa.gz). When creating the profile with the multi line MSA:; ```; ffindex_build -s test_msa_ml_db test_msa_ml_db.index test_msa_ml.fa; mmseqs msa2profile test_msa_ml_db test_profile_ml_db --msa-type 2 --threads 1; ```; It results in:; ```; Program call:; test_msa_ml_db test_profile_ml_db --msa-type 2 --threads 1. MMseqs Version: f1307fed7fda354ba3a1d126960de17e95ef70e9; MSA type 2; Sub Matrix blosum62.out; Pseudo count a 1; Pseudo count b 1.5; Compositional bias 1; Use global sequence weighting false; Filter MSA 1; Minimum coverage 0; Minimum seq. id. 0; Minimum score per column -20; Maximum sequence identity threshold 0.9; Select n most diverse seqs 1000; Threads 1; Verbosity 3. Finding maximum sequence length and set size.; Compute profiles from MSAs.; Member sequence 0 in entry 0 too long!; Invalid msa 0! Skipping entry.; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; ```. But when using the fasta MSA with single lines:; ```; ffindex_build -s test_msa_sl_db test_msa_sl_db.index test_msa_sl.fa; mmseqs msa2profile test_msa_sl_db test_profile_sl_db --msa-type 2 --threads 1; ```; It seems to work perfectly:; ```; Program call:; test_msa_sl_db test_profile_sl_db --msa-type 2 --threads 1. MMseqs Version: f1307fed7fda354ba3a1d126960de17e95ef70e9; MSA type 2; Sub Matrix blosum62.out; Pseudo count a 1; Pseudo count b 1.5; Compositional bias 1; Use global sequence weighting fals,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/51
https://github.com/soedinglab/MMseqs2/issues/52:514,Availability,fault,fault,514,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:1093,Availability,fault,fault,1093,"t fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Di",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:1701,Availability,mask,mask,1701,"wing the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:2129,Availability,Mask,Mask,2129,"tion fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:2982,Availability,fault,fault,2982,"hreshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:3095,Availability,Error,Error,3095,"hreshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:3687,Availability,Mask,Mask,3687,"...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to T",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:4623,Availability,fault,fault,4623,"da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this bug. ## Your Environment; MMseqs2 Version: bcb164e42c79555cc521196c7f94f4b0123da048; Self-compiled build, following your description in ""Compile from source""; cmake version 3.5.2; gcc version 4.8.5 (SUSE Linux) ; Memory: 7.7 GiB RAM; openSUSE Leap 42.2, Kernel: 4.4.92-18.36-default, 64 bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:695,Deployability,install,installed,695,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:47,Energy Efficiency,reduce,reduced,47,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:5039,Energy Efficiency,reduce,reduced,5039,"da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this bug. ## Your Environment; MMseqs2 Version: bcb164e42c79555cc521196c7f94f4b0123da048; Self-compiled build, following your description in ""Compile from source""; cmake version 3.5.2; gcc version 4.8.5 (SUSE Linux) ; Memory: 7.7 GiB RAM; openSUSE Leap 42.2, Kernel: 4.4.92-18.36-default, 64 bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:1368,Testability,Test,Testdata,1368," query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:1419,Testability,Test,Testdata,1419," query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find pr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:2587,Testability,Test,Testdata,2587,"-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 30",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:2787,Testability,Test,Testdata,2787,"seqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; E",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:3237,Testability,Test,Testdata,3237,"udo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:3288,Testability,Test,Testdata,3288,"udo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers...; /local/jelvers/Masterthesis/temp//6581086409424530102/blastp.sh: line 86: 8824 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; [Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:4145,Testability,Test,Testdata,4145,"[Inferior 1 (process 8814) exited with code 01]. **Prefilter module call**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/Mmseqs_output/ . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:4465,Testability,Test,Testdata,4465,"da048; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 4; Verbosity 3. Initialising data structures...; Using 4 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1414056568 byte) of total memory (8293187584 byte); Target database: /local/jelvers/Masterthesis/Testdata/targetsample03(Size: 14015); Substitution matrices...; [New Thread 0x7ffff6210700 (LWP 9087)]; [New Thread 0x7ffff5a0f700 (LWP 9088)]; [New Thread 0x7ffff520e700 (LWP 9089)]; Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 2s. Query database: /local/jelvers/Masterthesis/Testdata/querysample03(size=14015); Process prefiltering step 1 of 1. Index table: counting k-mers... Thread 3 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff5a0f700 (LWP 9088)]; 0x0000000000542911 in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (). ## Context; As already stated above, with smaller databases everything works fine. Even running a small different query set on the target database works just fine, as does the other way round (normal query, reduced target db).; Please tell me if u need the fasta files to recreate this bug. ## Your Environment; MMseqs2 Version: bcb164e42c79555cc521196c7f94f4b0123da048; Self-compiled build, following your description in ""Compile from source""; cmake version 3.5.2; gcc version 4.8.5 (SUSE Linux) ; Memory: 7.7 GiB RAM; openSUSE Leap 42.2, Kernel: 4.4.92-18.36-default, 64 bit",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/52:676,Usability,guid,guide,676,"## Expected Behavior; When running with highly reduced databases with the size of lower than 1MB, it works just fine. ; Both the complete call for the search workflow ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; as well as the explicit call for the prefilter module only ./mmseqs prefilter ""query"" ""target"" ""result"" are running as expected. ## Current Behavior; Using bigger files for query and target data, which in no means are unreasonable in my opinion (5.1 MB each), the program exits with a segmentation fault during the prefiltering step. See output below for more detailed information. ## Steps to Reproduce (for bugs); strictly following the steps from your user guide on a freshly installed mmseqs distribution,; compiled from scratch; 1) converted files into mmseqs-readable format from plain fasta files; ./mmseqs createdb ""querypath"" ""query""; ./mmseqs createdb ""targetpath"" ""target""; 2) created new temp folder on local harddrive; 3) tried to run the whole search workflow; ./mmseqs search ""query"" ""target"" ""result"" ""tmp""; 3b) after failing the search due to the segmentation fault, decided to clean the databases and temp folder; and ran the prefilter module explicitly as this seems to have been the problem; ./mmseqs prefilter ""query"" ""target"" ""result"". ## MMseqs Output (for bugs); **Search workflow:**; Program call:; /local/jelvers/Masterthesis/Testdata/querysample03 /local/jelvers/Masterthesis/Testdata/targetsample03 /local/jelvers/Masterthesis/temp/6581086409424530102/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 4 -v 3 -s 5.7 . MMseqs Version: bcb164e42c79555cc521196c7f94f4b0123da048; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52
https://github.com/soedinglab/MMseqs2/issues/53:13,Testability,test,test,13,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53
https://github.com/soedinglab/MMseqs2/issues/53:81,Testability,test,test,81,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53
https://github.com/soedinglab/MMseqs2/issues/53:253,Testability,test,test,253,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53
https://github.com/soedinglab/MMseqs2/issues/53:279,Testability,test,test,279,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53
https://github.com/soedinglab/MMseqs2/issues/53:623,Testability,test,test,623,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53
https://github.com/soedinglab/MMseqs2/issues/53:710,Testability,test,test,710,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53
https://github.com/soedinglab/MMseqs2/issues/53:690,Usability,simpl,simple,690,"## Context; [test.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612640/test.fasta.txt); [test_dup.fasta.txt](https://github.com/soedinglab/MMseqs2/files/1612641/test_dup.fasta.txt). First, I created a DB and ran the cluster command on a small test set of 10 sequences (test.fasta); Second, I duplicated 2 sequences by copying the sequence entries in the fasta file, and changed the sequence names (test_dup.fasta). I then created a new DB, and ran the clusterupdate command. For comparison, I also ran the cluster command on the new DB, to show the difference in output. ```; mkdir tmp tmp2 tmp3; mmseqs createdb test.fasta DB; mmseqs createdb test_dup.fasta DB_dup. # Clustering simple data set in ""test.fasta""; mmseqs cluster DB clu1 tmp --min-seq-id 0.9 --cluster-mode 1. # Clustering duplicated data set in ""test_dup.fasta""; mmseqs cluster DB_dup clu2 tmp2 --min-seq-id 0.9 --cluster-mode 1. # Updating cluster results ""clu1"" with new duplicated sequences ; # (expected to give similar output to ""clu2""); mmseqs clusterupdate DB DB_dup clu1 clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. ## Expected Behavior; Duplicated sequences to cluster together with the original sequences (which works when running cluster command on the duplicated data set). clu2 is what I would expect, with the duplicated sequences 10 (""seq9B"") and 12 (""seq10B"") clustering with 9 (""seq9"") and 11 (""seq10"") respectively (1 and 6 are close homologs, so it's correct that they're clustering together):; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 10; 9*; 12; 11*; ```. ## Current Behavior; clu3 is NOT what I would expect. 10 and 12 are not included in the results. ; ```; 2*; 3*; 4*; 5*; 6; 1*; 7*; 8*; 9*; 11*; ```. ## Your Environment; Running mmseqs2 from inside a Docker container derived from the Ubuntu:precise container.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53
https://github.com/soedinglab/MMseqs2/issues/54:95,Deployability,release,release,95,"Metaclust, a database clustered by linclust protocol in MMseqs2, is becoming smaller with each release. Metaclust95 2017_01 has 97G.; Metaclust 2017_05 has 60G.; Metaclust 2018_01 has 28G only.; Shouldn't the number of Metaclust entries increase with time?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54
https://github.com/soedinglab/MMseqs2/issues/54:44,Integrability,protocol,protocol,44,"Metaclust, a database clustered by linclust protocol in MMseqs2, is becoming smaller with each release. Metaclust95 2017_01 has 97G.; Metaclust 2017_05 has 60G.; Metaclust 2018_01 has 28G only.; Shouldn't the number of Metaclust entries increase with time?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54
https://github.com/soedinglab/MMseqs2/issues/55:2235,Availability,Mask,Mask,2235,"0 s; -bash-4.2$ **mmseqs createdb query.fasta QUERY**; Program call:; query.fasta QUERY. MMseqs Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; Max. sequence length 32000; Split Seq. by len true; Offset of numeric ids 0; Verbosity 3. ....Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; -bash-4.2$ **mmseqs search QUERY DB RESULT tmp**; Program call:; QUERY DB RESULT tmp. MMseqs Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 32000; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 32; Verbosity 3; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 98202; Max orf gaps 2147483647; Skip incomplete orfs false; Find longest orf true; Extend short orfs false; Forward Frames 1,2,3; Reverse Frames 1,2,3; Offset of numeric ids 0; Translation Table 1; Number search iterations 1; Start sensitivity 4; Search steps 1; Sets the MPI runner; Remove Temporary Files false. Tmp tmp folder does not exist or is not a directory.; Created dir tmp; Program call:; /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY /home/banaeiak/thesis/L aing/MMseqs2ResultsCelegans/DB /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegan s/tmp/5905259317257326532/pref_5.7 --sub-mat blosum62.out -k 0 --k-scor",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55
https://github.com/soedinglab/MMseqs2/issues/55:3381,Availability,mask,mask,3381," Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 98202; Max orf gaps 2147483647; Skip incomplete orfs false; Find longest orf true; Extend short orfs false; Forward Frames 1,2,3; Reverse Frames 1,2,3; Offset of numeric ids 0; Translation Table 1; Number search iterations 1; Start sensitivity 4; Search steps 1; Sets the MPI runner; Remove Temporary Files false. Tmp tmp folder does not exist or is not a directory.; Created dir tmp; Program call:; /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY /home/banaeiak/thesis/L aing/MMseqs2ResultsCelegans/DB /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegan s/tmp/5905259317257326532/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483 647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 -- min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 32 -v 3 - s 5.7. MMseqs Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 32; Verbosity 3. Initialising data structures...; Using 32 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (5736197 byte) of total memory (67263340544 byte); Target database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/DB(Size: 982 ); Query database type",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55
https://github.com/soedinglab/MMseqs2/issues/55:3811,Availability,Mask,Mask,3811,ation Table 1; Number search iterations 1; Start sensitivity 4; Search steps 1; Sets the MPI runner; Remove Temporary Files false. Tmp tmp folder does not exist or is not a directory.; Created dir tmp; Program call:; /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY /home/banaeiak/thesis/L aing/MMseqs2ResultsCelegans/DB /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegan s/tmp/5905259317257326532/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483 647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 -- min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 32 -v 3 - s 5.7. MMseqs Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 32; Verbosity 3. Initialising data structures...; Using 32 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (5736197 byte) of total memory (67263340544 byte); Target database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/DB(Size: 982 ); Query database type: Nucleotide; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY(size=49 535); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 0; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 195; DB Size: 33938 (byte); Avg Kmer Size: 0.0476074; Top 10 Kmers; GGG,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55
https://github.com/soedinglab/MMseqs2/issues/55:4567,Availability,Mask,Masked,4567,"K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 32; Verbosity 3. Initialising data structures...; Using 32 threads.; Could not find precomputed index. Compute index.; Use kmer size 6 and split 1 using Target split mode.; Needed memory (5736197 byte) of total memory (67263340544 byte); Target database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/DB(Size: 982 ); Query database type: Nucleotide; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY(size=49 535); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 0; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 195; DB Size: 33938 (byte); Avg Kmer Size: 0.0476074; Top 10 Kmers; GGGGGG 13; AAAAGA 4; TTATTT 4; GGGAGA 3; GGAGGA 3; GAGGGG 3; GAGAAT 3; ATAGGA 2; GGGGGA 2; AAAAAG 2; Min Kmer Size: 0; Empty list: 3950. Time for index table init: 0 h 0 m 0s. k-mer similarity threshold: 88; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 49535; Target db start 1 to 982; tmp/5905259317257326532/blastp.sh: line 86: 186247 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PR EFILTER_PAR -s $SENS; Error: Prefilter died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am thinking there is a problem with the fasta files or something as the examples ones provided with the code work fine. . lastly I was wondering if there i",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55
https://github.com/soedinglab/MMseqs2/issues/55:5176,Availability,fault,fault,5176,"get database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/DB(Size: 982 ); Query database type: Nucleotide; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY(size=49 535); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 0; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 195; DB Size: 33938 (byte); Avg Kmer Size: 0.0476074; Top 10 Kmers; GGGGGG 13; AAAAGA 4; TTATTT 4; GGGAGA 3; GGAGGA 3; GAGGGG 3; GAGAAT 3; ATAGGA 2; GGGGGA 2; AAAAAG 2; Min Kmer Size: 0; Empty list: 3950. Time for index table init: 0 h 0 m 0s. k-mer similarity threshold: 88; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 49535; Target db start 1 to 982; tmp/5905259317257326532/blastp.sh: line 86: 186247 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PR EFILTER_PAR -s $SENS; Error: Prefilter died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am thinking there is a problem with the fasta files or something as the examples ones provided with the code work fine. . lastly I was wondering if there is any parameters that can be used to limit the number of cores used. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. MMseqs2 Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; The MMseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55
https://github.com/soedinglab/MMseqs2/issues/55:5290,Availability,Error,Error,5290,"get database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/DB(Size: 982 ); Query database type: Nucleotide; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY(size=49 535); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 0; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 195; DB Size: 33938 (byte); Avg Kmer Size: 0.0476074; Top 10 Kmers; GGGGGG 13; AAAAGA 4; TTATTT 4; GGGAGA 3; GGAGGA 3; GAGGGG 3; GAGAAT 3; ATAGGA 2; GGGGGA 2; AAAAAG 2; Min Kmer Size: 0; Empty list: 3950. Time for index table init: 0 h 0 m 0s. k-mer similarity threshold: 88; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 49535; Target db start 1 to 982; tmp/5905259317257326532/blastp.sh: line 86: 186247 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PR EFILTER_PAR -s $SENS; Error: Prefilter died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am thinking there is a problem with the fasta files or something as the examples ones provided with the code work fine. . lastly I was wondering if there is any parameters that can be used to limit the number of cores used. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:. MMseqs2 Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; The MMseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55
https://github.com/soedinglab/MMseqs2/issues/55:2670,Modifiability,Extend,Extend,2670,"1aa1153fe; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 32000; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 32; Verbosity 3; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 98202; Max orf gaps 2147483647; Skip incomplete orfs false; Find longest orf true; Extend short orfs false; Forward Frames 1,2,3; Reverse Frames 1,2,3; Offset of numeric ids 0; Translation Table 1; Number search iterations 1; Start sensitivity 4; Search steps 1; Sets the MPI runner; Remove Temporary Files false. Tmp tmp folder does not exist or is not a directory.; Created dir tmp; Program call:; /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegans/QUERY /home/banaeiak/thesis/L aing/MMseqs2ResultsCelegans/DB /home/banaeiak/thesis/Laing/MMseqs2ResultsCelegan s/tmp/5905259317257326532/pref_5.7 --sub-mat blosum62.out -k 0 --k-score 2147483 647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --mask 1 -- min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 32 -v 3 - s 5.7. MMseqs Version: 2c5dcabb805a4bd6d2db64095782a211aa1153fe; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Max. resu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55
https://github.com/soedinglab/MMseqs2/issues/57:29,Availability,error,error,29,"Hi,; here is the log for the error I reported in https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039. Many thanks; Antonio. ## Expected Behavior. MMseqs2 should find the query in Uniref90 database . ## Current Behavior. MMseqs2 fails with `***free(): invalid pointer: 0x0000000000ccb6d8 ***` during the **prefilter**. ## Steps to Reproduce (for bugs). Query file: [query.fasta.gz](https://github.com/soedinglab/MMseqs2/files/1633833/query.fasta.gz); Target file: ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz. ```; export LIBC_FATAL_STDERR_=1; mmseqs createdb QUERY query.fasta.gz; mmseqs createdb DB uniref90.fasta.gz; mmseqs search QUERY DB resultsDB tmp --threads 64 2>&1 | tee search.log; ```. ## MMseqs Output (for bugs); [search.log](https://github.com/soedinglab/MMseqs2/files/1633824/search.log). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; **31e1fddc9b9368570bb39be3051232d4e64f7ae9**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; **gcc version 5.4.0** and **cmake version 3.9.4**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; CPU: **Intel(R) Xeon(R) CPU E7-4820 v4 @ 2.00GHz**; Memory: **2TB**; * Operating system and version:; **Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/57
https://github.com/soedinglab/MMseqs2/issues/57:17,Testability,log,log,17,"Hi,; here is the log for the error I reported in https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039. Many thanks; Antonio. ## Expected Behavior. MMseqs2 should find the query in Uniref90 database . ## Current Behavior. MMseqs2 fails with `***free(): invalid pointer: 0x0000000000ccb6d8 ***` during the **prefilter**. ## Steps to Reproduce (for bugs). Query file: [query.fasta.gz](https://github.com/soedinglab/MMseqs2/files/1633833/query.fasta.gz); Target file: ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz. ```; export LIBC_FATAL_STDERR_=1; mmseqs createdb QUERY query.fasta.gz; mmseqs createdb DB uniref90.fasta.gz; mmseqs search QUERY DB resultsDB tmp --threads 64 2>&1 | tee search.log; ```. ## MMseqs Output (for bugs); [search.log](https://github.com/soedinglab/MMseqs2/files/1633824/search.log). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; **31e1fddc9b9368570bb39be3051232d4e64f7ae9**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; **gcc version 5.4.0** and **cmake version 3.9.4**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; CPU: **Intel(R) Xeon(R) CPU E7-4820 v4 @ 2.00GHz**; Memory: **2TB**; * Operating system and version:; **Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/57
https://github.com/soedinglab/MMseqs2/issues/57:739,Testability,log,log,739,"Hi,; here is the log for the error I reported in https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039. Many thanks; Antonio. ## Expected Behavior. MMseqs2 should find the query in Uniref90 database . ## Current Behavior. MMseqs2 fails with `***free(): invalid pointer: 0x0000000000ccb6d8 ***` during the **prefilter**. ## Steps to Reproduce (for bugs). Query file: [query.fasta.gz](https://github.com/soedinglab/MMseqs2/files/1633833/query.fasta.gz); Target file: ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz. ```; export LIBC_FATAL_STDERR_=1; mmseqs createdb QUERY query.fasta.gz; mmseqs createdb DB uniref90.fasta.gz; mmseqs search QUERY DB resultsDB tmp --threads 64 2>&1 | tee search.log; ```. ## MMseqs Output (for bugs); [search.log](https://github.com/soedinglab/MMseqs2/files/1633824/search.log). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; **31e1fddc9b9368570bb39be3051232d4e64f7ae9**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; **gcc version 5.4.0** and **cmake version 3.9.4**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; CPU: **Intel(R) Xeon(R) CPU E7-4820 v4 @ 2.00GHz**; Memory: **2TB**; * Operating system and version:; **Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/57
https://github.com/soedinglab/MMseqs2/issues/57:786,Testability,log,log,786,"Hi,; here is the log for the error I reported in https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039. Many thanks; Antonio. ## Expected Behavior. MMseqs2 should find the query in Uniref90 database . ## Current Behavior. MMseqs2 fails with `***free(): invalid pointer: 0x0000000000ccb6d8 ***` during the **prefilter**. ## Steps to Reproduce (for bugs). Query file: [query.fasta.gz](https://github.com/soedinglab/MMseqs2/files/1633833/query.fasta.gz); Target file: ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz. ```; export LIBC_FATAL_STDERR_=1; mmseqs createdb QUERY query.fasta.gz; mmseqs createdb DB uniref90.fasta.gz; mmseqs search QUERY DB resultsDB tmp --threads 64 2>&1 | tee search.log; ```. ## MMseqs Output (for bugs); [search.log](https://github.com/soedinglab/MMseqs2/files/1633824/search.log). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; **31e1fddc9b9368570bb39be3051232d4e64f7ae9**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; **gcc version 5.4.0** and **cmake version 3.9.4**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; CPU: **Intel(R) Xeon(R) CPU E7-4820 v4 @ 2.00GHz**; Memory: **2TB**; * Operating system and version:; **Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/57
https://github.com/soedinglab/MMseqs2/issues/57:850,Testability,log,log,850,"Hi,; here is the log for the error I reported in https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039. Many thanks; Antonio. ## Expected Behavior. MMseqs2 should find the query in Uniref90 database . ## Current Behavior. MMseqs2 fails with `***free(): invalid pointer: 0x0000000000ccb6d8 ***` during the **prefilter**. ## Steps to Reproduce (for bugs). Query file: [query.fasta.gz](https://github.com/soedinglab/MMseqs2/files/1633833/query.fasta.gz); Target file: ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz. ```; export LIBC_FATAL_STDERR_=1; mmseqs createdb QUERY query.fasta.gz; mmseqs createdb DB uniref90.fasta.gz; mmseqs search QUERY DB resultsDB tmp --threads 64 2>&1 | tee search.log; ```. ## MMseqs Output (for bugs); [search.log](https://github.com/soedinglab/MMseqs2/files/1633824/search.log). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): ; **31e1fddc9b9368570bb39be3051232d4e64f7ae9**; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): ; **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: ; **gcc version 5.4.0** and **cmake version 3.9.4**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ; CPU: **Intel(R) Xeon(R) CPU E7-4820 v4 @ 2.00GHz**; Memory: **2TB**; * Operating system and version:; **Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/57
https://github.com/soedinglab/MMseqs2/issues/58:598,Availability,avail,available,598,"Hi,; is it please possible to set a limit on the amount of memory MMseqs2 uses for its computations? Or to set the number of computation chunks?; I know from the MMseqs2 wiki it automatically detects how much memory it can use and eventually it splits database into chunks etc. But this is not practical for grid computing environment where you have to request a specific amount of memory a priori and your job is then executed on a machine which actually has much more memory but it is shared with other jobs. It can then happen that MMseqs2 will consume more memory than allowed just because its available from the system point of view. The queue management software will then kill the job as it exceeded assigned resources.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58
https://github.com/soedinglab/MMseqs2/issues/58:643,Performance,queue,queue,643,"Hi,; is it please possible to set a limit on the amount of memory MMseqs2 uses for its computations? Or to set the number of computation chunks?; I know from the MMseqs2 wiki it automatically detects how much memory it can use and eventually it splits database into chunks etc. But this is not practical for grid computing environment where you have to request a specific amount of memory a priori and your job is then executed on a machine which actually has much more memory but it is shared with other jobs. It can then happen that MMseqs2 will consume more memory than allowed just because its available from the system point of view. The queue management software will then kill the job as it exceeded assigned resources.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58
https://github.com/soedinglab/MMseqs2/issues/58:192,Safety,detect,detects,192,"Hi,; is it please possible to set a limit on the amount of memory MMseqs2 uses for its computations? Or to set the number of computation chunks?; I know from the MMseqs2 wiki it automatically detects how much memory it can use and eventually it splits database into chunks etc. But this is not practical for grid computing environment where you have to request a specific amount of memory a priori and your job is then executed on a machine which actually has much more memory but it is shared with other jobs. It can then happen that MMseqs2 will consume more memory than allowed just because its available from the system point of view. The queue management software will then kill the job as it exceeded assigned resources.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58
https://github.com/soedinglab/MMseqs2/issues/59:110,Integrability,protocol,protocol,110,"Hi,. I would like to thank you for this very nice software. I'm wondering if you can add to the wiki page the protocol to annotate a dataset of proteins with Pfam domains (as explained in the example 3 of the MMseqs2 paper). I'm struggling to build a profile DB from the PFAM Hmm profiles and I'm quite certain that it would be very useful for many of us!. Best. Raphael",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/59
https://github.com/soedinglab/MMseqs2/issues/61:57,Availability,error,error,57,"## Current Behavior; When clustering is done I get these error messages about buffer size, I am not sure if this means there is a problem with the results. Should I run it again or is this fine?. ## MMseqs Output (for bugs); Clustering step 1...; Clustering step 2...; Clustering step 3...; Clustering step 4...; Clustering step 5...; Writing the results...; Tried to process the clustering list for the query 488890 , the length of the list = 169845; Output buffer size < clustering result size! (1000000 < 1559909); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Tried to process the clustering list for the query 1208093 , the length of the list = 234332; Output buffer size < clustering result size! (1559910 < 2152804); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Tried to process the clustering list for the query 11891971 , the length of the list = 277233; Output buffer size < clustering result size! (2152805 < 2534475); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Time for merging files: 0 h 0 m 1 s; ...done. ## Your Environment; MMseqs Version:	06c71aa6c8003203db75ebbb9f213fd34abcabd4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/61
https://github.com/soedinglab/MMseqs2/issues/61:63,Integrability,message,messages,63,"## Current Behavior; When clustering is done I get these error messages about buffer size, I am not sure if this means there is a problem with the results. Should I run it again or is this fine?. ## MMseqs Output (for bugs); Clustering step 1...; Clustering step 2...; Clustering step 3...; Clustering step 4...; Clustering step 5...; Writing the results...; Tried to process the clustering list for the query 488890 , the length of the list = 169845; Output buffer size < clustering result size! (1000000 < 1559909); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Tried to process the clustering list for the query 1208093 , the length of the list = 234332; Output buffer size < clustering result size! (1559910 < 2152804); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Tried to process the clustering list for the query 11891971 , the length of the list = 277233; Output buffer size < clustering result size! (2152805 < 2534475); Increase buffer size or reconsider your parameters -> output buffer is already huge ;-); Time for merging files: 0 h 0 m 1 s; ...done. ## Your Environment; MMseqs Version:	06c71aa6c8003203db75ebbb9f213fd34abcabd4",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/61
https://github.com/soedinglab/MMseqs2/issues/62:81,Availability,down,download,81,## Expected Behavior; wget https://mmseqs.com/latest/mmseqs-static_sse41.tar.gz; download static version of mmseqs. ## Current Behavior; download dynamically linked binary instead. ## Steps to Reproduce (for bugs); wget https://mmseqs.com/latest/mmseqs-static_sse41.tar.gz; tar -xvf mmseqs-static_sse41.tar.gz ; ldd ./mmseqs2/bin/mmseqs. ## MMseqs Output (for bugs); ./mmseqs2/bin/mmseqs: /lib64/libc.so.6: version `GLIBC_2.14' not found (required by ./mmseqs2/bin/mmseqs); ./mmseqs2/bin/mmseqs: /lib64/libc.so.6: version `GLIBC_2.15' not found (required by ./mmseqs2/bin/mmseqs); ./mmseqs2/bin/mmseqs: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.18' not found (required by ./mmseqs2/bin/mmseqs); ./mmseqs2/bin/mmseqs: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15' not found (required by ./mmseqs2/bin/mmseqs); 	linux-vdso.so.1 => (0x00007ffe4434b000); 	libz.so.1 => /lib64/libz.so.1 (0x0000003a88a00000); 	libbz2.so.1.0 => not found; 	libstdc++.so.6 => /usr/lib64/libstdc++.so.6 (0x0000003a91a00000); 	libm.so.6 => /lib64/libm.so.6 (0x0000003a87a00000); 	libgomp.so.1 => /usr/lib64/libgomp.so.1 (0x0000003a88e00000); 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x0000003a91600000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x0000003a87e00000); 	libc.so.6 => /lib64/libc.so.6 (0x0000003a87600000); 	/lib64/ld-linux-x86-64.so.2 (0x0000003a87200000); 	librt.so.1 => /lib64/librt.so.1 (0x0000003a88600000),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/62
https://github.com/soedinglab/MMseqs2/issues/62:137,Availability,down,download,137,## Expected Behavior; wget https://mmseqs.com/latest/mmseqs-static_sse41.tar.gz; download static version of mmseqs. ## Current Behavior; download dynamically linked binary instead. ## Steps to Reproduce (for bugs); wget https://mmseqs.com/latest/mmseqs-static_sse41.tar.gz; tar -xvf mmseqs-static_sse41.tar.gz ; ldd ./mmseqs2/bin/mmseqs. ## MMseqs Output (for bugs); ./mmseqs2/bin/mmseqs: /lib64/libc.so.6: version `GLIBC_2.14' not found (required by ./mmseqs2/bin/mmseqs); ./mmseqs2/bin/mmseqs: /lib64/libc.so.6: version `GLIBC_2.15' not found (required by ./mmseqs2/bin/mmseqs); ./mmseqs2/bin/mmseqs: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.18' not found (required by ./mmseqs2/bin/mmseqs); ./mmseqs2/bin/mmseqs: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15' not found (required by ./mmseqs2/bin/mmseqs); 	linux-vdso.so.1 => (0x00007ffe4434b000); 	libz.so.1 => /lib64/libz.so.1 (0x0000003a88a00000); 	libbz2.so.1.0 => not found; 	libstdc++.so.6 => /usr/lib64/libstdc++.so.6 (0x0000003a91a00000); 	libm.so.6 => /lib64/libm.so.6 (0x0000003a87a00000); 	libgomp.so.1 => /usr/lib64/libgomp.so.1 (0x0000003a88e00000); 	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x0000003a91600000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x0000003a87e00000); 	libc.so.6 => /lib64/libc.so.6 (0x0000003a87600000); 	/lib64/ld-linux-x86-64.so.2 (0x0000003a87200000); 	librt.so.1 => /lib64/librt.so.1 (0x0000003a88600000),MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/62
https://github.com/soedinglab/MMseqs2/issues/63:270,Availability,error,error,270,"## Context; I have a large DB (~140 million proteins) and I want to search against it many times. ## Current Behavior; If I try to create an index it results in a very large file (~300G) which is impossible to use.; I tried creating the index with --split but I get the error:; `Creating a split index is not supported anymore.`. What would be the right way to conduct this search? Should I split the DB manually?. ## Your Environment; `MMseqs Version: 9f344f3d6765a1131f22794d9a6fd9fcd8ca2cdf`. _Thanks,; Adi_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/63
https://github.com/soedinglab/MMseqs2/issues/65:908,Availability,Mask,Mask,908,"I tried to run cascaded clustering on a database:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --cascaded -t 24`; but the program doesn't recognize --cascaded option, although it is mentioned on the wikipage. I found out another option from the '-h' help: --single-step-clustering and set it up to false:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false`; and I get:. > Program call:; > pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false; > ; > MMseqs Version: GITDIR-NOTFOUND; > Sub Matrix blosum62.out; > Sensitivity 4; > K-mer size 0; > K-score 2147483647; > Alphabet size 21; > Max. sequence length 32000; > Max. results per query 20; > Offset result 0; > Split DB 0; > Split mode 2; > Split Memory Limit 0; > Coverage threshold 0.8; > Coverage Mode 0; > Compositional bias 1; > Diagonal Scoring 1; > Mask Residues 1; > Minimum Diagonal score 15; > Include identical Seq. Id. false; > Spaced Kmer 1; > No preload false; > Early exit false; > Pseudo count a 1; > Pseudo count b 1.5; > Threads 24; > Verbosity 3; > Add backtrace false; > Alignment mode 3; > E-value threshold 0.005; > Seq. Id Threshold 0; > Realign hit false; > Max Reject 2147483647; > Max Accept 2147483647; > Cluster mode 1; > Max depth connected component 1000; > Similarity type 2; > Single step clustering false; > Cascaded clustering steps 3; > Remove Temporary Files false; > Sets the MPI runner; > Kmer per sequence 20; > Shift hash 5; > Rescore mode 0; > Remove hits by seq.id. and coverage false; > In substitution scoring mode, performs global alignment along the diagonal false; > ; > Set cluster settings automatic to s=6; > Set cluster iterations to 3; > Please provide \<sequenceDB\> \<outDB\> \<tmp\>. I use self compiled version, cloned from the git yesterday (20180220).; `mmseqs`. > MMseqs2 Version: GITDIR-NOTFOUND. So how to run cascaded clustering? I'm also not sure whether missing version number means so",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65
https://github.com/soedinglab/MMseqs2/issues/65:1612,Performance,perform,performs,1612,"d clustering on a database:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --cascaded -t 24`; but the program doesn't recognize --cascaded option, although it is mentioned on the wikipage. I found out another option from the '-h' help: --single-step-clustering and set it up to false:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false`; and I get:. > Program call:; > pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false; > ; > MMseqs Version: GITDIR-NOTFOUND; > Sub Matrix blosum62.out; > Sensitivity 4; > K-mer size 0; > K-score 2147483647; > Alphabet size 21; > Max. sequence length 32000; > Max. results per query 20; > Offset result 0; > Split DB 0; > Split mode 2; > Split Memory Limit 0; > Coverage threshold 0.8; > Coverage Mode 0; > Compositional bias 1; > Diagonal Scoring 1; > Mask Residues 1; > Minimum Diagonal score 15; > Include identical Seq. Id. false; > Spaced Kmer 1; > No preload false; > Early exit false; > Pseudo count a 1; > Pseudo count b 1.5; > Threads 24; > Verbosity 3; > Add backtrace false; > Alignment mode 3; > E-value threshold 0.005; > Seq. Id Threshold 0; > Realign hit false; > Max Reject 2147483647; > Max Accept 2147483647; > Cluster mode 1; > Max depth connected component 1000; > Similarity type 2; > Single step clustering false; > Cascaded clustering steps 3; > Remove Temporary Files false; > Sets the MPI runner; > Kmer per sequence 20; > Shift hash 5; > Rescore mode 0; > Remove hits by seq.id. and coverage false; > In substitution scoring mode, performs global alignment along the diagonal false; > ; > Set cluster settings automatic to s=6; > Set cluster iterations to 3; > Please provide \<sequenceDB\> \<outDB\> \<tmp\>. I use self compiled version, cloned from the git yesterday (20180220).; `mmseqs`. > MMseqs2 Version: GITDIR-NOTFOUND. So how to run cascaded clustering? I'm also not sure whether missing version number means something went wrong...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65
https://github.com/soedinglab/MMseqs2/issues/65:1509,Security,hash,hash,1509,"d clustering on a database:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --cascaded -t 24`; but the program doesn't recognize --cascaded option, although it is mentioned on the wikipage. I found out another option from the '-h' help: --single-step-clustering and set it up to false:; `mmseqs cluster pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false`; and I get:. > Program call:; > pdb pdb_005 tmp -e 0.005 --cluster-mode 1 --threads 24 --single-step-clustering false; > ; > MMseqs Version: GITDIR-NOTFOUND; > Sub Matrix blosum62.out; > Sensitivity 4; > K-mer size 0; > K-score 2147483647; > Alphabet size 21; > Max. sequence length 32000; > Max. results per query 20; > Offset result 0; > Split DB 0; > Split mode 2; > Split Memory Limit 0; > Coverage threshold 0.8; > Coverage Mode 0; > Compositional bias 1; > Diagonal Scoring 1; > Mask Residues 1; > Minimum Diagonal score 15; > Include identical Seq. Id. false; > Spaced Kmer 1; > No preload false; > Early exit false; > Pseudo count a 1; > Pseudo count b 1.5; > Threads 24; > Verbosity 3; > Add backtrace false; > Alignment mode 3; > E-value threshold 0.005; > Seq. Id Threshold 0; > Realign hit false; > Max Reject 2147483647; > Max Accept 2147483647; > Cluster mode 1; > Max depth connected component 1000; > Similarity type 2; > Single step clustering false; > Cascaded clustering steps 3; > Remove Temporary Files false; > Sets the MPI runner; > Kmer per sequence 20; > Shift hash 5; > Rescore mode 0; > Remove hits by seq.id. and coverage false; > In substitution scoring mode, performs global alignment along the diagonal false; > ; > Set cluster settings automatic to s=6; > Set cluster iterations to 3; > Please provide \<sequenceDB\> \<outDB\> \<tmp\>. I use self compiled version, cloned from the git yesterday (20180220).; `mmseqs`. > MMseqs2 Version: GITDIR-NOTFOUND. So how to run cascaded clustering? I'm also not sure whether missing version number means something went wrong...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65
https://github.com/soedinglab/MMseqs2/issues/67:13,Deployability,install,installed,13,"Hello!. I've installed mmseqs2 to CentOS 7 with linuxbrew.; I'm trying to search best hits with iterative approach suggested in manual:. `mmseqs search ""$query"" ""$target"" result tmp --start-sens 1 --sens-steps 3 -s 7 --max-accept 1`; ; I've compared this method with BLAST on a small dataset. However mmseqs2 produces not a best hit but just some hit. For example:. `PS064S07MM_81253 fig|6666666.201545.peg.1407 0.509 1167 572 0 0 1167 0 1155 0.00E+00 1101` . If I run the standard search:. `mmseqs search ""$query"" ""$target"" result tmp`. I see the same best hit as in BLAST with the best score and e-value. Here is the convertalis output till the real best hit appears:. `PS064S07MM_81253 fig|6666666.201634.peg.2302 0.536 1172 543 0 0 1167 0 1172 0.00E+00 1182 ; PS064S07MM_81253 fig|451640.5.peg.1619 0.685 1172 369 0 0 1168 0 1172 0.00E+00 1599 ; PS064S07MM_81253 fig|1125712.3.peg.1765 0.518 1178 567 0 0 1165 0 1178 0.00E+00 1137 ; PS064S07MM_81253 fig|553184.4.peg.556 0.528 1170 552 0 0 1165 0 1170 0.00E+00 1158 ; PS064S07MM_81253 fig|633147.4.peg.496 0.521 1179 564 0 0 1167 0 1179 0.00E+00 1147 ; PS064S07MM_81253 fig|428126.7.peg.233 0.693 1171 359 0 0 1165 0 1171 0.00E+00 1619 ; PS064S07MM_81253 fig|1121444.3.peg.1136 0.531 1169 548 0 0 1167 0 1169 0.00E+00 1165 ; PS064S07MM_81253 fig|755731.4.peg.2885 0.547 1176 532 0 0 1168 0 1176 0.00E+00 1216 ; PS064S07MM_81253 fig|1118059.3.peg.6 0.523 1176 560 0 0 1168 0 1176 0.00E+00 1151 ; PS064S07MM_81253 fig|545697.3.peg.2439 0.543 1178 538 0 0 1168 0 1178 0.00E+00 1206 ; PS064S07MM_81253 fig|938293.3.peg.417 0.524 1176 559 0 0 1166 0 1176 0.00E+00 1152 ; PS064S07MM_81253 fig|879305.3.peg.501 0.529 1173 552 0 0 1166 0 1173 0.00E+00 1163 ; PS064S07MM_81253 fig|655811.4.peg.25 0.538 1167 539 0 0 1158 0 1167 0.00E+00 1184 ; PS064S07MM_81253 fig|525254.4.peg.863 0.525 1172 556 0 0 1166 0 1172 0.00E+00 1151 ; PS064S07MM_81253 fig|6666666.201634.peg.2160 0.548 1169 528 0 0 1168 0 1169 0.00E+00 1213 ; PS064S07MM_81253 fig|6666666.201633",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/67
https://github.com/soedinglab/MMseqs2/issues/69:53,Energy Efficiency,consumption,consumption,53,"This is not bug report, just a question. Does memory consumption by ""cluster"" and ""linclust"" in mmseqs2 independent on the number of threads? In other words, for the same database, will I use more memory if I use more CPUs?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/69
https://github.com/soedinglab/MMseqs2/issues/70:109,Availability,error,errors,109,"Do you have a receipt for running MMseqs2 using MPI and slurm? I'm trying various strategies but some return errors, some spawn much too many threads on nodes (probably to my lack of expertise here). Did you run the program on cluster?. I have, let's suppose, 2 nodes, 24 threads each (not counting masternode of course). I'd like to use both nodes for clustering. I run the following on masternode:. ```; RUNNER=""mpirun -np 1""; salloc -N 2 mpirun mmseqs cluster nr70_rep nr60 tmp --min-seq-id 0.6 --threads 24; ```; What is the meaning of RUNNER variable here? Where should it be set? On master? On each node? I guess MMseqs2 itself manages further the sub-tasks so I have no intuition how to make it work with slurm. Thank you for any advice here.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/70
https://github.com/soedinglab/MMseqs2/issues/70:547,Modifiability,variab,variable,547,"Do you have a receipt for running MMseqs2 using MPI and slurm? I'm trying various strategies but some return errors, some spawn much too many threads on nodes (probably to my lack of expertise here). Did you run the program on cluster?. I have, let's suppose, 2 nodes, 24 threads each (not counting masternode of course). I'd like to use both nodes for clustering. I run the following on masternode:. ```; RUNNER=""mpirun -np 1""; salloc -N 2 mpirun mmseqs cluster nr70_rep nr60 tmp --min-seq-id 0.6 --threads 24; ```; What is the meaning of RUNNER variable here? Where should it be set? On master? On each node? I guess MMseqs2 itself manages further the sub-tasks so I have no intuition how to make it work with slurm. Thank you for any advice here.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/70
https://github.com/soedinglab/MMseqs2/issues/70:677,Usability,intuit,intuition,677,"Do you have a receipt for running MMseqs2 using MPI and slurm? I'm trying various strategies but some return errors, some spawn much too many threads on nodes (probably to my lack of expertise here). Did you run the program on cluster?. I have, let's suppose, 2 nodes, 24 threads each (not counting masternode of course). I'd like to use both nodes for clustering. I run the following on masternode:. ```; RUNNER=""mpirun -np 1""; salloc -N 2 mpirun mmseqs cluster nr70_rep nr60 tmp --min-seq-id 0.6 --threads 24; ```; What is the meaning of RUNNER variable here? Where should it be set? On master? On each node? I guess MMseqs2 itself manages further the sub-tasks so I have no intuition how to make it work with slurm. Thank you for any advice here.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/70
https://github.com/soedinglab/MMseqs2/issues/71:73,Safety,predict,predicted,73,"Hello, ; I am trying to use MMSEQS2 to assign taxonomy to a large set of predicted genes. However, the command “mmseqs taxonomy” is not identified. ; I am using version 1d62934a57769c971fec3724d3e805f8162b976a . Could you please let me know how I should enable this option?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/71
https://github.com/soedinglab/MMseqs2/issues/76:1103,Availability,Mask,Mask,1103,"ted like:. >1006013; ATGGAAGCTACGAAGTCGTCGAAACAAAATTGTTGCAACCCGGTTAAGAAACCCGGACCC; GTTTCAATTGATCATGTTCTCTTAGCTCTCCGTGAGACAAGAGAAGAGCGAGATTTACGA; ATCAGGAGCTTATTCAGTTTCTTTGATTCTGAGAATGTTGGTTACTTAGATTGTGCTCAA; ATTGAGAAGGGGTTATGTGCGCTTCAAATCCCAAGTGGGTATAAATACGCTAAGGAGTTG; TTTAGGGTTTGTGATGCGAATAGAGATGGGCGTGTGGATTATCATGAGTTTCGTAGATAT; ATGGATGATAAGGAGCTTGAGCTGTATAGAATCTTTCAAGCTATTGATGTTGAGCATAAT; GGTTGTATTTCTCCTGAGGGACTTTGGGATTCACTCGTTAAAGCTGGGATTGAGATAAAA; GATGAGGAGCTTGCTCGTTTTGTGGAACATGTTGACAAGGACAATGATGGAATCATTATG; TTTGAAGAATGGAGAGATTTTCTTTTGCTGTACCCTCACGAAGCTACCATTGAAAATATA. >1006013 is the taxmony id we got to unique the sequence. i can create the database by: `mmseqs createdb xxx targetDB`. but when try to createindex by `mmseqs createindex targeDB index`; it throws issue:. `Program call:; prot index. MMseqs Version: 	87f530e8aedc0970c8ec16cb2d33b7507d56cf59; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	32000; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	true; Split DB 	0; Split Memory Limit 	0; Threads 	4; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; /db/prot index/orfs --min-length 30 --max-length 98202 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --id-offset 0 --threads 4. MMseqs Version: 	87f530e8aedc0970c8ec16cb2d33b7507d56cf59; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/76
https://github.com/soedinglab/MMseqs2/issues/77:2189,Deployability,install,installation,2189,"singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl eagerfpu pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm fsgsbase tsc_adjust smep erms xsaveopt arat; * Operating system and version:; Ubuntu 16.04; Linux mymachine 4.4.0-78-generic #99-Ubuntu SMP Thu Apr 27 15:29:09 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:644,Testability,test,test,644,"Hi, . I'd wish to use clusthash for a quick clustering of protein sequences. . On the principle it works fast and fine, but after processing the clusthashdb files with createseqfiledb I get an inconsistent output sequence cluster file:; when a sequence is the >1st ( = 2nd, 3rd, etc.) to appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1224,Testability,test,test,1224,"onsistent output sequence cluster file:; when a sequence is the >1st ( = 2nd, 3rd, etc.) to appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1235,Testability,test,test,1235,":; when a sequence is the >1st ( = 2nd, 3rd, etc.) to appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1285,Testability,test,test,1285,"o appear in a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 co",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1299,Testability,test,test,1299," a cluster, it will appear again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1340,Testability,test,test,1340,"again in its own singleton cluster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1354,Testability,test,test,1354,"luster just after. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; fla",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1371,Testability,test,test,1371,"er. The dataset is hence inflated, with as many clusters as input sequences, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1472,Testability,test,test,1472,"ces, but some clusters containing (rightly) several sequences. . Note that the first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1534,Testability,test,test,1534,"first member of the cluster is never duplicated, and hence this does not affect singleton clusters. Below is an example using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/77:1720,Testability,test,test,1720,"ple using test.fasta toy protein db as input:. ## Expected Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_092187456.1 is a singleton. ## Current Behavior; NP_770154.1, WP_028171928.1, WP_011086298.1 form a cluster; WP_028171928.1 and WP_011086298.1 are duplicated as singletons; WP_084633232.1 is a singleton; NP_774261.1, WP_011090348.1 form a cluster; WP_011090348.1 is duplicated as a singleton; WP_092187456.1 is a singleton. ## Steps to Reproduce (for bugs); ```bash; mmseqs createdb test.fasta test.mmseqsdb; mmseqs clusthash --min-seq-id 0.99 test.mmseqsdb test.clusthashdb; mmseqs createseqfiledb test.mmseqsdb test.clusthashdb test.clusthashdb_clusters; ```. ## MMseqs Output (for bugs); input and output to be found in here:; [test.zip](https://github.com/soedinglab/MMseqs2/files/1848716/test.zip). ## Context; I was aiming at doing a quick clustering of 100% identical seqeunces from large databases ( >3M protein), but could reproduce the bug on a small toy database (see test.fasta) and with 99% similarity cut-off. ## Your Environment. * Git commit used:; done with last version of MMseqs2 Version: e5d64b2701789e7eef8fcec0812ccb910c8dfef3; but already the bug was present with MMseqs2 Version: 6306925fa9ae6198116c26e605277132deff70d0; * Which MMseqs version was used:; self compiled; * Compiler and Cmake versions used and their invocation:; cmake version 3.5.1; gcc version 5.4.1 20160904 (Ubuntu 5.4.1-2ubuntu1~16.04) ; used as in the installation direction on main page of github. * Server specifications:; server is a VM with 8 cores and 64GB RAM; instruction support as in my /proc/cpuinfo:; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl eagerfpu pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rd",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/77
https://github.com/soedinglab/MMseqs2/issues/79:200,Availability,error,error,200,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79
https://github.com/soedinglab/MMseqs2/issues/79:583,Availability,error,error,583,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79
https://github.com/soedinglab/MMseqs2/issues/79:676,Availability,error,error,676,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79
https://github.com/soedinglab/MMseqs2/issues/79:885,Availability,error,error,885,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79
https://github.com/soedinglab/MMseqs2/issues/79:1461,Deployability,release,release,1461,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79
https://github.com/soedinglab/MMseqs2/issues/79:1601,Deployability,RELEASE,RELEASE,1601,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79
https://github.com/soedinglab/MMseqs2/issues/79:1720,Deployability,install,install,1720,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79
https://github.com/soedinglab/MMseqs2/issues/79:397,Safety,Abort,Aborted,397,"## Expected Behavior. I'm doing a search of proteins against another protein database using high sensitivity and high number of iterations (`-s 7.5 --num-iterations 4`). ## Current Behavior. I get an error:. ```; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; /scratch/aoh/qwfp/4982015852642442181/blastpgp.sh: line 81: 24849 Aborted (core dumped) $RUNNER ""$MMSEQS"" result2profile ""$QUERYDB"" ""$2"" ""$TMP_PATH/aln_0"" ""$TMP_PATH/profile_$STEP"" ${TMP}; ```. However, when I use `--num-iterations 1`, I don't get the error. ## Steps to Reproduce (for bugs). I took a small sample of sequences to reproduce the error. ```; mmseqs createdb two.fa two.db; mmseqs createdb rest.fa rest.db; mmseqs search two.db rest.db two_v_rest.db /scratch/aoh/qwfp -s 7.5 --num-iterations 4; ```. Here are the files used to recreate the error. [rest.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890804/rest.fa.txt); [two.fa.txt](https://github.com/soedinglab/MMseqs2/files/1890805/two.fa.txt). ## MMseqs Output (for bugs). [mmseqs.err.txt](https://github.com/soedinglab/MMseqs2/files/1890802/mmseqs.err.txt); [mmseqs.out.txt](https://github.com/soedinglab/MMseqs2/files/1890803/mmseqs.out.txt). ## Your Environment. * Git commit used: `2cfdedc95f6a998826f45a7594971751a5e535f3`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * Operating system and version: Fedora release 24 server edition. Here are the outputs from `make` and `cmake` from when I compiled mmseqs like so:. ```; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. 1> cmake.out.txt 2> cmake.err.txt; make -j32 1> make.out.txt 2> make.err.txt; make install 1> make_install.out.txt 2> make_install.err.txt; ```. [mmseqs_build_output.tar.gz](https://github.com/soedinglab/MMseqs2/files/1890845/mmseqs_build_output.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79
https://github.com/soedinglab/MMseqs2/issues/80:256,Availability,error,error,256,"Hi, ; I am using mmseqs taxonomy, and following the taxonomy assignment workflow, using uniref100 as a target DB. . the entire workflow works great, until the ""mmseqs taxonomy"" command. ; The first search seems to be working good, however, I am getting an error in the second search, and the process dies. . MMseqs call:; mmseqs taxonomy est00001DB uniref100DB uniref100DB.tsv /ncbi-taxdump/ queryLcaDB /tmp/ --threads 25. ## MMseqs Output . Program call:; /tmp/3706626149599022609/top1 uniref100DB /tmp/3706626149599022609/top1 /tmp/3706626149599022609/aligned --extract-mode 2 . MMseqs Version:	2.23394; Extract mode	2; Threads 	80; Verbosity 	3. Query file: /tmp/3706626149599022609/top1; Target file: uniref100DB; Alignment database: /tmp/3706626149599022609/top1; Start writing file to /tmp/3706626149599022609/aligned; Set sym link from /tmp/3706626149599022609/top1_h to /tmp/3706626149599022609/aligned_h; Set sym link from /tmp/3706626149599022609/top1_h.index to /tmp/3706626149599022609/aligned_h.index; Done.; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 25s; Please recreate your database or add a .dbtype file to your sequence/profile database.; Error: Second search died. I am using version 2.23394 installed through conda environment, ubuntu 16.04 server; Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80
https://github.com/soedinglab/MMseqs2/issues/80:1181,Availability,Error,Error,1181,"Hi, ; I am using mmseqs taxonomy, and following the taxonomy assignment workflow, using uniref100 as a target DB. . the entire workflow works great, until the ""mmseqs taxonomy"" command. ; The first search seems to be working good, however, I am getting an error in the second search, and the process dies. . MMseqs call:; mmseqs taxonomy est00001DB uniref100DB uniref100DB.tsv /ncbi-taxdump/ queryLcaDB /tmp/ --threads 25. ## MMseqs Output . Program call:; /tmp/3706626149599022609/top1 uniref100DB /tmp/3706626149599022609/top1 /tmp/3706626149599022609/aligned --extract-mode 2 . MMseqs Version:	2.23394; Extract mode	2; Threads 	80; Verbosity 	3. Query file: /tmp/3706626149599022609/top1; Target file: uniref100DB; Alignment database: /tmp/3706626149599022609/top1; Start writing file to /tmp/3706626149599022609/aligned; Set sym link from /tmp/3706626149599022609/top1_h to /tmp/3706626149599022609/aligned_h; Set sym link from /tmp/3706626149599022609/top1_h.index to /tmp/3706626149599022609/aligned_h.index; Done.; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 25s; Please recreate your database or add a .dbtype file to your sequence/profile database.; Error: Second search died. I am using version 2.23394 installed through conda environment, ubuntu 16.04 server; Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80
https://github.com/soedinglab/MMseqs2/issues/80:1235,Deployability,install,installed,1235,"Hi, ; I am using mmseqs taxonomy, and following the taxonomy assignment workflow, using uniref100 as a target DB. . the entire workflow works great, until the ""mmseqs taxonomy"" command. ; The first search seems to be working good, however, I am getting an error in the second search, and the process dies. . MMseqs call:; mmseqs taxonomy est00001DB uniref100DB uniref100DB.tsv /ncbi-taxdump/ queryLcaDB /tmp/ --threads 25. ## MMseqs Output . Program call:; /tmp/3706626149599022609/top1 uniref100DB /tmp/3706626149599022609/top1 /tmp/3706626149599022609/aligned --extract-mode 2 . MMseqs Version:	2.23394; Extract mode	2; Threads 	80; Verbosity 	3. Query file: /tmp/3706626149599022609/top1; Target file: uniref100DB; Alignment database: /tmp/3706626149599022609/top1; Start writing file to /tmp/3706626149599022609/aligned; Set sym link from /tmp/3706626149599022609/top1_h to /tmp/3706626149599022609/aligned_h; Set sym link from /tmp/3706626149599022609/top1_h.index to /tmp/3706626149599022609/aligned_h.index; Done.; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 25s; Please recreate your database or add a .dbtype file to your sequence/profile database.; Error: Second search died. I am using version 2.23394 installed through conda environment, ubuntu 16.04 server; Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80
https://github.com/soedinglab/MMseqs2/issues/83:133,Deployability,install,installed,133,"I am trying to run hhpred on my clustering results. I have MMseqs2 Version: 9f344f3d6765a1131f22794d9a6fd9fcd8ca2cdf and hhsuite 3.0 installed.; But I cant find the last command (`cstranslate_mpi`) from https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database. Is it part of mmseqs or hhsuite? Does it need to be installed separately? can I use `cstranslate` instead?. Thanks,; Adi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/83
https://github.com/soedinglab/MMseqs2/issues/83:332,Deployability,install,installed,332,"I am trying to run hhpred on my clustering results. I have MMseqs2 Version: 9f344f3d6765a1131f22794d9a6fd9fcd8ca2cdf and hhsuite 3.0 installed.; But I cant find the last command (`cstranslate_mpi`) from https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database. Is it part of mmseqs or hhsuite? Does it need to be installed separately? can I use `cstranslate` instead?. Thanks,; Adi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/83
https://github.com/soedinglab/MMseqs2/issues/85:267,Performance,optimiz,optimizing,267,"I have a request for describing some mmseq's options in more depth, at least with a suggestion what effect might have a specific parameter set to its extreme. Especially, maybe they wouldn't be relevant eventually, but I think that's good to know when thinking about optimizing and shaping profiles / searches / clusterings. For instance:. **result2profile**; --qid (intuitive, but how does it affect final profile's e.g. sensitivity?); --qsc (especially the range - what does the default setting mean compared to extremes?); --pca; --pcb; --diff (I see explanation in commandline help but get confused by the window and don't know whether should I modify that for manipulating profile's characteristics - mainly specific/nonspecific feature). **prefilter**; --min-ungapped-score (set up to 15, what does it mean? Does it affect minimum length of k-mer alignment that is needed?); --k-score; --diag-score. Could you add some comment in documentation what do these do? How varying them affect (or is expected to affect) results? Maybe some of them are hidden in the code, but that's hard to infer for non developer. I can see also that search doesn't produce results for very short sequences, e.g. the shortest PFAM consensus sequences, what additionally inspire me to rethink all procedures more throughly. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/85
https://github.com/soedinglab/MMseqs2/issues/85:367,Usability,intuit,intuitive,367,"I have a request for describing some mmseq's options in more depth, at least with a suggestion what effect might have a specific parameter set to its extreme. Especially, maybe they wouldn't be relevant eventually, but I think that's good to know when thinking about optimizing and shaping profiles / searches / clusterings. For instance:. **result2profile**; --qid (intuitive, but how does it affect final profile's e.g. sensitivity?); --qsc (especially the range - what does the default setting mean compared to extremes?); --pca; --pcb; --diff (I see explanation in commandline help but get confused by the window and don't know whether should I modify that for manipulating profile's characteristics - mainly specific/nonspecific feature). **prefilter**; --min-ungapped-score (set up to 15, what does it mean? Does it affect minimum length of k-mer alignment that is needed?); --k-score; --diag-score. Could you add some comment in documentation what do these do? How varying them affect (or is expected to affect) results? Maybe some of them are hidden in the code, but that's hard to infer for non developer. I can see also that search doesn't produce results for very short sequences, e.g. the shortest PFAM consensus sequences, what additionally inspire me to rethink all procedures more throughly. Thanks!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/85
https://github.com/soedinglab/MMseqs2/issues/88:1973,Availability,Mask,Mask,1973,"2902 ; GCF_001249795.1_3002_8_6_genomic_02902 GCF_001259475.1_4370_2_2_genomic_00977; ```. ## Steps to Reproduce (for bugs). mmseqs createdb pan.fasta pan.db; mmseqs cluster pan.db fam.db /tmp/ --min-seq-id 0.8 -c 0.8 --threads 1; mmseqs createtsv pan.db pan.db fam.db fam.tsv --first-seq-as-repr true. ## MMseqs Output (for bugs). ```; Program call:; pan.fasta pan.db . MMseqs Version: 	GITDIR-NOTFOUND; Max. sequence length 	32000; Split Seq. by len 	true; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; ```; ```; Program call:; pan.db fam.db /tmp/ --min-seq-id 0.8 -c 0.8 --threads 1 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --su",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:3215,Availability,mask,mask,3215,"ld 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:3881,Availability,Mask,Mask,3881,"-v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:4306,Availability,mask,mask,4306,"TFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//5892805155821804",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:4541,Availability,Mask,Mask,4541,"rage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:13067,Availability,mask,mask,13067,180421/linclust/13903844144087712329/clu /tmp//589280515582180421/linclust/13903844144087712329/pre_clust /tmp//589280515582180421/linclust/13903844144087712329/clust . MMseqs Version:	GITDIR-NOTFOUND; Threads 	24; Verbosity	3. List amount 2; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done.; Program call:; /tmp//589280515582180421/clu_redundancy pan.db /tmp//589280515582180421/input_step_redundancy . MMseqs Version:	GITDIR-NOTFOUND; Verbosity	3. Start writing to file /tmp//589280515582180421/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp//589280515582180421/input_step_redundancy /tmp//589280515582180421/input_step_redundancy /tmp//589280515582180421/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 20 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3. Initialising data structures...; Using 1 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1025282101 byte) of total memory (182764221235 byte); Target database: /tmp//589280515582180421/input_step_redundancy(Size: 1); Query database type: Aminoacid; Target database type:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:13499,Availability,Mask,Mask,13499,/589280515582180421/input_step_redundancy . MMseqs Version:	GITDIR-NOTFOUND; Verbosity	3. Start writing to file /tmp//589280515582180421/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp//589280515582180421/input_step_redundancy /tmp//589280515582180421/input_step_redundancy /tmp//589280515582180421/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 20 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3. Initialising data structures...; Using 1 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1025282101 byte) of total memory (182764221235 byte); Target database: /tmp//589280515582180421/input_step_redundancy(Size: 1); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 10s. Query database: /tmp//589280515582180421/input_step_redundancy(size=1); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 24; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 17; DB Size: 512000102 (byte); Avg Kmer Size: 2.65625e-07; Top 10 Kmers; 	HYLQFA		1; 	YPSFNA		1; 	YQA,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:14266,Availability,Mask,Masked,14266,"ze 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3. Initialising data structures...; Using 1 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1025282101 byte) of total memory (182764221235 byte); Target database: /tmp//589280515582180421/input_step_redundancy(Size: 1); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 10s. Query database: /tmp//589280515582180421/input_step_redundancy(size=1); Process prefiltering step 1 of 1. Index table: counting k-mers... Index table: Masked residues: 24; Index table: fill...; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 17; DB Size: 512000102 (byte); Avg Kmer Size: 2.65625e-07; Top 10 Kmers; 	HYLQFA		1; 	YPSFNA		1; 	YQADPD		1; 	FQDPTF		1; 	AHWGYF		1; 	PNTSAH		1; 	YWGLAK		1; 	WLQYKK		1; 	ANHWQL		1; 	TFAAWL		1; Min Kmer Size: 0; Empty list: 63999983. Time for index table init: 0 h 0 m 2s. 	k-mers per position = 0.354331, k-mer match probability: 2.22507e-308; k-mer similarity threshold: 130; k-mer match probability: 2.22507e-308. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1; Target db start 1 to 1. 0 k-mers per position.; 17 DB matches per sequence.; 0 Overflows.; 1 sequences passed prefiltering per query sequence.; Median result list size: 1; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 12s; Program call:; /tmp//589280515582180",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:18140,Deployability,release,release,18140," initial order. Add missing connections. Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 1; Size of the alignment database: 1; Number of clusters: 1; Program call:; pan.db /tmp//589280515582180421/clu /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/clu_step0 . MMseqs Version:	GITDIR-NOTFOUND; Threads 	24; Verbosity	3. List amount 2; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done. ```. ```; Program call:; pan.db pan.db fam.db fam.tsv --first-seq-as-repr true . MMseqs Version: 	GITDIR-NOTFOUND; first sequence as respresentative	true. Query file is pan.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good no",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:4807,Energy Efficiency,Reduce,Reduced,4807,"13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; T",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:19132,Energy Efficiency,monitor,monitor,19132,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:19609,Energy Efficiency,power,power,19609,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:2650,Performance,perform,performs,2650,"DIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:4043,Performance,perform,performs,4043,"len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:5673,Performance,perform,performs,5673,"hreads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	1; Verbosity 	3. Query file: pan.db; Target file: pan.db; Prefilter database: /tmp//589280515582180421/linclust/13903844144087712329/pref; Result database: /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1; Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 /tmp//589280515582180421/linclust/13903844144087712329/pre_clust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component	1000; Similarity type 	2; Threads 	1. Init...; Opening sequence database...; Opening alignment database...; done.; Clustering mode: Set Cover. Sort entries. Find missing connection",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:9080,Performance,perform,performs,9080,"	/tmp//589280515582180421/linclust/13903844144087712329/order_redundancy; Beats first 	false; Mapping file 	; Threads 	24; Verbosity 	3; trim the results to one column	false; Extract n lines 	0; Numerical comparison operator 	; Numerical comparison value 	0; Sort entries 	0; Include identical Seq. Id. 	false; join to DB 	. Filtering with a filter files.; Time for merging files: 0 h 0 m 0 s; Rescore diagonals.; Program call:; /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/pref_filter2 /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore2 --rescore-mode 1 --sub-mat blosum62.out --filter-hits -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	1; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	true; In substitution scoring mode, performs global alignment along the diagonal	false; Coverage threshold 	0.8; E-value threshold 	0.001; Coverage Mode 	0; Seq. Id Threshold 	0.8; Include identical Seq. Id. 	false; Threads 	1; Verbosity 	3. Query file: /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy; Target file: /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy; Prefilter database: /tmp//589280515582180421/linclust/13903844144087712329/pref_filter2; Result database: /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore2; Done.; Time for merging files: 0 h 0 m 0 s; Time for diagonal calculation: 0 h 0 m 0s; Program call:; /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/input_step_redundancy /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore2 /tmp//589280515582180421/linclust/13903844144087712329/aln --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:18724,Performance,cache,cache,18724,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:2550,Security,hash,hash,2550,"rue; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; ```; ```; Program call:; pan.db fam.db /tmp/ --min-seq-id 0.8 -c 0.8 --threads 1 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	1; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:3229,Security,hash,hash-shift,3229,"ld 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; pan.db /tmp//589280515582180421/clu_redundancy /tmp//589280515582180421/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:3920,Security,hash,hash,3920,"-v 3 --max-iterations 1000 --similarity-type 2 --threads 1 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:4360,Security,hash,hash-shift,4360,"ent 	1000; Similarity type 	2; Threads 	1; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/li",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:4651,Security,hash,hash,4651,"n hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	1; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (640 byte) of total memory (182764221235 byte); Process file into 1 parts; Generate k-mers list 0. Time for fill: 0 h 0 m 0s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 0s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 0s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 0s; Rescore diagonals.; Program call:; pan.db pan.db /tmp//589280515582180421/linclust/13903844144087712329/pref /tmp//589280515582180421/linclust/13903844144087712329/pref_rescore1 --rescore-mode 0 --sub-mat blosum62.out -c 0.8 -e 0.001 --cov-mode 0 --min-seq-id 0.8 --threads 1 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Rescore mode 	0; Sub Matrix 	blosum62.out; Remove hits by seq.id. and coverage 	false; In substitution scorin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/88:19441,Usability,pause,pausefilter,19441,"an.db; Data file is fam.db; Start writing file to fam.tsv; Done.; ```. ## Context. These 2 sequences come from a vibro cholerae genome. . ## Your Environment. * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): GITDIR-NOTFOUND (corresponds to the last release: 2-23394). * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled using GNU Make 3.81 and cmake version 2.8.12.2. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: self-compiled using GNU Make 3.81 and cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; ```; less /proc/cpuinfo; processor : 0; vendor_id : AuthenticAMD; cpu family : 21; model : 2; model name : AMD Opteron(tm) Processor 6344 ; stepping : 0; cpu MHz : 2599.862; cache size : 2048 KB; physical id : 0; siblings : 12; core id : 0; cpu cores : 6; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext; fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nonstop_tsc extd_apicid amd_dcm aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1; sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt ; lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassis; ts pausefilter pfthreshold bmi1; bogomips : 5199.72; TLB size : 1536 4K pages; clflush size : 64; cache_alignment : 64; address sizes : 48 bits physical, 48 bits virtual; power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro; ```; * Operating system and version:; ```; $uname -a; Linux XXX 2.6.32-696.20.1.el6.x86_64 #1 SMP Fri Jan 26 17:51:45 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88
https://github.com/soedinglab/MMseqs2/issues/89:609,Performance,perform,performing,609,"## Context; I am running MMseqs2 search of the UniRef100 database. This database includes many long sequences, one example of which is a titin isoform (UniRef100_UPI000A307CE5). ## Expected Behavior; I would expect the output file after running convertalis on the search output to have the same sequence ID as the UniRef100 sequence, i.e.,. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. ## Current Behavior; MMseqs2 is splitting this long entry into two separate ones: UniRef100_UPI000A307CE5_0 and UniRef100_UPI000A307CE5_1. . I can verify this by performing a grep search for ""UPI000A307CE5"" on the .lookup file which returns; ```; 132227718 UniRef100_UPI000A307CE5_0; 132227719 UniRef100_UPI000A307CE5_1; ```. Additionally, searching for these two lines within the output file created by ""createdb"" indicates that the tail portion of this UniRef100 sequence has indeed been split from the main. Because of this splitting behaviour, my output convertalis table has this entry. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5_0 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. From what I can guess this might not strictly be a bug in MMseqs2 - perhaps exceedingly long sequences can't be handled properly during alignment. I can handle this behaviour now that I am aware of it; it resulted in some confusion as to why I was not obtaining the expected results when parsing the uniref100.xml file for the gene name / taxon code of significant hits. However, I think that a consistent sequence ID should be returned since this behaviour is not clear and it took a bit of investigation to figure out what was happening. ## Steps to Reproduce (for bugs); Generate and index a FASTA file containing the above-mentioned UniRef100 sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/89
https://github.com/soedinglab/MMseqs2/issues/89:1612,Usability,clear,clear,1612,"0 sequence, i.e.,. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. ## Current Behavior; MMseqs2 is splitting this long entry into two separate ones: UniRef100_UPI000A307CE5_0 and UniRef100_UPI000A307CE5_1. . I can verify this by performing a grep search for ""UPI000A307CE5"" on the .lookup file which returns; ```; 132227718 UniRef100_UPI000A307CE5_0; 132227719 UniRef100_UPI000A307CE5_1; ```. Additionally, searching for these two lines within the output file created by ""createdb"" indicates that the tail portion of this UniRef100 sequence has indeed been split from the main. Because of this splitting behaviour, my output convertalis table has this entry. ```; evm.model.utg11.204 UniRef100_UPI000A307CE5_0 0.231 160 116 3 2138 2297 16366 16518 5.20E-36 164; ```. From what I can guess this might not strictly be a bug in MMseqs2 - perhaps exceedingly long sequences can't be handled properly during alignment. I can handle this behaviour now that I am aware of it; it resulted in some confusion as to why I was not obtaining the expected results when parsing the uniref100.xml file for the gene name / taxon code of significant hits. However, I think that a consistent sequence ID should be returned since this behaviour is not clear and it took a bit of investigation to figure out what was happening. ## Steps to Reproduce (for bugs); Generate and index a FASTA file containing the above-mentioned UniRef100 sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): a58d38379bfb3c5ad75272d358bfec9f2c100b61; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): HPC, nodes with support for both.; * Operating system and version: SUSE 12.2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/89
https://github.com/soedinglab/MMseqs2/issues/90:55,Availability,error,error,55,"## Expected Behavior. ## Current Behavior. This is the error i am getting . Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15993152; Target db start 1 to 15993152; tmp/17791169248477116152/blastp.sh: line 75: 20702 Illegal instruction (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs search queryDB targetDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. no output . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to find pairwise alignment between 15M short aa sequences. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):. Invalid Command: Version. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; N/A; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; qsub -cwd -V -N align -l h_data=32G,time=10:00:00 run.sh; * Operating system and version:. Linux version 2.6.32-696.18.7.el6.x86_64 (mockbuild@c1bl.rdu2.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC) ) #1 SMP Thu Jan 4 17:31:22 UTC 2018",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/90
https://github.com/soedinglab/MMseqs2/issues/90:375,Availability,Error,Error,375,"## Expected Behavior. ## Current Behavior. This is the error i am getting . Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15993152; Target db start 1 to 15993152; tmp/17791169248477116152/blastp.sh: line 75: 20702 Illegal instruction (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs search queryDB targetDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. no output . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to find pairwise alignment between 15M short aa sequences. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):. Invalid Command: Version. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; N/A; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; qsub -cwd -V -N align -l h_data=32G,time=10:00:00 run.sh; * Operating system and version:. Linux version 2.6.32-696.18.7.el6.x86_64 (mockbuild@c1bl.rdu2.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC) ) #1 SMP Thu Jan 4 17:31:22 UTC 2018",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/90
https://github.com/soedinglab/MMseqs2/issues/90:1563,Testability,mock,mockbuild,1563,"## Expected Behavior. ## Current Behavior. This is the error i am getting . Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15993152; Target db start 1 to 15993152; tmp/17791169248477116152/blastp.sh: line 75: 20702 Illegal instruction (core dumped) $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs search queryDB targetDB resultDB tmp. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. no output . ## Context; Providing context helps us come up with a solution and improve our documentation for the future. I am trying to find pairwise alignment between 15M short aa sequences. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):. Invalid Command: Version. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; N/A; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; qsub -cwd -V -N align -l h_data=32G,time=10:00:00 run.sh; * Operating system and version:. Linux version 2.6.32-696.18.7.el6.x86_64 (mockbuild@c1bl.rdu2.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC) ) #1 SMP Thu Jan 4 17:31:22 UTC 2018",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/90
https://github.com/soedinglab/MMseqs2/issues/91:2252,Deployability,Release,Release,2252,"atabase, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searching on large protein datasets and we would like to understand more on how to use it efficiently and correctly. ## Your Environment. * MMSeqs2 Release 3-be8f6 AVX2. * Diamond v0.9.21. * Environment : Amazon Linux AMI 2018.03.l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91
https://github.com/soedinglab/MMseqs2/issues/91:2194,Energy Efficiency,efficient,efficiently,2194,"atabase, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searching on large protein datasets and we would like to understand more on how to use it efficiently and correctly. ## Your Environment. * MMSeqs2 Release 3-be8f6 AVX2. * Diamond v0.9.21. * Environment : Amazon Linux AMI 2018.03.l",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91
https://github.com/soedinglab/MMseqs2/issues/91:609,Performance,Perform,Perform,609,"## Expected Behavior. When searching for protein sequences that are already included in a database such as Uniprot or Uniref, MMSeqs2 should retrieve an exact match for almost all the query sequences. ## Current Behavior. Running MMSeqs2 search or easy-search with randomly extracted sequences from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91
https://github.com/soedinglab/MMseqs2/issues/91:752,Performance,Perform,Perform,752,"## Expected Behavior. When searching for protein sequences that are already included in a database such as Uniprot or Uniref, MMSeqs2 should retrieve an exact match for almost all the query sequences. ## Current Behavior. Running MMSeqs2 search or easy-search with randomly extracted sequences from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91
https://github.com/soedinglab/MMseqs2/issues/91:1104,Testability,log,logs,1104,"iprot or Uniref, MMSeqs2 should retrieve an exact match for almost all the query sequences. ## Current Behavior. Running MMSeqs2 search or easy-search with randomly extracted sequences from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91
https://github.com/soedinglab/MMseqs2/issues/91:1197,Testability,test,testing,1197,"ces from Uniref90 against the same Uniref90 database, gives fewer exact matches than for example using Diamond with the same parameters. It seems MMSeqs2 aligns more sequences than Diamond but it misses more exact matches as well. ## Steps to Reproduce (for bugs). * Randomly extract 10,000 sequences from Uniref90 . * Perform a search against Uniref90 with the 10,000 query proteins using MMSeqs2 search with parameters ```-s 4``` and ```--max-seqs 4000``` . * Perform a search against Uniref90 with the same 10,000 query proteins using Diamond blastp with default parameters and ```--max-target-seqs 4000```. * Compare the number of query sequences for which an exact match is retrieved across the two searches (i.e. a query sequence that aligns perfectly against itself). . ## MMseqs Output (for bugs). MMSeqs2 logs: https://gist.github.com/fstrozzi/b21b68aa94bcd9bb5cf19af537975850. ## Context; We were testing MMSeqs2 sensitivity and as a sort of true positive control we realigned some sequences randomly extracted from Uniref90 against the Uniref90, to check how many exact matches we were able to retrieve. We then saw that MMSeqs2 with ```-s 4```, which should match Diamond default (fast) parameters, misses some exact matches. #### MMSeqs2 . * total aligned query sequences: 9994; * exact matches (query sequence aligned with itself in the database): 9496. #### Diamond. * total aligned query sequences: 9975 ; * exact matches (query sequence aligned with itself in the database): 9975. We were also wondering what could be the parameters controlling this behavior and what we could do to improve the best hit search. We also tried to run MMSeqs2 with higher sensitivity (5.7) but the result is very similar. ; Thanks for this great software, we are finding it incredibly useful for both clustering and searching on large protein datasets and we would like to understand more on how to use it efficiently and correctly. ## Your Environment. * MMSeqs2 Release 3-be8f6 AVX2. * Diamond v0.9.2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91
https://github.com/soedinglab/MMseqs2/issues/94:404,Availability,error,error,404,"## Expected Behaviour; I'm trying to follow the documentation to get a profile output file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:995,Availability,Error,Error,995,"xpected Behaviour; I'm trying to follow the documentation to get a profile output file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGK",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:1030,Testability,test,test,1030,"xpected Behaviour; I'm trying to follow the documentation to get a profile output file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGK",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:1111,Testability,test,test,1111,"tput file from an input multiple sequence alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGAT",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:1119,Testability,test,test,1119,"ce alignment (MSA) file in protein aligned fasta format, but it is complaining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIG",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:1219,Testability,test,test,1219,"aining about a missing index file, but I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVV",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:1227,Testability,test,test,1227,"ut I don't understand since the index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:1284,Testability,test,test,1284,"index file appears to be generated *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:1292,Testability,test,test,1292,"d *after* the profile, probably it is my mistake. How can I generate the required index file or circumvent the error? Thank you!. This seems to be the relevant part of the [docs](https://github.com/soedinglab/mmseqs2/wiki):. > We compute sequence profiles from the FASTA MSAs using; > ; > `mmseqs msa2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER------KAIAVGILADGC---GLFLLAVITQSW",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:1783,Testability,test,test,1783,"2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER------KAIAVGILADGC---GLFLLAVITQSWMVWPVLLL--LACGGI; TLPALQGIISVRVGQVAQGQLQGVLTSLTHLTAVIGPLVFAFLYSATRETWNGWVWIIGC; GLYVVALIILRFFH-PGRVIHPINKSDVQQRI---------; >db-CARD.1.1.3_geneId-AAD25063.1_desc-tetZ_annot-ARO3000183_taxaName-Corynebacterium.glutamicum_taxaId-1718; ```. Let me know if you need any more context or details, thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/issues/94:1831,Testability,test,test,1831,"2profile pfam_msa pfam_profile --match-mode 1`; >; > Precompute mmseqs index table (not required for a single search run). Use the --no-preload flag later in the search, if the query database is small to medium sized. Without that the precomputed index table will be first read completely into memory (unnecessary overhead).; > ; > `mmseqs createindex pfam_profile tmp -k 5 -s 7`. ## Current Behavior; Error:; `Could not open index file test.fa.index!`. ## Steps to Reproduce (for bugs); Command:; `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`. ## MMseqs Output (for bugs); Output:; ```; $ msa2profile test.fa test.profile --match-mode 1 --msa-type 2; Program call:; test.fa test.profile --match-mode 1 --msa-type 2 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	32; Verbosity 	3. Could not open index file test.fa.index!; ```; Input format:; ```; $ head test.fa ; >db-CARD.1.1.3_geneId-AAA71915.1_desc-tetE_annot-ARO3000173_taxaName-Escherichia.coli_taxaId-562; ---------------------------MNRTVMMALVIIFLDAMGIGIIMPVLPALLREF; VGKAN-VAENYGVLLALYAMMQVIFAPLLGRWSDRIGRRPVLLLSLLGATLDYALMATAS; VVWVLYLGRLIAGITGATGAVAASTIADVTPEESRTHWFGMMGACFGGGMIAGPVIGGFA; GQLSVQAPFMFAAAINGLAFLVSLFILHETHNANQVSDELKNETIN-ETTSSIREMISPL; SGLLVVFFIIQLIGQIPATLWVLFGEERFAWDGVMVGVSLAVFGLTHALFQ------GLA; AGFIAKHLGER------KAIAVGILADGC---GLFLLAVITQSWMVWPVLLL--LACGGI; TLPALQGIISVRVGQVAQGQLQGVLTSLTHLTAVIGPLVFAFLYSATRETWNGWVWIIGC; GLYVVALIILRFFH-PGRVIHPINKSDVQQRI---------; >db-CARD.1.1.3_geneId-AAD25063.1_desc-tetZ_annot-ARO3000183_taxaName-Corynebacterium.glutamicum_taxaId-1718; ```. Let me know if you need any more context or details, thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94
https://github.com/soedinglab/MMseqs2/pull/96:277,Integrability,message,messages,277,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:635,Testability,test,testing,635,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:667,Testability,test,tests,667,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:765,Testability,TEST,TEST,765,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:919,Testability,TEST,TEST,919,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:928,Testability,TEST,TEST,928,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:952,Testability,TEST,TEST,952,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:961,Testability,TEST,TEST,961,"As I mentioned briefly in Issue #94 when I ran `convertmsa`, to generate an msa database from an input stockholm formatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:1120,Testability,TEST,TEST,1120,"rmatted alignment, the output database had a leading space after the `>` character on the first line, which then caused `msa2profile` to output various ""Invalid"" messages. Removing the leading space as applied in the pull request seems to fix this issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:1491,Testability,TEST,TEST,1491," issue. I don't think my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles from MSAs.; Invalid fasta sequence 0 in entry 0!; Invalid msa 0! Skipping entry.; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 1 s; Time for processi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:1499,Testability,TEST,TEST,1499,"k my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles from MSAs.; Invalid fasta sequence 0 in entry 0!; Invalid msa 0! Skipping entry.; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 2s; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:1568,Testability,TEST,TEST,1568,"k my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles from MSAs.; Invalid fasta sequence 0 in entry 0!; Invalid msa 0! Skipping entry.; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 2s; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/pull/96:1576,Testability,TEST,TEST,1576,"k my input stockholm format alignment was the cause, since I tried generating this with 2 independent tools. ; However, I am not familiar with either file format and I may easily have overlooked something; also I am not a C++ programmer and I did't try testing this change on any unit tests, so I hope it does not break anything else!. Here's a full example (I can also provide the `TEST.sth` input data if required) and let me know if more details are needed, thank you!. Edit: I am running this on Arch Linux. ```; $ mmseqs convertmsa TEST.sth TEST.db; Program call:; TEST.sth TEST.db . MMseqs Version: 	11ef9eb2c1dfbdb4c661df80e1b0314207f6da46; Identifier Field	1; Verbosity 	3. Time for merging files: 0 h 0 m 0 s. Done.; $ head -n 2 TEST.db; > db-CARD.1.1.3_geneId-AAA22081.1_desc-cat_annot-ARO3002670_taxaName-Agrobacterium.tumefaciens.str..C58_taxaId-176299; MENYFESPFRGITLDKQVKSPNLVVGKYSYYSGYYHGHSFEDCARYLLPDE-GADRLVIGSFCSIGSGAAFIMAGNQGHRNEWISTFPFFFMPEVPEFENAANGYLPAGDTVIGNDVWIGSEAIIMPGITVGDGAVIGTRALVTKDVEPYAIVGGNPAKTIRKRFDDDSIALLLEMKWWGWPAERLKAAMPLMTSGNVAALYRFWRSDSL----------; $ mmseqs msa2profile TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1; Program call:; TEST.db TEST.profile --match-mode 1 --msa-type 2 --threads 1 . MMseqs Version: 	1944b9783e5a01e722bd519c9792f006aa180b8d; MSA type 	2; Sub Matrix 	blosum62.out; Match mode 	1; Match ratio 	0.5; Pseudo count a 	0; Pseudo count b 	1.5; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Minimum coverage 	0; Minimum seq. id. 	0; Minimum score per column 	-20; Maximum sequence identity threshold	0.9; Select n most diverse seqs 	1000; Threads 	1; Verbosity 	3. Finding maximum sequence length and set size.; Compute profiles from MSAs.; Invalid fasta sequence 0 in entry 0!; Invalid msa 0! Skipping entry.; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 1 s; Time for processing: 0 h 0 m 2s; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96
https://github.com/soedinglab/MMseqs2/issues/97:1435,Availability,redundant,redundant,1435,"Hi there,. I runned mmseqs cluster on my dataset of 5,061,557 protein sequences using these 3 command lines (MMseqs2 Version: 9f493f538d28b1412a2d124614e9d6ee27a55f45). ```; mmseqs createdb 3600genomes.4pub.cleaned.faa 3600genomes.4pub.cleaned.faa.mmseqsDB >mmseqs_createdb.log. mmseqs cluster 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu tmp --threads 48 -s 7.5 -c 0.5 --cov-mode 0 --max-seqs 5000 -e 0.001 --cluster-mode 0 >mmseqs_cluster.log. mmseqs createtsv 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu 3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv >mmseqs_createtsv.log; ```. When I had a look of the final tsv file (3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv), I got two more sequences (5,061,559 instead of 5,061,557). Looking in details 4 new sequences was added:; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_0; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_0. whereas 2 sequences were removed:; 'RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1'; 'GWA2_OP3_45_18_gwa2_scaffold_308_1'. looks like mmseqs added a _0 or _1 suffix to the names of the two sequences missing. I'm pretty sure that there are no redundant sequence names in my fasta file dataset (I checked it out). Is there an explanation for these suffix ? . many thanks . Raph",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97
https://github.com/soedinglab/MMseqs2/issues/97:1435,Safety,redund,redundant,1435,"Hi there,. I runned mmseqs cluster on my dataset of 5,061,557 protein sequences using these 3 command lines (MMseqs2 Version: 9f493f538d28b1412a2d124614e9d6ee27a55f45). ```; mmseqs createdb 3600genomes.4pub.cleaned.faa 3600genomes.4pub.cleaned.faa.mmseqsDB >mmseqs_createdb.log. mmseqs cluster 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu tmp --threads 48 -s 7.5 -c 0.5 --cov-mode 0 --max-seqs 5000 -e 0.001 --cluster-mode 0 >mmseqs_cluster.log. mmseqs createtsv 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu 3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv >mmseqs_createtsv.log; ```. When I had a look of the final tsv file (3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv), I got two more sequences (5,061,559 instead of 5,061,557). Looking in details 4 new sequences was added:; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_0; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_0. whereas 2 sequences were removed:; 'RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1'; 'GWA2_OP3_45_18_gwa2_scaffold_308_1'. looks like mmseqs added a _0 or _1 suffix to the names of the two sequences missing. I'm pretty sure that there are no redundant sequence names in my fasta file dataset (I checked it out). Is there an explanation for these suffix ? . many thanks . Raph",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97
https://github.com/soedinglab/MMseqs2/issues/97:274,Testability,log,log,274,"Hi there,. I runned mmseqs cluster on my dataset of 5,061,557 protein sequences using these 3 command lines (MMseqs2 Version: 9f493f538d28b1412a2d124614e9d6ee27a55f45). ```; mmseqs createdb 3600genomes.4pub.cleaned.faa 3600genomes.4pub.cleaned.faa.mmseqsDB >mmseqs_createdb.log. mmseqs cluster 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu tmp --threads 48 -s 7.5 -c 0.5 --cov-mode 0 --max-seqs 5000 -e 0.001 --cluster-mode 0 >mmseqs_cluster.log. mmseqs createtsv 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu 3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv >mmseqs_createtsv.log; ```. When I had a look of the final tsv file (3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv), I got two more sequences (5,061,559 instead of 5,061,557). Looking in details 4 new sequences was added:; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_0; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_0. whereas 2 sequences were removed:; 'RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1'; 'GWA2_OP3_45_18_gwa2_scaffold_308_1'. looks like mmseqs added a _0 or _1 suffix to the names of the two sequences missing. I'm pretty sure that there are no redundant sequence names in my fasta file dataset (I checked it out). Is there an explanation for these suffix ? . many thanks . Raph",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97
https://github.com/soedinglab/MMseqs2/issues/97:476,Testability,log,log,476,"Hi there,. I runned mmseqs cluster on my dataset of 5,061,557 protein sequences using these 3 command lines (MMseqs2 Version: 9f493f538d28b1412a2d124614e9d6ee27a55f45). ```; mmseqs createdb 3600genomes.4pub.cleaned.faa 3600genomes.4pub.cleaned.faa.mmseqsDB >mmseqs_createdb.log. mmseqs cluster 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu tmp --threads 48 -s 7.5 -c 0.5 --cov-mode 0 --max-seqs 5000 -e 0.001 --cluster-mode 0 >mmseqs_cluster.log. mmseqs createtsv 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu 3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv >mmseqs_createtsv.log; ```. When I had a look of the final tsv file (3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv), I got two more sequences (5,061,559 instead of 5,061,557). Looking in details 4 new sequences was added:; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_0; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_0. whereas 2 sequences were removed:; 'RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1'; 'GWA2_OP3_45_18_gwa2_scaffold_308_1'. looks like mmseqs added a _0 or _1 suffix to the names of the two sequences missing. I'm pretty sure that there are no redundant sequence names in my fasta file dataset (I checked it out). Is there an explanation for these suffix ? . many thanks . Raph",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97
https://github.com/soedinglab/MMseqs2/issues/97:680,Testability,log,log,680,"Hi there,. I runned mmseqs cluster on my dataset of 5,061,557 protein sequences using these 3 command lines (MMseqs2 Version: 9f493f538d28b1412a2d124614e9d6ee27a55f45). ```; mmseqs createdb 3600genomes.4pub.cleaned.faa 3600genomes.4pub.cleaned.faa.mmseqsDB >mmseqs_createdb.log. mmseqs cluster 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu tmp --threads 48 -s 7.5 -c 0.5 --cov-mode 0 --max-seqs 5000 -e 0.001 --cluster-mode 0 >mmseqs_cluster.log. mmseqs createtsv 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB 3600genomes.4pub.cleaned.faa.mmseqsDB_clu 3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv >mmseqs_createtsv.log; ```. When I had a look of the final tsv file (3600genomes.4pub.cleaned.faa.mmseqsDB_clu.tsv), I got two more sequences (5,061,559 instead of 5,061,557). Looking in details 4 new sequences was added:; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_0; RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_1; GWA2_OP3_45_18_gwa2_scaffold_308_1_0. whereas 2 sequences were removed:; 'RIFCSPHIGHO2_02_FULL_CP_45_28_RIFCSPHIGHO2_02_FULL_CP_45_28_rifcsphigho2_02_scaffold_100_1'; 'GWA2_OP3_45_18_gwa2_scaffold_308_1'. looks like mmseqs added a _0 or _1 suffix to the names of the two sequences missing. I'm pretty sure that there are no redundant sequence names in my fasta file dataset (I checked it out). Is there an explanation for these suffix ? . many thanks . Raph",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/97
https://github.com/soedinglab/MMseqs2/issues/99:206,Testability,log,logo,206,I wanted to make visualization of a profile. I converted the profile to a pssm file and wanted to visualize it with e.g. weblogo. Does your pssm file follow any format definition or do I have to create the logo using a custom script?,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/99
https://github.com/soedinglab/MMseqs2/issues/101:1143,Availability,Mask,Mask,1143,"achieve this effect. I have configured passwordless ssh from master to slave through an ssh-key transfer. SSH can be accomplished through `ssh slave`. Moreover, there is a common NFS mounted to both nodes.; ; ## Steps to Reproduce (for bugs); First, I cd into the NFS directory (`'/mnt'`), then create the DB:. `mmseqs createdb /mnt/QUERY.fasta /mnt/DB`. which runs as expected. Then I run . `RUNNER=""mpirun -np 4 --host master,slave"" mmseqs cluster /mnt/DB /mnt/clu /mnt/tmp`. where /mnt is a NFS that is mounted to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:2530,Availability,mask,mask,2530,"emporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; -----------------------------------",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:3248,Availability,Mask,Mask,3248," 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse),",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:3966,Availability,Error,Error,3966," --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse), and have compiled MMseqs2 from source with the DHAVE_MPI=1 flag when invoking cmake. Thank you for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:3994,Availability,Error,Error,3994," --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse), and have compiled MMseqs2 from source with the DHAVE_MPI=1 flag when invoking cmake. Thank you for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:4043,Deployability,install,installations,4043," --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse), and have compiled MMseqs2 from source with the DHAVE_MPI=1 flag when invoking cmake. Thank you for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:161,Modifiability,config,configured,161,"## Expected Behavior; I am trying to run mmseqs cluster with the MPI runner option across two nodes (master, slave), but I am unable achieve this effect. I have configured passwordless ssh from master to slave through an ssh-key transfer. SSH can be accomplished through `ssh slave`. Moreover, there is a common NFS mounted to both nodes.; ; ## Steps to Reproduce (for bugs); First, I cd into the NFS directory (`'/mnt'`), then create the DB:. `mmseqs createdb /mnt/QUERY.fasta /mnt/DB`. which runs as expected. Then I run . `RUNNER=""mpirun -np 4 --host master,slave"" mmseqs cluster /mnt/DB /mnt/clu /mnt/tmp`. where /mnt is a NFS that is mounted to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:1794,Modifiability,extend,extendable,1794,"d to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:3328,Modifiability,extend,extendable,3328," 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse),",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:1942,Performance,perform,performs,1942,"et result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence leng",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:3476,Performance,perform,performs,3476," --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse), and have compiled MMseqs2 from source with the DHAVE_MPI=1 flag when invoking cmake. Thank you for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:4023,Performance,perform,performed,4023," --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse), and have compiled MMseqs2 from source with the DHAVE_MPI=1 flag when invoking cmake. Thank you for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:172,Security,password,passwordless,172,"## Expected Behavior; I am trying to run mmseqs cluster with the MPI runner option across two nodes (master, slave), but I am unable achieve this effect. I have configured passwordless ssh from master to slave through an ssh-key transfer. SSH can be accomplished through `ssh slave`. Moreover, there is a common NFS mounted to both nodes.; ; ## Steps to Reproduce (for bugs); First, I cd into the NFS directory (`'/mnt'`), then create the DB:. `mmseqs createdb /mnt/QUERY.fasta /mnt/DB`. which runs as expected. Then I run . `RUNNER=""mpirun -np 4 --host master,slave"" mmseqs cluster /mnt/DB /mnt/clu /mnt/tmp`. where /mnt is a NFS that is mounted to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set clu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:1773,Security,hash,hash,1773,"d to both the master and slave nodes. . ## MMseqs Output (for bugs); ```; Program call:; /mnt/DB /mnt/clu /mnt/tmp . MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Sub Matrix blosum62.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 20; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0.8; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Threads 2; Verbosity 3; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Single step clustering true; Cascaded clustering steps 3; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:2544,Security,hash,hash-shift,2544,"emporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; Compositional bias 1; Kmer per sequence 20; Shift hash 5; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; /mnt/DB /mnt/tmp/4359821638123540538/clu_redundancy /mnt/tmp/4359821638123540538/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 2 -; -sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; -----------------------------------",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/101:3285,Security,hash,hash,3285," 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 1 --max-rejected 21; 47483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescor; e-mode 0 ; MMseqs Version: 4f4d8125bed29b21005ea9c8ddf91ebc193be4ae-MPI; Cluster mode 0; Verbosity 3; Max depth connected component 1000; Similarity type 2; Threads 2; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 20; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Early exit false; Pseudo count a 1; Pseudo count b 1.5; Alphabet size 13; Kmer per sequence 20; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner mpirun -np 4 --host master,slave; --------------------------------------------------------------------------; mpirun was unable to launch the specified application as it could not find an executable:; Executable: mmseqs; Node: slave; while attempting to start process rank 1.; --------------------------------------------------------------------------; 2 total processes failed to start; Error: Alignment step died; Error: linclust died; ```. I performed identical installations of mmseqs on both machines. If I just run `mmseqs cluster /mnt/DB mnt/clu /mnt/tmp` on either machine, then it is able to work, but I would like to get the MPI functionality up if possible! Thank you. . ## Your Environment; I am working in Debian 8 (Jesse),",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101
https://github.com/soedinglab/MMseqs2/issues/102:164,Availability,error,errors,164,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:75,Integrability,rout,routine,75,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:198,Integrability,rout,routine,198,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:295,Integrability,rout,routine,295,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:136,Safety,redund,redundancy,136,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:933,Testability,test,test,933,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:1002,Testability,test,test,1002,"Hi,. I'm using the mmseqs hosted in linuxbrew version 3-be8f6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:1063,Testability,test,test,1063,"6. I'm using a routine to hierarchical cluster which I remove gradually the redundancy. ; I've got some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:1172,Testability,test,test,1172,"some errors when I try to execute this routine in different directory compared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2re",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:1233,Testability,test,test,1233,"ompared with; when execute all clusters in same directory. . The routine consists in:; 1- create the first DB (/home/base/first.db); 2- create directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found90.db tcdb_found.clu70 tcdb_found.clu70rep ; mmseqs resul",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:1419,Testability,test,test,1419,"reate directory ( e.g. /home/base/90id ); 3- execute the higher level of cluster and create tsv (e.g. 90% id) in this directory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found90.db tcdb_found.clu70 tcdb_found.clu70rep ; mmseqs result2flat tcdb_found90.db tcdb_found90.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header ; ```; Witch return me this in the last com",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/102:1508,Testability,test,test,1508,"ory with /home/base/first.db; 4- createsubdb in this directory (/home/base/90id/subset90.db); 5- back to previous dir (/home/base/) and create the next one (/home/base/80id); 6- execute the higher level of cluster and create tsv (e.g. 80% id) in this directory with /home/base/90id/subset90.db. Since all steps (prefilter, align, clust, createtsv) require the same db the bug identified was related to createtsv module. > acpguedes@haldane:~/test/any/id_0.8cov_0.3evalue_0.001$ mmseqs createtsv /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv; > Program call:; > /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db MMseqsClust MMseqsClust.tsv ; > ; > MMseqs Version: 	3-be8f6; > first sequence as respresentative	false; > ; > Query file is /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db; > Could not open data file /home/acpguedes/test/any/id_0.9cov_0.3evalue_0.001/subset.db_h!; > . I also get the same bug with result2flat:; ```; mmseqs createdb tcdb_found.fa tcdb_found.db -v 0 ; mkdir linclust_tmp ; mmseqs linclust tcdb_found.db tcdb_found.clu90 linclust_tmp -a -c 0.9 --min-seq-id 0.9 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found.db tcdb_found.clu90 tcdb_found.clu90rep ; mmseqs result2flat tcdb_found.db tcdb_found.db tcdb_found.clu90rep tcdb_found90.fa --use-fasta-header ; mmseqs createsubdb tcdb_found.clu90 tcdb_found.db tcdb_found90.db ; mmseqs linclust tcdb_found90.db tcdb_found.clu70 linclust_tmp -a -c 0.9 --min-seq-id 0.7 -v 0 --threads 15 ; mmseqs result2repseq tcdb_found90.db tcdb_found.clu70 tcdb_found.clu70rep ; mmseqs result2flat tcdb_found90.db tcdb_found90.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header ; ```; Witch return me this in the last command. > $ mmseqs result2flat tcdb_found90.db tcdb_found90.db tcdb_found.clu70rep tcdb_found70.fa --use-fasta-header; > Progr",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/102
https://github.com/soedinglab/MMseqs2/issues/103:587,Deployability,update,updated,587,"## Context; It appears that the documentation gives only 5 parameters for clusterupdate:; mmseqs clusterupdate oldDB newDB oldDB_clustering outDB tmp. However, from the code, it seems that mmseq2 actually requires 6 input parameters:; mmseqs clusterupdate OLDB NEWDB OLDCLUST NEWMAPDB NEWCLUST TMP_PATH. I am not sure what NEWMAPDB is vs NEWDB, and so I've tried running the code giving a unique name to each. The clustering appears to run, but the tools for generating fasta and tsv results fail (see detail below) . ## Expected Behavior; Looking to generate fasta and tsv results from updated clusters with a new database that contains both the old database and a set of new sequences. . ## Current Behavior; While clustering appears to run, I am not able to successfully generate fasta and tsv files. ; For the fasta, I get output that looks like the following: ; Entry does not contain a header!2509593Entry 4480592Entry ; Entry 1542108 does not contain a header! does not contain a header!4479347 does not contain a header!Entry ; 4477267; Entry ; Entry ; 5003334. For tsv, the tool fails with:; MMseqs Version: 	f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative	false; Target column 	0; Add Full Header 	false. Query file is x; Data file is x_clu ; Start writing file to x.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted. This issue was also brought to the attention of Dr. Söding in a recent email . Thank you, . Irena",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103
https://github.com/soedinglab/MMseqs2/issues/103:1428,Safety,Abort,Aborted,1428,"## Context; It appears that the documentation gives only 5 parameters for clusterupdate:; mmseqs clusterupdate oldDB newDB oldDB_clustering outDB tmp. However, from the code, it seems that mmseq2 actually requires 6 input parameters:; mmseqs clusterupdate OLDB NEWDB OLDCLUST NEWMAPDB NEWCLUST TMP_PATH. I am not sure what NEWMAPDB is vs NEWDB, and so I've tried running the code giving a unique name to each. The clustering appears to run, but the tools for generating fasta and tsv results fail (see detail below) . ## Expected Behavior; Looking to generate fasta and tsv results from updated clusters with a new database that contains both the old database and a set of new sequences. . ## Current Behavior; While clustering appears to run, I am not able to successfully generate fasta and tsv files. ; For the fasta, I get output that looks like the following: ; Entry does not contain a header!2509593Entry 4480592Entry ; Entry 1542108 does not contain a header! does not contain a header!4479347 does not contain a header!Entry ; 4477267; Entry ; Entry ; 5003334. For tsv, the tool fails with:; MMseqs Version: 	f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative	false; Target column 	0; Add Full Header 	false. Query file is x; Data file is x_clu ; Start writing file to x.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted. This issue was also brought to the attention of Dr. Söding in a recent email . Thank you, . Irena",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103
https://github.com/soedinglab/MMseqs2/issues/104:3000,Deployability,release,release,3000,"qres.protein.cluster.DB mmseqs2_cluster/pdb_seqres.protein.cluster.fasta; ./mmseqs2/bin/mmseqs linclust mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust /tmp/zcx/mmseqs2 --min-seq-id 0.9 --cov-mode 1 -c 0.9; ./mmseqs2/bin/mmseqs createseqfiledb mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust mmseqs2_cluster/pdb_seqres.protein.linclust.DB; ./mmseqs2/bin/mmseqs result2flat mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust.DB mmseqs2_cluster/pdb_seqres.protein.linclust.fasta; ```. ## MMseqs Output (for bugs); [pdb_seqres.protein.cluster.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2195015/pdb_seqres.protein.cluster.fasta.gz); [pdb_seqres.protein.linclust.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2195014/pdb_seqres.protein.linclust.fasta.gz); The output is compressed by gzip as github does not support .fasta file. ## Context; I suspect this is because short sequence has a low alignment score. When you are estimating sequence identity according to alignment score, you will get false negative for short sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e3f80a7b0a32b1bc4122b73c045a9dd2f7da42e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled SSE4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Support SSE but not AVX2. 125G.; * Operating system and version:; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 6.10 (Santiago); Release:	6.10; Codename:	Santiago",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104
https://github.com/soedinglab/MMseqs2/issues/104:3025,Deployability,Release,Release,3025,"qres.protein.cluster.DB mmseqs2_cluster/pdb_seqres.protein.cluster.fasta; ./mmseqs2/bin/mmseqs linclust mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust /tmp/zcx/mmseqs2 --min-seq-id 0.9 --cov-mode 1 -c 0.9; ./mmseqs2/bin/mmseqs createseqfiledb mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust mmseqs2_cluster/pdb_seqres.protein.linclust.DB; ./mmseqs2/bin/mmseqs result2flat mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.DB mmseqs2_cluster/pdb_seqres.protein.linclust.DB mmseqs2_cluster/pdb_seqres.protein.linclust.fasta; ```. ## MMseqs Output (for bugs); [pdb_seqres.protein.cluster.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2195015/pdb_seqres.protein.cluster.fasta.gz); [pdb_seqres.protein.linclust.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2195014/pdb_seqres.protein.linclust.fasta.gz); The output is compressed by gzip as github does not support .fasta file. ## Context; I suspect this is because short sequence has a low alignment score. When you are estimating sequence identity according to alignment score, you will get false negative for short sequence. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): e3f80a7b0a32b1bc4122b73c045a9dd2f7da42e3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): statically-compiled SSE4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Support SSE but not AVX2. 125G.; * Operating system and version:; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 6.10 (Santiago); Release:	6.10; Codename:	Santiago",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104
https://github.com/soedinglab/MMseqs2/issues/106:528,Security,access,access,528,"I wondering to know a simple thing about search tool. ; Since I read the [mmseqs paper](https://academic.oup.com/bioinformatics/article/32/9/1323/1744460) I was too interested and start to use it about 1 year with really good results. ; Recently I start to use to iterative searches, since the [wiki](https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter) report higher sensitivity of MMseqs compared with PSI-Blast as reported by this graph. . I wasn't able to reproduce this results, first because I have no access to dataset used to do it and at least I didn't find the parameters used in MMseqs2profile. . So I am just trying to do some different tests against different databases (NCBI nr, PDB, Uniprot50 20 ...) but I yet didn't find any parameter which de sensitivity of MMseqs with 3 or 4 iterations are higher than PSI-Blast. ; So my questions are: ; __Which are the best parameters on MMseqs search keep closer or better than default parameters used on PSI-Blast (NCBI reference)?__. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106
https://github.com/soedinglab/MMseqs2/issues/106:669,Testability,test,tests,669,"I wondering to know a simple thing about search tool. ; Since I read the [mmseqs paper](https://academic.oup.com/bioinformatics/article/32/9/1323/1744460) I was too interested and start to use it about 1 year with really good results. ; Recently I start to use to iterative searches, since the [wiki](https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter) report higher sensitivity of MMseqs compared with PSI-Blast as reported by this graph. . I wasn't able to reproduce this results, first because I have no access to dataset used to do it and at least I didn't find the parameters used in MMseqs2profile. . So I am just trying to do some different tests against different databases (NCBI nr, PDB, Uniprot50 20 ...) but I yet didn't find any parameter which de sensitivity of MMseqs with 3 or 4 iterations are higher than PSI-Blast. ; So my questions are: ; __Which are the best parameters on MMseqs search keep closer or better than default parameters used on PSI-Blast (NCBI reference)?__. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106
https://github.com/soedinglab/MMseqs2/issues/106:22,Usability,simpl,simple,22,"I wondering to know a simple thing about search tool. ; Since I read the [mmseqs paper](https://academic.oup.com/bioinformatics/article/32/9/1323/1744460) I was too interested and start to use it about 1 year with really good results. ; Recently I start to use to iterative searches, since the [wiki](https://github.com/soedinglab/MMseqs2/wiki#set-sensitivity--s-parameter) report higher sensitivity of MMseqs compared with PSI-Blast as reported by this graph. . I wasn't able to reproduce this results, first because I have no access to dataset used to do it and at least I didn't find the parameters used in MMseqs2profile. . So I am just trying to do some different tests against different databases (NCBI nr, PDB, Uniprot50 20 ...) but I yet didn't find any parameter which de sensitivity of MMseqs with 3 or 4 iterations are higher than PSI-Blast. ; So my questions are: ; __Which are the best parameters on MMseqs search keep closer or better than default parameters used on PSI-Blast (NCBI reference)?__. Thanks in advance",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106
https://github.com/soedinglab/MMseqs2/issues/107:384,Integrability,message,message,384,"Recently I came across the tool you have developed: MMseqs2 and I have tested for the protein search. It is very fast comparing to blastp. However, I noticed the number of hit is about 1/3 of the blastp hit if I use the most sensitive parameter -s 7.5 and the same evalue cutoff 0.01. The target database is about 2M sequence and the query is 10K sequence. I noticed a lot of warning message was printed ""Sequence 131 produces too many hits. Results might be truncated”. I have tried to change other parameters, such as —max-accept, but the situation does not change. It would be great if you could provide some information about how to produce all the hits as close as possible to blastp (with the same evalue cutoff), but much faster. Thanks.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107
https://github.com/soedinglab/MMseqs2/issues/107:71,Testability,test,tested,71,"Recently I came across the tool you have developed: MMseqs2 and I have tested for the protein search. It is very fast comparing to blastp. However, I noticed the number of hit is about 1/3 of the blastp hit if I use the most sensitive parameter -s 7.5 and the same evalue cutoff 0.01. The target database is about 2M sequence and the query is 10K sequence. I noticed a lot of warning message was printed ""Sequence 131 produces too many hits. Results might be truncated”. I have tried to change other parameters, such as —max-accept, but the situation does not change. It would be great if you could provide some information about how to produce all the hits as close as possible to blastp (with the same evalue cutoff), but much faster. Thanks.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107
https://github.com/soedinglab/MMseqs2/issues/109:192,Availability,error,error,192,"## Expected Behavior; DB index file should be created; Example for korarchaeum_cryptofilum (FASTA file attached below). ## Current Behavior; The index creation fails on some input files.; The error does not happen will all input file, but only with some specific files (e.g., the attached below). [korarchaeum_cryptofilum.txt](https://github.com/soedinglab/MMseqs2/files/2261764/korarchaeum_cryptofilum.txt). It should also be noted that if --max-seq-len is used in createdb to split some of the input sequences, the createindex does not fails!. ## Steps to Reproduce (for bugs); mmseqs createdb korarchaeum_cryptofilum kora_db; mmseqs createindex kora_db /tmp/. ## MMseqs Output (for bugs); createdb call:; ```; Program call:; ./korarchaeum_cryptofilum ./kora_db -v 3 . MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms>; ```. createindex call:; ```; Program call:; ./kora_db ./tmp/ -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; ./kora_db ./kora_db --sub-mat blosum62.out -k 0 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:1391,Availability,Mask,Mask,1391,"txt). It should also be noted that if --max-seq-len is used in createdb to split some of the input sequences, the createindex does not fails!. ## Steps to Reproduce (for bugs); mmseqs createdb korarchaeum_cryptofilum kora_db; mmseqs createindex kora_db /tmp/. ## MMseqs Output (for bugs); createdb call:; ```; Program call:; ./korarchaeum_cryptofilum ./kora_db -v 3 . MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms>; ```. createindex call:; ```; Program call:; ./kora_db ./tmp/ -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; ./kora_db ./kora_db --sub-mat blosum62.out -k 0 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --split 0 --split-memory-limit 0 --threads 40 -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3. Substitut",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:1969,Availability,mask,mask,1969," 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 9ms>; ```. createindex call:; ```; Program call:; ./kora_db ./tmp/ -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; ./kora_db ./kora_db --sub-mat blosum62.out -k 0 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --split 0 --split-memory-limit 0 --threads 40 -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLL",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:2244,Availability,Mask,Mask,2244,"5e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; ./kora_db ./kora_db --sub-mat blosum62.out -k 0 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --split 0 --split-memory-limit 0 --threads 40 -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:2642,Availability,Mask,Masked,2642,"e 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; ./kora_db ./kora_db --sub-mat blosum62.out -k 0 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --split 0 --split-memory-limit 0 --threads 40 -v 3. MMseqs Version: 	c97f09f3fe8f45aa133004f95e43c509c947196b; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:3123,Availability,MASK,MASKEDSEQINDEXDATA,3123,". results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Sensitivity 	7.5; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	40; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x6e5d1)[0x7f40f5a595d1]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x73db6)[0x7f40f5a5edb6]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x74b03)[0x7f40f5a5fb03]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_ZN23PrefilteringIndexReader15createIndexFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8DBReaderIjESA_P10BaseMatrixibbiiii+0x10be)[0x49147e]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z7indexdbiPPKcRK7Command+0x223)[0x4c1f33]; /home/salvocos/tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:3483,Availability,Error,Error,3483,"sing Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x6e5d1)[0x7f40f5a595d1]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x73db6)[0x7f40f5a5edb6]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x74b03)[0x7f40f5a5fb03]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_ZN23PrefilteringIndexReader15createIndexFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8DBReaderIjESA_P10BaseMatrixibbiiii+0x10be)[0x49147e]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z7indexdbiPPKcRK7Command+0x223)[0x4c1f33]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z10runCommandRK7CommandiPPKc+0x30)[0x442470]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(main+0x62)[0x4386c2]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(__libc_start_main+0xf5)[0x7f40f5a0c075]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:3508,Availability,Error,Error,3508,"EMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x6e5d1)[0x7f40f5a595d1]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x73db6)[0x7f40f5a5edb6]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x74b03)[0x7f40f5a5fb03]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_ZN23PrefilteringIndexReader15createIndexFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8DBReaderIjESA_P10BaseMatrixibbiiii+0x10be)[0x49147e]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z7indexdbiPPKcRK7Command+0x223)[0x4c1f33]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z10runCommandRK7CommandiPPKc+0x30)[0x442470]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(main+0x62)[0x4386c2]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(__libc_start_main+0xf5)[0x7f40f5a0c075]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_start+0x29)[0x43aaa9]; ======= Memory map: ========; 00400000-00",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:10960,Availability,error,error,10960,00:00 0; 7f40cb7f7000-7f40cbff7000 rw-p 00000000 00:00 0; 7f40cbff7000-7f40cbff8000 ---p 00000000 00:00 0; 7f40cbff8000-7f40cc7f8000 rw-p 00000000 00:00 0; 7f40cc7f8000-7f40cc7f9000 ---p 00000000 00:00 0; 7f40cc7f9000-7f40ccff9000 rw-p 00000000 00:00 0; 7f40ccff9000-7f40ccffa000 ---p 00000000 00:00 0; 7f40ccffa000-7f40cd7fa000 rw-p 00000000 00:00 0; ```. ## Context; The input file is part of the QfO 2011 dataset.; ftp://ftp.ebi.ac.uk/pub/databases/reference_proteomes/previous_releases/qfo_release-2011_04; As I previously wrote if --max-seq-len is used in createdb to split some of the input sequences createindex does not fail!. For example:; ```; mmseqs createdb --max-seq-len 1000 korarchaeum_cryptofilum kora_db; mmseqs createindex kora_db /tmp/; ```; Would create the DB idx file without failing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: c97f09f3fe8f45aa133004f95e43c509c947196b (NOTE: the error also happened with earlier versions); * Which MMseqs version was used: self-compiled using GNU Make 4.2.1 and cmake version 3.12.0 (make and cmake installed using Linux-brew); * For self-compiled and Homebrew:; ```; -- The CXX compiler identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSI,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11113,Deployability,install,installed,11113,--p 00000000 00:00 0; 7f40cc7f9000-7f40ccff9000 rw-p 00000000 00:00 0; 7f40ccff9000-7f40ccffa000 ---p 00000000 00:00 0; 7f40ccffa000-7f40cd7fa000 rw-p 00000000 00:00 0; ```. ## Context; The input file is part of the QfO 2011 dataset.; ftp://ftp.ebi.ac.uk/pub/databases/reference_proteomes/previous_releases/qfo_release-2011_04; As I previously wrote if --max-seq-len is used in createdb to split some of the input sequences createindex does not fail!. For example:; ```; mmseqs createdb --max-seq-len 1000 korarchaeum_cryptofilum kora_db; mmseqs createindex kora_db /tmp/; ```; Would create the DB idx file without failing. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: c97f09f3fe8f45aa133004f95e43c509c947196b (NOTE: the error also happened with earlier versions); * Which MMseqs version was used: self-compiled using GNU Make 4.2.1 and cmake version 3.12.0 (make and cmake installed using Linux-brew); * For self-compiled and Homebrew:; ```; -- The CXX compiler identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_E,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:14029,Energy Efficiency,monitor,monitor,14029,"t HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salvocos/tmp/test_sonicpara/mmseqs2_src/build; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 40 CPUs 500Gbytes of shared memory; ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual. ...; ```; * Operating system and version:; ```; $uname -a; Linux XXX 3.10.0-693.11.1.el7.x86_64 #1 SMP Fri Oct 27 05:39:05 EDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:13115,Modifiability,Config,Configuring,13115,"E_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salvocos/tmp/test_sonicpara/mmseqs2_src/build; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 40 CPUs 500Gbytes of shared memory; ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bm",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11722,Performance,Perform,Performing,11722,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11761,Performance,Perform,Performing,11761,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11841,Performance,optimiz,optimization,11841,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11873,Performance,Perform,Performing,11873,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11908,Performance,Perform,Performing,11908,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11953,Performance,Perform,Performing,11953,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11993,Performance,Perform,Performing,11993,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12043,Performance,Perform,Performing,12043,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12084,Performance,Perform,Performing,12084,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12135,Performance,Perform,Performing,12135,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12175,Performance,Perform,Performing,12175,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12225,Performance,Perform,Performing,12225,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12268,Performance,Perform,Performing,12268,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12321,Performance,Perform,Performing,12321,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12364,Performance,Perform,Performing,12364,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12417,Performance,Perform,Performing,12417,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12458,Performance,Perform,Performing,12458,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12509,Performance,Perform,Performing,12509,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12550,Performance,Perform,Performing,12550,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12601,Performance,Perform,Performing,12601,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12641,Performance,Perform,Performing,12641,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12787,Performance,Perform,Performing,12787,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12823,Performance,Perform,Performing,12823,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12900,Performance,Perform,Performing,12900,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12937,Performance,Perform,Performing,12937,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:13579,Performance,cache,cache,13579,"t HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salvocos/tmp/test_sonicpara/mmseqs2_src/build; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): 40 CPUs 500Gbytes of shared memory; ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual. ...; ```; * Operating system and version:; ```; $uname -a; Linux XXX 3.10.0-693.11.1.el7.x86_64 #1 SMP Fri Oct 27 05:39:05 EDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:3413,Safety,Abort,Aborted,3413,"sing Target split mode.; Needed memory (1380352223 byte) of total memory (486687909888 byte); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers... Index table: Masked residues: 3509; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 455436; DB Size: 514732616 (byte); Avg Kmer Size: 0.00711619; Top 10 Kmers; 	GPGGTL		17; 	LGNATT		8; 	LSLGLS		6; 	GPGGTT		6; 	SGQQAI		5; 	ALGNGK		5; 	LLGPGK		5; 	LVLILL		5; 	LLSLLL		5; 	LILLSL		5; Min Kmer Size: 0; Empty list: 63557059. Write ENTRIES (7); Write ENTRIESOFFSETS (8); Write SEQINDEXDATASIZE (12); Write SEQINDEXSEQOFFSET (13); Write MASKEDSEQINDEXDATA (11); Write ENTRIESNUM (9); Write SEQCOUNT (10); Write META (1); KmerSize: 6; AlphabetSize: 21; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 0; Write SCOREMATRIXNAME (2); Write VERSION (0); Write DBRINDEX (5); ./dbs/tmp_kora//createindex.sh: line 46: 6458 Aborted (core dumped) ""$MMSEQS"" indexdb ""$INPUT"" ""$INPUT"" $INDEX_PAR; Error: indexdb died. *** Error in `/mmseqs_binaries/c97f09/mmseqs': double free or corruption (!prev): 0x0000000000ed34c0 ***; ======= Backtrace: =========; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x6e5d1)[0x7f40f5a595d1]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x73db6)[0x7f40f5a5edb6]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(+0x74b03)[0x7f40f5a5fb03]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_ZN23PrefilteringIndexReader15createIndexFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8DBReaderIjESA_P10BaseMatrixibbiiii+0x10be)[0x49147e]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z7indexdbiPPKcRK7Command+0x223)[0x4c1f33]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(_Z10runCommandRK7CommandiPPKc+0x30)[0x442470]; /home/salvocos/tmp/test_sonicpara/mmseqs_binaries/c97f09/mmseqs(main+0x62)[0x4386c2]; /home/linuxbrew/.linuxbrew/lib/libc.so.6(__libc_start_main+0xf5)[0x7f40f5a0c075]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11385,Safety,Detect,Detecting,11385,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11421,Safety,Detect,Detecting,11421,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11464,Safety,Detect,Detecting,11464,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11499,Safety,Detect,Detecting,11499,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11733,Testability,Test,Test,11733,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11772,Testability,Test,Test,11772,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11884,Testability,Test,Test,11884,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11919,Testability,Test,Test,11919,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:11964,Testability,Test,Test,11964,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12004,Testability,Test,Test,12004,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12054,Testability,Test,Test,12054,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12095,Testability,Test,Test,12095,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12146,Testability,Test,Test,12146,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12186,Testability,Test,Test,12186,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12236,Testability,Test,Test,12236,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12279,Testability,Test,Test,12279,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12332,Testability,Test,Test,12332,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12375,Testability,Test,Test,12375,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12428,Testability,Test,Test,12428,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12469,Testability,Test,Test,12469,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12520,Testability,Test,Test,12520,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12561,Testability,Test,Test,12561,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12612,Testability,Test,Test,12612,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12652,Testability,Test,Test,12652,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12798,Testability,Test,Test,12798,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12834,Testability,Test,Test,12834,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12911,Testability,Test,Test,12911,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/109:12948,Testability,Test,Test,12948,"er identification is GNU 5.5.0; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++; -- Check for working CXX compiler: /home/linuxbrew/.linuxbrew/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Project Directory: /home/salvocos/tmp/test_sonicpara/mmseqs2_src; -- Compiler is GNU; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Success; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found AVX2 extensions, using flags: -march=native -mavx2 -mfpmath=sse -Wa,-q; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found OpenMP_CXX: -fopenmp (found version ""4.0""); -- Found OpenMP: TRUE (found version ""4.0""); -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /home/salv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/109
https://github.com/soedinglab/MMseqs2/issues/115:694,Availability,avail,available,694,"﻿Hello,. I am working with mmseqs2, I was asking myself about the order of fasta files when I use the command mmseqs _createdb / cluster_. I observed some little differences if I change the order of fasta sequences on the command _createdb_. Command line :. I used these commands :; ; - _mmseqs createdb --dont-shuffle (true/false) file.faa panproteome.db_. - _export TMP_DIR=$(mktemp -d ) && mmseqs cluster panproteome.db families.db ${TMP_DIR} --min-seq-id 0.8 -c 0.8 --threads 2 --kmer-per-seq 80 --max-seqs 300 && rm -rf ${TMP_DIR}_. - _mmseqs createtsv panproteome.db panproteome.db families.db families.tsv --first-seq-as-repr true_. I use : _MMseqs2 Version: 5.9375b_. I took a dataset (available in the attachment) for an example and I have this result :. results :; 		; 	order 1 :; 		dont-shuffle : false  -> cluster numbers :4296; 		dont-shuffle : true  -> cluster numbers : 4290. 	order 2 :; 		dont-shuffle : false -> cluster numbers : 4297; 		dont-shuffle : true -> cluster numbers : 4298. Is it an expected result to obtain different number of cluster depending on fasta sequence order ?. Attachment : fasta sequences ( 2 different order) and clustering files (families.tsv) for each condition.; [results.tar.gz](https://github.com/soedinglab/MMseqs2/files/2379387/results.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/115
https://github.com/soedinglab/MMseqs2/issues/115:1065,Integrability,depend,depending,1065,"﻿Hello,. I am working with mmseqs2, I was asking myself about the order of fasta files when I use the command mmseqs _createdb / cluster_. I observed some little differences if I change the order of fasta sequences on the command _createdb_. Command line :. I used these commands :; ; - _mmseqs createdb --dont-shuffle (true/false) file.faa panproteome.db_. - _export TMP_DIR=$(mktemp -d ) && mmseqs cluster panproteome.db families.db ${TMP_DIR} --min-seq-id 0.8 -c 0.8 --threads 2 --kmer-per-seq 80 --max-seqs 300 && rm -rf ${TMP_DIR}_. - _mmseqs createtsv panproteome.db panproteome.db families.db families.tsv --first-seq-as-repr true_. I use : _MMseqs2 Version: 5.9375b_. I took a dataset (available in the attachment) for an example and I have this result :. results :; 		; 	order 1 :; 		dont-shuffle : false  -> cluster numbers :4296; 		dont-shuffle : true  -> cluster numbers : 4290. 	order 2 :; 		dont-shuffle : false -> cluster numbers : 4297; 		dont-shuffle : true -> cluster numbers : 4298. Is it an expected result to obtain different number of cluster depending on fasta sequence order ?. Attachment : fasta sequences ( 2 different order) and clustering files (families.tsv) for each condition.; [results.tar.gz](https://github.com/soedinglab/MMseqs2/files/2379387/results.tar.gz)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/115
https://github.com/soedinglab/MMseqs2/issues/120:1268,Availability,Mask,Mask,1268,"or by using the ```easy-cluster``` or ```easy-linclust``` commands, a proper Fasta file should be created with the representative sequences. ## Current Behavior. A Fasta file is created that does not contain sequences but only the sequences IDs : . ```; >sequence_1; sequence_1; >sequence_2; sequence_2; >sequence_3; sequence_3; ```. ## Steps to Reproduce (for bugs). Run ```easy-cluster``` or ```easy-linclust``` on a protein Fasta file. ## MMseqs Output (for bugs). ```; Program call:; easy-cluster final_complete_sequences.fa.gz clusteringDB tmp --cov-mode 1 -c 0.9 --min-seq-id 0.9 --threads 2 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:3265,Availability,Mask,Mask,3265,"n 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:4951,Availability,mask,mask,4951,sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:5808,Availability,Mask,Mask,5808,"--no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:6384,Availability,mask,mask,6384," 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:6694,Availability,Mask,Mask,6694,"count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:17577,Availability,mask,mask,17577,les: 0h 0m 0s 167ms; Time for processing: 0h 0m 0s 520ms; Program call:; createsubdb tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Verbosity	3. Start writing to file tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy; Time for merging files: 0h 0m 0s 89ms; Time for processing: 0h 0m 0s 527ms; Program call:; prefilter tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 20 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 0 --pca 1 --pcb 1.5 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3. Initialising data structures...; Using 2 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1160320116 byte) of total memory (1886452531 byte); Target database: tmp/3578692915323364718/clu_tmp/3024874387480789614/,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:18094,Availability,Mask,Mask,18094,0s 527ms; Program call:; prefilter tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 20 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.9 --cov-mode 1 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 0 --pca 1 --pcb 1.5 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3. Initialising data structures...; Using 2 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1160320116 byte) of total memory (1886452531 byte); Target database: tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy(Size: 103377); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 0s 207ms; Query database: tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy(size=103377); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers...; ..........; Index table: Masked residues: 402243; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. DB ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:18954,Availability,Mask,Masked,18954,"ory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3. Initialising data structures...; Using 2 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1160320116 byte) of total memory (1886452531 byte); Target database: tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy(Size: 103377); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 0s 207ms; Query database: tmp/3578692915323364718/clu_tmp/3024874387480789614/input_step_redundancy(size=103377); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers...; ..........; Index table: Masked residues: 402243; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 2960353; DB Size: 529762118 (byte); Avg Kmer Size: 0.0462555; Top 10 Kmers; 	DFGTPF		324; 	PCTMEI		202; 	DGGHTL		201; 	PSTSWQ		201; 	SPYKSW		201; 	YTSSHY		200; 	GYWLHW		154; 	HWVPRY		134; 	DVFGIW		107; 	GYWLRW		99; Min Kmer Size: 0; Empty list: 61816461. Time for index table init: 0h 0m 5s 492ms; 	k-mers per position = 1.85326, k-mer match probability: 1.27642e-13; k-mer similarity threshold: 130; k-mer match probability: 1.27642e-13. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 103377; Target db start 1 to 103377; ..........; 1 k-mers per position.; 128 DB matches per sequence.; 0 Overflows.; 5 sequences passed prefiltering per query sequence.; Median result list size: 3; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 0m 6s 697ms; Time for merging files: 0h 0m 0s 263ms; Time for process",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:25324,Deployability,release,releases,25324,; Done.; Time for processing: 0h 0m 0s 831ms; Program call:; result2repseq tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_rep --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Threads 	2; Verbosity	3. Start computing representative sequences.; ..........; Time for merging files: 0h 0m 0s 505ms; Time for processing: 0h 0m 1s 206ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_rep tmp/3578692915323364718/req_seq.fasta --use-fasta-header -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	true; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_rep; Start writing file to tmp/3578692915323364718/req_seq.fasta; Done.; Time for processing: 0h 0m 0s 724ms; Program call:; createseqfiledb tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_seqs --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Min Sequences	1; Max Sequences	2147483647; HH format 	false; Threads 	2; Verbosity 	3. Time for merging files: 0h 0m 0s 526ms; Time for processing: 0h 0m 1s 303ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_seqs tmp/3578692915323364718/all_seqs.fasta -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	false; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_seqs; Start writing file to tmp/3578692915323364718/all_seqs.fasta; Done.; Time for processing: 0h 0m 1s 39ms; ```. ## Your Environment. * The problems is present with releases 5-9375b and 4-0b8cc but not on release 3-be8f6 . ; * Tested with pre-compiled binaries for Linux-AVX2; * Operating system and version: Amazon Linux 2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:25364,Deployability,release,release,25364,; Done.; Time for processing: 0h 0m 0s 831ms; Program call:; result2repseq tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_rep --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Threads 	2; Verbosity	3. Start computing representative sequences.; ..........; Time for merging files: 0h 0m 0s 505ms; Time for processing: 0h 0m 1s 206ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_rep tmp/3578692915323364718/req_seq.fasta --use-fasta-header -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	true; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_rep; Start writing file to tmp/3578692915323364718/req_seq.fasta; Done.; Time for processing: 0h 0m 0s 724ms; Program call:; createseqfiledb tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_seqs --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Min Sequences	1; Max Sequences	2147483647; HH format 	false; Threads 	2; Verbosity 	3. Time for merging files: 0h 0m 0s 526ms; Time for processing: 0h 0m 1s 303ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_seqs tmp/3578692915323364718/all_seqs.fasta -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	false; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_seqs; Start writing file to tmp/3578692915323364718/all_seqs.fasta; Done.; Time for processing: 0h 0m 1s 39ms; ```. ## Your Environment. * The problems is present with releases 5-9375b and 4-0b8cc but not on release 3-be8f6 . ; * Tested with pre-compiled binaries for Linux-AVX2; * Operating system and version: Amazon Linux 2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:7027,Energy Efficiency,Reduce,Reduced,7027,"lse; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --no-preload 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce8790",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:2066,Modifiability,extend,extendable,2066,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:4063,Modifiability,extend,extendable,4063,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:5016,Modifiability,extend,extendable,5016,sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:5892,Modifiability,extend,extendable,5892,"--no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:6489,Modifiability,extend,extendable,6489,"eshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Prog",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:6851,Modifiability,extend,extendable,6851," Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:118,Performance,perform,performing,118,"## Expected Behavior. According to the documentation, when extracting the representative sequences either by manually performing these steps:. ```; mmseqs result2repseq DB clu clu_rep; mmseqs result2flat DB DB clu_rep clu_rep.fasta --use-fasta-header; ```. or by using the ```easy-cluster``` or ```easy-linclust``` commands, a proper Fasta file should be created with the representative sequences. ## Current Behavior. A Fasta file is created that does not contain sequences but only the sequences IDs : . ```; >sequence_1; sequence_1; >sequence_2; sequence_2; >sequence_3; sequence_3; ```. ## Steps to Reproduce (for bugs). Run ```easy-cluster``` or ```easy-linclust``` on a protein Fasta file. ## MMseqs Output (for bugs). ```; Program call:; easy-cluster final_complete_sequences.fa.gz clusteringDB tmp --cov-mode 1 -c 0.9 --min-seq-id 0.9 --threads 2 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets th",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:1777,Performance,perform,performs,1777,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:3774,Performance,perform,performs,3774,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:6061,Performance,perform,performs,6061,"hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:8297,Performance,perform,performs,8297," sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --no-preload 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Coverage threshold 	0.9; Coverage Mode 	1; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Include identical Seq. Id. 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; No preload 	false; Threads 	2; Verbosity 	3. Prefilter database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref; Query database: tmp/3578692915323364718/input; Target database: tmp/3578692915323364718/input; Result database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1; ............; Done.; Time for merging files: 0h 0m 0s 224ms; Time for processing: 0h 0m 0s 948ms; Program call:; clust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pre_clust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component	1000; Similarity type 	2; Threads 	2; Verbosity 	3. Init...; Opening sequence database",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:12744,Performance,perform,performs,12744,"; Program call:; rescorediagonal tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_filter2 tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore2 --sub-mat blosum62.out --rescore-mode 1 --filter-hits 1 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --no-preload 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Rescore mode 	1; Remove hits by seq.id. and coverage 	true; E-value threshold 	0.001; Coverage threshold 	0.9; Coverage Mode 	1; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Include identical Seq. Id. 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; No preload 	false; Threads 	2; Verbosity 	3. Prefilter database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_filter2; Query database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy; Target database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy; Result database: tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore2; ..........; Done.; Time for merging files: 0h 0m 0s 228ms; Time for processing: 0h 0m 1s 2ms; Program call:; align tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/input_step_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore2 tmp/3578692915323364718/clu_tmp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:2044,Security,hash,hash,2044,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Program call:; createdb final_complete_sequences.fa.gz tmp/3578692915323364718/input --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ............Time for merging files: 0h 0m 0s 87ms; Time for merging files: 0h 0m 0s 98ms; Time for merging files: 0h 0m 0s 136ms; Time for merging files: 0h 0m 0s 91ms; Time for processing: 0h 0m 2s 526ms; Program call:; cluster tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_tmp -c 0.9 --cov-mode 1 --threads 2 --min-seq-id 0.9 --kmer-per-seq 80. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:4041,Security,hash,hash,4041,"6b8ce879092cd5; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.9; Coverage Mode 	1; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	2; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Score bias 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:4965,Security,hash,hash-shift,4965,sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0. Tmp tmp/3578692915323364718/clu_tmp folder does not exist or is not a directory.; Created dir tmp/3578692915323364718/clu_tmp; Set cluster settings automatically to s=1; Set cluster mode GREEDY MEM.; Set cluster iterations to 1; Program call:; linclust tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/clu_redundancy tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust --cluster-mode 3 --max-iterations 1000 --similarity-type 2 --threads 2 -v 3 --sub-mat blosum62.out -a 0 --alignment-mode 3 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --max-seqs 20 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:5847,Security,hash,hash,5847,"--no-preload 0 --pca 1 --pcb 1.5 --score-bias 0 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --remove-tmp-files 0. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Cluster mode 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	2; Verbosity 	3; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false;",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:6438,Security,hash,hash-shift,6438,"eshold 	0.9; Coverage Mode 	1; Max. sequence length 	65535; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Prog",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:6806,Security,hash,hash,6806," Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; kmermatcher tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 80 --mask 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 2 -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.9; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	1; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	2; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (153016352 byte) of total memory (1886452531 byte); Process file into 1 parts; Generate k-mers list 0; ............; Time for fill: 0h 0m 1s 398ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 1s 345ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 480ms; Time for fill: 0h 0m 0s 68ms; Time for merging files: 0h 0m 0s 267ms; Time for processing: 0h 0m 4s 39ms; Program call:; rescorediagonal tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref tmp/3578692915323364718/clu_tmp/3024874387480789614/linclust/12311873082051556251/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 --cov-mode 1 --min-seq-id 0.9 --seq-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/120:25386,Testability,Test,Tested,25386,; Done.; Time for processing: 0h 0m 0s 831ms; Program call:; result2repseq tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_rep --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Threads 	2; Verbosity	3. Start computing representative sequences.; ..........; Time for merging files: 0h 0m 0s 505ms; Time for processing: 0h 0m 1s 206ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_rep tmp/3578692915323364718/req_seq.fasta --use-fasta-header -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	true; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_rep; Start writing file to tmp/3578692915323364718/req_seq.fasta; Done.; Time for processing: 0h 0m 0s 724ms; Program call:; createseqfiledb tmp/3578692915323364718/input tmp/3578692915323364718/clu tmp/3578692915323364718/clu_seqs --threads 2 -v 3. MMseqs Version:	9375bafabbb1e714404887bcfe6b8ce879092cd5; Min Sequences	1; Max Sequences	2147483647; HH format 	false; Threads 	2; Verbosity 	3. Time for merging files: 0h 0m 0s 526ms; Time for processing: 0h 0m 1s 303ms; Program call:; result2flat tmp/3578692915323364718/input tmp/3578692915323364718/input tmp/3578692915323364718/clu_seqs tmp/3578692915323364718/all_seqs.fasta -v 3. MMseqs Version: 	9375bafabbb1e714404887bcfe6b8ce879092cd5; Use fasta header	false; Verbosity 	3. Query file is tmp/3578692915323364718/input; Target file is tmp/3578692915323364718/input; Data file is tmp/3578692915323364718/clu_seqs; Start writing file to tmp/3578692915323364718/all_seqs.fasta; Done.; Time for processing: 0h 0m 1s 39ms; ```. ## Your Environment. * The problems is present with releases 5-9375b and 4-0b8cc but not on release 3-be8f6 . ; * Tested with pre-compiled binaries for Linux-AVX2; * Operating system and version: Amazon Linux 2,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120
https://github.com/soedinglab/MMseqs2/issues/121:337,Testability,LOG,LOG,337,"## Expected Behavior; MMSEQS2 should return some hits when setting `-c` in iterative searches. ## Current Behavior; MMSEQS2 returns 0 hits; ## Steps to Reproduce (for bugs); mmseqs createdb QUERY.fasta QUERY; mmseqs createdb DB.fasta DB; mmseqs search QUERY DB results tmp --num-iterations 2 -e 1e-5 -c 0.4. ## MMseqs Output (for bugs); LOG file: [mmseqs_20180926.log](https://gist.github.com/genomewalker/4a53d096569f0a04bbf5986519c5f037). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 199d9b81f8cd6af9e66f97ef4dc0bd53c8fce12b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: **cmake version 3.5.1** and **gcc version 5.4.0**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): **Running in a [VM](https://gist.github.com/genomewalker/bd70eff7fefd8256d52bc1f267983d5a) with 8 cores and 32GB**; * Operating system and version: **Linux machine1b8b2ea2-4f57-414b-9577-c2897459a784 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/121
https://github.com/soedinglab/MMseqs2/issues/121:364,Testability,log,log,364,"## Expected Behavior; MMSEQS2 should return some hits when setting `-c` in iterative searches. ## Current Behavior; MMSEQS2 returns 0 hits; ## Steps to Reproduce (for bugs); mmseqs createdb QUERY.fasta QUERY; mmseqs createdb DB.fasta DB; mmseqs search QUERY DB results tmp --num-iterations 2 -e 1e-5 -c 0.4. ## MMseqs Output (for bugs); LOG file: [mmseqs_20180926.log](https://gist.github.com/genomewalker/4a53d096569f0a04bbf5986519c5f037). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 199d9b81f8cd6af9e66f97ef4dc0bd53c8fce12b; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): **self-compiled**; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: **cmake version 3.5.1** and **gcc version 5.4.0**; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): **Running in a [VM](https://gist.github.com/genomewalker/bd70eff7fefd8256d52bc1f267983d5a) with 8 cores and 32GB**; * Operating system and version: **Linux machine1b8b2ea2-4f57-414b-9577-c2897459a784 4.4.0-104-generic #127-Ubuntu SMP Mon Dec 11 12:16:42 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux**",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/121
https://github.com/soedinglab/MMseqs2/issues/124:503,Testability,log,log,503,"## Expected Behavior. In previous version of MMSeqs2, the ```createdb``` command was running in a time that was proportional to the number of input sequences. ## Current Behavior. With latest version 5 - 9375b the command scans and writes all the input sequences into the MMSeqs2 DB format, but then hangs out for several hours writing the ```database.0``` and ```database.index.0``` files, which seem like a copy of the ```database``` file already written. No additional information are written in the log file during this process. ## Steps to Reproduce (for bugs); Run ```createdb``` on Uniprot/TrEMBL Fasta file. ## MMseqs Output (for bugs). ```; Program call:; createdb uniprot_trembl.fasta.gz uniprot_trembl_Sept18. MMseqs Version: 	5.9375b; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ...................................................................................................	7 Mio. sequences processed; ...................................................................................................	8 Mio. sequences processed; ...................................................................................................	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/124
https://github.com/soedinglab/MMseqs2/issues/128:419,Availability,error,error,419,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128
https://github.com/soedinglab/MMseqs2/issues/128:1037,Availability,down,download,1037,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128
https://github.com/soedinglab/MMseqs2/issues/128:425,Integrability,message,message,425,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128
https://github.com/soedinglab/MMseqs2/issues/128:511,Testability,log,logs,511,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128
https://github.com/soedinglab/MMseqs2/issues/128:527,Testability,log,log,527,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128
https://github.com/soedinglab/MMseqs2/issues/128:592,Testability,log,log,592,"Hello . I am having an issue while trying to create profiles from alignments. I am using NOG trimmed alignments, only a few of them. ; I convert them to stockholm first with esl-reformat from HMMER ; esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; Then :; mmseqs convertmsa COG0016.sto COG0016_db; mmseqs msa2profile COG0016_db COG0016_profile. At the last step, for the profile creation I get an error message : ; Could not open COG0016_profile_seq_h.index.126 for writing!. Here are the logs : [COG0016.log](https://github.com/soedinglab/MMseqs2/files/2465789/COG0016.log). Whichever file I am using I always get this particular index 126. Also I used sudo for permission it does not change anything. Well, there is also a full collections of empty files appearing... just around 1021. ## Steps to Reproduce (for bugs); I am adding all intermediary files, though github doesn't let me upload things with exotic extensions, so I had to rename all of them by appending .txt at the end. wget http://eggnogdb.embl.de/download/eggnog_4.5/data/NOG/NOG.trimmed_algs.tar.gz; tar -xzf NOG.trimmed_algs.tar.gz; mv NOG_trimmed_algs/NOG.COG0016.clustalo_trimmed.fa ../; [NOG.COG0016.clustalo_trimmed.fa.txt](https://github.com/soedinglab/MMseqs2/files/2465875/NOG.COG0016.clustalo_trimmed.fa.txt); esl-reformat stockholm NOG.COG0016.clustalo_trimmed.fa > COG0016.sto; [COG0016.sto.txt](https://github.com/soedinglab/MMseqs2/files/2465876/COG0016.sto.txt); mmseqs convertmsa COG0016.sto COG0016_db; [COG0016_db.txt](https://github.com/soedinglab/MMseqs2/files/2465877/COG0016_db.txt); [COG0016_db.index.txt](https://github.com/soedinglab/MMseqs2/files/2465879/COG0016_db.index.txt); mmseqs msa2profile COG0016_db COG0016_profile. It would be cool if you could help me with that. Best,. Seb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/128
https://github.com/soedinglab/MMseqs2/issues/130:168,Availability,error,error,168,"## Expected Behavior; Precompute mmseqs index tables are generate using `createindex`. ## Current Behavior; Fails after a few minutes of computation with the following error message:; **indexdb died**. ## Steps to Reproduce (for bugs). > Download the Uniclust30 database (August 2018); `wget --verbose http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz; `. > Extract the downloaded archive . > Convert the hhm file (uniclust30_2018_08_hhm_db) to MMseqs profile DB; `mseqs convertprofiledb uniclust30_2018_08_hhm_db profile_from_hmm --threads 30 -v 3; `. > Generate the index; `mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3`. ## MMseqs Output (for bugs); ```; > mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3; Program call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:238,Availability,Down,Download,238,"## Expected Behavior; Precompute mmseqs index tables are generate using `createindex`. ## Current Behavior; Fails after a few minutes of computation with the following error message:; **indexdb died**. ## Steps to Reproduce (for bugs). > Download the Uniclust30 database (August 2018); `wget --verbose http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz; `. > Extract the downloaded archive . > Convert the hhm file (uniclust30_2018_08_hhm_db) to MMseqs profile DB; `mseqs convertprofiledb uniclust30_2018_08_hhm_db profile_from_hmm --threads 30 -v 3; `. > Generate the index; `mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3`. ## MMseqs Output (for bugs); ```; > mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3; Program call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:404,Availability,down,downloaded,404,"## Expected Behavior; Precompute mmseqs index tables are generate using `createindex`. ## Current Behavior; Fails after a few minutes of computation with the following error message:; **indexdb died**. ## Steps to Reproduce (for bugs). > Download the Uniclust30 database (August 2018); `wget --verbose http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz; `. > Extract the downloaded archive . > Convert the hhm file (uniclust30_2018_08_hhm_db) to MMseqs profile DB; `mseqs convertprofiledb uniclust30_2018_08_hhm_db profile_from_hmm --threads 30 -v 3; `. > Generate the index; `mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3`. ## MMseqs Output (for bugs); ```; > mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3; Program call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:1068,Availability,Mask,Mask,1068,"rbose http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz; `. > Extract the downloaded archive . > Convert the hhm file (uniclust30_2018_08_hhm_db) to MMseqs profile DB; `mseqs convertprofiledb uniclust30_2018_08_hhm_db profile_from_hmm --threads 30 -v 3; `. > Generate the index; `mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3`. ## MMseqs Output (for bugs); ```; > mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3; Program call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and sp",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:1801,Availability,mask,mask,1801,"m call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:2070,Availability,Mask,Mask,2070,"e 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:2815,Availability,down,downloaded,2815, --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonst,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:2542,Deployability,release,release,2542,Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	2147483647; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3. Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fp,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:3826,Energy Efficiency,monitor,monitor,3826," Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:174,Integrability,message,message,174,"## Expected Behavior; Precompute mmseqs index tables are generate using `createindex`. ## Current Behavior; Fails after a few minutes of computation with the following error message:; **indexdb died**. ## Steps to Reproduce (for bugs). > Download the Uniclust30 database (August 2018); `wget --verbose http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz; `. > Extract the downloaded archive . > Convert the hhm file (uniclust30_2018_08_hhm_db) to MMseqs profile DB; `mseqs convertprofiledb uniclust30_2018_08_hhm_db profile_from_hmm --threads 30 -v 3; `. > Generate the index; `mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3`. ## MMseqs Output (for bugs); ```; > mmseqs createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3; Program call:; createindex ./profile_from_hhm/profile_from_hmm ./tmp -k 5 -s 7 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	1; Spaced Kmer 	1; Spaced k-mer pattern; Sensitivity 	7; K-score 	0; Include Header 	false; Split DB 	0; Split Memory Limit 	0; Threads 	36; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Tmp ./tmp folder does not exist or is not a directory.; Created dir ./tmp; Program call:; indexdb ./profile_from_hhm/profile_from_hmm ./profile_from_hhm/profile_from_hmm --sub-mat blosum62.out -k 5 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 1 --spaced-kmer-mode 1 -s 7 --k-score 2147483647 --include-headers 0 --split 0 --split-memory-limit 0 --threads 36 -v 3. MMseqs Version: 	6.f5a1c; Sub Matrix 	blosum62.out; K-mer size 	5; Alphabe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/130:3376,Performance,cache,cache,3376," Substitution matrices...; Use kmer size 5 and split 1 using Target split mode.; Needed memory (20178976034 byte) of total memory (486687909888 byte); Index table: counting k-mers... ```. ## Context; Trying to generate a profile DB from the file `uniclust30_2018_08_hhm_db` contained the 18-08 release of Uniclust30; `http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust30_2018_08_hhsuite.tar.gz`; I am using `convertprofiledb` and then `createindex`... **NOTE:** I have used the same procedure to generate the profile DB using the HHblits profiles for Pfam 31 downloaded from:; `http://wwwuser.gwdg.de/%7Ecompbiol/data/hhsuite/databases/hhsuite_dbs/pfamA_31.0.tgz`. ## Your Environment; > MMseqs Version: 6.f5a1c; [f5a1cdb](https://github.com/soedinglab/MMseqs2/commit/f5a1cdb44c996d6be229226b09ecc687646c0c12); > MMseqs was self-compiled; > gcc (Homebrew gcc 5.5.0_4) 5.5.0; > cmake 3.12.3. >Server specifications:. ```; less /proc/cpuinfo. processor	: 0; vendor_id	: GenuineIntel; cpu family	: 6; model		: 63; model name	: Intel(R) Xeon(R) CPU E5-4627 v3 @ 2.60GHz; stepping	: 2; microcode	: 0x3a; cpu MHz		: 3001.882; cache size	: 25600 KB; physical id	: 0; siblings	: 10; core id		: 0; cpu cores	: 10; apicid		: 0; initial apicid	: 0; fpu		: yes; fpu_exception	: yes; cpuid level	: 15; wp		: yes; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; bogomips	: 5199.77; clflush size	: 64; cache_alignment	: 64; address sizes	: 46 bits physical, 48 bits virtual; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130
https://github.com/soedinglab/MMseqs2/issues/131:209,Availability,error,error,209,"## Expected Behavior; I'm trying to follow the workflow in the readme for [clustering using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) but I keep getting the following error during the `search` step.; ## Current Behavior; ```; Could not get realpath of cog0303.fa_DB_CLU_0.7_0.5_repseq_h!; Error: Create profile died; ```. ## Steps to Reproduce (for bugs). ```; wget ftp://ftp.ncbi.nih.gov/pub/wolf/COGs/COG0303/cog0303.fa; touch cog0303.fa; mmseqs2/bin/mmseqs createdb cog0303.fa cog0303.fa_DB; mmseqs2/bin/mmseqs cluster cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5 /tmp -s 6 --min-seq-id 0.7 -c 0.5 --cluster-mode 1; mmseqs2/bin/mmseqs createsubdb cog0303.fa_DB_CLU_0.7_0.5 cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5_repseq; mmseqs2/bin/mmseqs search cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search /tmp --num-iterations 3 --add-self-matches; mmseqs2/bin/mmseqs clust cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search cog0303.fa_DB_CLU_0.7_0.5_repseq_search_clust --cluster-mode 1 -s 6; ```. ## Your Environment; I'm running this in an EC2 c5.4xlarge instance with the following OS information; ```; NAME=""Ubuntu""; VERSION=""16.04.4 LTS (Xenial Xerus)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 16.04.4 LTS""; VERSION_ID=""16.04""; HOME_URL=""http://www.ubuntu.com/""; SUPPORT_URL=""http://help.ubuntu.com/""; BUG_REPORT_URL=""http://bugs.launchpad.net/ubuntu/""; VERSION_CODENAME=xenial; UBUNTU_CODENAME=xenial; MemTotal=31897300 kB; ```; I downloaded MMseqs2 Release 6-f5a1c from github with the SSE4.1 version of the binary. Any idea what I'm doing wrong?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/131
https://github.com/soedinglab/MMseqs2/issues/131:331,Availability,Error,Error,331,"## Expected Behavior; I'm trying to follow the workflow in the readme for [clustering using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) but I keep getting the following error during the `search` step.; ## Current Behavior; ```; Could not get realpath of cog0303.fa_DB_CLU_0.7_0.5_repseq_h!; Error: Create profile died; ```. ## Steps to Reproduce (for bugs). ```; wget ftp://ftp.ncbi.nih.gov/pub/wolf/COGs/COG0303/cog0303.fa; touch cog0303.fa; mmseqs2/bin/mmseqs createdb cog0303.fa cog0303.fa_DB; mmseqs2/bin/mmseqs cluster cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5 /tmp -s 6 --min-seq-id 0.7 -c 0.5 --cluster-mode 1; mmseqs2/bin/mmseqs createsubdb cog0303.fa_DB_CLU_0.7_0.5 cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5_repseq; mmseqs2/bin/mmseqs search cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search /tmp --num-iterations 3 --add-self-matches; mmseqs2/bin/mmseqs clust cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search cog0303.fa_DB_CLU_0.7_0.5_repseq_search_clust --cluster-mode 1 -s 6; ```. ## Your Environment; I'm running this in an EC2 c5.4xlarge instance with the following OS information; ```; NAME=""Ubuntu""; VERSION=""16.04.4 LTS (Xenial Xerus)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 16.04.4 LTS""; VERSION_ID=""16.04""; HOME_URL=""http://www.ubuntu.com/""; SUPPORT_URL=""http://help.ubuntu.com/""; BUG_REPORT_URL=""http://bugs.launchpad.net/ubuntu/""; VERSION_CODENAME=xenial; UBUNTU_CODENAME=xenial; MemTotal=31897300 kB; ```; I downloaded MMseqs2 Release 6-f5a1c from github with the SSE4.1 version of the binary. Any idea what I'm doing wrong?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/131
https://github.com/soedinglab/MMseqs2/issues/131:1555,Availability,down,downloaded,1555,"## Expected Behavior; I'm trying to follow the workflow in the readme for [clustering using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) but I keep getting the following error during the `search` step.; ## Current Behavior; ```; Could not get realpath of cog0303.fa_DB_CLU_0.7_0.5_repseq_h!; Error: Create profile died; ```. ## Steps to Reproduce (for bugs). ```; wget ftp://ftp.ncbi.nih.gov/pub/wolf/COGs/COG0303/cog0303.fa; touch cog0303.fa; mmseqs2/bin/mmseqs createdb cog0303.fa cog0303.fa_DB; mmseqs2/bin/mmseqs cluster cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5 /tmp -s 6 --min-seq-id 0.7 -c 0.5 --cluster-mode 1; mmseqs2/bin/mmseqs createsubdb cog0303.fa_DB_CLU_0.7_0.5 cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5_repseq; mmseqs2/bin/mmseqs search cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search /tmp --num-iterations 3 --add-self-matches; mmseqs2/bin/mmseqs clust cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search cog0303.fa_DB_CLU_0.7_0.5_repseq_search_clust --cluster-mode 1 -s 6; ```. ## Your Environment; I'm running this in an EC2 c5.4xlarge instance with the following OS information; ```; NAME=""Ubuntu""; VERSION=""16.04.4 LTS (Xenial Xerus)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 16.04.4 LTS""; VERSION_ID=""16.04""; HOME_URL=""http://www.ubuntu.com/""; SUPPORT_URL=""http://help.ubuntu.com/""; BUG_REPORT_URL=""http://bugs.launchpad.net/ubuntu/""; VERSION_CODENAME=xenial; UBUNTU_CODENAME=xenial; MemTotal=31897300 kB; ```; I downloaded MMseqs2 Release 6-f5a1c from github with the SSE4.1 version of the binary. Any idea what I'm doing wrong?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/131
https://github.com/soedinglab/MMseqs2/issues/131:1574,Deployability,Release,Release,1574,"## Expected Behavior; I'm trying to follow the workflow in the readme for [clustering using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) but I keep getting the following error during the `search` step.; ## Current Behavior; ```; Could not get realpath of cog0303.fa_DB_CLU_0.7_0.5_repseq_h!; Error: Create profile died; ```. ## Steps to Reproduce (for bugs). ```; wget ftp://ftp.ncbi.nih.gov/pub/wolf/COGs/COG0303/cog0303.fa; touch cog0303.fa; mmseqs2/bin/mmseqs createdb cog0303.fa cog0303.fa_DB; mmseqs2/bin/mmseqs cluster cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5 /tmp -s 6 --min-seq-id 0.7 -c 0.5 --cluster-mode 1; mmseqs2/bin/mmseqs createsubdb cog0303.fa_DB_CLU_0.7_0.5 cog0303.fa_DB cog0303.fa_DB_CLU_0.7_0.5_repseq; mmseqs2/bin/mmseqs search cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search /tmp --num-iterations 3 --add-self-matches; mmseqs2/bin/mmseqs clust cog0303.fa_DB_CLU_0.7_0.5_repseq cog0303.fa_DB_CLU_0.7_0.5_repseq_search cog0303.fa_DB_CLU_0.7_0.5_repseq_search_clust --cluster-mode 1 -s 6; ```. ## Your Environment; I'm running this in an EC2 c5.4xlarge instance with the following OS information; ```; NAME=""Ubuntu""; VERSION=""16.04.4 LTS (Xenial Xerus)""; ID=ubuntu; ID_LIKE=debian; PRETTY_NAME=""Ubuntu 16.04.4 LTS""; VERSION_ID=""16.04""; HOME_URL=""http://www.ubuntu.com/""; SUPPORT_URL=""http://help.ubuntu.com/""; BUG_REPORT_URL=""http://bugs.launchpad.net/ubuntu/""; VERSION_CODENAME=xenial; UBUNTU_CODENAME=xenial; MemTotal=31897300 kB; ```; I downloaded MMseqs2 Release 6-f5a1c from github with the SSE4.1 version of the binary. Any idea what I'm doing wrong?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/131
https://github.com/soedinglab/MMseqs2/issues/132:510,Availability,Down,Downloaded,510,"## Expected Behavior; Attempting to run to convert annotation mapping file; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## Current Behavior; Can not find accession in mapping:. Could not find accession Q6P378 in mapping!; Could not find accession P34974 in mapping!; Could not find accession Q9Z1S9 in mapping!. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Downloaded all viral proteins from UniProtKB; 2) Created target DB with UniProtKB entries. mmseqs createdb target.fasta targetDB. 3) Confirmed targetBD.lookup format; 0	H8YHR3; 1	A0A0E3HJU1; 2	A0A0M3M679; 3	A0A142IHD3; 4	A0A1D8Q0G9; 5	I3XPF8; 6	Q66N09; 7	D5XLT2; 8	D9IRE9; 9	Q50BU6. 4) Downloaded and concatenated uniprot_sprot_trembl.dat.gz. 5) Ran:; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132
https://github.com/soedinglab/MMseqs2/issues/132:796,Availability,Down,Downloaded,796,"## Expected Behavior; Attempting to run to convert annotation mapping file; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## Current Behavior; Can not find accession in mapping:. Could not find accession Q6P378 in mapping!; Could not find accession P34974 in mapping!; Could not find accession Q9Z1S9 in mapping!. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Downloaded all viral proteins from UniProtKB; 2) Created target DB with UniProtKB entries. mmseqs createdb target.fasta targetDB. 3) Confirmed targetBD.lookup format; 0	H8YHR3; 1	A0A0E3HJU1; 2	A0A0M3M679; 3	A0A142IHD3; 4	A0A1D8Q0G9; 5	I3XPF8; 6	Q66N09; 7	D5XLT2; 8	D9IRE9; 9	Q50BU6. 4) Downloaded and concatenated uniprot_sprot_trembl.dat.gz. 5) Ran:; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132
https://github.com/soedinglab/MMseqs2/issues/132:220,Security,access,accession,220,"## Expected Behavior; Attempting to run to convert annotation mapping file; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## Current Behavior; Can not find accession in mapping:. Could not find accession Q6P378 in mapping!; Could not find accession P34974 in mapping!; Could not find accession Q9Z1S9 in mapping!. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Downloaded all viral proteins from UniProtKB; 2) Created target DB with UniProtKB entries. mmseqs createdb target.fasta targetDB. 3) Confirmed targetBD.lookup format; 0	H8YHR3; 1	A0A0E3HJU1; 2	A0A0M3M679; 3	A0A142IHD3; 4	A0A1D8Q0G9; 5	I3XPF8; 6	Q66N09; 7	D5XLT2; 8	D9IRE9; 9	Q50BU6. 4) Downloaded and concatenated uniprot_sprot_trembl.dat.gz. 5) Ran:; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132
https://github.com/soedinglab/MMseqs2/issues/132:258,Security,access,accession,258,"## Expected Behavior; Attempting to run to convert annotation mapping file; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## Current Behavior; Can not find accession in mapping:. Could not find accession Q6P378 in mapping!; Could not find accession P34974 in mapping!; Could not find accession Q9Z1S9 in mapping!. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Downloaded all viral proteins from UniProtKB; 2) Created target DB with UniProtKB entries. mmseqs createdb target.fasta targetDB. 3) Confirmed targetBD.lookup format; 0	H8YHR3; 1	A0A0E3HJU1; 2	A0A0M3M679; 3	A0A142IHD3; 4	A0A1D8Q0G9; 5	I3XPF8; 6	Q66N09; 7	D5XLT2; 8	D9IRE9; 9	Q50BU6. 4) Downloaded and concatenated uniprot_sprot_trembl.dat.gz. 5) Ran:; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132
https://github.com/soedinglab/MMseqs2/issues/132:303,Security,access,accession,303,"## Expected Behavior; Attempting to run to convert annotation mapping file; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## Current Behavior; Can not find accession in mapping:. Could not find accession Q6P378 in mapping!; Could not find accession P34974 in mapping!; Could not find accession Q9Z1S9 in mapping!. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Downloaded all viral proteins from UniProtKB; 2) Created target DB with UniProtKB entries. mmseqs createdb target.fasta targetDB. 3) Confirmed targetBD.lookup format; 0	H8YHR3; 1	A0A0E3HJU1; 2	A0A0M3M679; 3	A0A142IHD3; 4	A0A1D8Q0G9; 5	I3XPF8; 6	Q66N09; 7	D5XLT2; 8	D9IRE9; 9	Q50BU6. 4) Downloaded and concatenated uniprot_sprot_trembl.dat.gz. 5) Ran:; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132
https://github.com/soedinglab/MMseqs2/issues/132:348,Security,access,accession,348,"## Expected Behavior; Attempting to run to convert annotation mapping file; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## Current Behavior; Can not find accession in mapping:. Could not find accession Q6P378 in mapping!; Could not find accession P34974 in mapping!; Could not find accession Q9Z1S9 in mapping!. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. 1) Downloaded all viral proteins from UniProtKB; 2) Created target DB with UniProtKB entries. mmseqs createdb target.fasta targetDB. 3) Confirmed targetBD.lookup format; 0	H8YHR3; 1	A0A0E3HJU1; 2	A0A0M3M679; 3	A0A142IHD3; 4	A0A1D8Q0G9; 5	I3XPF8; 6	Q66N09; 7	D5XLT2; 8	D9IRE9; 9	Q50BU6. 4) Downloaded and concatenated uniprot_sprot_trembl.dat.gz. 5) Ran:; mmseqs convertkb uniprot_sprot_trembl.dat.gz targetDB.mapping --kb-columns OX --mapping-file targetDB.lookup. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132
https://github.com/soedinglab/MMseqs2/issues/134:1402,Availability,Mask,Mask,1402," call:; > search tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tcdb_result.db tmp --threads 15 -s 7.5 --num-iterations 3 -a --max-seqs 17702628 -c 0.8 --add-self-matches ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Spaced k-mer pattern 	; > Rescore mode 	0; > Remove hits by seq.id. and coverage 	false; > Sort results 	0; > In substitution scoring mode, performs global alignment along the diagonal	false; > Mask profile 	1; > Profile e-value threshold 	0.1; > Use global sequence weighting 	false; > Filter MSA 	1; > Maximum sequence identity threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:1664,Availability,Mask,Mask,1664,"x 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Spaced k-mer pattern 	; > Rescore mode 	0; > Remove hits by seq.id. and coverage 	false; > Sort results 	0; > In substitution scoring mode, performs global alignment along the diagonal	false; > Mask profile 	1; > Profile e-value threshold 	0.1; > Use global sequence weighting 	false; > Filter MSA 	1; > Maximum sequence identity threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:2863,Availability,mask,mask,2863,"mum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.out -s 7.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 17702628 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:3433,Availability,Mask,Mask,3433,ce limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.out -s 7.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 17702628 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blosum62.out; > Substitution matrices...; > Substitution matrices...; > Use kmer size 7 and split 1 using Target split mode.; > Needed memory (68450582001 byte) of total memory (181308646195 byte); > Target database: /databases/fadb/freeze/all.mmseqs(Size: 17702628); > Query database type: Aminoacid; > Target database type: Aminoacid; > Time for init: 0h 3m 7s 669ms; > Query database: tcd,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:3923,Availability,Mask,Masked,3923,d-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blosum62.out; > Substitution matrices...; > Substitution matrices...; > Use kmer size 7 and split 1 using Target split mode.; > Needed memory (68450582001 byte) of total memory (181308646195 byte); > Target database: /databases/fadb/freeze/all.mmseqs(Size: 17702628); > Query database type: Aminoacid; > Target database type: Aminoacid; > Time for init: 0h 3m 7s 669ms; > Query database: tcdb_query.nr.db(size=13311); > Process prefiltering step 1 of 1; > ; > k-mer similarity threshold: 81; > k-mer match probability: 0; > ; > Starting prefiltering scores calculation (step 1 of 1); > Query db start 1 to 13311; > Target db start 1 to 17702628; > Sequence 421 produces too many hits. Results might be truncated; > Sequence 470 produces too many hits. Results might be truncated; > Sequence 468 produces too many hits. Results might be truncated; > Sequence 1015 produces,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:8222,Availability,Mask,Masked,8222,"7 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.1; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	true; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id.	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > ; > Init data structures...; > Compute score only.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blosum62.out; > Touch data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:8503,Availability,Error,Error,8503,"d. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	true; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id.	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > ; > Init data structures...; > Compute score only.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blosum62.out; > Touch data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:9776,Energy Efficiency,monitor,monitor,9776,"h data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke ; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:7290,Modifiability,extend,extend,7290,s too many hits. Results might be truncated; > Sequence 12971 produces too many hits. Results might be truncated; > ; > 38654 k-mers per position.; > 57944556 DB matches per sequence.; > 8775 Overflows.; > 1852622 sequences passed prefiltering per query sequence.; > Median result list size: 1612533; > 0 sequences with 0 size result lists.; > ; > Time for prefiltering scores calculation: 0h 56m 42s 147ms; > Time for merging files: 0h 17m 3s 113ms; > Time for processing: 1h 16m 55s 652ms; > Program call:; > align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.1; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	true; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id.	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > ; > Init data structures...; > Compute score only.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: 7; > CompBiasCorr: 1; > AlphabetSize: 21; > Masked: 1; > Spaced: 1; > KmerScore: 81; > SequenceType: 0; > Headers1: 1; > Headers2: 0; > ScoreMatrix: blo,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:1610,Performance,perform,performs,1610,"x 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.001; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	false; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id. 	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Spaced Kmer 	1; > Spaced k-mer pattern 	; > Rescore mode 	0; > Remove hits by seq.id. and coverage 	false; > Sort results 	0; > In substitution scoring mode, performs global alignment along the diagonal	false; > Mask profile 	1; > Profile e-value threshold 	0.1; > Use global sequence weighting 	false; > Filter MSA 	1; > Maximum sequence identity threshold 	0.9; > Minimum seq. id. 	0; > Minimum score per column 	-20; > Minimum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:2941,Performance,load,load-mode,2941,"mum coverage 	0; > Select n most diverse seqs 	1000; > Omit Consensus 	false; > Min codons in orf 	30; > Max codons in length 	32734; > Max orf gaps 	2147483647; > Contig start mode 	2; > Contig end mode 	2; > Orf start mode 	1; > Forward Frames 	1,2,3; > Reverse Frames 	1,2,3; > Translation Table 	1; > Use all table starts 	false; > Offset of numeric ids 	0; > Add Orf Stop 	false; > Number search iterations 	3; > Start sensitivity 	4; > Search steps 	1; > Run a seq-profile search in slice mode 	false; > Strand selection 	1; > Disk space limit 	0; > Sets the MPI runner 	; > Remove Temporary Files 	false; > ; > Program call:; > prefilter tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 --sub-mat blosum62.out -s 7.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 17702628 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 1 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Sensitivity 	7.5; > K-mer size 	0; > K-score 	2147483647; > Alphabet size 	21; > Max. sequence length 	65535; > Max. results per query 	17702628; > Offset result 	0; > Split DB 	0; > Split mode 	2; > Split Memory Limit 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Compositional bias 	1; > Diagonal Scoring 	1; > Exact k-mer matching 	0; > Mask Residues 	1; > Minimum Diagonal score 	15; > Include identical Seq. Id.	true; > Spaced Kmer 	1; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Spaced k-mer pattern 	; > Threads 	15; > Verbosity 	3; > ; > Initialising data structures...; > Using 15 threads.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength: 65535; > KmerSize: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:7225,Performance,load,load-mode,7225,uncated; > .Sequence 10717 produces too many hits. Results might be truncated; > Sequence 11844 produces too many hits. Results might be truncated; > Sequence 12630 produces too many hits. Results might be truncated; > Sequence 12971 produces too many hits. Results might be truncated; > ; > 38654 k-mers per position.; > 57944556 DB matches per sequence.; > 8775 Overflows.; > 1852622 sequences passed prefiltering per query sequence.; > Median result list size: 1612533; > 0 sequences with 0 size result lists.; > ; > Time for prefiltering scores calculation: 0h 56m 42s 147ms; > Time for merging files: 0h 17m 3s 113ms; > Time for processing: 1h 16m 55s 652ms; > Program call:; > align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3 ; > ; > MMseqs Version: 	7ca117893675cdca309e2c9dfc444bbc7462e858; > Sub Matrix 	blosum62.out; > Add backtrace 	true; > Alignment mode 	2; > E-value threshold 	0.1; > Seq. Id Threshold 	0; > Seq. Id. Mode 	0; > Alternative alignments 	0; > Coverage threshold 	0.8; > Coverage Mode 	0; > Max. sequence length 	65535; > Max. results per query 	17702628; > Compositional bias 	1; > Realign hit 	true; > Max Reject 	2147483647; > Max Accept 	2147483647; > Include identical Seq. Id.	true; > Preload mode 	0; > Pseudo count a 	1; > Pseudo count b 	1.5; > Score bias 	0; > Gap open cost 	11; > Gap extension cost 	1; > Threads 	15; > Verbosity 	3; > ; > Init data structures...; > Compute score only.; > Use index /databases/fadb/freeze/all.mmseqs.sk7; > Index version: 12; > Generated by: 7ca117893675cdca309e2c9dfc444bbc7462e858; > MaxSeqLength:,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:9414,Performance,cache,cache,9414,"h data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke ; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:9431,Performance,cache,cache,9431,"h data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke ; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:9447,Performance,cache,cache,9447,"h data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke ; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/134:9465,Performance,cache,cache,9465,"h data file tcdb_query.nr.db ... Done.; > Query database type: Aminoacid; > Target database type: Aminoacid; > Calculation of Smith-Waterman alignments.; > Error: Alignment died; > . ## Context; I have two databases, they don't have equal entries but some sequences have 100% identity.; I try to search using --add-self-matches to cluster the result.; The search fails in alignment step when I use this options, without this options the search run well. . ## Your Environment. * Git commit used: 7ca117893675cdca309e2c9dfc444bbc7462e858; * Which MMseqs version was used: Linuxbrew; * Compiler and Cmake: cmake version 3.12.3; * Server specifications: 188Gb ; lscpu:; `; Architecture: x86_64 ; CPU op-mode(s): 32-bit, 64-bit ; Byte Order: Little Endian ; CPU(s): 36 ; On-line CPU(s) list: 0-35 ; Thread(s) per core: 2 ; Core(s) per socket: 18 ; Socket(s): 1 ; NUMA node(s): 1 ; Vendor ID: GenuineIntel ; CPU family: 6 ; Model: 85 ; Model name: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz ; Stepping: 4 ; CPU MHz: 2680.333 ; BogoMIPS: 4600.00 ; Virtualization: VT-x ; L1d cache: 32K ; L1i cache: 32K ; L2 cache: 1024K ; L3 cache: 25344K ; NUMA node0 CPU(s): 0-35 ; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts pku ospke ; `",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134
https://github.com/soedinglab/MMseqs2/issues/136:259,Availability,Error,Error,259,"I've got a file with about 200,000 sequences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:1049,Availability,mask,mask,1049,"quences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fi",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:1357,Availability,Mask,Mask,1357,"ome sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:2098,Availability,Error,Error,2098,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:2200,Availability,Error,Error,2200,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:2225,Availability,Error,Error,2225,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:2247,Availability,Error,Error,2247,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:1690,Energy Efficiency,Reduce,Reduced,1690,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:579,Integrability,depend,depend,579,"I've got a file with about 200,000 sequences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:1154,Modifiability,extend,extendable,1154,"min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_ch",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:1514,Modifiability,extend,extendable,1514,", the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:2191,Safety,Abort,Aborted,2191,"seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; * Operating system and version: Ubuntu Linux 16.04.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:1103,Security,hash,hash-shift,1103,"min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_ch",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:1469,Security,hash,hash,1469,", the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time for sort: 0h 0m 0s 150ms; Time for fill: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 38ms; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007fa2ba2b7010 ***; Aborted; Error: kmermatcher died; Error: linclust died; Error: Search died; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 1c7ad90e2a9a249cbe4858b5002dc052b3333475; * Which MMseqs version was used: AVX2 static; * Server specifications: 32GB RAM; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/136:119,Testability,test,test,119,"I've got a file with about 200,000 sequences. When running mmseqs2 `easy-cluster` like this:; ```; mmseqs easy-cluster test.fasta out.db tmp --min-seq-id 1.00 -c 0.90 -s 8 --max-seqs 1000 --cluster-mode 1 --threads 6; ```; the program crashes with:; ```; *** Error in `/opt/mmseqs2/bin/mmseqs': munmap_chunk(): invalid pointer: 0x00007f4554305010 ***; ```; If I subselect some sequences from the file into another file, everything works fine up to about 50,000-60,000 sequences. With any number of sequences above that, the crash happens consistently. The crash does not seem to depend on a certain input but only on the size of the input. The crash __does not__ happen with version 3-be8f6, but it does happen with any version after that. ## MMseqs Output (for bugs); This is the part of the output where the crash happens:; ```; Program call:; kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. MMseqs Version: 	1c7ad90e2a9a249cbe4858b5002dc052b3333475; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	1; Kmer per sequence 	21; Mask Residues 	0; Coverage Mode 	0; K-mer size 	14; Coverage threshold 	0.9; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	6; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X. Needed memory (24649184 byte) of total memory (30364135833 byte); Process file into 1 parts; Generate k-mers list 0; .......; Time for fill: 0h 0m 0s 364ms; Done.; Sort kmer ... Done.; Time for sort: 0h 0m 0s 202ms; Sort by rep. sequence ... Done; Time f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136
https://github.com/soedinglab/MMseqs2/issues/137:572,Testability,LOG,LOG,572,"### Expected Behaviour; MMSEQS2 should return only hits with an e-value lower or equal to the maximum threshold set using the -e option in iterative searches. ### Current Behaviour; MMSEQS2 returns also hits with higher e-values. This behaviour is not observed during a non-iterative search, where the e-value maximum threshold is properly applied. ### Steps to Reproduce (for bugs); mmseqs createdb QUERY.fasta queryDB; mmseqs createdb DB.fasta targetDB; mmseqs search queryDB targetDB resultDB tmp --num-iterations 2 --threads 8 -e 1e-20 . ### MMseqs Output (for bugs); LOG file: mmseqs_261118.log; here https://gist.github.com/ChiaraVanni/53a4477436c8c05aa708c2eda90ef6cc. ### Your Environment; Include as many relevant details about the environment you experienced the bug in. Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **7427bfa0d8b7d2b7540cb8b86f37a763be998709**; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.10.12 and gcc version 5.4.0; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Running in a machine with 80 cores and 2Tb; Operating system and version: Linux 4.9.0-8-amd64 x86_64, Debian GNU/Linux 9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/137
https://github.com/soedinglab/MMseqs2/issues/137:596,Testability,log,log,596,"### Expected Behaviour; MMSEQS2 should return only hits with an e-value lower or equal to the maximum threshold set using the -e option in iterative searches. ### Current Behaviour; MMSEQS2 returns also hits with higher e-values. This behaviour is not observed during a non-iterative search, where the e-value maximum threshold is properly applied. ### Steps to Reproduce (for bugs); mmseqs createdb QUERY.fasta queryDB; mmseqs createdb DB.fasta targetDB; mmseqs search queryDB targetDB resultDB tmp --num-iterations 2 --threads 8 -e 1e-20 . ### MMseqs Output (for bugs); LOG file: mmseqs_261118.log; here https://gist.github.com/ChiaraVanni/53a4477436c8c05aa708c2eda90ef6cc. ### Your Environment; Include as many relevant details about the environment you experienced the bug in. Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): **7427bfa0d8b7d2b7540cb8b86f37a763be998709**; Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: cmake version 3.10.12 and gcc version 5.4.0; Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Running in a machine with 80 cores and 2Tb; Operating system and version: Linux 4.9.0-8-amd64 x86_64, Debian GNU/Linux 9",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/137
https://github.com/soedinglab/MMseqs2/issues/139:244,Availability,Error,Error,244,"--format-mode 2; --format-output query,target. ## Expected Behavior. They should produce output with some table format. ## Current Behavior. Neither works. The first dies with:; Unrecognized parameter --format-mode; Did you mean ""--cov-mode""?; Error: Search died. The second dies with:; Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Steps to Reproduce (for bugs); mkdir /tmp/testMMS; mmseqs easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen. ## MMseqs Output (for bugs). Program call:; easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weigh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:357,Availability,Error,Error,357,"--format-mode 2; --format-output query,target. ## Expected Behavior. They should produce output with some table format. ## Current Behavior. Neither works. The first dies with:; Unrecognized parameter --format-mode; Did you mean ""--cov-mode""?; Error: Search died. The second dies with:; Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Steps to Reproduce (for bugs); mkdir /tmp/testMMS; mmseqs easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen. ## MMseqs Output (for bugs). Program call:; easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weigh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:1655,Availability,Mask,Mask,1655,"MMseqs Output (for bugs). Program call:; easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:1925,Availability,Mask,Mask,1925,"qs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:5426,Availability,avail,available,5426,"negger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]. prefilter options 	default 	description [value range]; --comp-bias-corr 	0 	correct for locally biased amino acid composition [0,1] ; --add-self-matches 	false 	artificially add entries of queries with themselves (for clustering); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungappe",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:5592,Availability,mask,mask,5592,"ng); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:5623,Availability,mask,masking,5623,"ng); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:5655,Availability,mask,masking,5655,"ng); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:6097,Availability,avail,available,6097," equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:7664,Availability,mask,mask-profile,7664,"rnative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:7681,Availability,mask,mask,7681,"rnative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:10897,Availability,error,errors,10897," be extracted; --reverse-frames 	1,2,3 	comma-seperated list of ORF frames on the reverse strand to be extracted; --translation-table 	1 	1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE, 9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL, 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL, 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA, 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA; --use-all-table-starts	false 	use all alteratives for a start codon in the genetic table, if false - only ATG (AUG); --id-offset 	0 	numeric ids in index file are offset by this value ; --add-orf-stop 	false 	add * at complete start and end ; --start-sens 	4.000 	start sensitivity ; --sens-steps 	1 	Search steps performed from --start-sense and -s. . common options 	default 	description [value range]; --sub-mat 	blosum62.out	amino acid substitution matrix file ; --max-seq-len 	65535 	Maximum sequence length [1,32768] ; --max-seqs 	300 	maximum result sequences per query (this parameter affects the sensitivity); --threads 	1 	number of cores used for the computation (uses all cores by default); -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Context. Trying to run against Pfam-A, it was working a couple months ago. ## Your Environment. mmseqs compiled by myself in MacOSX Mojave. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:10999,Availability,Error,Error,10999," be extracted; --reverse-frames 	1,2,3 	comma-seperated list of ORF frames on the reverse strand to be extracted; --translation-table 	1 	1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE, 9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL, 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL, 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA, 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA; --use-all-table-starts	false 	use all alteratives for a start codon in the genetic table, if false - only ATG (AUG); --id-offset 	0 	numeric ids in index file are offset by this value ; --add-orf-stop 	false 	add * at complete start and end ; --start-sens 	4.000 	start sensitivity ; --sens-steps 	1 	Search steps performed from --start-sense and -s. . common options 	default 	description [value range]; --sub-mat 	blosum62.out	amino acid substitution matrix file ; --max-seq-len 	65535 	Maximum sequence length [1,32768] ; --max-seqs 	300 	maximum result sequences per query (this parameter affects the sensitivity); --threads 	1 	number of cores used for the computation (uses all cores by default); -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Context. Trying to run against Pfam-A, it was working a couple months ago. ## Your Environment. mmseqs compiled by myself in MacOSX Mojave. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:7975,Energy Efficiency,reduce,reduce,7975,"at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:8070,Energy Efficiency,reduce,reduce,8070,"scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codons with gaps or unknown residues before an open reading frame is rejected; --contig-start-mode 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:8174,Energy Efficiency,reduce,reduce,8174,"t calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codons with gaps or unknown residues before an open reading frame is rejected; --contig-start-mode 	2 	Contig start can be 0: incomplete, 1: complete, 2: both ; --contig-end-mode 	2 	Contig end can be 0: ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:5297,Integrability,depend,depending,5297,"rching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]. prefilter options 	default 	description [value range]; --comp-bias-corr 	0 	correct for locally biased amino acid composition [0,1] ; --add-self-matches 	false 	artificially add entries of queries with themselves (for clustering); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-size 	21 	alphabet size [2,21] ; --offset-result 	0 	Offset result list ; --split 	0 	Splits input sets into N equally distributed chunks. The default value sets the best split automatically. createindex can only be used with split 1.; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; --diag-score 	1 	use diagonal score for sorting the prefilter results [0,1] ; --exact-kmer-matching 	0 	only exact k-mer matching [0,1] ; --mask 	1 	0: w/o low complexity masking, 1: with low complexity masking; --min-ungapped-score 	15 	accept only matches with ungapped alignment score above this threshold; --spaced-kmer-mode 	1 	0: use consecutive positions a k-mers; 1: use spaced k-mers ; --spaced-kmer-pattern 	 	User-specified spaced k-mer pattern ; --local-tmp 	 	Path where some of the temporary files will be created ; --disk-space-limit 	0 	Set the maximum disk space (in Mb) to use for reverse profile searches. Defaults (0) to all available disk space in the temp folder. align options 	default 	description [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:7450,Modifiability,extend,extend,7450,"only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:1873,Performance,perform,performs,1873,"qs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input da",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:8620,Performance,load,load-mode,8620,"qs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codons with gaps or unknown residues before an open reading frame is rejected; --contig-start-mode 	2 	Contig start can be 0: incomplete, 1: complete, 2: both ; --contig-end-mode 	2 	Contig end can be 0: incomplete, 1: complete, 2: both ; --orf-start-mode 	1 	Orf fragment can be 0: from start to stop, 1: from any to stop, 2: from last encountered start to stop (no start in the middle); --forward-frames 	1,2,3 	comma-seperated list of ORF frames on the forward strand to be extracted; --reverse-frames 	1,2,3 	comma-seperated list of ORF frames on the reverse strand to be extracted; --translation-table 	1 	1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE, 9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL, 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL, 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA, 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA; --use-all-table-starts	false 	use all alteratives for a start codon in the genetic table, if false - only ATG (AUG); --id-offset 	0 	numeric ids in index file are offset by this value ; --add-orf-stop 	false 	add * at complete start and end ; --start-sens 	4.000 	start sensitivity ; --sens-steps 	1 	Search steps performed from --sta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:10469,Performance,perform,performed,10469," to be extracted; --reverse-frames 	1,2,3 	comma-seperated list of ORF frames on the reverse strand to be extracted; --translation-table 	1 	1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE, 9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL, 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL, 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA, 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA; --use-all-table-starts	false 	use all alteratives for a start codon in the genetic table, if false - only ATG (AUG); --id-offset 	0 	numeric ids in index file are offset by this value ; --add-orf-stop 	false 	add * at complete start and end ; --start-sens 	4.000 	start sensitivity ; --sens-steps 	1 	Search steps performed from --start-sense and -s. . common options 	default 	description [value range]; --sub-mat 	blosum62.out	amino acid substitution matrix file ; --max-seq-len 	65535 	Maximum sequence length [1,32768] ; --max-seqs 	300 	maximum result sequences per query (this parameter affects the sensitivity); --threads 	1 	number of cores used for the computation (uses all cores by default); -v 	3 	verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Context. Trying to run against Pfam-A, it was working a couple months ago. ## Your Environment. mmseqs compiled by myself in MacOSX Mojave. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:3941,Safety,detect,detected,3941,"915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the resulting query profile is used for the next search iteration. Iterative profile searches are usually much more sensitive than (and at least as sensitive as) searches with single query sequences. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]. prefilter options 	default 	description [value range]; --comp-bias-corr 	0 	correct for locally biased amino acid composition [0,1] ; --add-self-matches 	false 	artificially add entries of queries with themselves (for clustering); -s 	5.700 	sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive [1.0,7.5]; -k 	0 	k-mer size in the range (0: set automatically to optimum) ; --k-score 	2147483647	k-mer threshold for generating similar-k-mer lists ; --alph-si",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:7221,Safety,abort,aborted,7221,"scription [value range]; -a 	false 	add backtrace string (convert to alignments with mmseqs convertalis utility); --alignment-mode 	2 	How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment; -e 	0.001 	list matches below this E-value [0.0, inf] ; --min-seq-id 	0.000 	list matches above this sequence identity (for clustering) [0.0,1.0]; --seq-id-mode 	0 	0: alignment length 1: shorter, 2: longer sequence ; --alt-ali 	5 	Show up to this many alternative alignments ; -c 	0.000 	list matches above this fraction of aligned (covered) residues (see --cov-mode); --cov-mode 	0 	0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length, 4: query seq. length needs be at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:7982,Safety,redund,redundancy,7982,"at least x% of target length; --realign 	false 	compute more conservative, shorter alignments (scores and E-values not changed); --max-rejected 	2147483647	maximum rejected alignments before alignment calculation for a query is aborted; --max-accept 	2147483647	maximum accepted alignments before alignment calculation for a query is stopped; --score-bias 	0.000 	Score bias when computing the SW alignment (in bits) ; --gap-open 	11 	Gap open cost ; --gap-extend 	1 	Gap extension cost . profile options 	default 	description [value range]; --pca 	1.000 	pseudo count admixture strength ; --pcb 	1.500 	pseudo counts: Neff at half of maximum admixture (0.0,infinity); --mask-profile 	1 	mask query sequence of profile using tantan [0,1] ; --e-profile 	0.100 	includes sequences matches with < e-value thr. into the profile [>=0.0]; --wg 	false 	use global sequence weighting for profile calculation ; --filter-msa 	1 	filter msa: 0: do not filter, 1: filter ; --max-seq-id 	0.900 	reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]; --qid 	0.000 	reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]; --qsc 	-20.000 	reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]; --cov 	0.000 	filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]; --diff 	1000 	filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50; --num-iterations 	1 	Search iterations . misc options 	default 	description [value range]; --db-load-mode 	0 	Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch; --rescore-mode 	0 	Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment; --min-length 	30 	minimum codon number in open reading frames ; --max-length 	32734 	maximum codon number in open reading frames ; --max-gaps 	2147483647	maximum number of codon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:422,Testability,test,testMMS,422,"--format-mode 2; --format-output query,target. ## Expected Behavior. They should produce output with some table format. ## Current Behavior. Neither works. The first dies with:; Unrecognized parameter --format-mode; Did you mean ""--cov-mode""?; Error: Search died. The second dies with:; Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Steps to Reproduce (for bugs); mkdir /tmp/testMMS; mmseqs easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen. ## MMseqs Output (for bugs). Program call:; easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weigh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:511,Testability,test,testMMS,511,"--format-mode 2; --format-output query,target. ## Expected Behavior. They should produce output with some table format. ## Current Behavior. Neither works. The first dies with:; Unrecognized parameter --format-mode; Did you mean ""--cov-mode""?; Error: Search died. The second dies with:; Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Steps to Reproduce (for bugs); mkdir /tmp/testMMS; mmseqs easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen. ## MMseqs Output (for bugs). Program call:; easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weigh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:755,Testability,test,testMMS,755,"--format-mode 2; --format-output query,target. ## Expected Behavior. They should produce output with some table format. ## Current Behavior. Neither works. The first dies with:; Unrecognized parameter --format-mode; Did you mean ""--cov-mode""?; Error: Search died. The second dies with:; Unrecognized parameter --format-output; Did you mean ""--max-accept""?; Error: Search died. ## Steps to Reproduce (for bugs); mkdir /tmp/testMMS; mmseqs easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen. ## MMseqs Output (for bugs). Program call:; easy-search GCF_000005845.faa.gz Pfam-A GCF_000005845.pfam-a.mmseqs /tmp/testMMS --comp-bias-corr 0 --alt-ali 5 --threads 1 --format-output query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	5; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	1; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weigh",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:2977,Testability,test,testMMS,2977,"ximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input database 	true; Greedy best hits 	false. Program call:; createdb GCF_000005845.faa.gz /tmp/testMMS/1537235642484915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:3381,Testability,test,testMMS,3381,"rd Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input database 	true; Greedy best hits 	false. Program call:; createdb GCF_000005845.faa.gz /tmp/testMMS/1537235642484915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the resulting query profile is used for the next search iteration. Iterative profile searches are usually much more sensitive than (and at least as sensitive as) searches with single query sequences. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/139:3485,Testability,test,testMMS,3485,"f Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner 	; Remove Temporary Files 	true; Alignment Format 	0; Format alignment output 	query,target,evalue,bits,qstart,qend,qlen,tstart,tend,tlen; Database Output 	false; Overlap 	0; Split Seq. by len 	true; Do not shuffle input database 	true; Greedy best hits 	false. Program call:; createdb GCF_000005845.faa.gz /tmp/testMMS/1537235642484915501/query --max-seq-len 65535 --dont-split-seq-by-len 1 --dont-shuffle 1 --id-offset 0 -v 3 . MMseqs Version: 	4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; Max. sequence length 	65535; Split Seq. by len 	true; Do not shuffle input database	true; Offset of numeric ids 	0; Verbosity 	3. Time for merging files: 0h 0m 0s 0ms; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query ... Done.; Time for merging files: 0h 0m 0s 0ms; Touch data file /tmp/testMMS/1537235642484915501/query_h ... Done.; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 38ms; mmseqs search:; Searches with the sequences or profiles query DB through the target sequence DB by running the prefilter tool and the align tool for Smith-Waterman alignment. For each query a results file with sequence matches is written as entry into a database of search results (alignmentDB).; In iterative profile search mode, the detected sequences satisfying user-specified criteria are aligned to the query MSA, and the resulting query profile is used for the next search iteration. Iterative profile searches are usually much more sensitive than (and at least as sensitive as) searches with single query sequences. Please cite:; Steinegger, M. & Soding, J. MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, doi:10.1038/nbt.3988 (2017). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usag",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/139
https://github.com/soedinglab/MMseqs2/issues/141:1900,Availability,error,error,1900,"LLVLGIVVAICSTTQPTVASDQDTPKLGDRARFPQPVMVAVANFPPEEIRTSLRTFRTGDRCKIDAGYE; VEAYALDGNRVLVYLDYRTPTDGVSCPRGTVFWLREDVFAAMKAVHQCGTNYTAEELAALLKSAGLKFE; >OHA11761.1_MHQV01000001.1; MELILEKLFESQAKVRILRLFLRNSTTNFTLEDVLRGTGLKRASALKEIAKLIKLRFLKSKNTDLVVSRVSGSGKTKKLR; MRSVRIRIYTTDPTFEFFRELRDLILRQVPESRHRIIQKLRKIGKVKLAVVTGAFINNEDARVDLLVVGEHVSRRKLESL. ## Current Behavior; core dump. ## Steps to Reproduce (for bugs); each time I launch the command. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 0s 772ms; Erreur de segmentation (core dumped). ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; (strangely It stop working when I update mmseqs2 version to the newest , rm -rf old directory and git clone the new one); I updated my version because I had alignment died error doing all against all search. ## Your Environment; ubuntu 16.04 . Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: a951e4dede7e9b52e514119d083ff4ca80ad1565. self compiled (default) (make, make install) ; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141
https://github.com/soedinglab/MMseqs2/issues/141:1762,Deployability,update,update,1762,"LLVLGIVVAICSTTQPTVASDQDTPKLGDRARFPQPVMVAVANFPPEEIRTSLRTFRTGDRCKIDAGYE; VEAYALDGNRVLVYLDYRTPTDGVSCPRGTVFWLREDVFAAMKAVHQCGTNYTAEELAALLKSAGLKFE; >OHA11761.1_MHQV01000001.1; MELILEKLFESQAKVRILRLFLRNSTTNFTLEDVLRGTGLKRASALKEIAKLIKLRFLKSKNTDLVVSRVSGSGKTKKLR; MRSVRIRIYTTDPTFEFFRELRDLILRQVPESRHRIIQKLRKIGKVKLAVVTGAFINNEDARVDLLVVGEHVSRRKLESL. ## Current Behavior; core dump. ## Steps to Reproduce (for bugs); each time I launch the command. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 0s 772ms; Erreur de segmentation (core dumped). ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; (strangely It stop working when I update mmseqs2 version to the newest , rm -rf old directory and git clone the new one); I updated my version because I had alignment died error doing all against all search. ## Your Environment; ubuntu 16.04 . Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: a951e4dede7e9b52e514119d083ff4ca80ad1565. self compiled (default) (make, make install) ; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141
https://github.com/soedinglab/MMseqs2/issues/141:1852,Deployability,update,updated,1852,"LLVLGIVVAICSTTQPTVASDQDTPKLGDRARFPQPVMVAVANFPPEEIRTSLRTFRTGDRCKIDAGYE; VEAYALDGNRVLVYLDYRTPTDGVSCPRGTVFWLREDVFAAMKAVHQCGTNYTAEELAALLKSAGLKFE; >OHA11761.1_MHQV01000001.1; MELILEKLFESQAKVRILRLFLRNSTTNFTLEDVLRGTGLKRASALKEIAKLIKLRFLKSKNTDLVVSRVSGSGKTKKLR; MRSVRIRIYTTDPTFEFFRELRDLILRQVPESRHRIIQKLRKIGKVKLAVVTGAFINNEDARVDLLVVGEHVSRRKLESL. ## Current Behavior; core dump. ## Steps to Reproduce (for bugs); each time I launch the command. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 0s 772ms; Erreur de segmentation (core dumped). ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; (strangely It stop working when I update mmseqs2 version to the newest , rm -rf old directory and git clone the new one); I updated my version because I had alignment died error doing all against all search. ## Your Environment; ubuntu 16.04 . Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: a951e4dede7e9b52e514119d083ff4ca80ad1565. self compiled (default) (make, make install) ; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141
https://github.com/soedinglab/MMseqs2/issues/141:2255,Deployability,install,install,2255,"LLVLGIVVAICSTTQPTVASDQDTPKLGDRARFPQPVMVAVANFPPEEIRTSLRTFRTGDRCKIDAGYE; VEAYALDGNRVLVYLDYRTPTDGVSCPRGTVFWLREDVFAAMKAVHQCGTNYTAEELAALLKSAGLKFE; >OHA11761.1_MHQV01000001.1; MELILEKLFESQAKVRILRLFLRNSTTNFTLEDVLRGTGLKRASALKEIAKLIKLRFLKSKNTDLVVSRVSGSGKTKKLR; MRSVRIRIYTTDPTFEFFRELRDLILRQVPESRHRIIQKLRKIGKVKLAVVTGAFINNEDARVDLLVVGEHVSRRKLESL. ## Current Behavior; core dump. ## Steps to Reproduce (for bugs); each time I launch the command. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 0s 772ms; Erreur de segmentation (core dumped). ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; (strangely It stop working when I update mmseqs2 version to the newest , rm -rf old directory and git clone the new one); I updated my version because I had alignment died error doing all against all search. ## Your Environment; ubuntu 16.04 . Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: a951e4dede7e9b52e514119d083ff4ca80ad1565. self compiled (default) (make, make install) ; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141
https://github.com/soedinglab/MMseqs2/issues/142:735,Availability,mask,mask,735,"## Expected Behavior; Identical results except the column “tend”.; Correct BLAST output format. ## Current Behavior; Problems:; A)	The number of hits differs for both version ; B)	In the output of the new version ""."" appears in the blast format output file (taln column) and additional line breaks for some hits (see attached output files); The old version produced the correct BLAST output form except a bug in “tend”. ; The new version fixed the bug, but does not produce correct BLAST output (format). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. parameter setting for both runs:; -e 100.0 --threads 1 -s 8.5 -a --comp-bias-corr 0 --max-seqs 500 --mask 0 --orf-start-mode 1. input query file:; [input_sequence.txt](https://github.com/soedinglab/MMseqs2/files/2657225/input_sequence.txt). input target file:; https://www.arabidopsis.org/download_files/Genes/TAIR10_genome_release/TAIR10_chromosome_files/TAIR10_chr_all.fas. ## MMseqs Output (for bugs); [old_version.txt](https://github.com/soedinglab/MMseqs2/files/2657223/old_version.txt); [new_version.txt](https://github.com/soedinglab/MMseqs2/files/2657224/new_version.txt). ## Context. ## Your Environment; Ubuntu 14.10 (GNU/Linux 3.16.0-43-generic x86_64). MMseqs:; Old version: 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; New version: 5877873cbcd50a6d954607fc2df1210f8c2c3a4b:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/142
https://github.com/soedinglab/MMseqs2/issues/143:365,Deployability,update,updated,365,"According the main `mmseqs` help doc (mmseqs2 v7.4e23d):. ```; convertalis 	Convert alignment DB to BLAST-tab format, SAM flat file, or to raw pairwise alignments; ```. However, `mmseqs convertalis` doesn't actually seem to have any option for generating a SAM file. Am I just missing this feature in the `mmseqs convertalis` docs or maybe the help docs need to be updated?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/143
https://github.com/soedinglab/MMseqs2/issues/144:178,Availability,error,error,178,"I'm running `mmseqs map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/gl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:1086,Availability,Mask,Mask,1086,"s map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:2436,Availability,mask,mask,2436,"value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Inclu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:3732,Availability,Mask,Mask,3732,"gnment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:3998,Availability,Mask,Mask,3998,"tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provid",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:4819,Availability,Error,Error,4819,"pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## con",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:4999,Availability,Error,Error,4999,"performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:5024,Availability,error,error,5024,"performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:5126,Availability,Error,Error,5126,"tity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:5234,Availability,error,error,5234," 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel U",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:5954,Modifiability,config,config,5954,"us failed run of `mmseq map`, and then this `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` error did not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.o",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:6010,Modifiability,config,config,6010,"d not occur. . In general, I keep getting `Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died` at various steps of the `mmseqs map` run (eg., at the end of `translatenucs`). The error is not very informative on what's going wrong, since I am providing the required input and output parameters. ## conda env:. ```; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:1487,Performance,perform,performs,1487," /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:2514,Performance,load,load-mode,2514,"value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Inclu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:3946,Performance,perform,performs,3946,"tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```. I removed the temporary directory created by my previous failed run of `mmseq map`, and then this `Please provid",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:7095,Performance,cache,cache,7095,.19.8.1 h5e8e0c9_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; openmp 7.0.0 h2d50403_0 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; zlib 1.2.11 h470a237_3 conda-forge; ```. ## conda info. ```; active environment : plass; active env location : /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass; shell level : 1; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.5.11; conda-build version : 3.11.0; python version : 3.6.5.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://repo.anaconda.com/pkgs/pro/linux-64; https://repo.anaconda.com/pkgs/pro/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/linux-64; https://conda.anaconda.org/qiime2/noarch; package cache : /ebio/abt3_projects/software/dev/miniconda3_dev/pkgs; /ebio/abt3/nyoungblut/.conda/pkgs; envs directories : /ebio/abt3_projects/software/dev/miniconda3_dev/envs; /ebio/abt3/nyoungblut/.conda/envs; platform : linux-64; user-agent : conda/4.5.11 requests/2.18.4 CPython/3.6.5 Linux/4.9.127 ubuntu/18.04 glibc/2.27; UID:GID : 6354:350; netrc file : None; offline mode : False; ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:41,Testability,test,test,41,"I'm running `mmseqs map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/gl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/144:34,Usability,simpl,simple,34,"I'm running `mmseqs map`, using a simple test run command: `mmseqs map --threads 24 -s 2 -c 0 MY_queryDB MY_targetDB MY_outDB MY_tmp_dir`, and I'm getting the following output + error:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/gl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144
https://github.com/soedinglab/MMseqs2/issues/145:179,Security,access,accessed,179,"The mmseqs2 wiki mentions `mmseqs createfasta`, but for `MMseqs2 Version: 7.4e23d`, I don't see any `createfasta` subcommand. Is the documentation out of date or is `createfasta` accessed via some other method besides an mmseqs subcommand?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/145
https://github.com/soedinglab/MMseqs2/issues/146:392,Availability,error,error,392,"I'm trying to get the abundance of gene clusters generated by linclust. My method involves mapping the post-QC Illumina reads to the post-linclust cluster representatives via `mmseqs map`. To get the representative sequence db, I'm using `mmseqs result2repseq`. I ran `mmseqs map` (actually `mmseqs search --alignment-mode 4` due to Issue #144), but after many hours of processing, I got the error that no ""*_h"" file exists for the database, and the map job died. Do I have to convert the rep-seq database to a fasta and then re-create the database with `mmseqs createdb` just so that I can generate the *_h file? Is there a more efficient way?. Why doesn't `mmseqs search` check for the necessary files at the start of the job instead of in the middle of the run (possible after many hours of processing)?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/146
https://github.com/soedinglab/MMseqs2/issues/146:630,Energy Efficiency,efficient,efficient,630,"I'm trying to get the abundance of gene clusters generated by linclust. My method involves mapping the post-QC Illumina reads to the post-linclust cluster representatives via `mmseqs map`. To get the representative sequence db, I'm using `mmseqs result2repseq`. I ran `mmseqs map` (actually `mmseqs search --alignment-mode 4` due to Issue #144), but after many hours of processing, I got the error that no ""*_h"" file exists for the database, and the map job died. Do I have to convert the rep-seq database to a fasta and then re-create the database with `mmseqs createdb` just so that I can generate the *_h file? Is there a more efficient way?. Why doesn't `mmseqs search` check for the necessary files at the start of the job instead of in the middle of the run (possible after many hours of processing)?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/146
https://github.com/soedinglab/MMseqs2/issues/147:557,Availability,error,error,557,"I'm using `mmseqs2 7.4e23d h21aa3a5_1 bioconda`, and I'm trying to taxonomically classify a set of ~4 million representative AA sequences (generated by `plass`, clustered with `linclust`, then using a representative of each cluster), and I'm using uniclust90_2018_08 for the taxonomy db. The command is:. ```; mmseqs taxonomy --threads 24 -e 1e-5 --start-sens 1 -s 6 --sens-steps 3 --lca-ranks ""phylum:superphylum:subkingdom:kingdom:superkingdom"" {seqDB} {taxDB} {outDB} {tmp_dir}; ```. I've tried providing up to 720 GB of memory, and I still get a memory error: `Could not allocate foundDiagonals memory in QueryMatcher`. This happens during the stage:. ```; Init data structures...; Compute score and coverage.; Touch data file /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db ... Done.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db ... Done.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...................................................................................................	1 Mio. sequences processed; .......; ```. Is there a good way of reducing the memory usage for `mmseqs taxonomy`? I didn't see anything in the script doc or the wiki on reducing memory usage for taxonomy inference.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147
https://github.com/soedinglab/MMseqs2/issues/147:575,Energy Efficiency,allocate,allocate,575,"I'm using `mmseqs2 7.4e23d h21aa3a5_1 bioconda`, and I'm trying to taxonomically classify a set of ~4 million representative AA sequences (generated by `plass`, clustered with `linclust`, then using a representative of each cluster), and I'm using uniclust90_2018_08 for the taxonomy db. The command is:. ```; mmseqs taxonomy --threads 24 -e 1e-5 --start-sens 1 -s 6 --sens-steps 3 --lca-ranks ""phylum:superphylum:subkingdom:kingdom:superkingdom"" {seqDB} {taxDB} {outDB} {tmp_dir}; ```. I've tried providing up to 720 GB of memory, and I still get a memory error: `Could not allocate foundDiagonals memory in QueryMatcher`. This happens during the stage:. ```; Init data structures...; Compute score and coverage.; Touch data file /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db ... Done.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db ... Done.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...................................................................................................	1 Mio. sequences processed; .......; ```. Is there a good way of reducing the memory usage for `mmseqs taxonomy`? I didn't see anything in the script doc or the wiki on reducing memory usage for taxonomy inference.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147
https://github.com/soedinglab/MMseqs2/issues/149:1927,Availability,Mask,Masked,1927,NTNSINQNTTDIATNTTSINNLSNSVTTL; >A0A315FWJ3_364-404; EKVDQNTADITTNTDSINQNTTDIATNTTNINSLSNSVTTL; >UPI0005DCDA99_510-550; ENVSQNTADITTNTNSINQNTTDIATNTTSINNLSDSITTL; >UPI000DA3EDE3_467-507; ETVDQNTADIAANTTSINQNTTDIAANTTNINNLSDSVTTL; >G4C802_559-599; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI0004F83B94_392-432; DSINQNTTDIAANTTSINQNTTDIATNTTNINNLSDSITTL; >A0A379V5F6_560-600; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI000B8EBDA4_511-549; INQNTTDIAANTTSINQNTTDIATNTTNINNLSDSVTTL; >UPI0009A94CF4_362-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTADIAANTTNINNLSDSVTTL; >UPI000459DB58_363-417; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009AE3E57_364-418; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >A0A2T9DBX0_63-117; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009B01E32_286-324; VTQNTTDIAANTDSINQNTTDIATNTTNINSLSDSVTTL; >UPI000BA995C1_364-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTTEIATNTTNINSLSDSVT; >A0A2X5DK67_115-155; DSINQNTTDIAANTTSISQNTTDIAANTTNINSLSDSVTTL; >V7IUW3_392-428; DSINQNTTDIAANTTSINQNTTDIAANTTNINSLSDS. ```. ## Steps to Reproduce (for bugs); Command to reproduce (with above as input fasta file `file.fa`):. ```; mmseqs easy-cluster file.fa /tmp/seqClustering /tmp/tmp-seqClustering --min-seq-id 0.90 -c 0.99 -s 8 --max-seqs 1000 --cluster-mode 1; ```. ## MMseqs Output (for bugs); These are the last few lines of the output:; ```; Query database: /tmp/tmp-seqClustering/9466533042670559081/clu_tmp/5063784659926941655/input_step_redundancy(size=14); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers... Index table: Masked residues: 251; No k-mer could be extracted for the database /tmp/tmp-seqClustering/9466533042670559081/clu_tmp/5063784659926941655/input_step_redundancy.; Maybe the sequences length is less than 14 residues.; Error: Prefilter step 0 died; Error: Search died. ```. ## Your Environment; * MMseqs version: 7-4e23d (AVX2); * Operating system and version: Ubuntu 18.04,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149
https://github.com/soedinglab/MMseqs2/issues/149:2143,Availability,Error,Error,2143,NTNSINQNTTDIATNTTSINNLSNSVTTL; >A0A315FWJ3_364-404; EKVDQNTADITTNTDSINQNTTDIATNTTNINSLSNSVTTL; >UPI0005DCDA99_510-550; ENVSQNTADITTNTNSINQNTTDIATNTTSINNLSDSITTL; >UPI000DA3EDE3_467-507; ETVDQNTADIAANTTSINQNTTDIAANTTNINNLSDSVTTL; >G4C802_559-599; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI0004F83B94_392-432; DSINQNTTDIAANTTSINQNTTDIATNTTNINNLSDSITTL; >A0A379V5F6_560-600; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI000B8EBDA4_511-549; INQNTTDIAANTTSINQNTTDIATNTTNINNLSDSVTTL; >UPI0009A94CF4_362-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTADIAANTTNINNLSDSVTTL; >UPI000459DB58_363-417; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009AE3E57_364-418; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >A0A2T9DBX0_63-117; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009B01E32_286-324; VTQNTTDIAANTDSINQNTTDIATNTTNINSLSDSVTTL; >UPI000BA995C1_364-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTTEIATNTTNINSLSDSVT; >A0A2X5DK67_115-155; DSINQNTTDIAANTTSISQNTTDIAANTTNINSLSDSVTTL; >V7IUW3_392-428; DSINQNTTDIAANTTSINQNTTDIAANTTNINSLSDS. ```. ## Steps to Reproduce (for bugs); Command to reproduce (with above as input fasta file `file.fa`):. ```; mmseqs easy-cluster file.fa /tmp/seqClustering /tmp/tmp-seqClustering --min-seq-id 0.90 -c 0.99 -s 8 --max-seqs 1000 --cluster-mode 1; ```. ## MMseqs Output (for bugs); These are the last few lines of the output:; ```; Query database: /tmp/tmp-seqClustering/9466533042670559081/clu_tmp/5063784659926941655/input_step_redundancy(size=14); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers... Index table: Masked residues: 251; No k-mer could be extracted for the database /tmp/tmp-seqClustering/9466533042670559081/clu_tmp/5063784659926941655/input_step_redundancy.; Maybe the sequences length is less than 14 residues.; Error: Prefilter step 0 died; Error: Search died. ```. ## Your Environment; * MMseqs version: 7-4e23d (AVX2); * Operating system and version: Ubuntu 18.04,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149
https://github.com/soedinglab/MMseqs2/issues/149:2173,Availability,Error,Error,2173,NTNSINQNTTDIATNTTSINNLSNSVTTL; >A0A315FWJ3_364-404; EKVDQNTADITTNTDSINQNTTDIATNTTNINSLSNSVTTL; >UPI0005DCDA99_510-550; ENVSQNTADITTNTNSINQNTTDIATNTTSINNLSDSITTL; >UPI000DA3EDE3_467-507; ETVDQNTADIAANTTSINQNTTDIAANTTNINNLSDSVTTL; >G4C802_559-599; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI0004F83B94_392-432; DSINQNTTDIAANTTSINQNTTDIATNTTNINNLSDSITTL; >A0A379V5F6_560-600; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI000B8EBDA4_511-549; INQNTTDIAANTTSINQNTTDIATNTTNINNLSDSVTTL; >UPI0009A94CF4_362-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTADIAANTTNINNLSDSVTTL; >UPI000459DB58_363-417; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009AE3E57_364-418; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >A0A2T9DBX0_63-117; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009B01E32_286-324; VTQNTTDIAANTDSINQNTTDIATNTTNINSLSDSVTTL; >UPI000BA995C1_364-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTTEIATNTTNINSLSDSVT; >A0A2X5DK67_115-155; DSINQNTTDIAANTTSISQNTTDIAANTTNINSLSDSVTTL; >V7IUW3_392-428; DSINQNTTDIAANTTSINQNTTDIAANTTNINSLSDS. ```. ## Steps to Reproduce (for bugs); Command to reproduce (with above as input fasta file `file.fa`):. ```; mmseqs easy-cluster file.fa /tmp/seqClustering /tmp/tmp-seqClustering --min-seq-id 0.90 -c 0.99 -s 8 --max-seqs 1000 --cluster-mode 1; ```. ## MMseqs Output (for bugs); These are the last few lines of the output:; ```; Query database: /tmp/tmp-seqClustering/9466533042670559081/clu_tmp/5063784659926941655/input_step_redundancy(size=14); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers... Index table: Masked residues: 251; No k-mer could be extracted for the database /tmp/tmp-seqClustering/9466533042670559081/clu_tmp/5063784659926941655/input_step_redundancy.; Maybe the sequences length is less than 14 residues.; Error: Prefilter step 0 died; Error: Search died. ```. ## Your Environment; * MMseqs version: 7-4e23d (AVX2); * Operating system and version: Ubuntu 18.04,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149
https://github.com/soedinglab/MMseqs2/issues/149:40,Usability,simpl,simple,40,mmseqs easy-cluster crashes with a very simple file as an input:. ```; >UPI0005E38868_574-614; EKVDQNTADITTNTNSINQNTTDIATNTTSINNLSDSITTL; >A0A2T6WYU8_88-128; ENVSQNTADITTNTNSINQNTTDIATNTTNINNLSDSITTL; >UPI0005DBD517_138-178; EKVDQNTADITTNTNSINQNTTDIATNTTSINNLSNSVTTL; >Q9F2D8_129-169; EKVDQNTADITTNTNSINQNTTDIATNTTSINNLSNSVTTL; >A0A315FWJ3_364-404; EKVDQNTADITTNTDSINQNTTDIATNTTNINSLSNSVTTL; >UPI0005DCDA99_510-550; ENVSQNTADITTNTNSINQNTTDIATNTTSINNLSDSITTL; >UPI000DA3EDE3_467-507; ETVDQNTADIAANTTSINQNTTDIAANTTNINNLSDSVTTL; >G4C802_559-599; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI0004F83B94_392-432; DSINQNTTDIAANTTSINQNTTDIATNTTNINNLSDSITTL; >A0A379V5F6_560-600; ENVSQNTTDITANTDSINQNTTDIATNTTSINNLSNSVTTL; >UPI000B8EBDA4_511-549; INQNTTDIAANTTSINQNTTDIATNTTNINNLSDSVTTL; >UPI0009A94CF4_362-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTADIAANTTNINNLSDSVTTL; >UPI000459DB58_363-417; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009AE3E57_364-418; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >A0A2T9DBX0_63-117; EKVDQNTADITTNTDSINQNTTDIAANTASINQNTTDIATNTTNINSLSNSVTTL; >UPI0009B01E32_286-324; VTQNTTDIAANTDSINQNTTDIATNTTNINSLSDSVTTL; >UPI000BA995C1_364-416; EKVDQNTADITANTDSINQNTTDIAANTTSINQNTTEIATNTTNINSLSDSVT; >A0A2X5DK67_115-155; DSINQNTTDIAANTTSISQNTTDIAANTTNINSLSDSVTTL; >V7IUW3_392-428; DSINQNTTDIAANTTSINQNTTDIAANTTNINSLSDS. ```. ## Steps to Reproduce (for bugs); Command to reproduce (with above as input fasta file `file.fa`):. ```; mmseqs easy-cluster file.fa /tmp/seqClustering /tmp/tmp-seqClustering --min-seq-id 0.90 -c 0.99 -s 8 --max-seqs 1000 --cluster-mode 1; ```. ## MMseqs Output (for bugs); These are the last few lines of the output:; ```; Query database: /tmp/tmp-seqClustering/9466533042670559081/clu_tmp/5063784659926941655/input_step_redundancy(size=14); Process prefiltering step 1 of 1. Index table k-mer threshold: 130; Index table: counting k-mers... Index table: Masked residues: 251; No k-mer could be extracted for the database /tmp/tm,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149
https://github.com/soedinglab/MMseqs2/issues/150:3182,Availability,echo,echo,3182,6)\mmseqs\\bin/crontab: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cryptpw: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cttyhack: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cut: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/date: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/df: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/diff: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dirname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dnsd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dnsdomainname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dos2unix: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/du: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/echo: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ed: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/egrep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/env: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/envdir: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/envuidgid: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/expand: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/expr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/fakeidentd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/false: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/fgrep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/find: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/flock: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/fold: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/free: Permission deni,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:8716,Availability,ping,ping,8716,les (x86)\mmseqs\\bin/more: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mountpoint: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mpstat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mt: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nice: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nmeter: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nohup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nslookup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/od: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/patch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pgrep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pidof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping6: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pipe_progress: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pkill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/popmaildir: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printenv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printf: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ps: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pscan: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pstree: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwdx: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/readlink: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/realpath: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/reform,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:15871,Availability,error,error,15871,"/uptime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/usleep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uudecode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uuencode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/vi: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/volname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/watch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wget: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/which: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whoami: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whois: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xargs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xz: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/yes: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/zcat: Permission denied; ```. In addition ""mmseqs.bat search ..."" crashes with an error:. `Failed to execute tmp/14080462685954546121/translated_search.sh with error 2.`. Hence, I don't receive any results from mmseqs on the windows platform. ## Context; The environment variable path includes the main path and the directory ""bin/"":. ```; echo %PATH%; ...;c:\Program Files (x86)\mmseqs\;c:\Program Files (x86)\mmseqs\bin\;...; ```. Using ""mmseqs.exe"" from the directory ""bin/"" does not show the warnings, but leads to the same error. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; * Statically-compiled; * Operating system and version: Microsoft Windows [Version 10.0.14393]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:15949,Availability,error,error,15949,"/uptime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/usleep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uudecode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uuencode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/vi: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/volname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/watch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wget: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/which: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whoami: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whois: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xargs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xz: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/yes: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/zcat: Permission denied; ```. In addition ""mmseqs.bat search ..."" crashes with an error:. `Failed to execute tmp/14080462685954546121/translated_search.sh with error 2.`. Hence, I don't receive any results from mmseqs on the windows platform. ## Context; The environment variable path includes the main path and the directory ""bin/"":. ```; echo %PATH%; ...;c:\Program Files (x86)\mmseqs\;c:\Program Files (x86)\mmseqs\bin\;...; ```. Using ""mmseqs.exe"" from the directory ""bin/"" does not show the warnings, but leads to the same error. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; * Statically-compiled; * Operating system and version: Microsoft Windows [Version 10.0.14393]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:16129,Availability,echo,echo,16129,"/uptime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/usleep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uudecode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uuencode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/vi: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/volname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/watch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wget: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/which: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whoami: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whois: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xargs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xz: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/yes: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/zcat: Permission denied; ```. In addition ""mmseqs.bat search ..."" crashes with an error:. `Failed to execute tmp/14080462685954546121/translated_search.sh with error 2.`. Hence, I don't receive any results from mmseqs on the windows platform. ## Context; The environment variable path includes the main path and the directory ""bin/"":. ```; echo %PATH%; ...;c:\Program Files (x86)\mmseqs\;c:\Program Files (x86)\mmseqs\bin\;...; ```. Using ""mmseqs.exe"" from the directory ""bin/"" does not show the warnings, but leads to the same error. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; * Statically-compiled; * Operating system and version: Microsoft Windows [Version 10.0.14393]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:16317,Availability,error,error,16317,"/uptime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/usleep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uudecode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uuencode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/vi: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/volname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/watch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wget: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/which: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whoami: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whois: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xargs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xz: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/yes: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/zcat: Permission denied; ```. In addition ""mmseqs.bat search ..."" crashes with an error:. `Failed to execute tmp/14080462685954546121/translated_search.sh with error 2.`. Hence, I don't receive any results from mmseqs on the windows platform. ## Context; The environment variable path includes the main path and the directory ""bin/"":. ```; echo %PATH%; ...;c:\Program Files (x86)\mmseqs\;c:\Program Files (x86)\mmseqs\bin\;...; ```. Using ""mmseqs.exe"" from the directory ""bin/"" does not show the warnings, but leads to the same error. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; * Statically-compiled; * Operating system and version: Microsoft Windows [Version 10.0.14393]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:5563,Deployability,install,install,5563,x86)\mmseqs\\bin/getopt: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/grep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/groups: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/gunzip: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/gzip: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/head: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hexdump: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hostid: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hostname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission deni,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:8506,Deployability,patch,patch,8506, (x86)\mmseqs\\bin/mkfifo: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mknod: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mktemp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/more: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mountpoint: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mpstat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mt: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nice: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nmeter: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nohup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/nslookup: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/od: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/patch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pgrep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pidof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ping6: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pipe_progress: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pkill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/popmaildir: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printenv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/printf: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ps: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pscan: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pstree: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/pwdx: Permi,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:16060,Modifiability,variab,variable,16060,"/uptime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/usleep: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uudecode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uuencode: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/vi: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/volname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/watch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/wget: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/which: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whoami: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/whois: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xargs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xz: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/xzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/yes: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/zcat: Permission denied; ```. In addition ""mmseqs.bat search ..."" crashes with an error:. `Failed to execute tmp/14080462685954546121/translated_search.sh with error 2.`. Hence, I don't receive any results from mmseqs on the windows platform. ## Context; The environment variable path includes the main path and the directory ""bin/"":. ```; echo %PATH%; ...;c:\Program Files (x86)\mmseqs\;c:\Program Files (x86)\mmseqs\bin\;...; ```. Using ""mmseqs.exe"" from the directory ""bin/"" does not show the warnings, but leads to the same error. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 4e23d5f1d13a435c7b6c9406137ed68ce297e0fc; * Statically-compiled; * Operating system and version: Microsoft Windows [Version 10.0.14393]",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:13326,Safety,timeout,timeout,13326,s (x86)\mmseqs\\bin/svlogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sync: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/syslogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tac: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tail: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tar: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tcpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tee: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnet: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/test: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/time: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/timeout: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/top: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/touch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/traceroute: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/true: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tty: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ttysize: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/udpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uncompress: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/unexpand: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uniq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/unix2dos: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/unlink: Perm,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:6126,Testability,log,logger,6126,)\mmseqs\\bin/hostid: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hostname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denie,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:6197,Testability,log,login,6197,)\mmseqs\\bin/hostname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/man: Permission denied;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:6267,Testability,log,logname,6267,86)\mmseqs\\bin/httpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/man: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/md5sum: Permission denied;,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:6339,Testability,log,logread,6339,)\mmseqs\\bin/hush: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/id: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/inetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/install: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcalc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ipcrm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/kill: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/killall5: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/less: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ln: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logger: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/login: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/logread: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpq: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lpr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ls: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lsof: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzma: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzop: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/lzopcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makedevs: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/makemime: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/man: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/md5sum: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/mesg: Permission denied; bu,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:13049,Testability,test,test,13049,iles (x86)\mmseqs\\bin/strings: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/stty: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sum: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/svlogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/sync: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/syslogd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tac: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tail: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tar: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tcpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tee: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnet: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/telnetd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/test: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tftpd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/time: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/timeout: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/top: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/touch: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tr: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/traceroute: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/true: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/tty: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/ttysize: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/udpsvd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uname: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/uncompress: Permission d,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/150:1786,Usability,clear,clear,1786,x86)\mmseqs\\bin/bbconfig: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/bunzip2: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/bzcat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/bzip2: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cal: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/catv: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chat: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chgrp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chmod: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chown: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chpst: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/chroot: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cksum: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/clear: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cmp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/comm: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cp: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cpio: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/crond: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/crontab: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cryptpw: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cttyhack: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/cut: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/date: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dc: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/dd: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/df: Permission denied; busybox: c:\Program Files (x86)\mmseqs\\bin/diff: Permission denied; busybox: c,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/150
https://github.com/soedinglab/MMseqs2/issues/151:200,Performance,perform,performed,200,I tried [cluster using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) using this [test dataset](https://github.com/soedinglab/MMseqs2/files/2765258/subset.txt). I performed this procedure:. > mmseqs createdb subset.fa subset.db; > mmseqs prefilter subset.db subset.db subset.prefilter.db -s 8.5; > mmseqs align subset.db subset.db subset.prefilter.db subset.align.db --min-seq-id 0.9; > mmseqs clust subset.db subset.align.db subset.clust.db; > ; > mmseqs createsubdb subset.clust.db subset.db subset.90.db; > mmseqs prefilter subset.90.db subset.90.db subset.90.prefilter.db -s 8.5; > mmseqs align subset.90.db subset.90.db subset.90.prefilter.db subset.20.aling.db --min-seq-id 0.2 ; > mmseqs clust subset.90.db subset.20.aling.db subset.20.clust.db; > ; > mmseqs mergeclusters subset.db final_clu subset.clust.db subset.20.clust.db ; > mmseqs createtsv subset.db subset.db final_clu final_clu.tsv; > mmseqs result2profile subset.db subset.db final_clu final_clu.profile ; > mmseqs search final_clu.profile final_clu.profile_consensus final_clu.profile.DB2 tmp --add-self-matches ; > mmseqs clust final_clu.profile final_clu.profile.DB2 final_clu.profile.clu ; > mmseqs createtsv final_clu.profile final_clu.profile.clu final_clu.profile.clu.tsv. In the end I got this [meaningless tsv](https://github.com/soedinglab/MMseqs2/files/2765314/final_clu.profile.clu.txt). I didn't understand this tsv which is different from those created with simple cluster of proteins. I'd like to know if I did something wrong or how to understand this file. Thanks in advance,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151
https://github.com/soedinglab/MMseqs2/issues/151:119,Testability,test,test,119,I tried [cluster using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) using this [test dataset](https://github.com/soedinglab/MMseqs2/files/2765258/subset.txt). I performed this procedure:. > mmseqs createdb subset.fa subset.db; > mmseqs prefilter subset.db subset.db subset.prefilter.db -s 8.5; > mmseqs align subset.db subset.db subset.prefilter.db subset.align.db --min-seq-id 0.9; > mmseqs clust subset.db subset.align.db subset.clust.db; > ; > mmseqs createsubdb subset.clust.db subset.db subset.90.db; > mmseqs prefilter subset.90.db subset.90.db subset.90.prefilter.db -s 8.5; > mmseqs align subset.90.db subset.90.db subset.90.prefilter.db subset.20.aling.db --min-seq-id 0.2 ; > mmseqs clust subset.90.db subset.20.aling.db subset.20.clust.db; > ; > mmseqs mergeclusters subset.db final_clu subset.clust.db subset.20.clust.db ; > mmseqs createtsv subset.db subset.db final_clu final_clu.tsv; > mmseqs result2profile subset.db subset.db final_clu final_clu.profile ; > mmseqs search final_clu.profile final_clu.profile_consensus final_clu.profile.DB2 tmp --add-self-matches ; > mmseqs clust final_clu.profile final_clu.profile.DB2 final_clu.profile.clu ; > mmseqs createtsv final_clu.profile final_clu.profile.clu final_clu.profile.clu.tsv. In the end I got this [meaningless tsv](https://github.com/soedinglab/MMseqs2/files/2765314/final_clu.profile.clu.txt). I didn't understand this tsv which is different from those created with simple cluster of proteins. I'd like to know if I did something wrong or how to understand this file. Thanks in advance,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151
https://github.com/soedinglab/MMseqs2/issues/151:1478,Usability,simpl,simple,1478,I tried [cluster using profiles](https://github.com/soedinglab/MMseqs2/wiki#how-to-cluster-using-profiles) using this [test dataset](https://github.com/soedinglab/MMseqs2/files/2765258/subset.txt). I performed this procedure:. > mmseqs createdb subset.fa subset.db; > mmseqs prefilter subset.db subset.db subset.prefilter.db -s 8.5; > mmseqs align subset.db subset.db subset.prefilter.db subset.align.db --min-seq-id 0.9; > mmseqs clust subset.db subset.align.db subset.clust.db; > ; > mmseqs createsubdb subset.clust.db subset.db subset.90.db; > mmseqs prefilter subset.90.db subset.90.db subset.90.prefilter.db -s 8.5; > mmseqs align subset.90.db subset.90.db subset.90.prefilter.db subset.20.aling.db --min-seq-id 0.2 ; > mmseqs clust subset.90.db subset.20.aling.db subset.20.clust.db; > ; > mmseqs mergeclusters subset.db final_clu subset.clust.db subset.20.clust.db ; > mmseqs createtsv subset.db subset.db final_clu final_clu.tsv; > mmseqs result2profile subset.db subset.db final_clu final_clu.profile ; > mmseqs search final_clu.profile final_clu.profile_consensus final_clu.profile.DB2 tmp --add-self-matches ; > mmseqs clust final_clu.profile final_clu.profile.DB2 final_clu.profile.clu ; > mmseqs createtsv final_clu.profile final_clu.profile.clu final_clu.profile.clu.tsv. In the end I got this [meaningless tsv](https://github.com/soedinglab/MMseqs2/files/2765314/final_clu.profile.clu.txt). I didn't understand this tsv which is different from those created with simple cluster of proteins. I'd like to know if I did something wrong or how to understand this file. Thanks in advance,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/151
https://github.com/soedinglab/MMseqs2/issues/152:1308,Deployability,Release,Release,1308,"Hi Martin and Milot. Thanks for the nice software. So far it's working well for my applications. ## Context; Not a bug or problem but a use question. Sorry for opening an issue... Let me know if there is a user forum or better place to ask. With `mmseqs filterdb <i:resultDB> <o:resultDB>` is it possible to extract multiple best hits? for example if multiple queries have the same bitscore/evalue to the same target? Is it some combination of the ` --filter-regex` and the `--comparison-operator` options? For example `--filter-regex <bitscore column> --comparison-operator ge`?. Also do you have any particular parameter recommendations for searching metagenomic short reads against a target database? I'm searching overlapped metagenomic reads (average insert size of ~215 bp) against a custom 58x10^6 sequence protein database). Currently, I'm using default `mmseqs prefilter` and `mmseqs align` options with `-s 4` and `--cov-mode 2 -c 0.7` so that at least 70% of the read must align to target. Wondering if you have any additional or better recommendations for this use case. I read the ECCB tutorial which sort of addresses this question, but because I'm not searching assemblies I want more sensitivity than the `mmseqs map` workflow. thanks very much!; -shane. ## Your Environment; mmseqs version: Release 7-4e23d (4e23d5f1d13a435c7b6c9406137ed68ce297e0fc)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/152
https://github.com/soedinglab/MMseqs2/issues/153:11,Usability,simpl,simple,11,"Hi, just a simple question, since I have profiles build with result2profile, how do I extract the alignment from each profile?; Stockholm, fasta, a2m, a3m, or any well known format. . Also, a related question, may I use the profiles directly to hhalign? Yet, there are huge difference between compare profile with mmseqs result2profile and use hhalign?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153
https://github.com/soedinglab/MMseqs2/issues/155:451,Deployability,pipeline,pipeline,451,"`mmseqs tsv2db` doesn't create a *.dbtype file. Is this intentional? How do I create a *.dbtype file, given that it appears to be a binary file?. In general, I find the ""hidden"" requirements of extra files such as the *.dbtype and *.index files to be very frustrating, because it can be hard to know which files are actually required for each `mmseq` command versus which files are stated as required inputs. This is especially challenging when using pipeline software such as `snakemake`. ```; $ conda list; # packages in environment at /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass:; #; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; ca-certificates 2018.11.29 ha4d7672_0 conda-forge; curl 7.63.0 h74213dd_0 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; krb5 1.16.2 hbb41f41_0 conda-forge; libcurl 7.63.0 hbdb9355_0 conda-forge; libdeflate 1.0 h470a237_0 bioconda; libedit 3.1.20170329 haf1bffa_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libssh2 1.8.0 h5b517e9_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; ncurses 6.1 hfc679d8_2 conda-forge; openmp 7.0.0 h2d50403_0 conda-forge; openssl 1.0.2p h470a237_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8ee4bcc_1 bioconda; tk 8.6.9 ha92aebf_0 conda-forge; xz 5.2.4 h470a237_1 conda-forge; zlib 1.2.11 h470a237_3 conda-forge; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155
https://github.com/soedinglab/MMseqs2/issues/155:671,Security,certificate,certificates,671,"`mmseqs tsv2db` doesn't create a *.dbtype file. Is this intentional? How do I create a *.dbtype file, given that it appears to be a binary file?. In general, I find the ""hidden"" requirements of extra files such as the *.dbtype and *.index files to be very frustrating, because it can be hard to know which files are actually required for each `mmseq` command versus which files are stated as required inputs. This is especially challenging when using pipeline software such as `snakemake`. ```; $ conda list; # packages in environment at /ebio/abt3_projects/software/dev/miniconda3_dev/envs/plass:; #; # Name Version Build Channel; bzip2 1.0.6 h470a237_2 conda-forge; ca-certificates 2018.11.29 ha4d7672_0 conda-forge; curl 7.63.0 h74213dd_0 conda-forge; gawk 4.2.1 h470a237_0 conda-forge; gettext 0.19.8.1 h5e8e0c9_1 conda-forge; krb5 1.16.2 hbb41f41_0 conda-forge; libcurl 7.63.0 hbdb9355_0 conda-forge; libdeflate 1.0 h470a237_0 bioconda; libedit 3.1.20170329 haf1bffa_1 conda-forge; libgcc-ng 7.2.0 hdf63c60_3 conda-forge; libssh2 1.8.0 h5b517e9_3 conda-forge; libstdcxx-ng 7.2.0 hdf63c60_3 conda-forge; llvm-meta 7.0.0 0 conda-forge; mmseqs2 7.4e23d h21aa3a5_1 bioconda; ncurses 6.1 hfc679d8_2 conda-forge; openmp 7.0.0 h2d50403_0 conda-forge; openssl 1.0.2p h470a237_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8ee4bcc_1 bioconda; tk 8.6.9 ha92aebf_0 conda-forge; xz 5.2.4 h470a237_1 conda-forge; zlib 1.2.11 h470a237_3 conda-forge; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155
https://github.com/soedinglab/MMseqs2/issues/157:555,Availability,error,error,555,"Hi,. when I run this command to create my fastq database the processus stopped always when it reached 362 Mio sequences processed.; `mmseqs createdb $(find /media/sf_a8de220a-fde1-4b79-8b3f-c186f59a249a/NO; DAT/data/FASTQ/cas | grep '.fastq$') /media/sf_a8de220a-fde1-4b79-8b3f-c186f59a249a/NODAT/result/MMSEQS2/casDB `. 362 Mio. sequences processed; ..........................................Processus arrêté. After, when I run clustering . `mmseqs cluster /media/sf_a8de220a-fde1-4b79-8b3f-c186f59a249a/result/MMSEQS2/casDB clust_casDB tmp`. I get this error : . `/media/sf_NODAT/result/MMSEQS2/casDB not found`. In my output folder I have several casDB.X casDB.index.X and casDB_h casDB_h.dbtype casDB_h.index.0 but no casDB .",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/157
https://github.com/soedinglab/MMseqs2/issues/158:86,Availability,error,error,86,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158
https://github.com/soedinglab/MMseqs2/issues/158:211,Availability,error,errors,211,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158
https://github.com/soedinglab/MMseqs2/issues/158:480,Availability,Error,Error,480,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158
https://github.com/soedinglab/MMseqs2/issues/158:638,Availability,Error,Error,638,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158
https://github.com/soedinglab/MMseqs2/issues/158:709,Availability,Error,Error,709,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158
https://github.com/soedinglab/MMseqs2/issues/158:882,Availability,error,error,882,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158
https://github.com/soedinglab/MMseqs2/issues/158:800,Deployability,Release,Release,800,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158
https://github.com/soedinglab/MMseqs2/issues/158:888,Testability,log,log,888,"Hi; I am trying to compile the MPI version of MMseqs2 and I am getting the following [error](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) . ## Expected Behavior; Should compile without errors; ## Current Behavior; Fails with:; ```; src/CMakeFiles/mmseqs-framework.dir/build.make:1598: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/linclust/kmerindexdb.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```; ## Steps to Reproduce (for bugs); ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..; make; ```; ## MMseqs Output (for bugs); Full error log [here](https://gist.github.com/genomewalker/ff89e56ea3435429f9d76f43e1646ca8) ; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): fe2b746e63519424f565b4fbeb4ca5dba905adc7; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; GCC: gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10); OPENMPI: (OpenRTE) 1.10.2; CMAKE: 3.5.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Intel Xeon Processor (Skylake, IBRS) with 256GB (); * Operating system and version: Ubuntu 5.4.0-6ubuntu1~16.04.10",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/158
https://github.com/soedinglab/MMseqs2/issues/159:2572,Availability,error,error,2572,"nMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:2967,Availability,error,error,2967,"seqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. ## Context; i wanted to build an mpi enabled sse4 as this is not distributed. ## Your Environment; git version from today. ```; cat /etc/issue; Ubuntu 16.04.5 LTS. $ cat /proc/cpuinfo | grep -m1 sse; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx rdtscp lm constant",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:3454,Availability,Error,Error,3454,"s/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. ## Context; i wanted to build an mpi enabled sse4 as this is not distributed. ## Your Environment; git version from today. ```; cat /etc/issue; Ubuntu 16.04.5 LTS. $ cat /proc/cpuinfo | grep -m1 sse; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts nopl xtopology tsc_reliable nonstop_tsc aperfmperf pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt aes xsave avx hypervisor lahf_lm epb kaiser dtherm ida arat pln pts; ```. any suggestions welcome!; thanks; a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:3612,Availability,Error,Error,3612,"s/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. ## Context; i wanted to build an mpi enabled sse4 as this is not distributed. ## Your Environment; git version from today. ```; cat /etc/issue; Ubuntu 16.04.5 LTS. $ cat /proc/cpuinfo | grep -m1 sse; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts nopl xtopology tsc_reliable nonstop_tsc aperfmperf pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt aes xsave avx hypervisor lahf_lm epb kaiser dtherm ida arat pln pts; ```. any suggestions welcome!; thanks; a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:3683,Availability,Error,Error,3683,"s/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:542: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o] Error 1; CMakeFiles/Makefile2:459: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. ## Context; i wanted to build an mpi enabled sse4 as this is not distributed. ## Your Environment; git version from today. ```; cat /etc/issue; Ubuntu 16.04.5 LTS. $ cat /proc/cpuinfo | grep -m1 sse; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts nopl xtopology tsc_reliable nonstop_tsc aperfmperf pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt aes xsave avx hypervisor lahf_lm epb kaiser dtherm ida arat pln pts; ```. any suggestions welcome!; thanks; a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:140,Deployability,RELEASE,RELEASE,140,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1961,Modifiability,Config,Configuring,1961,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1198,Performance,Perform,Performing,1198,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1237,Performance,Perform,Performing,1237,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1301,Performance,Perform,Performing,1301,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1337,Performance,Perform,Performing,1337,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1414,Performance,Perform,Performing,1414,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1451,Performance,Perform,Performing,1451,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1696,Performance,Perform,Performing,1696,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1737,Performance,Perform,Performing,1737,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1825,Performance,Perform,Performing,1825,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1866,Performance,Perform,Performing,1866,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:445,Safety,Detect,Detecting,445,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:481,Safety,Detect,Detecting,481,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:524,Safety,Detect,Detecting,524,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:559,Safety,Detect,Detecting,559,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:702,Safety,Detect,Detecting,702,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:736,Safety,Detect,Detecting,736,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:777,Safety,Detect,Detecting,777,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:920,Safety,Detect,Detecting,920,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:954,Safety,Detect,Detecting,954,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:995,Safety,Detect,Detecting,995,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1028,Safety,Detect,Detecting,1028,## Expected Behavior; It would build succesfully; ## Current Behavior; it fails; ## Steps to Reproduce (for bugs). cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. -DHAVE_MPI=1 -DHAVE_SSE4_1=1 .. ## MMseqs Output (for bugs); ```; -- The CXX compiler identification is GNU 5.4.0; -- The C compiler identification is GNU 5.4.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; --,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1209,Testability,Test,Test,1209,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1248,Testability,Test,Test,1248,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1312,Testability,Test,Test,1312,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1348,Testability,Test,Test,1348,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1425,Testability,Test,Test,1425,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1462,Testability,Test,Test,1462,"ompiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done. -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/casser",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1707,Testability,Test,Test,1707,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1748,Testability,Test,Test,1748,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1836,Testability,Test,Test,1836,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:1877,Testability,Test,Test,1877,": /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Source Directory: /MMseqs2; -- Project Directory: /MMseqs2; -- Compiler is GNU; -- ZSTD VERSION 1.3.8; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef st",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/159:2317,Testability,assert,assert,2317,"ccess; -- Found ZLIB; -- Performing Test HAVE_ZLIB_CHECK; -- Performing Test HAVE_ZLIB_CHECK - Success; -- ZLIB works; -- Found BZLIB; -- Performing Test HAVE_BZLIB_CHECK; -- Performing Test HAVE_BZLIB_CHECK - Success; -- BZLIB works; -- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so; -- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so;/usr/lib/openmpi/lib/libmpi.so; -- Found MPI; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Found OpenMP; -- Configuring done; -- Generating done; -- Build files have been written to: /MMseqs2/build; [..]; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBConcat.cpp.o; [ 25%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/DBReader.cpp.o; In file included from /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/assert.h:5:0,; from /usr/include/c++/5/cassert:43,; from /MMseqs2/lib/omptl/omptl:28,; from /MMseqs2/lib/omptl/omptl_algorithm:23,; from /MMseqs2/src/commons/DBReader.cpp:13:; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:32: error: conflicting declaration ‘typedef struct Except_Frame_T* Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:15:16: note: previous declaration as ‘struct Except_Frame_T’; typedef struct Except_Frame_T *Except_Frame_T;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:17:18: error: field ‘prev’ has incomplete type ‘Except_Frame_T’; Except_Frame_T prev;; ^; /data_storage/sysadmin/packages/jamg-21apr16/3rd_party/include/except.h:16:8: note: definition of ‘struct Except_Frame_T’ is not complete until the closing brace; struct Except_Frame_T {; ^; src/CMakeFiles/mmseqs-framework.dir/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/159
https://github.com/soedinglab/MMseqs2/issues/160:643,Availability,mask,mask,643,"I'm running a 3 iteration search job and it crushed towards the end of the prefiltering of the last iteration. I tried to run again the same command in order to resume from where I stopped, but it seems to me that it is starting from the beginning. ## Expected Behavior; Start from:; ```; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . ```; ## Current Behavior; creates new folder inside the tmp folder and starts a new run; ```; Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . ```. ## Steps to Reproduce (for bugs); ```; #BSUB -R ""rusage[mem=200000]""; #BSUB -a openmpi; #BSUB -J ""GeneC"". module load MMseqs2/6-f5a1c. runner=""mpirun"" mmseqs search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160
https://github.com/soedinglab/MMseqs2/issues/160:1190,Availability,mask,mask,1190,"I'm running a 3 iteration search job and it crushed towards the end of the prefiltering of the last iteration. I tried to run again the same command in order to resume from where I stopped, but it seems to me that it is starting from the beginning. ## Expected Behavior; Start from:; ```; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . ```; ## Current Behavior; creates new folder inside the tmp folder and starts a new run; ```; Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . ```. ## Steps to Reproduce (for bugs); ```; #BSUB -R ""rusage[mem=200000]""; #BSUB -a openmpi; #BSUB -J ""GeneC"". module load MMseqs2/6-f5a1c. runner=""mpirun"" mmseqs search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160
https://github.com/soedinglab/MMseqs2/issues/160:1434,Performance,load,load,1434,"I'm running a 3 iteration search job and it crushed towards the end of the prefiltering of the last iteration. I tried to run again the same command in order to resume from where I stopped, but it seems to me that it is starting from the beginning. ## Expected Behavior; Start from:; ```; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . ```; ## Current Behavior; creates new folder inside the tmp folder and starts a new run; ```; Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . ```. ## Steps to Reproduce (for bugs); ```; #BSUB -R ""rusage[mem=200000]""; #BSUB -a openmpi; #BSUB -J ""GeneC"". module load MMseqs2/6-f5a1c. runner=""mpirun"" mmseqs search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160
https://github.com/soedinglab/MMseqs2/issues/160:161,Usability,resume,resume,161,"I'm running a 3 iteration search job and it crushed towards the end of the prefiltering of the last iteration. I tried to run again the same command in order to resume from where I stopped, but it seems to me that it is starting from the beginning. ## Expected Behavior; Start from:; ```; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . ```; ## Current Behavior; creates new folder inside the tmp folder and starts a new run; ```; Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . ```. ## Steps to Reproduce (for bugs); ```; #BSUB -R ""rusage[mem=200000]""; #BSUB -a openmpi; #BSUB -J ""GeneC"". module load MMseqs2/6-f5a1c. runner=""mpirun"" mmseqs search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160
https://github.com/soedinglab/MMseqs2/issues/161:783,Availability,Mask,Mask,783,"As mentioned [here](https://github.com/soedinglab/MMseqs2/issues/157) I tried to index a 108GB fasta file with 188M sequences (NCBI's nr) in a server with 188GB memory. > mmseqs createdb nr.fa nr.DB; > mmseqs createindex nr.DB tmp --split-memory-limit 126000000 --threads 15; MMseqs2 Version: 7-4e23d. But even setting the `--split-memory-size ` command it's still crashing with me. ; It seem that I need something ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 an",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161
https://github.com/soedinglab/MMseqs2/issues/161:1436,Availability,mask,mask,1436,"ng ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; Sequenc",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161
https://github.com/soedinglab/MMseqs2/issues/161:1751,Availability,Mask,Mask,1751,"	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers1: 1; Headers2: 0; Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161
https://github.com/soedinglab/MMseqs2/issues/161:2162,Availability,avail,available,2162,"e 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers1: 1; Headers2: 0; Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ........................................................",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161
https://github.com/soedinglab/MMseqs2/issues/161:2370,Availability,Mask,Masked,2370, --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers1: 1; Headers2: 0; Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ..............................................................................................,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161
https://github.com/soedinglab/MMseqs2/issues/161:22012,Availability,Error,Error,22012,.........................................	136 Mio. sequences processed; ...................................................................................................	137 Mio. sequences processed; ...................................................................................................	138 Mio. sequences processed; ...................................................................................................	139 Mio. sequences processed; ...................................................................................................	140 Mio. sequences processed; ...................................................................................................	141 Mio. sequences processed; ...................................................................................................	142 Mio. sequences processed; ...................................................................................................	143 Mio. sequences processed; ...................................................................................................	144 Mio. sequences processed; ...................................................................................................	145 Mio. sequences processed; ...................................................................................................	146 Mio. sequences processed; ...................................................................................................	147 Mio. sequences processed; ...................................................................................................	148 Mio. sequences processed; ...................................................................................................	149 Mio. sequences processed; ...................................................................................................	150 Mio. sequences processed; ....................................................................................Error: indexdb died. ```,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161
https://github.com/soedinglab/MMseqs2/issues/161:475,Integrability,message,message,475,"As mentioned [here](https://github.com/soedinglab/MMseqs2/issues/157) I tried to index a 108GB fasta file with 188M sequences (NCBI's nr) in a server with 188GB memory. > mmseqs createdb nr.fa nr.DB; > mmseqs createindex nr.DB tmp --split-memory-limit 126000000 --threads 15; MMseqs2 Version: 7-4e23d. But even setting the `--split-memory-size ` command it's still crashing with me. ; It seem that I need something ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 an",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161
https://github.com/soedinglab/MMseqs2/issues/161:2233,Performance,optimiz,optimize,2233,false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 and split 1 using Target split mode.; Needed memory (631391886584 byte) of total memory (129024000000 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatically optimize target database split.; Write VERSION (0); Write META (1); MaxSeqLength: 65535; KmerSize: 7; CompBiasCorr: 1; AlphabetSize: 21; Masked: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers1: 1; Headers2: 0; Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ..........................................,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161
https://github.com/soedinglab/MMseqs2/issues/161:507,Testability,log,log,507,"As mentioned [here](https://github.com/soedinglab/MMseqs2/issues/157) I tried to index a 108GB fasta file with 188M sequences (NCBI's nr) in a server with 188GB memory. > mmseqs createdb nr.fa nr.DB; > mmseqs createindex nr.DB tmp --split-memory-limit 126000000 --threads 15; MMseqs2 Version: 7-4e23d. But even setting the `--split-memory-size ` command it's still crashing with me. ; It seem that I need something ~631GB. The `createdb` was finished well without any weirdo message. ; But below follow the log of `createindex`. ```; Program call:; createindex nr.DB tmp --split-memory-limit 126000000 --threads 15 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3; Min codons in orf 	30; Max codons in length 	98202; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Remove Temporary Files	false. Program call:; indexdb nr.DB nr.DB --sub-mat blosum62.out -k 0 --comp-bias-corr 1 --alph-size 21 --max-seqs 300 --max-seq-len 65535 --mask 2 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --include-headers 1 --check-compatible 0 --split 0 --split-memory-limit 126000000 --threads 15 -v 3 . MMseqs Version: 	7-4e23d; Sub Matrix 	blosum62.out; K-mer size 	0; Compositional bias 	1; Alphabet size 	21; Max. results per query	300; Max. sequence length 	65535; Mask Residues 	2; Spaced Kmer 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Include Header 	true; Check Compatible 	false; Split DB 	0; Split Memory Limit 	126000000; Threads 	15; Verbosity 	3. Substitution matrices...; Use kmer size 7 an",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161
https://github.com/soedinglab/MMseqs2/issues/162:412,Availability,down,download,412,"## Expected Behavior; A database will be created that is a filtered version of the master database. ## Current Behavior; The new database includes only copies of an entry in the original index which is not in the filter file and is repeated for number of ids present in filter file. ## Steps to Reproduce (for bugs); I am able to reproduce with a small 8 sequence fasta file which is a subset of an old uniref90 download and a single entry filter file.; [uniref90_head.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2847259/uniref90_head.fasta.gz); [uniref90_head_subset.txt](https://github.com/soedinglab/MMseqs2/files/2847255/uniref90_head_subset.txt); ```; mmseqs createdb uniref90_head.fasta uniref90_head.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb uniref90_head.subset.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb_h uniref90_head.filt.mmsdb_h; ```; Then the resulting uniref90_head.filt.mmsdb_h only has a single entry (UniRef90_Q197F8 Uncharacterized protein 002R n=1 Tax=Invertebrate iridescent virus 3 TaxID=345201 RepID=002R_IIV3 ; ) which is from the fasta but not the id from the filter file (UniRef90_Q6GZX2). ## MMseqs Output (for bugs); No errors given. Only run times. ## Context; I am trying to implement a reciprocal best hits approach. I am searching a fasta file of genes against a uniref90 fasta file. Both are fasta's of amino acids. The forward search (query=genes, target=uniref) goes fine and the reverse search (query=uniref, target=genes) works fine with the full database. Reciprocal best hits were found. To speed up the reverse search I wanted to filter uniref to only include the best hits from the forward search. To do this I used `createsubdb` with the top hits from the forward search as the filter file. The search (query=filtered uniref, target=genes) ran successfully but no alignments were found. Based on this I investigated the _h file from the sub-database and saw the problem. ## Your Environment; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162
https://github.com/soedinglab/MMseqs2/issues/162:1215,Availability,error,errors,1215,"sion of the master database. ## Current Behavior; The new database includes only copies of an entry in the original index which is not in the filter file and is repeated for number of ids present in filter file. ## Steps to Reproduce (for bugs); I am able to reproduce with a small 8 sequence fasta file which is a subset of an old uniref90 download and a single entry filter file.; [uniref90_head.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2847259/uniref90_head.fasta.gz); [uniref90_head_subset.txt](https://github.com/soedinglab/MMseqs2/files/2847255/uniref90_head_subset.txt); ```; mmseqs createdb uniref90_head.fasta uniref90_head.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb uniref90_head.subset.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb_h uniref90_head.filt.mmsdb_h; ```; Then the resulting uniref90_head.filt.mmsdb_h only has a single entry (UniRef90_Q197F8 Uncharacterized protein 002R n=1 Tax=Invertebrate iridescent virus 3 TaxID=345201 RepID=002R_IIV3 ; ) which is from the fasta but not the id from the filter file (UniRef90_Q6GZX2). ## MMseqs Output (for bugs); No errors given. Only run times. ## Context; I am trying to implement a reciprocal best hits approach. I am searching a fasta file of genes against a uniref90 fasta file. Both are fasta's of amino acids. The forward search (query=genes, target=uniref) goes fine and the reverse search (query=uniref, target=genes) works fine with the full database. Reciprocal best hits were found. To speed up the reverse search I wanted to filter uniref to only include the best hits from the forward search. To do this I used `createsubdb` with the top hits from the forward search as the filter file. The search (query=filtered uniref, target=genes) ran successfully but no alignments were found. Based on this I investigated the _h file from the sub-database and saw the problem. ## Your Environment; Used on a CentOS 7 server and installed via conda. Version is 7.4e23d.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162
https://github.com/soedinglab/MMseqs2/issues/162:2031,Deployability,install,installed,2031,"sion of the master database. ## Current Behavior; The new database includes only copies of an entry in the original index which is not in the filter file and is repeated for number of ids present in filter file. ## Steps to Reproduce (for bugs); I am able to reproduce with a small 8 sequence fasta file which is a subset of an old uniref90 download and a single entry filter file.; [uniref90_head.fasta.gz](https://github.com/soedinglab/MMseqs2/files/2847259/uniref90_head.fasta.gz); [uniref90_head_subset.txt](https://github.com/soedinglab/MMseqs2/files/2847255/uniref90_head_subset.txt); ```; mmseqs createdb uniref90_head.fasta uniref90_head.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb uniref90_head.subset.mmsdb; mmseqs createsubdb uniref90_head_subset.txt uniref90_head.mmsdb_h uniref90_head.filt.mmsdb_h; ```; Then the resulting uniref90_head.filt.mmsdb_h only has a single entry (UniRef90_Q197F8 Uncharacterized protein 002R n=1 Tax=Invertebrate iridescent virus 3 TaxID=345201 RepID=002R_IIV3 ; ) which is from the fasta but not the id from the filter file (UniRef90_Q6GZX2). ## MMseqs Output (for bugs); No errors given. Only run times. ## Context; I am trying to implement a reciprocal best hits approach. I am searching a fasta file of genes against a uniref90 fasta file. Both are fasta's of amino acids. The forward search (query=genes, target=uniref) goes fine and the reverse search (query=uniref, target=genes) works fine with the full database. Reciprocal best hits were found. To speed up the reverse search I wanted to filter uniref to only include the best hits from the forward search. To do this I used `createsubdb` with the top hits from the forward search as the filter file. The search (query=filtered uniref, target=genes) ran successfully but no alignments were found. Based on this I investigated the _h file from the sub-database and saw the problem. ## Your Environment; Used on a CentOS 7 server and installed via conda. Version is 7.4e23d.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/162
https://github.com/soedinglab/MMseqs2/issues/163:1066,Safety,avoid,avoid,1066,"Hi, . Here are the following settings I used in order to get a .m8 file. . ```; mmseqs2=/beegfs/home/TOOLS/mmseqs2/bin/mmseqs; $mmseqs2 createdb\; /path/species.fa\; /path/species_mmseqs2_db; $mmseqs2 search\; /path/species_mmseqs2_db\; /path1/path2/refseq/viral_queries_seq/mmseq_db\; /path1/path2/species/result_mmseqs2\; /path1/path2/species/tpm -a -s 7.5 -e 0.1; $mmseqs2 convertalis\; /path/species_mmseqs2_db\; /path1/path2/refseq/viral_queries_seq/mmseq_db\; /path1/path2/species/result_mmseqs2\; /path1/path2/species/result_mmseqs2_db.m8; ```. and here is the head file.m8 I get: . ```; scaffold_2855_1	YP_009173613.1	0.742	377	96	1	55020	53895	70	446	1.803E-180	566; scaffold_2855_1	YP_004091438.1	0.729	377	101	1	55020	53895	66	442	2.282E-173	546; scaffold_2855_1	YP_007676312.1	0.721	377	104	1	55020	53895	65	441	4.321E-170	536; scaffold_2855_0	YP_093986897.1	0.683	376	119	0	55020	53895	67	442	3.184E-167	528; scaffold_2855_2	YP_009894551.1	0.672	376	123	0	55020	53895	67	442	3.210E-164	519; ```. Here is my question.; **First**, do you know how could I avoid to add the `index _number` after the query's name? such as `scaffold_2855_1 or scaffold_2855_0 or scaffold_2855_2` etc. **Second question:**; I did not really understand the MPI parameters in order to be faster. I have actually a SLURM server where I submit all my jobs (so actually it is one job with 20 threads per run), if I well understood I can run the program from different machines by using this parameter? How could I do with the settings I used above? . Thank you for you help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163
https://github.com/soedinglab/MMseqs2/issues/164:172,Availability,error,error,172,"I am running MMSeqs2 (the MPI version) on a cluster.; My batch script call looks like this:. `RUNNER=""mpirun --pernode"" mmseqs search query_db target_db result_db tmp`. An error occurs at the end of the prefiltering step. This is the end of the output file:. ```; ...; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1370; Target db start 1 to 8162. 0 k-mers per position.; 32539 DB matches per sequence.; 0 Overflows.; 160 sequences passed prefiltering per query sequence.; Median result list size: 149; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 0m 0s 776ms; Time for merging files: 0h 0m 0s 9ms; Could not move result tmp/14349913440832127037/pref_tmp_0 to final location tmp/14349913440832127037/pref!; --------------------------------------------------------------------------; mpirun has exited due to process rank 0 with PID 134942 on; node node218.cluster exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination"". This may have caused other processes in the application to be; terminated by signals sent by mpirun (as reported here).; ```. It looks like the filenames in my `tmp/` directory are the issue.; The list of files in `tmp/14349913440832127037/` is; ```; pref.index_tmp_0; pref_tmp_0.0; pref_tmp_0.1; pref_tmp_0.2; pref_tmp_0.3; pref_tmp_0.4; pref_tmp_0.5; pref_tmp_0.6; pref_tmp_0.7; pref_tmp_0.dbtype; searchtargetprofile.sh; ```; This suggests that each thread (there are 8 threads) is saving a temporary file with its own suffix and mmse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164
https://github.com/soedinglab/MMseqs2/issues/165:154,Availability,Down,Download,154,"## Expected Behavior; MMseq2 expected to work faster than JackHMMer 3; ## Current Behavior; MMseq2 works slower than JackHMMer 3; ## Steps to Reproduce; -Download from Uniprot the Uniref90 database ( ~ 90 millions sequences) and A0A011 sequence in FASTA format; -Create a target database with: mmseqs2/bin/mmseqs createdb uniref90.fasta uniref90_db; -Create a target database index with: mmseqs2/bin/mmseqs createindex uniref90_db tmp -s 4; -Create a query database with: mmseqs2/bin/mmseqs createdb A0A011 A0A011_db; -Compare the execution time of the two following commands:; mmseqs2/bin/mmseqs search A0A011_db uniref90_db A0A011_align_db tmp -a -s 1 --num-iterations 3; jackhmmer --cpu 28 -E 1e-3 --incE 1e-3 --noali -N 3 -A stk_alignment output uniref90.fasta. ## Context; I've run many times slight variations of the commands listed above, in order to check the differences between the two programs and MMseqs does not seem to be quicker than JackHMMer.; The best time I obtained for MMseq2 is around 16 min while JackHMMer only requires 14 min.; Maybe I'm doing something wrong ... the HMMer version is HMMER 3.1b2. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:""); dbeeb55b6cdf16118c221cf7943a70a1d2972daa; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Intel Xeon E7-8860v4; $ cat /proc/cpuinfo | grep avx2 ; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/165
https://github.com/soedinglab/MMseqs2/issues/165:1853,Energy Efficiency,monitor,monitor,1853,"tmp -s 4; -Create a query database with: mmseqs2/bin/mmseqs createdb A0A011 A0A011_db; -Compare the execution time of the two following commands:; mmseqs2/bin/mmseqs search A0A011_db uniref90_db A0A011_align_db tmp -a -s 1 --num-iterations 3; jackhmmer --cpu 28 -E 1e-3 --incE 1e-3 --noali -N 3 -A stk_alignment output uniref90.fasta. ## Context; I've run many times slight variations of the commands listed above, in order to check the differences between the two programs and MMseqs does not seem to be quicker than JackHMMer.; The best time I obtained for MMseq2 is around 16 min while JackHMMer only requires 14 min.; Maybe I'm doing something wrong ... the HMMer version is HMMER 3.1b2. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:""); dbeeb55b6cdf16118c221cf7943a70a1d2972daa; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Intel Xeon E7-8860v4; $ cat /proc/cpuinfo | grep avx2 ; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb invpcid_single intel_pt ssbd ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdseed adx smap xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts flush_l1d; Cores: 4x18 (of which 28 have been used for the job); Memory: 3072 GB/node; * Operating system and version:; Ubuntu Xenial (16.04 LTS)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/165
https://github.com/soedinglab/MMseqs2/issues/166:233,Security,access,accessions,233,"Hi everyone, I ran a `mmseqs search` and a `convertalis `run in order to get a .m8 output format. I would like to add more informations into this` .m8 `file by adding taxonomy, function, familly etc names of each hit in my file. The accessions number are from NCBI; and the `mmseqs2_db.lookup `file looks like:. ```; 0	YP_008004056.1	0; 1	YP_009304977.1	0; 2	YP_004063493.1	0; 3	YP_003457306.1	0; 4	NP_076520.1	0; 5	YP_009361849.1	0; ```; etc . Do you know if the `mmseqs taxonomy` will work for such a thing? . Thank you for your help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/166
https://github.com/soedinglab/MMseqs2/issues/167:95,Availability,fault,fault,95,"## Expected Behavior; Computing MSA with deletions in query; ## Current Behavior; Segmentation fault, empty files output; ## Steps to Reproduce (for bugs); $ mmseqs2/bin/mmseqs result2msa mmseq_form_db/A0A011_db mmseq_form_db/uniref90_db mmseq_form_db/A0A011_align_db mmseq_form_db/A0A011_msa --allow-deletion true. ## MMseqs Output (for bugs); Program call:; result2msa mmseq_form_db/A0A011_db mmseq_form_db/uniref90_db mmseq_form_db/A0A011_align_db mmseq_form_db/A0A011_msa --allow-deletion true . MMseqs Version: 	dbeeb55b6cdf16118c221cf7943a70a1d2972daa; Sub Matrix 	blosum62.out; Profile e-value threshold 	0.001; Allow Deletion 	true; Add internal id 	false; Compositional bias 	1; Filter MSA 	0; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Threads 	28; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit Consensus 	false; Skip Query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Touch data file mmseq_form_db/A0A011_db ... Done.; Start computing multiple sequence alignments.; Query database type: Aminoacid; Target database type: Aminoacid; Segmentation fault. ## Context; After searching a single sequence (A0A011) over a db (uniref90) I wanted to obtain an MSA. I also want the gaps in the query so I added the --allow-deletion true flag. Over smaller alignments (for instance the one from A0A010) this works, but it does not for larger ones (30 vs 990 aligned seqs). Running the same command without the flag ends correctly over any sequence. ## Your Environment; * Git commit used (The string after ""MMseqs Version:""); dbeeb55b6cdf16118c221cf7943a70a1d2972daa. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Intel Xeon E7-8860v4; $ cat /proc/cpuinfo | grep avx2; flags",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/167
https://github.com/soedinglab/MMseqs2/issues/167:1220,Availability,fault,fault,1220,"2msa mmseq_form_db/A0A011_db mmseq_form_db/uniref90_db mmseq_form_db/A0A011_align_db mmseq_form_db/A0A011_msa --allow-deletion true. ## MMseqs Output (for bugs); Program call:; result2msa mmseq_form_db/A0A011_db mmseq_form_db/uniref90_db mmseq_form_db/A0A011_align_db mmseq_form_db/A0A011_msa --allow-deletion true . MMseqs Version: 	dbeeb55b6cdf16118c221cf7943a70a1d2972daa; Sub Matrix 	blosum62.out; Profile e-value threshold 	0.001; Allow Deletion 	true; Add internal id 	false; Compositional bias 	1; Filter MSA 	0; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Threads 	28; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit Consensus 	false; Skip Query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Touch data file mmseq_form_db/A0A011_db ... Done.; Start computing multiple sequence alignments.; Query database type: Aminoacid; Target database type: Aminoacid; Segmentation fault. ## Context; After searching a single sequence (A0A011) over a db (uniref90) I wanted to obtain an MSA. I also want the gaps in the query so I added the --allow-deletion true flag. Over smaller alignments (for instance the one from A0A010) this works, but it does not for larger ones (30 vs 990 aligned seqs). Running the same command without the flag ends correctly over any sequence. ## Your Environment; * Git commit used (The string after ""MMseqs Version:""); dbeeb55b6cdf16118c221cf7943a70a1d2972daa. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Intel Xeon E7-8860v4; $ cat /proc/cpuinfo | grep avx2; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon peb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/167
https://github.com/soedinglab/MMseqs2/issues/167:2257,Energy Efficiency,monitor,monitor,2257,"rse seqs 	1000; Threads 	28; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit Consensus 	false; Skip Query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Touch data file mmseq_form_db/A0A011_db ... Done.; Start computing multiple sequence alignments.; Query database type: Aminoacid; Target database type: Aminoacid; Segmentation fault. ## Context; After searching a single sequence (A0A011) over a db (uniref90) I wanted to obtain an MSA. I also want the gaps in the query so I added the --allow-deletion true flag. Over smaller alignments (for instance the one from A0A010) this works, but it does not for larger ones (30 vs 990 aligned seqs). Running the same command without the flag ends correctly over any sequence. ## Your Environment; * Git commit used (The string after ""MMseqs Version:""); dbeeb55b6cdf16118c221cf7943a70a1d2972daa. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; Statically-compiled AVX2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; CPU: Intel Xeon E7-8860v4; $ cat /proc/cpuinfo | grep avx2; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb invpcid_single intel_pt ssbd ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdseed adx smap xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts flush_l1d; Cores: 4x18 (of which 28 have been used for the job); Memory: 3072 GB/node. * Operating system and version:; Ubuntu Xenial (16.04 LTS)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/167
https://github.com/soedinglab/MMseqs2/issues/170:254,Testability,test,test,254,"## Expected Behavior; DB should be formed. ; ## Current Behavior; Fails to parse fasta file. ; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; `mmseqs2/bin/mmseqs createdb test.fa DB`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMseqs Version: 84e4ba6e8ef49b5764e604b9f4d0d90e3d3c0721; Max. sequence length 65535; Split Seq. by len true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0; Compressed 0; Verbosity 3. Fasta entry: 0 is invalid. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. Test file in question:. ```; > CHIPD00001 | ACU57510.1 | Cpin_0001 | C7P9R7_CHIPD | Chromosomal replication initiator protein dnaA; MNKTCEQVWERCLNIIRDIVEWQPFKTWFEPIKPIQLENNVLTIQVPSQFFYEYLEEHYVGLLGKTIKRELGKDARLEYR; IVVENGTPHQHPKTVNMPGQFTKSKKDSEVDFPLTIQNPVKNPFVIPGIKRVQIDSQLNPHYTFESYIEGDCNRVARRAG; KTVSEKPGGTSFNPLVIYGAVGLGKTHLAQAIGNEVKRIHPNKAVLYVSAEKFINQFIDHSKNSIINDFIHFYQLIDVLI; VDDIQFFARAEKTQDAFFAIFNHLHQSGKQLILTSDKPPKDLDGLQERLLSRFRWGLSADMQMPDFETRMEILEMKMRND; GLEMPKEVVKYVAYNIQSNVRELEGALISLLAQSSLNRKEIDLELAKRVLKSFVKTSSKEITIESIQKMVCEYFDVPYDK; LLQKTRKREIVQARQITMYLAKSFTKNSLKTIGEHFGGRDHTTVIHSCQTVKDLMDTDNAFRDNVIELQQKVQLAAM. > CHIPD00002 | ACU57511.1 | Cpin_0002 | C7P9R8_CHIPD | RNA polymerase, sigma-24 subunit, ECF subfamily; MPQEGQHTLWSAIRKGDETAFRQLFEECWEPLFTYASRITIDHSLAQDSVQSLFIHIWEKRDSLPDVTAILPYLRSALKN; RLLNALRDEHVYQKHVDLFTQVVDTNSPSSAEPLHLKETEQQLLQSINRLPGKMKDVFYLHRIEDLSVAEIACKLGTSPQ; TIRNQISTAIQRLKTTFV; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Com",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/170
https://github.com/soedinglab/MMseqs2/issues/170:754,Testability,Test,Test,754,"## Expected Behavior; DB should be formed. ; ## Current Behavior; Fails to parse fasta file. ; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; `mmseqs2/bin/mmseqs createdb test.fa DB`. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. MMseqs Version: 84e4ba6e8ef49b5764e604b9f4d0d90e3d3c0721; Max. sequence length 65535; Split Seq. by len true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0; Compressed 0; Verbosity 3. Fasta entry: 0 is invalid. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. Test file in question:. ```; > CHIPD00001 | ACU57510.1 | Cpin_0001 | C7P9R7_CHIPD | Chromosomal replication initiator protein dnaA; MNKTCEQVWERCLNIIRDIVEWQPFKTWFEPIKPIQLENNVLTIQVPSQFFYEYLEEHYVGLLGKTIKRELGKDARLEYR; IVVENGTPHQHPKTVNMPGQFTKSKKDSEVDFPLTIQNPVKNPFVIPGIKRVQIDSQLNPHYTFESYIEGDCNRVARRAG; KTVSEKPGGTSFNPLVIYGAVGLGKTHLAQAIGNEVKRIHPNKAVLYVSAEKFINQFIDHSKNSIINDFIHFYQLIDVLI; VDDIQFFARAEKTQDAFFAIFNHLHQSGKQLILTSDKPPKDLDGLQERLLSRFRWGLSADMQMPDFETRMEILEMKMRND; GLEMPKEVVKYVAYNIQSNVRELEGALISLLAQSSLNRKEIDLELAKRVLKSFVKTSSKEITIESIQKMVCEYFDVPYDK; LLQKTRKREIVQARQITMYLAKSFTKNSLKTIGEHFGGRDHTTVIHSCQTVKDLMDTDNAFRDNVIELQQKVQLAAM. > CHIPD00002 | ACU57511.1 | Cpin_0002 | C7P9R8_CHIPD | RNA polymerase, sigma-24 subunit, ECF subfamily; MPQEGQHTLWSAIRKGDETAFRQLFEECWEPLFTYASRITIDHSLAQDSVQSLFIHIWEKRDSLPDVTAILPYLRSALKN; RLLNALRDEHVYQKHVDLFTQVVDTNSPSSAEPLHLKETEQQLLQSINRLPGKMKDVFYLHRIEDLSVAEIACKLGTSPQ; TIRNQISTAIQRLKTTFV; ```. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Com",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/170
https://github.com/soedinglab/MMseqs2/issues/171:1296,Availability,Mask,Mask,1296,"ake sure to also post the complete output of MMseqs. You can use gist.github.com for large output. BELLOW is the output =>. Program call:; search queryDB targetDB resultDB tmp. MMseqs Version: 9357bb750290e2862ab4da522f03c971f71cfff3; Substitution Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 4; Compressed 0; Verbosity 3; Seed Substitution Matrix PAM30.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the M",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171
https://github.com/soedinglab/MMseqs2/issues/171:1556,Availability,Mask,Mask,1556,"3c971f71cfff3; Substitution Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 4; Compressed 0; Verbosity 3; Seed Substitution Matrix PAM30.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our docu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171
https://github.com/soedinglab/MMseqs2/issues/171:2765,Availability,error,error,2765,". 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I got a remote VM from a university lab in which I run the project. everything was going quite well (compilation, installation, creating the DBs) but when I wanted to pre-compute the index of targetDB, I got this weird error with no further details to solve it. I don't know if it is related to the privileges granted to me in the VM or the version of MMseqs. Would you please suggest some hints/help?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 9357bb750290e2862ab4da522f03c971f71cfff3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc version 4.8.5 & cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Architecture : x86_64 / Processor : 4x Intel Xeon E312xx (Sandy Bridge) / Memory : 196.62 GiB / Instruction set: SSE4_1; * Operating system and version: CentOS 7.6.1810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171
https://github.com/soedinglab/MMseqs2/issues/171:2660,Deployability,install,installation,2660,". 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I got a remote VM from a university lab in which I run the project. everything was going quite well (compilation, installation, creating the DBs) but when I wanted to pre-compute the index of targetDB, I got this weird error with no further details to solve it. I don't know if it is related to the privileges granted to me in the VM or the version of MMseqs. Would you please suggest some hints/help?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 9357bb750290e2862ab4da522f03c971f71cfff3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc version 4.8.5 & cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Architecture : x86_64 / Processor : 4x Intel Xeon E312xx (Sandy Bridge) / Memory : 196.62 GiB / Instruction set: SSE4_1; * Operating system and version: CentOS 7.6.1810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171
https://github.com/soedinglab/MMseqs2/issues/171:3605,Integrability,Bridg,Bridge,3605,"d. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I got a remote VM from a university lab in which I run the project. everything was going quite well (compilation, installation, creating the DBs) but when I wanted to pre-compute the index of targetDB, I got this weird error with no further details to solve it. I don't know if it is related to the privileges granted to me in the VM or the version of MMseqs. Would you please suggest some hints/help?. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): MMseqs2 Version: 9357bb750290e2862ab4da522f03c971f71cfff3; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc version 4.8.5 & cmake version 2.8.12.2; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): Architecture : x86_64 / Processor : 4x Intel Xeon E312xx (Sandy Bridge) / Memory : 196.62 GiB / Instruction set: SSE4_1; * Operating system and version: CentOS 7.6.1810",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171
https://github.com/soedinglab/MMseqs2/issues/171:1504,Performance,perform,performs,1504,"3c971f71cfff3; Substitution Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 4; Compressed 0; Verbosity 3; Seed Substitution Matrix PAM30.out; Sensitivity 5.7; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner; Force restart using the latest tmp false; Remove Temporary Files false. Could not create symlink of tmp/5177011769629871693!. ## Context; Providing context helps us come up with a solution and improve our docu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/171
https://github.com/soedinglab/MMseqs2/issues/173:198,Availability,redundant,redundant,198,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173
https://github.com/soedinglab/MMseqs2/issues/173:237,Deployability,deploy,deployed,237,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173
https://github.com/soedinglab/MMseqs2/issues/173:630,Energy Efficiency,reduce,reduced,630,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173
https://github.com/soedinglab/MMseqs2/issues/173:198,Safety,redund,redundant,198,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173
https://github.com/soedinglab/MMseqs2/issues/173:368,Safety,avoid,avoid,368,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173
https://github.com/soedinglab/MMseqs2/issues/173:459,Usability,guid,guiding,459,"Hi,; I am new to MMSeqs2. It is really a good tool. However, I have 2 queries, may be basic too. But I want your opinions.; In an attempt to build a set of 30-90% sequence similarity, I removed the redundant hits myself firstly and then deployed a minimum sequence identity threshold of 30% and coverage 1 (All 92 input sequences are close homologues and so I want to avoid the partial match to build the good set), it resulted in 52 hits. So, now as you are guiding, the multiple resultant cluster sets have the sequence identity lesser than 30%, but the 52 hits share a sequence identity > 30%. Is this correct that this way my reduced set of 52 hits contains the sequences that are 30-90% identical?. Further, why is it that for another sequence-group, the resultant set spans the same 45 sequences for both 30% and 90% cutoffs. So, does it mean that the length of atleast 1 representative sequence is bigger and it spans multiple sequences in either of these ranges to result in the same set? How should this result be defined?; Thanks for your clarifications.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/173
https://github.com/soedinglab/MMseqs2/issues/174:1003,Availability,ERROR,ERROR,1003,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174
https://github.com/soedinglab/MMseqs2/issues/174:1397,Availability,ERROR,ERROR,1397,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174
https://github.com/soedinglab/MMseqs2/issues/174:1828,Availability,error,error,1828,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174
https://github.com/soedinglab/MMseqs2/issues/174:801,Integrability,message,message,801,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174
https://github.com/soedinglab/MMseqs2/issues/174:1260,Safety,abort,aborted,1260,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174
https://github.com/soedinglab/MMseqs2/issues/174:1545,Safety,detect,detected,1545,"Hi,. I'm trying to convert the MSA of a cluster DB to HH-blits format. . So, I follow [this tutorial](https://github.com/soedinglab/mmseqs2/wiki#how-to-create-a-hhblits-database). > mmseqs result2msa pbps.DB pbps.DB pbps.CLU pbps.CLU.msa --compress ; > ln -s pbps.DB_h pbps_MSA_header.ffdata ; > ln -s pbps.DB_h.index pbps_MSA_header.ffdindex ; > ln -s pbps.DB_h.index pbps_MSA_header.ffindex ; > ln -s pbps.DB pbps_MSA.ffdata ; > ln -s pbps.DB.index pbps_MSA.ffindex . All commands above work nicely, the `pbps.CLU` database are also nice capable to generate the TSV file with all clusters. But when I run:; > mpirun -np 2 /usr/lib/hh/bin/cstranslate -i pbps.CLU.msa_ca3m.ffdata -o pbps.CLU.msa_cs219 -A /usr/lib/hh/data/cs219.lib -D /usr/lib/hh/data/context_data.lib -x 0.4 -c 4 -I ca3m. I got this message:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; Reading abstract state alphabet from cs219.lib ... ERROR: Sequence 1 has 4322 match columns but should have 16934!; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[19728,1],1]; Exit code: 1; --------------------------------------------------------------------------; ```. How can I debug this error?? . Also, when I used the `mmseqs result2msa` with `--compress` option the output are two files with `_ca3m.ffdata` and `_ca3m.ffindex`. Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174
https://github.com/soedinglab/MMseqs2/issues/175:1802,Availability,Mask,Mask,1802," -w `pwd` soedinglab/mmseqs2 mmseqs createdb GCF_000967155.fasta GCF_000967155_db; Program call:; createdb GCF_000967155.fasta GCF_000967155_db. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Split Seq. by len true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0; Compressed 0; Verbosity 3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Time for merging files: 0h 0m 0s 7ms; Time for merging files: 0h 0m 0s 6ms; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 174ms; ```; Create index:; ```; $ docker run -v `pwd`:`pwd` -w `pwd` soedinglab/mmseqs2 mmseqs createindex GCF_000967155_db /tmp --search-type 3; Program call:; createindex GCF_000967155_db /tmp --search-type 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3; Min codons in orf 30; Max codons in length 98202; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Compressed 0; Add Orf Stop false; Overlap between sequences 0; Strand selection 1; Remove Temporary Files false. Program call:; splitsequence GCF_000967155_db /tmp/11952770628863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175
https://github.com/soedinglab/MMseqs2/issues/175:1819,Availability,Mask,Mask,1819," -w `pwd` soedinglab/mmseqs2 mmseqs createdb GCF_000967155.fasta GCF_000967155_db; Program call:; createdb GCF_000967155.fasta GCF_000967155_db. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Split Seq. by len true; Database type 0; Do not shuffle input database true; Offset of numeric ids 0; Compressed 0; Verbosity 3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Time for merging files: 0h 0m 0s 7ms; Time for merging files: 0h 0m 0s 6ms; Time for merging files: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 174ms; ```; Create index:; ```; $ docker run -v `pwd`:`pwd` -w `pwd` soedinglab/mmseqs2 mmseqs createindex GCF_000967155_db /tmp --search-type 3; Program call:; createindex GCF_000967155_db /tmp --search-type 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3; Min codons in orf 30; Max codons in length 98202; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Compressed 0; Add Orf Stop false; Overlap between sequences 0; Strand selection 1; Remove Temporary Files false. Program call:; splitsequence GCF_000967155_db /tmp/11952770628863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175
https://github.com/soedinglab/MMseqs2/issues/175:3401,Availability,mask,mask,3401,"equence GCF_000967155_db /tmp/11952770628863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/11952770628863456989/nucl_split_seq /tmp/11952770628863456989/nucl_split_seq_rev --forward-frames 1 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Forward Frames 1; Reverse Frames 1,2,3; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 5ms; Time for merging files: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 100ms; Program call:; indexdb /tmp/11952770628863456989/nucl_split_seq_rev.dbtype GCF_000967155_db --seed-sub-mat VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 24 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3. Could not open index file /tmp/11952770628863456989/nucl_split_seq_rev.dbtype.index!; Error: indexdb died; ```. ## Context; Bug discovered while using the MMseqs2-app docker image, then tested without the web server. ## Your Environment; * Git commit used: ebddda7ce9d708610eb7b5097917271487a9e459; * MMseqs version used: Docker; * Server specifications: CPU intel xeon silver 4116 (12C/24T) with AVX2 and SSE4 support, 64GB RAM; * Operating system and ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175
https://github.com/soedinglab/MMseqs2/issues/175:3410,Availability,mask,mask-lower-case,3410,"equence GCF_000967155_db /tmp/11952770628863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/11952770628863456989/nucl_split_seq /tmp/11952770628863456989/nucl_split_seq_rev --forward-frames 1 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Forward Frames 1; Reverse Frames 1,2,3; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 5ms; Time for merging files: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 100ms; Program call:; indexdb /tmp/11952770628863456989/nucl_split_seq_rev.dbtype GCF_000967155_db --seed-sub-mat VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 24 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3. Could not open index file /tmp/11952770628863456989/nucl_split_seq_rev.dbtype.index!; Error: indexdb died; ```. ## Context; Bug discovered while using the MMseqs2-app docker image, then tested without the web server. ## Your Environment; * Git commit used: ebddda7ce9d708610eb7b5097917271487a9e459; * MMseqs version used: Docker; * Server specifications: CPU intel xeon silver 4116 (12C/24T) with AVX2 and SSE4 support, 64GB RAM; * Operating system and ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175
https://github.com/soedinglab/MMseqs2/issues/175:3734,Availability,Mask,Mask,3734,"28863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/11952770628863456989/nucl_split_seq /tmp/11952770628863456989/nucl_split_seq_rev --forward-frames 1 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Forward Frames 1; Reverse Frames 1,2,3; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 5ms; Time for merging files: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 100ms; Program call:; indexdb /tmp/11952770628863456989/nucl_split_seq_rev.dbtype GCF_000967155_db --seed-sub-mat VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 24 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3. Could not open index file /tmp/11952770628863456989/nucl_split_seq_rev.dbtype.index!; Error: indexdb died; ```. ## Context; Bug discovered while using the MMseqs2-app docker image, then tested without the web server. ## Your Environment; * Git commit used: ebddda7ce9d708610eb7b5097917271487a9e459; * MMseqs version used: Docker; * Server specifications: CPU intel xeon silver 4116 (12C/24T) with AVX2 and SSE4 support, 64GB RAM; * Operating system and version: Debian GNU/Linux 9.8 (stretch)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175
https://github.com/soedinglab/MMseqs2/issues/175:3751,Availability,Mask,Mask,3751,"28863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/11952770628863456989/nucl_split_seq /tmp/11952770628863456989/nucl_split_seq_rev --forward-frames 1 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Forward Frames 1; Reverse Frames 1,2,3; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 5ms; Time for merging files: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 100ms; Program call:; indexdb /tmp/11952770628863456989/nucl_split_seq_rev.dbtype GCF_000967155_db --seed-sub-mat VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 24 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3. Could not open index file /tmp/11952770628863456989/nucl_split_seq_rev.dbtype.index!; Error: indexdb died; ```. ## Context; Bug discovered while using the MMseqs2-app docker image, then tested without the web server. ## Your Environment; * Git commit used: ebddda7ce9d708610eb7b5097917271487a9e459; * MMseqs version used: Docker; * Server specifications: CPU intel xeon silver 4116 (12C/24T) with AVX2 and SSE4 support, 64GB RAM; * Operating system and version: Debian GNU/Linux 9.8 (stretch)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175
https://github.com/soedinglab/MMseqs2/issues/175:4028,Availability,Error,Error,4028,"28863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/11952770628863456989/nucl_split_seq /tmp/11952770628863456989/nucl_split_seq_rev --forward-frames 1 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Forward Frames 1; Reverse Frames 1,2,3; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 5ms; Time for merging files: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 100ms; Program call:; indexdb /tmp/11952770628863456989/nucl_split_seq_rev.dbtype GCF_000967155_db --seed-sub-mat VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 24 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3. Could not open index file /tmp/11952770628863456989/nucl_split_seq_rev.dbtype.index!; Error: indexdb died; ```. ## Context; Bug discovered while using the MMseqs2-app docker image, then tested without the web server. ## Your Environment; * Git commit used: ebddda7ce9d708610eb7b5097917271487a9e459; * MMseqs version used: Docker; * Server specifications: CPU intel xeon silver 4116 (12C/24T) with AVX2 and SSE4 support, 64GB RAM; * Operating system and version: Debian GNU/Linux 9.8 (stretch)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175
https://github.com/soedinglab/MMseqs2/issues/175:4128,Testability,test,tested,4128,"28863456989/nucl_split_seq --max-seq-len 65535 --sequence-overlap 0 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Max. sequence length 65535; Overlap between sequences 0; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 15ms; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 320ms; Program call:; extractframes /tmp/11952770628863456989/nucl_split_seq /tmp/11952770628863456989/nucl_split_seq_rev --forward-frames 1 --threads 24 --compressed 0 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Forward Frames 1; Reverse Frames 1,2,3; Threads 24; Compressed 0; Verbosity 3. Time for merging files: 0h 0m 0s 5ms; Time for merging files: 0h 0m 0s 9ms; Time for processing: 0h 0m 0s 100ms; Program call:; indexdb /tmp/11952770628863456989/nucl_split_seq_rev.dbtype GCF_000967155_db --seed-sub-mat VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 24 -v 3. MMseqs Version: ebddda7ce9d708610eb7b5097917271487a9e459; Seed Substitution Matrix VTML80.out; K-mer size 0; Alphabet size 21; Compositional bias 1; Max. sequence length 65535; Mask Residues 1; Mask lower case residues 0; Spaced Kmer 1; Spaced k-mer pattern; Sensitivity 7.5; K-score 0; Check Compatible false; Search type 3; Split DB 0; Split Memory Limit 0; Threads 24; Verbosity 3. Could not open index file /tmp/11952770628863456989/nucl_split_seq_rev.dbtype.index!; Error: indexdb died; ```. ## Context; Bug discovered while using the MMseqs2-app docker image, then tested without the web server. ## Your Environment; * Git commit used: ebddda7ce9d708610eb7b5097917271487a9e459; * MMseqs version used: Docker; * Server specifications: CPU intel xeon silver 4116 (12C/24T) with AVX2 and SSE4 support, 64GB RAM; * Operating system and version: Debian GNU/Linux 9.8 (stretch)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175
https://github.com/soedinglab/MMseqs2/issues/178:25,Availability,error,error,25,"## Expected Behavior. no error and more coffee . ## Current Behavior. The mmseqs convertalis throws the following error:. **Invalid database read for database data file=test/E.faa.mmseqsp_h, database index=test/E.faa.mmseqsp_h.index; getData: local id (4294967295) >= db size (72)**. ## Steps to Reproduce (for bugs). 1. build DB . > mmseqs createdb --dbtype 1 C.faa C.faa.mmseqsp. and. > mmseqs createdb --dbtype 1 E.faa E.faa.mmseqsp. 2. search. > mmseqs search C.faa.mmseqsp E.faa.mmseqsp E.faa.vs.C.faa.mmseqsp . --threads 1 -e 1e-05. 3. do convertalis . > mmseqs convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla. -> The error occures here. ## MMseqs Output (for bugs). here are all my files in the directory:. > ; > 14083925917902872037/ C.faa.mmseqsp_h.dbtype E.faa.mmseqsp E.faa.mmseqsp.index E.faa.vs.C.faa.mmseqsp.bla.2 E.faa.vs.C.faa.mmseqsp.bla.7 E.faa.vs.C.faa.mmseqsp.bla.index.4 E.faa.vs.C.faa.mmseqsp.index; > C.faa C.faa.mmseqsp_h.index E.faa.mmseqsp.dbtype E.faa.mmseqsp.lookup E.faa.vs.C.faa.mmseqsp.bla.3 E.faa.vs.C.faa.mmseqsp.bla.index.0 E.faa.vs.C.faa.mmseqsp.bla.index.5 latest; > C.faa.mmseqsp C.faa.mmseqsp.index E.faa.mmseqsp_h E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla.4 E.faa.vs.C.faa.mmseqsp.bla.index.1 E.faa.vs.C.faa.mmseqsp.bla.index.6; > C.faa.mmseqsp.dbtype C.faa.mmseqsp.lookup E.faa.mmseqsp_h.dbtype E.faa.vs.C.faa.mmseqsp.bla.0 E.faa.vs.C.faa.mmseqsp.bla.5 E.faa.vs.C.faa.mmseqsp.bla.index.2 E.faa.vs.C.faa.mmseqsp.bla.index.7; > C.faa.mmseqsp_h E.faa E.faa.mmseqsp_h.index E.faa.vs.C.faa.mmseqsp.bla.1 E.faa.vs.C.faa.mmseqsp.bla.6 E.faa.vs.C.faa.mmseqsp.bla.index.3 E.faa.vs.C.faa.mmseqsp.dbtype. The precise output is : . > `Program call:; > convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla; > ; > MMseqs Version: 5d7cecc696fa3dfc60dce1acbe7f30a513ec209f; > Substitution Matrix blosum62.out; > Alignment Format 0; > Format alignment output query,target,pident,alnlen,misma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/178
https://github.com/soedinglab/MMseqs2/issues/178:114,Availability,error,error,114,"## Expected Behavior. no error and more coffee . ## Current Behavior. The mmseqs convertalis throws the following error:. **Invalid database read for database data file=test/E.faa.mmseqsp_h, database index=test/E.faa.mmseqsp_h.index; getData: local id (4294967295) >= db size (72)**. ## Steps to Reproduce (for bugs). 1. build DB . > mmseqs createdb --dbtype 1 C.faa C.faa.mmseqsp. and. > mmseqs createdb --dbtype 1 E.faa E.faa.mmseqsp. 2. search. > mmseqs search C.faa.mmseqsp E.faa.mmseqsp E.faa.vs.C.faa.mmseqsp . --threads 1 -e 1e-05. 3. do convertalis . > mmseqs convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla. -> The error occures here. ## MMseqs Output (for bugs). here are all my files in the directory:. > ; > 14083925917902872037/ C.faa.mmseqsp_h.dbtype E.faa.mmseqsp E.faa.mmseqsp.index E.faa.vs.C.faa.mmseqsp.bla.2 E.faa.vs.C.faa.mmseqsp.bla.7 E.faa.vs.C.faa.mmseqsp.bla.index.4 E.faa.vs.C.faa.mmseqsp.index; > C.faa C.faa.mmseqsp_h.index E.faa.mmseqsp.dbtype E.faa.mmseqsp.lookup E.faa.vs.C.faa.mmseqsp.bla.3 E.faa.vs.C.faa.mmseqsp.bla.index.0 E.faa.vs.C.faa.mmseqsp.bla.index.5 latest; > C.faa.mmseqsp C.faa.mmseqsp.index E.faa.mmseqsp_h E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla.4 E.faa.vs.C.faa.mmseqsp.bla.index.1 E.faa.vs.C.faa.mmseqsp.bla.index.6; > C.faa.mmseqsp.dbtype C.faa.mmseqsp.lookup E.faa.mmseqsp_h.dbtype E.faa.vs.C.faa.mmseqsp.bla.0 E.faa.vs.C.faa.mmseqsp.bla.5 E.faa.vs.C.faa.mmseqsp.bla.index.2 E.faa.vs.C.faa.mmseqsp.bla.index.7; > C.faa.mmseqsp_h E.faa E.faa.mmseqsp_h.index E.faa.vs.C.faa.mmseqsp.bla.1 E.faa.vs.C.faa.mmseqsp.bla.6 E.faa.vs.C.faa.mmseqsp.bla.index.3 E.faa.vs.C.faa.mmseqsp.dbtype. The precise output is : . > `Program call:; > convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla; > ; > MMseqs Version: 5d7cecc696fa3dfc60dce1acbe7f30a513ec209f; > Substitution Matrix blosum62.out; > Alignment Format 0; > Format alignment output query,target,pident,alnlen,misma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/178
https://github.com/soedinglab/MMseqs2/issues/178:666,Availability,error,error,666,"## Expected Behavior. no error and more coffee . ## Current Behavior. The mmseqs convertalis throws the following error:. **Invalid database read for database data file=test/E.faa.mmseqsp_h, database index=test/E.faa.mmseqsp_h.index; getData: local id (4294967295) >= db size (72)**. ## Steps to Reproduce (for bugs). 1. build DB . > mmseqs createdb --dbtype 1 C.faa C.faa.mmseqsp. and. > mmseqs createdb --dbtype 1 E.faa E.faa.mmseqsp. 2. search. > mmseqs search C.faa.mmseqsp E.faa.mmseqsp E.faa.vs.C.faa.mmseqsp . --threads 1 -e 1e-05. 3. do convertalis . > mmseqs convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla. -> The error occures here. ## MMseqs Output (for bugs). here are all my files in the directory:. > ; > 14083925917902872037/ C.faa.mmseqsp_h.dbtype E.faa.mmseqsp E.faa.mmseqsp.index E.faa.vs.C.faa.mmseqsp.bla.2 E.faa.vs.C.faa.mmseqsp.bla.7 E.faa.vs.C.faa.mmseqsp.bla.index.4 E.faa.vs.C.faa.mmseqsp.index; > C.faa C.faa.mmseqsp_h.index E.faa.mmseqsp.dbtype E.faa.mmseqsp.lookup E.faa.vs.C.faa.mmseqsp.bla.3 E.faa.vs.C.faa.mmseqsp.bla.index.0 E.faa.vs.C.faa.mmseqsp.bla.index.5 latest; > C.faa.mmseqsp C.faa.mmseqsp.index E.faa.mmseqsp_h E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla.4 E.faa.vs.C.faa.mmseqsp.bla.index.1 E.faa.vs.C.faa.mmseqsp.bla.index.6; > C.faa.mmseqsp.dbtype C.faa.mmseqsp.lookup E.faa.mmseqsp_h.dbtype E.faa.vs.C.faa.mmseqsp.bla.0 E.faa.vs.C.faa.mmseqsp.bla.5 E.faa.vs.C.faa.mmseqsp.bla.index.2 E.faa.vs.C.faa.mmseqsp.bla.index.7; > C.faa.mmseqsp_h E.faa E.faa.mmseqsp_h.index E.faa.vs.C.faa.mmseqsp.bla.1 E.faa.vs.C.faa.mmseqsp.bla.6 E.faa.vs.C.faa.mmseqsp.bla.index.3 E.faa.vs.C.faa.mmseqsp.dbtype. The precise output is : . > `Program call:; > convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla; > ; > MMseqs Version: 5d7cecc696fa3dfc60dce1acbe7f30a513ec209f; > Substitution Matrix blosum62.out; > Alignment Format 0; > Format alignment output query,target,pident,alnlen,misma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/178
https://github.com/soedinglab/MMseqs2/issues/178:3159,Availability,error,errors,3159,"eqsp.lookup E.faa.mmseqsp_h.dbtype E.faa.vs.C.faa.mmseqsp.bla.0 E.faa.vs.C.faa.mmseqsp.bla.5 E.faa.vs.C.faa.mmseqsp.bla.index.2 E.faa.vs.C.faa.mmseqsp.bla.index.7; > C.faa.mmseqsp_h E.faa E.faa.mmseqsp_h.index E.faa.vs.C.faa.mmseqsp.bla.1 E.faa.vs.C.faa.mmseqsp.bla.6 E.faa.vs.C.faa.mmseqsp.bla.index.3 E.faa.vs.C.faa.mmseqsp.dbtype. The precise output is : . > `Program call:; > convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla; > ; > MMseqs Version: 5d7cecc696fa3dfc60dce1acbe7f30a513ec209f; > Substitution Matrix blosum62.out; > Alignment Format 0; > Format alignment output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; > Translation Table 1; > Gap open cost 11; > Gap extension cost 1; > Database Output false; > Preload mode 0; > Search type 0; > Threads 8; > Compressed 0; > Verbosity 3; > ; > Query database: E.faa.mmseqsp; > Touch data file E.faa.mmseqsp_h ... Done.; > Target database: C.faa.mmseqsp; > Touch data file C.faa.mmseqsp_h ... Done.; > Alignment database: E.faa.vs.C.faa.mmseqsp; > Start writing to E.faa.vs.C.faa.mmseqsp.bla; > Invalid database read for database data file=E.faa.mmseqsp_h, database index=E.faa.mmseqsp_h.index; > getData: local id (4294967295) >= db size (72); > Invalid database read for database data file=Invalid database read for database data file=E.faa.mmseqsp_h, database index=E.faa.mmseqsp_h, database index=Invalid database read for database data file=E.faa.mmseqsp_h, database index=E.faa.m; > mseqsp_h.indexE.faa.mmseqsp_h.index; > E.faa.mmseqsp_h.index; > getData: local id (getData: local id (; > getData: local id (4294967295) >= db size (4294967295) >= db size (724294967295) >= db size (72); > ); > 72). ## Context. I use the newest version (cloned today and compiled with no errors) and some version 2-3 month old. . ## Your Environment. linux, 4 cores, plenty of RAM ... ## FILES. [inputfiles.zip](https://github.com/soedinglab/MMseqs2/files/2979000/inputfiles.zip)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/178
https://github.com/soedinglab/MMseqs2/issues/178:169,Testability,test,test,169,"## Expected Behavior. no error and more coffee . ## Current Behavior. The mmseqs convertalis throws the following error:. **Invalid database read for database data file=test/E.faa.mmseqsp_h, database index=test/E.faa.mmseqsp_h.index; getData: local id (4294967295) >= db size (72)**. ## Steps to Reproduce (for bugs). 1. build DB . > mmseqs createdb --dbtype 1 C.faa C.faa.mmseqsp. and. > mmseqs createdb --dbtype 1 E.faa E.faa.mmseqsp. 2. search. > mmseqs search C.faa.mmseqsp E.faa.mmseqsp E.faa.vs.C.faa.mmseqsp . --threads 1 -e 1e-05. 3. do convertalis . > mmseqs convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla. -> The error occures here. ## MMseqs Output (for bugs). here are all my files in the directory:. > ; > 14083925917902872037/ C.faa.mmseqsp_h.dbtype E.faa.mmseqsp E.faa.mmseqsp.index E.faa.vs.C.faa.mmseqsp.bla.2 E.faa.vs.C.faa.mmseqsp.bla.7 E.faa.vs.C.faa.mmseqsp.bla.index.4 E.faa.vs.C.faa.mmseqsp.index; > C.faa C.faa.mmseqsp_h.index E.faa.mmseqsp.dbtype E.faa.mmseqsp.lookup E.faa.vs.C.faa.mmseqsp.bla.3 E.faa.vs.C.faa.mmseqsp.bla.index.0 E.faa.vs.C.faa.mmseqsp.bla.index.5 latest; > C.faa.mmseqsp C.faa.mmseqsp.index E.faa.mmseqsp_h E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla.4 E.faa.vs.C.faa.mmseqsp.bla.index.1 E.faa.vs.C.faa.mmseqsp.bla.index.6; > C.faa.mmseqsp.dbtype C.faa.mmseqsp.lookup E.faa.mmseqsp_h.dbtype E.faa.vs.C.faa.mmseqsp.bla.0 E.faa.vs.C.faa.mmseqsp.bla.5 E.faa.vs.C.faa.mmseqsp.bla.index.2 E.faa.vs.C.faa.mmseqsp.bla.index.7; > C.faa.mmseqsp_h E.faa E.faa.mmseqsp_h.index E.faa.vs.C.faa.mmseqsp.bla.1 E.faa.vs.C.faa.mmseqsp.bla.6 E.faa.vs.C.faa.mmseqsp.bla.index.3 E.faa.vs.C.faa.mmseqsp.dbtype. The precise output is : . > `Program call:; > convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla; > ; > MMseqs Version: 5d7cecc696fa3dfc60dce1acbe7f30a513ec209f; > Substitution Matrix blosum62.out; > Alignment Format 0; > Format alignment output query,target,pident,alnlen,misma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/178
https://github.com/soedinglab/MMseqs2/issues/178:206,Testability,test,test,206,"## Expected Behavior. no error and more coffee . ## Current Behavior. The mmseqs convertalis throws the following error:. **Invalid database read for database data file=test/E.faa.mmseqsp_h, database index=test/E.faa.mmseqsp_h.index; getData: local id (4294967295) >= db size (72)**. ## Steps to Reproduce (for bugs). 1. build DB . > mmseqs createdb --dbtype 1 C.faa C.faa.mmseqsp. and. > mmseqs createdb --dbtype 1 E.faa E.faa.mmseqsp. 2. search. > mmseqs search C.faa.mmseqsp E.faa.mmseqsp E.faa.vs.C.faa.mmseqsp . --threads 1 -e 1e-05. 3. do convertalis . > mmseqs convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla. -> The error occures here. ## MMseqs Output (for bugs). here are all my files in the directory:. > ; > 14083925917902872037/ C.faa.mmseqsp_h.dbtype E.faa.mmseqsp E.faa.mmseqsp.index E.faa.vs.C.faa.mmseqsp.bla.2 E.faa.vs.C.faa.mmseqsp.bla.7 E.faa.vs.C.faa.mmseqsp.bla.index.4 E.faa.vs.C.faa.mmseqsp.index; > C.faa C.faa.mmseqsp_h.index E.faa.mmseqsp.dbtype E.faa.mmseqsp.lookup E.faa.vs.C.faa.mmseqsp.bla.3 E.faa.vs.C.faa.mmseqsp.bla.index.0 E.faa.vs.C.faa.mmseqsp.bla.index.5 latest; > C.faa.mmseqsp C.faa.mmseqsp.index E.faa.mmseqsp_h E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla.4 E.faa.vs.C.faa.mmseqsp.bla.index.1 E.faa.vs.C.faa.mmseqsp.bla.index.6; > C.faa.mmseqsp.dbtype C.faa.mmseqsp.lookup E.faa.mmseqsp_h.dbtype E.faa.vs.C.faa.mmseqsp.bla.0 E.faa.vs.C.faa.mmseqsp.bla.5 E.faa.vs.C.faa.mmseqsp.bla.index.2 E.faa.vs.C.faa.mmseqsp.bla.index.7; > C.faa.mmseqsp_h E.faa E.faa.mmseqsp_h.index E.faa.vs.C.faa.mmseqsp.bla.1 E.faa.vs.C.faa.mmseqsp.bla.6 E.faa.vs.C.faa.mmseqsp.bla.index.3 E.faa.vs.C.faa.mmseqsp.dbtype. The precise output is : . > `Program call:; > convertalis E.faa.mmseqsp C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp E.faa.vs.C.faa.mmseqsp.bla; > ; > MMseqs Version: 5d7cecc696fa3dfc60dce1acbe7f30a513ec209f; > Substitution Matrix blosum62.out; > Alignment Format 0; > Format alignment output query,target,pident,alnlen,misma",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/178
https://github.com/soedinglab/MMseqs2/issues/180:64,Availability,Error,Error,64,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180
https://github.com/soedinglab/MMseqs2/issues/180:724,Deployability,pipeline,pipeline,724,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180
https://github.com/soedinglab/MMseqs2/issues/180:231,Testability,test,test,231,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180
https://github.com/soedinglab/MMseqs2/issues/180:240,Testability,test,test,240,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180
https://github.com/soedinglab/MMseqs2/issues/180:264,Testability,test,test,264,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180
https://github.com/soedinglab/MMseqs2/issues/180:272,Testability,test,test,272,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180
https://github.com/soedinglab/MMseqs2/issues/180:303,Testability,test,test,303,"## Expected Behavior; Producing a cluster. ## Current Behavior; Error of clustering. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs createdb test.faa test.db; mmseqs cluster test.db test.clu tmp --min-seq-id 0.9; test.faa is attached in the gist. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; https://gist.github.com/matveykolesnik/43a90e7404e11881c29e2c80d79c5fec. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I am using mmseq2 for clustering of protein sequences in automatic pipeline, and I faced with the problem when mmseq2 fails to process fasta files that consist of repeated same sequences, like this:; >record1; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; >record2; MALYNISEKILTTLEKTSFTIERLQERYDLQEAIKKNIDIVAPGCLVISEEFSDWEDSRR; ...; Perhaps it would be worth to add handling of such fasta files. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180
https://github.com/soedinglab/MMseqs2/issues/181:215,Testability,log,log,215,For some reasons mmseqs cluster fails during clustering of the attached protein fasta. Commands:; ```; mmseqs createdb test2.faa test2.db; mmseqs cluster test2.db test2.clu tmp --min-seq-id 0.9; ```; fasta file and log are attached in gist; https://gist.github.com/matveykolesnik/7b4376daba0a1f5846747a7b4bb33d81,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/181
https://github.com/soedinglab/MMseqs2/issues/182:766,Availability,error,error,766,"## Expected Behavior; It should compile. ## Current Behavior; It doesn't compile. ## Steps to Reproduce (for bugs); I did (after a ""git pull"" in my MMseqs2 directory):; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2; make. ## MMseqs Output (for bugs); [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sysctl.h:83,; from /usr/local/biotools/MMseqs/MMseqs2/src/commons/Util.cpp:15:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ucred.h:94:2: error: '_Atomic' does not name a type; _Atomic u_long cr_ref; /* reference count */; ^~~~~~~; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; make: *** [all] Error 2. ## Context; tried in an iMac, and a Mac Pro. Xcode 10.2, and gcc-8 (homebrew).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182
https://github.com/soedinglab/MMseqs2/issues/182:930,Availability,Error,Error,930,"## Expected Behavior; It should compile. ## Current Behavior; It doesn't compile. ## Steps to Reproduce (for bugs); I did (after a ""git pull"" in my MMseqs2 directory):; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2; make. ## MMseqs Output (for bugs); [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sysctl.h:83,; from /usr/local/biotools/MMseqs/MMseqs2/src/commons/Util.cpp:15:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ucred.h:94:2: error: '_Atomic' does not name a type; _Atomic u_long cr_ref; /* reference count */; ^~~~~~~; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; make: *** [all] Error 2. ## Context; tried in an iMac, and a Mac Pro. Xcode 10.2, and gcc-8 (homebrew).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182
https://github.com/soedinglab/MMseqs2/issues/182:994,Availability,Error,Error,994,"## Expected Behavior; It should compile. ## Current Behavior; It doesn't compile. ## Steps to Reproduce (for bugs); I did (after a ""git pull"" in my MMseqs2 directory):; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2; make. ## MMseqs Output (for bugs); [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sysctl.h:83,; from /usr/local/biotools/MMseqs/MMseqs2/src/commons/Util.cpp:15:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ucred.h:94:2: error: '_Atomic' does not name a type; _Atomic u_long cr_ref; /* reference count */; ^~~~~~~; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; make: *** [all] Error 2. ## Context; tried in an iMac, and a Mac Pro. Xcode 10.2, and gcc-8 (homebrew).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182
https://github.com/soedinglab/MMseqs2/issues/182:1019,Availability,Error,Error,1019,"## Expected Behavior; It should compile. ## Current Behavior; It doesn't compile. ## Steps to Reproduce (for bugs); I did (after a ""git pull"" in my MMseqs2 directory):; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2; make. ## MMseqs Output (for bugs); [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sysctl.h:83,; from /usr/local/biotools/MMseqs/MMseqs2/src/commons/Util.cpp:15:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ucred.h:94:2: error: '_Atomic' does not name a type; _Atomic u_long cr_ref; /* reference count */; ^~~~~~~; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; make: *** [all] Error 2. ## Context; tried in an iMac, and a Mac Pro. Xcode 10.2, and gcc-8 (homebrew).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182
https://github.com/soedinglab/MMseqs2/issues/182:247,Deployability,RELEASE,RELEASE,247,"## Expected Behavior; It should compile. ## Current Behavior; It doesn't compile. ## Steps to Reproduce (for bugs); I did (after a ""git pull"" in my MMseqs2 directory):; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2; make. ## MMseqs Output (for bugs); [ 41%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sysctl.h:83,; from /usr/local/biotools/MMseqs/MMseqs2/src/commons/Util.cpp:15:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ucred.h:94:2: error: '_Atomic' does not name a type; _Atomic u_long cr_ref; /* reference count */; ^~~~~~~; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/commons/Util.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; make: *** [all] Error 2. ## Context; tried in an iMac, and a Mac Pro. Xcode 10.2, and gcc-8 (homebrew).",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182
https://github.com/soedinglab/MMseqs2/issues/183:143,Availability,error,error,143,"## Expected Behavior; Hi there! I am hoping to cluster a fasta file of contigs from an assembly of 134 samples. . ## Current Behavior; Getting error message that entries are longer than max sequence length of 65535 ([see error output](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e)). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Command: `mmseqs easy-cluster scaffolds.fasta MRN_clustered tmp`. ## MMseqs Output (for bugs); [See output here](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e). ## Context; Am I missing an option for controlling max sequence length in mmseqs? Allowing for large contigs would be helpful in this context of a cross-assembly from 134 samples, containing 422691 sequences ranging in length from 679 kbp to 127 bp. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: MMseqs2 Version: 8.fac81; * Which MMseqs version was used: Installed via miniconda on ubuntu server. ; * Server specifications: 80 core server, 1.5 TB memory; * Operating system and version: ubuntu 16.04.5. Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/183
https://github.com/soedinglab/MMseqs2/issues/183:221,Availability,error,error,221,"## Expected Behavior; Hi there! I am hoping to cluster a fasta file of contigs from an assembly of 134 samples. . ## Current Behavior; Getting error message that entries are longer than max sequence length of 65535 ([see error output](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e)). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Command: `mmseqs easy-cluster scaffolds.fasta MRN_clustered tmp`. ## MMseqs Output (for bugs); [See output here](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e). ## Context; Am I missing an option for controlling max sequence length in mmseqs? Allowing for large contigs would be helpful in this context of a cross-assembly from 134 samples, containing 422691 sequences ranging in length from 679 kbp to 127 bp. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: MMseqs2 Version: 8.fac81; * Which MMseqs version was used: Installed via miniconda on ubuntu server. ; * Server specifications: 80 core server, 1.5 TB memory; * Operating system and version: ubuntu 16.04.5. Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/183
https://github.com/soedinglab/MMseqs2/issues/183:1049,Deployability,Install,Installed,1049,"## Expected Behavior; Hi there! I am hoping to cluster a fasta file of contigs from an assembly of 134 samples. . ## Current Behavior; Getting error message that entries are longer than max sequence length of 65535 ([see error output](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e)). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Command: `mmseqs easy-cluster scaffolds.fasta MRN_clustered tmp`. ## MMseqs Output (for bugs); [See output here](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e). ## Context; Am I missing an option for controlling max sequence length in mmseqs? Allowing for large contigs would be helpful in this context of a cross-assembly from 134 samples, containing 422691 sequences ranging in length from 679 kbp to 127 bp. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: MMseqs2 Version: 8.fac81; * Which MMseqs version was used: Installed via miniconda on ubuntu server. ; * Server specifications: 80 core server, 1.5 TB memory; * Operating system and version: ubuntu 16.04.5. Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/183
https://github.com/soedinglab/MMseqs2/issues/183:149,Integrability,message,message,149,"## Expected Behavior; Hi there! I am hoping to cluster a fasta file of contigs from an assembly of 134 samples. . ## Current Behavior; Getting error message that entries are longer than max sequence length of 65535 ([see error output](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e)). ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. Command: `mmseqs easy-cluster scaffolds.fasta MRN_clustered tmp`. ## MMseqs Output (for bugs); [See output here](https://gist.github.com/cmajones/f8e3a9c3da8998672ef342788a2f050e). ## Context; Am I missing an option for controlling max sequence length in mmseqs? Allowing for large contigs would be helpful in this context of a cross-assembly from 134 samples, containing 422691 sequences ranging in length from 679 kbp to 127 bp. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: MMseqs2 Version: 8.fac81; * Which MMseqs version was used: Installed via miniconda on ubuntu server. ; * Server specifications: 80 core server, 1.5 TB memory; * Operating system and version: ubuntu 16.04.5. Thanks for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/183
https://github.com/soedinglab/MMseqs2/issues/186:540,Availability,Error,Error,540,"## Expected Behavior. I need to run easy-cluster. ## Current Behavior. With some combinations of set of sequences and min-seq-id parameter, easy-cluster fails. It seems another condition is that both tmpDir and prefix are given by absolute path. ## Steps to Reproduce (for bugs); Get this file and save it as `seqs.fa`: https://gist.github.com/simeonborko/3557ebfd417e4ff2033a3f41558d3254; Run:; ```; mmseqs easy-cluster --min-seq-id 0.2 seqs.fa /tmp/cl /tmp/temp; ```. ## MMseqs Output (for bugs). ```; Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; Error: Search died; ```. ## Your Environment. * mmseqs version: 034bb1bcb6a2a8c2850854b33085ba88f0cab2ef; * OS: Ubuntu 18.04; * mmseqs static build sse4.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/186
https://github.com/soedinglab/MMseqs2/issues/186:573,Availability,Error,Error,573,"## Expected Behavior. I need to run easy-cluster. ## Current Behavior. With some combinations of set of sequences and min-seq-id parameter, easy-cluster fails. It seems another condition is that both tmpDir and prefix are given by absolute path. ## Steps to Reproduce (for bugs); Get this file and save it as `seqs.fa`: https://gist.github.com/simeonborko/3557ebfd417e4ff2033a3f41558d3254; Run:; ```; mmseqs easy-cluster --min-seq-id 0.2 seqs.fa /tmp/cl /tmp/temp; ```. ## MMseqs Output (for bugs). ```; Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; Error: Search died; ```. ## Your Environment. * mmseqs version: 034bb1bcb6a2a8c2850854b33085ba88f0cab2ef; * OS: Ubuntu 18.04; * mmseqs static build sse4.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/186
https://github.com/soedinglab/MMseqs2/issues/186:595,Availability,Error,Error,595,"## Expected Behavior. I need to run easy-cluster. ## Current Behavior. With some combinations of set of sequences and min-seq-id parameter, easy-cluster fails. It seems another condition is that both tmpDir and prefix are given by absolute path. ## Steps to Reproduce (for bugs); Get this file and save it as `seqs.fa`: https://gist.github.com/simeonborko/3557ebfd417e4ff2033a3f41558d3254; Run:; ```; mmseqs easy-cluster --min-seq-id 0.2 seqs.fa /tmp/cl /tmp/temp; ```. ## MMseqs Output (for bugs). ```; Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; Error: Search died; ```. ## Your Environment. * mmseqs version: 034bb1bcb6a2a8c2850854b33085ba88f0cab2ef; * OS: Ubuntu 18.04; * mmseqs static build sse4.1",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/186
https://github.com/soedinglab/MMseqs2/issues/187:224,Availability,Mask,Masked,224,"Hi,. I'm running MMseq2s to clusterize a huge set of fasta sequences (near 640000). I run the easy-cluster procedure (mmseqs easy-cluster scaffold.fa clustered tmp) but in some point the follow message appear:. Index table: Masked residues: 2748074; Index table: fill; Segmentation fault (core dumped); Error: Prefilter step 0 died; Error: Search died. Any idea of what happend?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187
https://github.com/soedinglab/MMseqs2/issues/187:282,Availability,fault,fault,282,"Hi,. I'm running MMseq2s to clusterize a huge set of fasta sequences (near 640000). I run the easy-cluster procedure (mmseqs easy-cluster scaffold.fa clustered tmp) but in some point the follow message appear:. Index table: Masked residues: 2748074; Index table: fill; Segmentation fault (core dumped); Error: Prefilter step 0 died; Error: Search died. Any idea of what happend?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187
https://github.com/soedinglab/MMseqs2/issues/187:303,Availability,Error,Error,303,"Hi,. I'm running MMseq2s to clusterize a huge set of fasta sequences (near 640000). I run the easy-cluster procedure (mmseqs easy-cluster scaffold.fa clustered tmp) but in some point the follow message appear:. Index table: Masked residues: 2748074; Index table: fill; Segmentation fault (core dumped); Error: Prefilter step 0 died; Error: Search died. Any idea of what happend?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187
https://github.com/soedinglab/MMseqs2/issues/187:333,Availability,Error,Error,333,"Hi,. I'm running MMseq2s to clusterize a huge set of fasta sequences (near 640000). I run the easy-cluster procedure (mmseqs easy-cluster scaffold.fa clustered tmp) but in some point the follow message appear:. Index table: Masked residues: 2748074; Index table: fill; Segmentation fault (core dumped); Error: Prefilter step 0 died; Error: Search died. Any idea of what happend?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187
https://github.com/soedinglab/MMseqs2/issues/187:194,Integrability,message,message,194,"Hi,. I'm running MMseq2s to clusterize a huge set of fasta sequences (near 640000). I run the easy-cluster procedure (mmseqs easy-cluster scaffold.fa clustered tmp) but in some point the follow message appear:. Index table: Masked residues: 2748074; Index table: fill; Segmentation fault (core dumped); Error: Prefilter step 0 died; Error: Search died. Any idea of what happend?; Thanks",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187
https://github.com/soedinglab/MMseqs2/issues/188:1544,Modifiability,config,config,1544, conda-forge; gawk 4.2.1 h14c3975_1001 conda-forge; krb5 1.16.3 h05b26f9_1001 conda-forge; libcurl 7.64.1 hda55be3_0 conda-forge; libdeflate 1.0 h14c3975_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 8.2.0 hdf63c60_1; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 8.2.0 hdf63c60_1; llvm-openmp 8.0.0 hc9558a2_0 conda-forge; mmseqs2 8.fac81 hf3e9acd_1 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.0 0 conda-forge; openssl 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/li,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188
https://github.com/soedinglab/MMseqs2/issues/188:1600,Modifiability,config,config,1600,forge; libcurl 7.64.1 hda55be3_0 conda-forge; libdeflate 1.0 h14c3975_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 8.2.0 hdf63c60_1; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 8.2.0 hdf63c60_1; llvm-openmp 8.0.0 hc9558a2_0 conda-forge; mmseqs2 8.fac81 hf3e9acd_1 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.0 0 conda-forge; openssl 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/linux-64; https://conda.anaconda.org/qiime2/noarch; package cache : /ebio/abt3_project,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188
https://github.com/soedinglab/MMseqs2/issues/188:2597,Performance,cache,cache,2597, 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/free/linux-64; https://repo.anaconda.com/pkgs/free/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; https://conda.anaconda.org/leylabmpi/linux-64; https://conda.anaconda.org/leylabmpi/noarch; https://conda.anaconda.org/r/linux-64; https://conda.anaconda.org/r/noarch; https://conda.anaconda.org/qiime2/linux-64; https://conda.anaconda.org/qiime2/noarch; package cache : /ebio/abt3_projects/software/dev/miniconda3_dev/pkgs; /ebio/abt3/nyoungblut/.conda/pkgs; envs directories : /ebio/abt3_projects/software/dev/miniconda3_dev/envs; /ebio/abt3/nyoungblut/.conda/envs; platform : linux-64; user-agent : conda/4.6.11 requests/2.18.4 CPython/3.6.7 Linux/4.9.127 ubuntu/18.04.1 glibc/2.27; UID:GID : 6354:350; netrc file : None; offline mode : False; ```. </p>; </details>,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188
https://github.com/soedinglab/MMseqs2/issues/188:470,Security,certificate,certificates,470,"When I run `mmseqs taxonomy`, it converts the *_h file for the input sequence db from a standard file to a symlink that points at itself. So the symlink is then broken, and `mmseqs taxonomy` fails. I'm using a different temporary directory for `mmseqs taxonomy` than where the *_h file is, so that shouldn't be the problem. mmseqs version: 8.fac81. <details><summary>conda env</summary>; <p>. ```; # Name Version Build Channel; bzip2 1.0.6 h14c3975_1002 conda-forge; ca-certificates 2019.3.9 hecc5488_0 conda-forge; curl 7.64.1 hf8cf82a_0 conda-forge; gawk 4.2.1 h14c3975_1001 conda-forge; krb5 1.16.3 h05b26f9_1001 conda-forge; libcurl 7.64.1 hda55be3_0 conda-forge; libdeflate 1.0 h14c3975_1 bioconda; libedit 3.1.20170329 hf8c457e_1001 conda-forge; libgcc-ng 8.2.0 hdf63c60_1; libssh2 1.8.2 h22169c7_2 conda-forge; libstdcxx-ng 8.2.0 hdf63c60_1; llvm-openmp 8.0.0 hc9558a2_0 conda-forge; mmseqs2 8.fac81 hf3e9acd_1 bioconda; ncurses 6.1 hf484d3e_1002 conda-forge; openmp 8.0.0 0 conda-forge; openssl 1.1.1b h14c3975_1 conda-forge; pigz 2.3.4 0 conda-forge; plass 2.c7e35 h21aa3a5_1 bioconda; samtools 1.9 h8571acd_11 bioconda; seqtk 1.3 h84994c4_1 bioconda; tk 8.6.9 h84994c4_1001 conda-forge; xz 5.2.4 h14c3975_1001 conda-forge; zlib 1.2.11 h14c3975_1004 conda-forge; ```. </p>; </details>. <details><summary>conda info</summary>; <p>. ```; active environment : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; active env location : /ebio/abt3_projects/software/dev/llmgag/.snakemake/conda/6345f887; shell level : 2; user config file : /ebio/abt3/nyoungblut/.condarc; populated config files : /ebio/abt3_projects/software/dev/miniconda3_dev/.condarc; /ebio/abt3/nyoungblut/.condarc; conda version : 4.6.11; conda-build version : 3.11.0; python version : 3.6.7.final.0; base environment : /ebio/abt3_projects/software/dev/miniconda3_dev (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anacon",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188
https://github.com/soedinglab/MMseqs2/issues/189:1628,Availability,Mask,Mask,1628,"&1 > mmseqs.search.log ; ```; Everything runs nicely until the `mmseqs search` which seams not use the parameters of the `mmseqs createindex`. The `search` died at prefilter step as described in the log below:. ```; Program call:; search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary F",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:1890,Availability,Mask,Mask,1890,"h pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:2962,Availability,mask,mask,2962,"; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 10; Verbosity 3. Initialising data structures...; Using 10 threads.; Use index pfam_profile.sk6; Index version: 12; Generated by: 7-4e23d; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: 2; Header",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:3435,Availability,Mask,Mask,3435,"rf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 10; Verbosity 3. Initialising data structures...; Using 10 threads.; Use index pfam_profile.sk6; Index version: 12; Generated by: 7-4e23d; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: 2; Headers1: 1; Headers2: 0; ScoreMatrix: blosum62.out; Error: Prefilter died; ```. Pretty sure it isn't a memory problem. Also, seams that the kmer size required at `createindex` step are not the same as the `search` step, even passing these parameters in the command call.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:3844,Availability,Mask,Masked,3844,"rf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 10; Verbosity 3. Initialising data structures...; Using 10 threads.; Use index pfam_profile.sk6; Index version: 12; Generated by: 7-4e23d; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: 2; Headers1: 1; Headers2: 0; ScoreMatrix: blosum62.out; Error: Prefilter died; ```. Pretty sure it isn't a memory problem. Also, seams that the kmer size required at `createindex` step are not the same as the `search` step, even passing these parameters in the command call.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:3951,Availability,Error,Error,3951,"rf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 10; Verbosity 3. Initialising data structures...; Using 10 threads.; Use index pfam_profile.sk6; Index version: 12; Generated by: 7-4e23d; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: 2; Headers1: 1; Headers2: 0; ScoreMatrix: blosum62.out; Error: Prefilter died; ```. Pretty sure it isn't a memory problem. Also, seams that the kmer size required at `createindex` step are not the same as the `search` step, even passing these parameters in the command call.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:1838,Performance,perform,performs,1838,"h pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:3040,Performance,load,load-mode,3040,"; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile tmp/457325247790757046/pref --sub-mat blosum62.out -s 7.5 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 10; Verbosity 3. Initialising data structures...; Using 10 threads.; Use index pfam_profile.sk6; Index version: 12; Generated by: 7-4e23d; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: 2; Header",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:458,Testability,test,test,458,"Following [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-target-profile-database-from-pfam) to use PFAM database with mmseqs. So, I follow the steps below:; ```; curl http://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.full.gz > Pfam-A.full.gz ; mmseqs convertmsa Pfam-A.full.gz pfam_msa_db ; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1 --threads 10 ; mmseqs createindex pfam_profile tmp -k 6 -s 7.5 ; # test case; mmseqs createdb ../sig_trans/work/SBP_4/pbps.neighbors.fa pbps.neighbors.DB; mmseqs search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 2>&1 > mmseqs.search.log ; ```; Everything runs nicely until the `mmseqs search` which seams not use the parameters of the `mmseqs createindex`. The `search` died at prefilter step as described in the log below:. ```; Program call:; search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum seque",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:635,Testability,log,log,635,"Following [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-target-profile-database-from-pfam) to use PFAM database with mmseqs. So, I follow the steps below:; ```; curl http://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.full.gz > Pfam-A.full.gz ; mmseqs convertmsa Pfam-A.full.gz pfam_msa_db ; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1 --threads 10 ; mmseqs createindex pfam_profile tmp -k 6 -s 7.5 ; # test case; mmseqs createdb ../sig_trans/work/SBP_4/pbps.neighbors.fa pbps.neighbors.DB; mmseqs search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 2>&1 > mmseqs.search.log ; ```; Everything runs nicely until the `mmseqs search` which seams not use the parameters of the `mmseqs createindex`. The `search` died at prefilter step as described in the log below:. ```; Program call:; search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum seque",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/issues/189:815,Testability,log,log,815,"Following [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-target-profile-database-from-pfam) to use PFAM database with mmseqs. So, I follow the steps below:; ```; curl http://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.full.gz > Pfam-A.full.gz ; mmseqs convertmsa Pfam-A.full.gz pfam_msa_db ; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1 --threads 10 ; mmseqs createindex pfam_profile tmp -k 6 -s 7.5 ; # test case; mmseqs createdb ../sig_trans/work/SBP_4/pbps.neighbors.fa pbps.neighbors.DB; mmseqs search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 2>&1 > mmseqs.search.log ; ```; Everything runs nicely until the `mmseqs search` which seams not use the parameters of the `mmseqs createindex`. The `search` died at prefilter step as described in the log below:. ```; Program call:; search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 7-4e23d; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Verbosity 3; Sensitivity 7.5; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum seque",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189
https://github.com/soedinglab/MMseqs2/pull/190:51,Integrability,message,message,51,There were some spelling/grammar typos in the help message... in case it's helpful,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/190
https://github.com/soedinglab/MMseqs2/issues/191:60,Deployability,release,release,60,"This issue is related to some behaviours that I saw in last release. . 1- at least prefilter, align and results2msa are generating many files:; The files has numeric suffix equivalent to number of used threads and it don't generate a merged final file. That means, if I run `mmseqs createdb subset.fa subsetDB` I got theses files:; `subsetDB subsetDB.dbtype subsetDB_h subsetDB_h.dbtype subsetDB_h.index subsetDB.index subsetDB.lookup`; But, next step, prefilter `mmseqs prefilter subsetDB subsetDB subsetPREFILTER` I got:; ```; subsetPREFILTER.0 subsetPREFILTER.13 subsetPREFILTER.18 subsetPREFILTER.22 subsetPREFILTER.27 subsetPREFILTER.31 subsetPREFILTER.4 subsetPREFILTER.9; subsetPREFILTER.1 subsetPREFILTER.14 subsetPREFILTER.19 subsetPREFILTER.23 subsetPREFILTER.28 subsetPREFILTER.32 subsetPREFILTER.5 subsetPREFILTER.dbtype; subsetPREFILTER.10 subsetPREFILTER.15 subsetPREFILTER.2 subsetPREFILTER.24 subsetPREFILTER.29 subsetPREFILTER.33 subsetPREFILTER.6 subsetPREFILTER.index; subsetPREFILTER.11 subsetPREFILTER.16 subsetPREFILTER.20 subsetPREFILTER.25 subsetPREFILTER.3 subsetPREFILTER.34 subsetPREFILTER.7; subsetPREFILTER.12 subsetPREFILTER.17 subsetPREFILTER.21 subsetPREFILTER.26 subsetPREFILTER.30 subsetPREFILTER.35 subsetPREFILTER.8; ```. Anyway I may call `align` using `mmseqs align subsetDB subsetDB subsetPREFILTER subsetALN` but again I got an huge amount of files. Most of them empty. 2- `results2msa` to extract those aliments to stockholm or separated fasta, what should I need to do?; I tried use `mmseqs result2flat`, I got all MSA in same file in fasta format, how do I separate them? Actually, I'd like to know how convert them directly to a3m or stockholm. I hope it help you",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/191
https://github.com/soedinglab/MMseqs2/issues/193:528,Availability,avail,available,528,"The docs for `--split-memory-limit` say that this number should be provided in units of megabytes. However, it looks like it is actually being interpreted as kilobytes. Perhaps there is an inconsistant conversion somewhere, e.g. multiplying by 1024 instead of 1024^2?. ```shell; [saladi1@comet-ln3 mmdb]$ mmseqs search -h | grep mem; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; ```. When I specify `--split-memory-limit 1000000` (1 TB) to `mmseqs search`, it looks like `mmseqs prefilter` is called carrying this parameter through, however, it dies with the following message:. > Can not fit databased into 1024000000 byte. Please use a computer with more main memory. This is odd because, 1024000000 bytes = 1 GB not 1 TB (off by a factor of 1e3). See call and output below. I'm not sure how many places this unit conversion is done, but in the context of `mmseqs prefilter` it does look like the parameter is multiplied by 1024 (as opposed to 1024^2). https://github.com/soedinglab/MMseqs2/blob/d32e75025c1bd419188d4892db863a0f02b30ddf/src/prefiltering/Prefiltering.cpp#L184. ## MMseqs Output; ```shell. [saladi1@comet-30-01 mmdb]$ mmseqs search \; > euk_screen/screenDB \; > uref_euk85_rep/uref_euk85_rep \; > euk_screen_prof \; > mmtemp \; > --local-tmp /scratch/saladi1/22776241/ \; > --remove-tmp-files 1 \; > --split-memory-limit 1000000; search euk_screen/screenDB uref_euk85_rep/uref_euk85_rep euk_screen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:2559,Availability,Mask,Mask,2559,"reen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	64; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-prof",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:2577,Availability,Mask,Mask,2577,"reen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	64; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-prof",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:2882,Availability,Mask,Mask,2882," 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	64; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:4123,Availability,mask,mask,4123,"0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 1000000 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --local-tmp /scratch/saladi1/22776241/ --threads 64 --compressed 0 -v 3 -s 5.7. Using 64 threads.; Can not fit databased into 1024000000 byte. Please use a computer with more main memory.; Error: Prefilter died; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:4132,Availability,mask,mask-lower-case,4132,"0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 1000000 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --local-tmp /scratch/saladi1/22776241/ --threads 64 --compressed 0 -v 3 -s 5.7. Using 64 threads.; Can not fit databased into 1024000000 byte. Please use a computer with more main memory.; Error: Prefilter died; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:4440,Availability,Error,Error,4440,"0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 1000000 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --local-tmp /scratch/saladi1/22776241/ --threads 64 --compressed 0 -v 3 -s 5.7. Using 64 threads.; Can not fit databased into 1024000000 byte. Please use a computer with more main memory.; Error: Prefilter died; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:399,Integrability,depend,depending,399,"The docs for `--split-memory-limit` say that this number should be provided in units of megabytes. However, it looks like it is actually being interpreted as kilobytes. Perhaps there is an inconsistant conversion somewhere, e.g. multiplying by 1024 instead of 1024^2?. ```shell; [saladi1@comet-ln3 mmdb]$ mmseqs search -h | grep mem; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; ```. When I specify `--split-memory-limit 1000000` (1 TB) to `mmseqs search`, it looks like `mmseqs prefilter` is called carrying this parameter through, however, it dies with the following message:. > Can not fit databased into 1024000000 byte. Please use a computer with more main memory. This is odd because, 1024000000 bytes = 1 GB not 1 TB (off by a factor of 1e3). See call and output below. I'm not sure how many places this unit conversion is done, but in the context of `mmseqs prefilter` it does look like the parameter is multiplied by 1024 (as opposed to 1024^2). https://github.com/soedinglab/MMseqs2/blob/d32e75025c1bd419188d4892db863a0f02b30ddf/src/prefiltering/Prefiltering.cpp#L184. ## MMseqs Output; ```shell. [saladi1@comet-30-01 mmdb]$ mmseqs search \; > euk_screen/screenDB \; > uref_euk85_rep/uref_euk85_rep \; > euk_screen_prof \; > mmtemp \; > --local-tmp /scratch/saladi1/22776241/ \; > --remove-tmp-files 1 \; > --split-memory-limit 1000000; search euk_screen/screenDB uref_euk85_rep/uref_euk85_rep euk_screen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:744,Integrability,message,message,744,"The docs for `--split-memory-limit` say that this number should be provided in units of megabytes. However, it looks like it is actually being interpreted as kilobytes. Perhaps there is an inconsistant conversion somewhere, e.g. multiplying by 1024 instead of 1024^2?. ```shell; [saladi1@comet-ln3 mmdb]$ mmseqs search -h | grep mem; --split-mode 	2 	0: split target db; 1: split query db; 2: auto, depending on main memory; --split-memory-limit 	0 	Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.; ```. When I specify `--split-memory-limit 1000000` (1 TB) to `mmseqs search`, it looks like `mmseqs prefilter` is called carrying this parameter through, however, it dies with the following message:. > Can not fit databased into 1024000000 byte. Please use a computer with more main memory. This is odd because, 1024000000 bytes = 1 GB not 1 TB (off by a factor of 1e3). See call and output below. I'm not sure how many places this unit conversion is done, but in the context of `mmseqs prefilter` it does look like the parameter is multiplied by 1024 (as opposed to 1024^2). https://github.com/soedinglab/MMseqs2/blob/d32e75025c1bd419188d4892db863a0f02b30ddf/src/prefiltering/Prefiltering.cpp#L184. ## MMseqs Output; ```shell. [saladi1@comet-30-01 mmdb]$ mmseqs search \; > euk_screen/screenDB \; > uref_euk85_rep/uref_euk85_rep \; > euk_screen_prof \; > mmtemp \; > --local-tmp /scratch/saladi1/22776241/ \; > --remove-tmp-files 1 \; > --split-memory-limit 1000000; search euk_screen/screenDB uref_euk85_rep/uref_euk85_rep euk_screen_prof mmtemp --local-tmp /scratch/saladi1/22776241/ --remove-tmp-files 1 --split-memory-limit 1000000. MMseqs Version: 	fac81fa7a63c1205209d4acbc46ce2209abcaa8a; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:2830,Performance,perform,performs,2830," 	0.001; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	64; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/193:4221,Performance,load,load-mode,4221,"0; Split mode 	2; Split Memory Limit 	1000000; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path 	/scratch/saladi1/22776241/; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	true. prefilter euk_screen/screenDB uref_euk85_rep/uref_euk85_rep mmtemp/150669805093381426/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 1000000 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --local-tmp /scratch/saladi1/22776241/ --threads 64 --compressed 0 -v 3 -s 5.7. Using 64 threads.; Can not fit databased into 1024000000 byte. Please use a computer with more main memory.; Error: Prefilter died; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/193
https://github.com/soedinglab/MMseqs2/issues/195:442,Availability,error,error,442,"## Expected Behavior; It was working before. Same database and protein sequences. ## Current Behavior; :(. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; mmseqs easy-search genome_digest.faa.bz2 mmseqsDB/Pfam resultFile TMP. The Pfam database built as per instruction in wiki. After it failed I rebuilt the database in case the format had changed. Still same error, still not working. ## MMseqs Output (for bugs); ## Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMseqs Version: 	70d09a2ea505d8b22d80286ae13dd4d9826ea303; Substitution matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensu",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195
https://github.com/soedinglab/MMseqs2/issues/195:1490,Availability,Mask,Mask,1490," ## MMseqs Output (for bugs); ## Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMseqs Version: 	70d09a2ea505d8b22d80286ae13dd4d9826ea303; Substitution matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195
https://github.com/soedinglab/MMseqs2/issues/195:1508,Availability,Mask,Mask,1508," ## MMseqs Output (for bugs); ## Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; MMseqs Version: 	70d09a2ea505d8b22d80286ae13dd4d9826ea303; Substitution matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	f",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195
https://github.com/soedinglab/MMseqs2/issues/195:1744,Availability,Mask,Mask,1744,"ent mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	8; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Databas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195
https://github.com/soedinglab/MMseqs2/issues/195:3010,Availability,Error,Error,3010,"e 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap 	0; Split seq. by length 	true; Database type 	0; Do not shuffle input database 	true; Greedy best hits 	false. Invalid input database and --search-type combination; queryDbType: Aminoacid; targetDbType: Profile; targetSrcDbType: Profile; searchMode: 0; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I should stop updating mmseqs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled: 70d09a2ea505d8b22d80286ae13dd4d9826ea303; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.14.3; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Mac OSX Mojave 10.14.4 (It was working!). * Operating system and version:; As a",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195
https://github.com/soedinglab/MMseqs2/issues/195:3714,Deployability,RELEASE,RELEASE,3714," Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap 	0; Split seq. by length 	true; Database type 	0; Do not shuffle input database 	true; Greedy best hits 	false. Invalid input database and --search-type combination; queryDbType: Aminoacid; targetDbType: Profile; targetSrcDbType: Profile; searchMode: 0; Error: Search died. ## Context; Providing context helps us come up with a solution and improve our documentation for the future.; I should stop updating mmseqs. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled: 70d09a2ea505d8b22d80286ae13dd4d9826ea303; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; cmake version 3.14.3; CXX=""/usr/local/bin/g++-8"" CC=""/usr/local/bin/gcc-8"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/biotools ../MMseqs2. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; Mac OSX Mojave 10.14.4 (It was working!). * Operating system and version:; As above.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195
https://github.com/soedinglab/MMseqs2/issues/196:642,Availability,error,error,642,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:736,Availability,error,error,736,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:884,Availability,error,error,884,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:923,Availability,error,error,923,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:1017,Availability,error,error,1017,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:1111,Availability,error,error,1111,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:1205,Availability,error,error,1205,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:1299,Availability,error,error,1299,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:1393,Availability,error,error,1393,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:1487,Availability,error,error,1487,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:1581,Availability,error,error,1581,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/issues/196:1675,Availability,error,error,1675,"Hi,. I'm having trouble with external aligners. Since I have a well-done cluster result, I'd like to generate files using global-alignment. ; So, I did:; ```; mmseqs createseqfiledb ../pbps.DB pbps.CLU pbps.CLU.SEQ; mmseqs apply pbps.CLU.SEQ pbps.CLU.MSA -- clustalo -i - --threads=1; ```. But, some clusters have only one sequence, and `clustalo` cannot align them. ; So, I got this:. ```; Program call:; apply pbps.CLU.SEQ pbps.CLU.MSA --threads 20 -- clustalo -i - --threads=1 . MMseqs Version: 8-fac81; Threads 20; Compressed 0; Verbosity 3. Start applying.; FATAL: File '-' contains 1 sequence, nothing to align; Entry 11799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13739 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; FATAL: Entry File '-' contains 1 sequence, nothing to align11738; exited with error code 1!; Entry 13759 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13799 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13819 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13839 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13859 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13879 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13899 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13919 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; Entry 13939 exited with error code 1!; FATAL: File '-' contains 1 sequence, nothing to align; ```. But it works if rather than use `apply + clustalo` I use the `result2msa`. There is any strategy to deal with this issue?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/196
https://github.com/soedinglab/MMseqs2/pull/197:170,Modifiability,variab,variable,170,"- adds module taxonomyreport for Kraken-style taxonomy report; - add parameter --taxLineage to par.lca for lca, taxonomy and addtaxonomy. Currently this means there is a variable number of fields in the output, which isn't optimal; - refactored NcbiTaxonomy:; - does not load delnodes.dmp anymore. When a taxon that was seen in a report is not in the taxDB, it could be either through ; - get rid of two maps; instead D is vector mapping TaxID to internal ID; - use TaxID type to better distinguish interal IDs and taxIDs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197
https://github.com/soedinglab/MMseqs2/pull/197:234,Modifiability,refactor,refactored,234,"- adds module taxonomyreport for Kraken-style taxonomy report; - add parameter --taxLineage to par.lca for lca, taxonomy and addtaxonomy. Currently this means there is a variable number of fields in the output, which isn't optimal; - refactored NcbiTaxonomy:; - does not load delnodes.dmp anymore. When a taxon that was seen in a report is not in the taxDB, it could be either through ; - get rid of two maps; instead D is vector mapping TaxID to internal ID; - use TaxID type to better distinguish interal IDs and taxIDs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197
https://github.com/soedinglab/MMseqs2/pull/197:271,Performance,load,load,271,"- adds module taxonomyreport for Kraken-style taxonomy report; - add parameter --taxLineage to par.lca for lca, taxonomy and addtaxonomy. Currently this means there is a variable number of fields in the output, which isn't optimal; - refactored NcbiTaxonomy:; - does not load delnodes.dmp anymore. When a taxon that was seen in a report is not in the taxDB, it could be either through ; - get rid of two maps; instead D is vector mapping TaxID to internal ID; - use TaxID type to better distinguish interal IDs and taxIDs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197
https://github.com/soedinglab/MMseqs2/issues/198:332,Deployability,release,release,332,"Hi; we are having some problems using the MPI version with commit 39ee37f97ab065a3763ee10b834b3e6e25aae491. Thank you; Antonio. ## Expected Behavior; MPI version should use all threads in each of the nodes for prefilter. ## Current Behavior; MPI only uses all threads in one node and one thread in the rest. It works as expected on release 7-4e23d and has the wrong behavior on 39ee37f97ab065a3763ee10b834b3e6e25aae491. ## Steps to Reproduce (for bugs); The command we use in both cases is:; ```{bash}; export OMPI_MCA_btl=^openib; export OMP_NUM_THREADS=28. RUNNER=""mpirun --mca btl_tcp_if_include ens3 -n 10 --map-by ppr:1:node --bind-to none "" ""${MMSEQS}"" clusterupdate ""${SDIR}""/marine_hmp_db_03112017 ""${SDIR}""/mg_gtdb_orfs_db ""${SDIR}""/marine_hmp_db_03112017_clu ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019 ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019_clu ""${DIR}""/mg_gtdb_update/tmp --min-seq-id 0.3 -s 5 --cov-mode 0 -c 0.8; ```. ## MMseqs Output (for bugs); release [7-4e23d](https://gist.github.com/genomewalker/96cfc0c4754cd4f2cd1ce6925576c876) log; commit [39ee37f](https://gist.github.com/genomewalker/8a83a8707dae2bc3179df730a5b695b7) log. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" 39ee37f97ab065a3763ee10b834b3e6e25aae491; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 5.4 and open MPI 1.10.2; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/vol/attached/opt/MMseqs2-7-4e23d ..; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): cloud system (10 instances, BiBiGrid) with Intel Xeon Processor (Skylake, IBRS) with 28 vCPUs and 256G of memory; * Operating system and version: Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198
https://github.com/soedinglab/MMseqs2/issues/198:962,Deployability,release,release,962,"Hi; we are having some problems using the MPI version with commit 39ee37f97ab065a3763ee10b834b3e6e25aae491. Thank you; Antonio. ## Expected Behavior; MPI version should use all threads in each of the nodes for prefilter. ## Current Behavior; MPI only uses all threads in one node and one thread in the rest. It works as expected on release 7-4e23d and has the wrong behavior on 39ee37f97ab065a3763ee10b834b3e6e25aae491. ## Steps to Reproduce (for bugs); The command we use in both cases is:; ```{bash}; export OMPI_MCA_btl=^openib; export OMP_NUM_THREADS=28. RUNNER=""mpirun --mca btl_tcp_if_include ens3 -n 10 --map-by ppr:1:node --bind-to none "" ""${MMSEQS}"" clusterupdate ""${SDIR}""/marine_hmp_db_03112017 ""${SDIR}""/mg_gtdb_orfs_db ""${SDIR}""/marine_hmp_db_03112017_clu ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019 ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019_clu ""${DIR}""/mg_gtdb_update/tmp --min-seq-id 0.3 -s 5 --cov-mode 0 -c 0.8; ```. ## MMseqs Output (for bugs); release [7-4e23d](https://gist.github.com/genomewalker/96cfc0c4754cd4f2cd1ce6925576c876) log; commit [39ee37f](https://gist.github.com/genomewalker/8a83a8707dae2bc3179df730a5b695b7) log. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" 39ee37f97ab065a3763ee10b834b3e6e25aae491; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 5.4 and open MPI 1.10.2; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/vol/attached/opt/MMseqs2-7-4e23d ..; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): cloud system (10 instances, BiBiGrid) with Intel Xeon Processor (Skylake, IBRS) with 28 vCPUs and 256G of memory; * Operating system and version: Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198
https://github.com/soedinglab/MMseqs2/issues/198:1612,Deployability,Release,Release,1612,"Hi; we are having some problems using the MPI version with commit 39ee37f97ab065a3763ee10b834b3e6e25aae491. Thank you; Antonio. ## Expected Behavior; MPI version should use all threads in each of the nodes for prefilter. ## Current Behavior; MPI only uses all threads in one node and one thread in the rest. It works as expected on release 7-4e23d and has the wrong behavior on 39ee37f97ab065a3763ee10b834b3e6e25aae491. ## Steps to Reproduce (for bugs); The command we use in both cases is:; ```{bash}; export OMPI_MCA_btl=^openib; export OMP_NUM_THREADS=28. RUNNER=""mpirun --mca btl_tcp_if_include ens3 -n 10 --map-by ppr:1:node --bind-to none "" ""${MMSEQS}"" clusterupdate ""${SDIR}""/marine_hmp_db_03112017 ""${SDIR}""/mg_gtdb_orfs_db ""${SDIR}""/marine_hmp_db_03112017_clu ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019 ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019_clu ""${DIR}""/mg_gtdb_update/tmp --min-seq-id 0.3 -s 5 --cov-mode 0 -c 0.8; ```. ## MMseqs Output (for bugs); release [7-4e23d](https://gist.github.com/genomewalker/96cfc0c4754cd4f2cd1ce6925576c876) log; commit [39ee37f](https://gist.github.com/genomewalker/8a83a8707dae2bc3179df730a5b695b7) log. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" 39ee37f97ab065a3763ee10b834b3e6e25aae491; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 5.4 and open MPI 1.10.2; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/vol/attached/opt/MMseqs2-7-4e23d ..; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): cloud system (10 instances, BiBiGrid) with Intel Xeon Processor (Skylake, IBRS) with 28 vCPUs and 256G of memory; * Operating system and version: Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198
https://github.com/soedinglab/MMseqs2/issues/198:1051,Testability,log,log,1051,"Hi; we are having some problems using the MPI version with commit 39ee37f97ab065a3763ee10b834b3e6e25aae491. Thank you; Antonio. ## Expected Behavior; MPI version should use all threads in each of the nodes for prefilter. ## Current Behavior; MPI only uses all threads in one node and one thread in the rest. It works as expected on release 7-4e23d and has the wrong behavior on 39ee37f97ab065a3763ee10b834b3e6e25aae491. ## Steps to Reproduce (for bugs); The command we use in both cases is:; ```{bash}; export OMPI_MCA_btl=^openib; export OMP_NUM_THREADS=28. RUNNER=""mpirun --mca btl_tcp_if_include ens3 -n 10 --map-by ppr:1:node --bind-to none "" ""${MMSEQS}"" clusterupdate ""${SDIR}""/marine_hmp_db_03112017 ""${SDIR}""/mg_gtdb_orfs_db ""${SDIR}""/marine_hmp_db_03112017_clu ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019 ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019_clu ""${DIR}""/mg_gtdb_update/tmp --min-seq-id 0.3 -s 5 --cov-mode 0 -c 0.8; ```. ## MMseqs Output (for bugs); release [7-4e23d](https://gist.github.com/genomewalker/96cfc0c4754cd4f2cd1ce6925576c876) log; commit [39ee37f](https://gist.github.com/genomewalker/8a83a8707dae2bc3179df730a5b695b7) log. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" 39ee37f97ab065a3763ee10b834b3e6e25aae491; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 5.4 and open MPI 1.10.2; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/vol/attached/opt/MMseqs2-7-4e23d ..; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): cloud system (10 instances, BiBiGrid) with Intel Xeon Processor (Skylake, IBRS) with 28 vCPUs and 256G of memory; * Operating system and version: Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198
https://github.com/soedinglab/MMseqs2/issues/198:1144,Testability,log,log,1144,"Hi; we are having some problems using the MPI version with commit 39ee37f97ab065a3763ee10b834b3e6e25aae491. Thank you; Antonio. ## Expected Behavior; MPI version should use all threads in each of the nodes for prefilter. ## Current Behavior; MPI only uses all threads in one node and one thread in the rest. It works as expected on release 7-4e23d and has the wrong behavior on 39ee37f97ab065a3763ee10b834b3e6e25aae491. ## Steps to Reproduce (for bugs); The command we use in both cases is:; ```{bash}; export OMPI_MCA_btl=^openib; export OMP_NUM_THREADS=28. RUNNER=""mpirun --mca btl_tcp_if_include ens3 -n 10 --map-by ppr:1:node --bind-to none "" ""${MMSEQS}"" clusterupdate ""${SDIR}""/marine_hmp_db_03112017 ""${SDIR}""/mg_gtdb_orfs_db ""${SDIR}""/marine_hmp_db_03112017_clu ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019 ""${DIR}""/mg_gtdb_update/mg_gtdb_db_052019_clu ""${DIR}""/mg_gtdb_update/tmp --min-seq-id 0.3 -s 5 --cov-mode 0 -c 0.8; ```. ## MMseqs Output (for bugs); release [7-4e23d](https://gist.github.com/genomewalker/96cfc0c4754cd4f2cd1ce6925576c876) log; commit [39ee37f](https://gist.github.com/genomewalker/8a83a8707dae2bc3179df730a5b695b7) log. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" 39ee37f97ab065a3763ee10b834b3e6e25aae491; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation: gcc 5.4 and open MPI 1.10.2; ```; cmake -DHAVE_MPI=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/vol/attached/opt/MMseqs2-7-4e23d ..; ```; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): cloud system (10 instances, BiBiGrid) with Intel Xeon Processor (Skylake, IBRS) with 28 vCPUs and 256G of memory; * Operating system and version: Ubuntu 16.04.5 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198
https://github.com/soedinglab/MMseqs2/issues/199:176,Deployability,update,update,176,"Hi; we are having several problems with the `clusterupdate` workflow on 39ee37f97ab065a3763ee10b834b3e6e25aae491-MPI. ## Expected Behavior; The `clusterupdate` workflow should update existing clusters and the number of sequences should match OLDDB+NEWDB; ## Current Behavior; The workflow has problems in some of the steps:. 1) Most probably related to the new behavior of not merging files, the logic [here](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L218) fails to create the `updatedClust` when concatenating the old cluster results with the new hits. When the workflow is on its [final step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L271) and has to concatenate the old clusters with the new ones, fails. 2) In our run, we are missing ~200K new sequences that had a hit after the search against the old cluster representatives but it seems to be lost in the `swapresults` [step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L202) . Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199
https://github.com/soedinglab/MMseqs2/issues/199:512,Deployability,update,updatedClust,512,"Hi; we are having several problems with the `clusterupdate` workflow on 39ee37f97ab065a3763ee10b834b3e6e25aae491-MPI. ## Expected Behavior; The `clusterupdate` workflow should update existing clusters and the number of sequences should match OLDDB+NEWDB; ## Current Behavior; The workflow has problems in some of the steps:. 1) Most probably related to the new behavior of not merging files, the logic [here](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L218) fails to create the `updatedClust` when concatenating the old cluster results with the new hits. When the workflow is on its [final step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L271) and has to concatenate the old clusters with the new ones, fails. 2) In our run, we are missing ~200K new sequences that had a hit after the search against the old cluster representatives but it seems to be lost in the `swapresults` [step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L202) . Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199
https://github.com/soedinglab/MMseqs2/issues/199:396,Testability,log,logic,396,"Hi; we are having several problems with the `clusterupdate` workflow on 39ee37f97ab065a3763ee10b834b3e6e25aae491-MPI. ## Expected Behavior; The `clusterupdate` workflow should update existing clusters and the number of sequences should match OLDDB+NEWDB; ## Current Behavior; The workflow has problems in some of the steps:. 1) Most probably related to the new behavior of not merging files, the logic [here](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L218) fails to create the `updatedClust` when concatenating the old cluster results with the new hits. When the workflow is on its [final step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L271) and has to concatenate the old clusters with the new ones, fails. 2) In our run, we are missing ~200K new sequences that had a hit after the search against the old cluster representatives but it seems to be lost in the `swapresults` [step](https://github.com/soedinglab/MMseqs2/blob/master/data/update_clustering.sh#L202) . Thanks; Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/199
https://github.com/soedinglab/MMseqs2/issues/200:714,Energy Efficiency,reduce,reduced,714,"## Expected Behavior; Running linclust with with --min-seq-id 1.0 -c 1.0 clusters identical sequences. ## Current Behavior; Non-identical sequences are clustered. ## Steps to Reproduce (for bugs); my cmd:; `mmseqs linclust my_mmseqs2.db my_mmseqs2.linclust.clusters tmp --min-seq-id 1.0 -c 1.0 --cov-mode 0 -v 3 -e 0.001`. ## MMseqs Output (for bugs); When I parse the output, I find non-identical sequences clustered together, e.g. these 2, shown here BLASTed:; ```; Query 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQNFTGIRTSLRLS 47; MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQ FTGIRTSLRLS; Sbjct 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQIFTGIRTSLRLS 47; ^ different aa; ```; ## Context; Initially I thought this is just due to the reduced protein alphabet, but in this example (and others) the different residues are `I` and `N`, which doesn't appear to follow the reduced alphabet i found in the paper `(L, M), (I, V), (K, R), (E, Q), (A, S, T), (N, D), and (F, Y)`. You might say that clustering identical sequences is pointless, since it's a simple string/pattern matching exercise, but since I was trying a few different thresholds, I wanted to implement it through a consistent mmseqs2 workflow. Either way, it would be nice to understand the behaviour. ## Your Environment; Running arch-linux with MMseqs2/7-4e23d. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/200
https://github.com/soedinglab/MMseqs2/issues/200:848,Energy Efficiency,reduce,reduced,848,"## Expected Behavior; Running linclust with with --min-seq-id 1.0 -c 1.0 clusters identical sequences. ## Current Behavior; Non-identical sequences are clustered. ## Steps to Reproduce (for bugs); my cmd:; `mmseqs linclust my_mmseqs2.db my_mmseqs2.linclust.clusters tmp --min-seq-id 1.0 -c 1.0 --cov-mode 0 -v 3 -e 0.001`. ## MMseqs Output (for bugs); When I parse the output, I find non-identical sequences clustered together, e.g. these 2, shown here BLASTed:; ```; Query 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQNFTGIRTSLRLS 47; MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQ FTGIRTSLRLS; Sbjct 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQIFTGIRTSLRLS 47; ^ different aa; ```; ## Context; Initially I thought this is just due to the reduced protein alphabet, but in this example (and others) the different residues are `I` and `N`, which doesn't appear to follow the reduced alphabet i found in the paper `(L, M), (I, V), (K, R), (E, Q), (A, S, T), (N, D), and (F, Y)`. You might say that clustering identical sequences is pointless, since it's a simple string/pattern matching exercise, but since I was trying a few different thresholds, I wanted to implement it through a consistent mmseqs2 workflow. Either way, it would be nice to understand the behaviour. ## Your Environment; Running arch-linux with MMseqs2/7-4e23d. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/200
https://github.com/soedinglab/MMseqs2/issues/200:1028,Usability,simpl,simple,1028,"## Expected Behavior; Running linclust with with --min-seq-id 1.0 -c 1.0 clusters identical sequences. ## Current Behavior; Non-identical sequences are clustered. ## Steps to Reproduce (for bugs); my cmd:; `mmseqs linclust my_mmseqs2.db my_mmseqs2.linclust.clusters tmp --min-seq-id 1.0 -c 1.0 --cov-mode 0 -v 3 -e 0.001`. ## MMseqs Output (for bugs); When I parse the output, I find non-identical sequences clustered together, e.g. these 2, shown here BLASTed:; ```; Query 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQNFTGIRTSLRLS 47; MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQ FTGIRTSLRLS; Sbjct 1 MYQNVLNSVNNAAIHPWDYSWFVSIMPKNNTFTHQIFTGIRTSLRLS 47; ^ different aa; ```; ## Context; Initially I thought this is just due to the reduced protein alphabet, but in this example (and others) the different residues are `I` and `N`, which doesn't appear to follow the reduced alphabet i found in the paper `(L, M), (I, V), (K, R), (E, Q), (A, S, T), (N, D), and (F, Y)`. You might say that clustering identical sequences is pointless, since it's a simple string/pattern matching exercise, but since I was trying a few different thresholds, I wanted to implement it through a consistent mmseqs2 workflow. Either way, it would be nice to understand the behaviour. ## Your Environment; Running arch-linux with MMseqs2/7-4e23d. Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/200
https://github.com/soedinglab/MMseqs2/issues/201:1757,Availability,error,errors,1757,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201
https://github.com/soedinglab/MMseqs2/issues/201:1805,Availability,error,error,1805,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201
https://github.com/soedinglab/MMseqs2/issues/201:1846,Availability,error,error,1846,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201
https://github.com/soedinglab/MMseqs2/issues/201:1907,Availability,error,error,1907,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201
https://github.com/soedinglab/MMseqs2/issues/201:69,Modifiability,extend,extend,69,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201
https://github.com/soedinglab/MMseqs2/issues/201:638,Modifiability,extend,extend,638,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201
https://github.com/soedinglab/MMseqs2/issues/201:192,Testability,test,test,192,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201
https://github.com/soedinglab/MMseqs2/issues/201:185,Usability,simpl,simple,185,"## Expected Behavior; Be able to specify the parameters gap open and extend costs; ## Current Behavior; Not able to use the two options. ## Steps to Reproduce (for bugs); I have 2 very simple test files, a.fasta and b.fasta: [a.txt](https://github.com/soedinglab/MMseqs2/files/3166780/a.txt), [b.txt](https://github.com/soedinglab/MMseqs2/files/3166779/b.txt) (here attached as txt). I run this command for each file:; `mmseqs.bat createdb <fastafile> <dbname> --dbtype 2 --max-seq-len 38 `. Then `search` as follows:; `mmseqs.bat search aDB bDB alignDB tmp --search-type 3 -k 3 -s 7.5 -e INF --min-ungapped-score 0 -a --gap-open N --gap-extend M `; (integers in place of N, M). The output is in [searchout.txt](https://github.com/soedinglab/MMseqs2/files/3166806/searchout.txt). I then run `convertalis` to summarize:; `mmseqs convertalis aDB bDB alignDB alnRes.txt --search-type 3 --format-output ""qseq,tseq,query,target,raw,bits,qaln,taln""`. Output: [convout.txt](https://github.com/soedinglab/MMseqs2/files/3166817/convout.txt); Note that in the `convertalis `output, the values for gap open and extension are:; ```; Gap open cost 11; Gap extension cost 1; ```. Is this a bug in the output or is it not taking the settings into account? I have tried many combinations of settings and the reported scores are always to same. ## MMseqs Output (for bugs); Output is included above for each command. ## Context; I am trying to get alignment scores for short DNA sequences. Gaps are important as I am looking for scores which are not heavily influenced by gaps and mismatches in general (little penalty). ## Your Environment; 09 May 2019, Windows version from https://mmseqs.com/latest/; Windows 10.0.17763 Build 17763; No issues running MMseqs2, other than errors such as ; ```; posix_madvise returned an error alignDB; posix_madvise returned an error tmp/3046893737278326904/aln; posix_madvise returned an error tmp/3046893737278326904/search/pref_0; ```; when running `search `and `convertalis`",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/201
https://github.com/soedinglab/MMseqs2/pull/202:12,Availability,error,error,12,"I think the error message should say ""could not"" not ""could""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/202
https://github.com/soedinglab/MMseqs2/pull/202:18,Integrability,message,message,18,"I think the error message should say ""could not"" not ""could""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/202
https://github.com/soedinglab/MMseqs2/issues/204:51,Performance,perform,performs,51,"Hi,. Quite impressed with the speed at which mmseq performs pairwise alignments. Have a couple of questions:. 1. Can i perform alignments using sequences with degenerate characters? Right now the program considers these positions as mismatches. Can i change the way mismatches are counted? So an alignment of X against any of the 20 amino acids can still be considered as a match. 2. Can i search using the protein motif patterns found in PROSITE? . Thanks in advance,; Shiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204
https://github.com/soedinglab/MMseqs2/issues/204:119,Performance,perform,perform,119,"Hi,. Quite impressed with the speed at which mmseq performs pairwise alignments. Have a couple of questions:. 1. Can i perform alignments using sequences with degenerate characters? Right now the program considers these positions as mismatches. Can i change the way mismatches are counted? So an alignment of X against any of the 20 amino acids can still be considered as a match. 2. Can i search using the protein motif patterns found in PROSITE? . Thanks in advance,; Shiv",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204
https://github.com/soedinglab/MMseqs2/issues/206:117,Deployability,pipeline,pipeline,117,"## Expected Behavior; My colleagues and I have noticed an unexpected behavior with linclust (using the easy-linclust pipeline in particular), it appears to not be clustering identical sequences unless -c == 1 or --min-seq-id == 1 or < 0.9. We're not sure if we're misunderstanding the functionality of the linclust options or if there is a bug. Here are the FASTA contents for the sequences I have been testing with (note they are all identical):. ```; >Dupe; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe2; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe3; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; ```. ## Current Behavior; Below are a set of commands we've tested. Note that defaults for alignment-mode and cov-modes were used in the example commands, however we have tried the other modes and the same results are exhibited. The -a flag ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206
https://github.com/soedinglab/MMseqs2/issues/206:403,Testability,test,testing,403,"## Expected Behavior; My colleagues and I have noticed an unexpected behavior with linclust (using the easy-linclust pipeline in particular), it appears to not be clustering identical sequences unless -c == 1 or --min-seq-id == 1 or < 0.9. We're not sure if we're misunderstanding the functionality of the linclust options or if there is a bug. Here are the FASTA contents for the sequences I have been testing with (note they are all identical):. ```; >Dupe; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe2; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe3; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; ```. ## Current Behavior; Below are a set of commands we've tested. Note that defaults for alignment-mode and cov-modes were used in the example commands, however we have tried the other modes and the same results are exhibited. The -a flag ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206
https://github.com/soedinglab/MMseqs2/issues/206:1820,Testability,test,tested,1820,"TTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe2; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; >Dupe3; MTEQEKTSAVVEETREAVDTTSQPVATEKKSKNNTALILSAVAIAIALAAGVGLYGWGKQ; QAVNQTATSDALANQLTALQKAQESQKAELEGIIKQQAAQLKQANRQQETLAKQLDEVQQ; KVATISGSDAKTWLLAQADFLVKLAGRKLWSDQDVTTAAALLKSADASLADMNDPSLITV; RRAITDDIASLSAVSQVDYDGIILKLAAANQLSNQVDNLRLADNDSDGSPMDSDGEELSSSIS; EWRINLQKSWQNFMDNFITIRRRDDTAVPLLAPNQDIYLRENIRSRLLVAAQAVPRHQEE; TYRQALENVSTWVRAYYDTDDATTKAFLDEVDQLSQQNISMDLPETLQSQAMLEKLMQTR; VRNLLAQPAAGTTEAKPAPAPAPAPAPAPAPAPAPAPAPQGDTPAAAPQGE; ```. ## Current Behavior; Below are a set of commands we've tested. Note that defaults for alignment-mode and cov-modes were used in the example commands, however we have tried the other modes and the same results are exhibited. The -a flag is also being used since we noticed it was recommended in a previous issues post. Finally, we have been checking the output _cluster.tsv file to verify the clusters. Commands 1 - 5 vary the --min-seq-id parameter.; Commands 6 - 10 vary the -c parameter. _Cmd1 (-c 0.95 --min-seq-id 0.7)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.95 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd2 (-c 0.95 --min-seq-id 0.8)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.95 --min-seq-id 0.8 --max-iterations 1000 -a`. _Cmd3 (-c 0.95 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.95 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd4 (-c 0.95 --min-seq-id 0.99)_",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206
https://github.com/soedinglab/MMseqs2/issues/206:5234,Testability,test,tests,5234,"(-c 0.9 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.9 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd8 (-c 0.99 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 0.99 --min-seq-id 0.9 --max-iterations 1000 -a`. _Cmd9 (-c 1 --min-seq-id 0.9)_; `mmseqs easy-linclust duplicate_cluster_test.faa dupe_test tmp --add-self-matches -c 1 --min-seq-id 0.9 --max-iterations 1000 -a`. ## MMseqs2 _cluster.tsv output; _Cmd1 cluster.tsv output: (-c 0.95 --min-seq-id 0.7)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. _Cmd2 cluster.tsv output: (-c 0.95 --min-seq-id 0.8)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. _Cmd3 cluster.tsv output: (-c 0.95 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd4 cluster.tsv output: (-c 0.95 --min-seq-id 0.99) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd 5 cluster.tsv output: (-c 0.95 --min-seq-id 1)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. _Cmd 6 cluster.tsv output: (-c 0.5 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd7 cluster.tsv output: (-c 0.9 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd8 cluster.tsv output: (-c 0.99 --min-seq-id 0.9) **(Issue)**_; Dupe | Dupe; Dupe2 | Dupe2; Dupe3 | Dupe3. _Cmd9 cluster.tsv output: (-c 1 --min-seq-id 0.9)_; Dupe | Dupe; Dupe | Dupe2; Dupe | Dupe3. ## Context; In the above commands only commands 1,2,5,9 yield the expected result. If I am understanding the parameters correctly shouldn't all the above commands yield the same result when 100% identical sequences are input? We have attempted playing with all of the different modes and parameters (they did yield different albeit incorrect results) but unless -c == 1 or --min-seq-id == 1 or < 0.9 then the identical sequences are not clustering. ## Your Environment; mmseqs easy-linclust was used for the tests above; MMseqs2 Version: 8.fac81",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206
https://github.com/soedinglab/MMseqs2/issues/208:269,Availability,error,error,269,"## Expected Behavior; After a plass assembly, the clustering of the various coassemblies. ; ```; mmseqs linclust -c 0.9 --min-seq-id 0.95 --cluster-mode 0 \; ${output}/plass_assembly_noclust \; ${output}/plass_ass_clust \; $scratch; ```; ## Current Behavior; Raises an error stating the following: . ```; Invalid database read for database data file=data/02_geneclust/plass_assembly_noclust, database index=data/02_geneclust/plass_assembly_noclust.index; Size of data: 132820104774; Requested offset: 6192668722089269; Invalid database read for database data file=data/02_geneclust/plass_assembly_noclust, database index=data/02_geneclust/plass_assembly_noclust.index; Size of data: 132820104774; Requested offset: 13511065749901201; Invalid database read for database data file=data/02_geneclust/plass_assembly_noclust, database index=data/02_geneclust/plass_assembly_noclust.index; ```. ## Steps to Reproduce (for bugs). Initial creation of the database with `createdb`:; ```; mmseqs createdb data/plass_assembly/whole_assembly.faa \; ${output}/plass_assembly_noclust; ```. ## MMseqs Output (for bugs); Error raised: ; https://gist.github.com/adriaaula/92582186d55e5a8575420c6e8f8ce7e1. General output: ; https://gist.github.com/adriaaula/ed7062dffd5f7ca2f498bed2fa3217db. ## Context; Clustering of a big fasta with 4 independent coassemblies of ~8 samples each. ; 250 Gb of RAM and 48 cpus. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: d36dea; * Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported ; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208
https://github.com/soedinglab/MMseqs2/issues/208:1105,Availability,Error,Error,1105,"## Expected Behavior; After a plass assembly, the clustering of the various coassemblies. ; ```; mmseqs linclust -c 0.9 --min-seq-id 0.95 --cluster-mode 0 \; ${output}/plass_assembly_noclust \; ${output}/plass_ass_clust \; $scratch; ```; ## Current Behavior; Raises an error stating the following: . ```; Invalid database read for database data file=data/02_geneclust/plass_assembly_noclust, database index=data/02_geneclust/plass_assembly_noclust.index; Size of data: 132820104774; Requested offset: 6192668722089269; Invalid database read for database data file=data/02_geneclust/plass_assembly_noclust, database index=data/02_geneclust/plass_assembly_noclust.index; Size of data: 132820104774; Requested offset: 13511065749901201; Invalid database read for database data file=data/02_geneclust/plass_assembly_noclust, database index=data/02_geneclust/plass_assembly_noclust.index; ```. ## Steps to Reproduce (for bugs). Initial creation of the database with `createdb`:; ```; mmseqs createdb data/plass_assembly/whole_assembly.faa \; ${output}/plass_assembly_noclust; ```. ## MMseqs Output (for bugs); Error raised: ; https://gist.github.com/adriaaula/92582186d55e5a8575420c6e8f8ce7e1. General output: ; https://gist.github.com/adriaaula/ed7062dffd5f7ca2f498bed2fa3217db. ## Context; Clustering of a big fasta with 4 independent coassemblies of ~8 samples each. ; 250 Gb of RAM and 48 cpus. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: d36dea; * Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported ; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208
https://github.com/soedinglab/MMseqs2/issues/210:1827,Availability,Error,Error,1827,"eqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn't, how do I get the aligned regions to use in a search? I'm trying to get aligned regions to cluster them to find possible domains in a set of protein. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210
https://github.com/soedinglab/MMseqs2/issues/210:1860,Availability,Error,Error,1860,"eqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn't, how do I get the aligned regions to use in a search? I'm trying to get aligned regions to cluster them to find possible domains in a set of protein. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210
https://github.com/soedinglab/MMseqs2/issues/210:899,Integrability,message,message,899,"Hi, I think there is some inconsistency in `extractalignedregion` module to generate database with regions. I'm trying to cluster aligned regions belonging to a db. ```; mmseqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210
https://github.com/soedinglab/MMseqs2/issues/210:1319,Performance,load,load-mode,1319,"eqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn't, how do I get the aligned regions to use in a search? I'm trying to get aligned regions to cluster them to find possible domains in a set of protein. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210
https://github.com/soedinglab/MMseqs2/issues/210:366,Testability,log,log,366,"Hi, I think there is some inconsistency in `extractalignedregion` module to generate database with regions. I'm trying to cluster aligned regions belonging to a db. ```; mmseqs search id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN /tmp/ --threads 40 -s 7.5 -a -e 1e-10 --alt-ali 1 &> allvsall.search.log ; mmseqs convertalis id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.tsv --threads 40 ; mmseqs extractalignedregion id_0.3cov_0.8evalue_0.001/pbps.neighbors.db id_0.3cov_0.8evalue_0.001/pbps.neighbors.db pbps.neighbors.rep30.ALN pbps.neighbors.rep30.ALN.SEQ --threads 40; mmseqs cluster pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ.CLU /tmp/ -e 1e-10 -c 0 -a -s 7.5 --threads 40 ; ```. But it fails in the last step with this message. ```; rescorediagonal pbps.neighbors.rep30.ALN.SEQ pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 --filter-hits 0 -e 1e-10 -c 0.5 -a 1 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 204.52K 0s 215ms; Time for merging files: 0h 0m 0s 94ms; Time for processing: 0h 0m 0s 845ms; clust pbps.neighbors.rep30.ALN.SEQ /tmp//1456503536827778696/linclust/7100099902620488817/pref_rescore1 /tmp//1456503536827778696/linclust/7100099902620488817/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 40 --compressed 0 -v 3 . Sequence db size != result db size; Error: Pre-clustering step died; Error: linclust died; ```. I think it is happening because of the number of files generated by the `extractalignedregion` module.; If it isn'",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210
https://github.com/soedinglab/MMseqs2/issues/211:173,Availability,toler,tolerance,173,"In Diamond, I can query long-read assemblies against protein databases using the `--long-reads` flag, which basically allows for translated search (blastx) with frame-shift tolerance:. https://github.com/bbuchfink/diamond/blob/master/src/ChangeLog#L35. This is important, bc/ most long-read only assemblies contain a lot of indels, and hence frame shifts. Is there something comparable in MMseqs2?. Thanks a lot,; Adrian",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/211
https://github.com/soedinglab/MMseqs2/issues/212:96,Availability,fault,fault,96,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:322,Availability,fault,fault,322,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:829,Availability,Error,Error,829,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:1687,Availability,Error,Error,1687,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:603,Deployability,release,release,603,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:611,Deployability,install,installed,611,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:650,Integrability,message,message,650,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:153,Performance,Load,Loading,153,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:176,Performance,Load,Loading,176,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:224,Performance,Load,Loading,224,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:668,Performance,Load,Loading,668,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:691,Performance,Load,Loading,691,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:739,Performance,Load,Loading,739,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:796,Performance,Load,Loading,796,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/212:1612,Safety,Abort,Aborted,1612,"Hi, first I'd like to thank you for this very useful software. On CentOS 7 I get a segmentation fault when running the mmseqs2 taxonomy step:; ```; ...; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; taxonomy.sh: line 97: 40420 Segmentation fault ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```; The command was:; ```; mmseqs taxonomy queryDB markerDB taxonomyResult tmp; ```; I tried with mmseqs2 compiled from source (version aeaf981e5024127651b53e7199dd85a085392cdf), and also the latest mmseqs2 release installed via conda; in this case, the message is:; ```; Loading NCBI taxonomy; Loading nodes file ... Done, got 2120477 nodes; Loading merged file ... Done, added 54401 merged nodes.; Loading names file ... Done; *** Error in `mmseqs': break adjusted to free malloc space: 0x0000556af667f000 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x82027)[0x7f666c7b7027]; /lib64/libc.so.6(+0x82aba)[0x7f666c7b7aba]; /lib64/libc.so.6(__libc_malloc+0x4c)[0x7f666c7ba1ac]; /apps/anaconda3/envs/omics/bin/../lib/libstdc++.so.6(_Znwm+0x16)[0x7f666d12c084]; mmseqs(_ZN12NcbiTaxonomyC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_+0x574)[0x556aef0f6de4]; mmseqs(_Z3lcaiPPKcRK7Command+0x844)[0x556aef0e40e4]; mmseqs(_Z10runCommandRK7CommandiPPKc+0x44)[0x556aef05b654]; mmseqs(main+0x8c)[0x556aef03c46c]; /lib64/libc.so.6(__libc_start_main+0xf5)[0x7f666c7573d5]; mmseqs(+0x4a4f9)[0x556aef03f4f9]; ======= Memory map: ========; ...; ...; ...; tmp/4478969039028329886/taxonomy.sh: line 95: 23394 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; Error: Lca died; ```; I might be doing something wrong, as it's the first time I'm using the mmseqs taxonomy classifier. Hope you can help.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/212
https://github.com/soedinglab/MMseqs2/issues/213:780,Availability,Error,Error,780,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213
https://github.com/soedinglab/MMseqs2/issues/213:186,Deployability,install,installed,186,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213
https://github.com/soedinglab/MMseqs2/issues/213:320,Deployability,install,installed,320,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213
https://github.com/soedinglab/MMseqs2/issues/213:582,Safety,abort,aborted,582,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213
https://github.com/soedinglab/MMseqs2/issues/213:598,Safety,detect,detected,598,"mpirun is a kind of linux command.; But it has two kinds of very different version: OpenMPI , MPICH. A bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: (Open MPI) 1.10.2; No bug when I run a shell scripts including ""mmseqs search"" in linux system which has installed mpirun of version: 3.3a2 (After googled this number, I found this is from MPICH). The bug reports:; Corrupt memory, too many entries!. Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted. mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[38952,1],10]; Exit code: 1. Error: Prefilter died. So could you tell me which mpirun is the base of mmseqs ?; Or How to do with this bug?; Thank you very much in advance!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213
https://github.com/soedinglab/MMseqs2/issues/214:1963,Deployability,install,installation,1963,"seqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; This will generate the compiled executable in the bin folder; Copy the executable to $HOME/bin; cp bin/mmseqs ~/bin. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214
https://github.com/soedinglab/MMseqs2/issues/214:2103,Deployability,RELEASE,RELEASE,2103,"seqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; This will generate the compiled executable in the bin folder; Copy the executable to $HOME/bin; cp bin/mmseqs ~/bin. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214
https://github.com/soedinglab/MMseqs2/issues/214:2151,Deployability,install,install,2151,"seqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; make; make install ; This will generate the compiled executable in the bin folder; Copy the executable to $HOME/bin; cp bin/mmseqs ~/bin. * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214
https://github.com/soedinglab/MMseqs2/issues/214:422,Performance,load,load,422,"## Expected Behavior; Hello Dr. Soeding,; I have been trying to use your program MMSEQs2 to match illumina metagenomic reads against the Refseq proteins database. ; This is the workflow I have followed so far; - create mmseqs db for the target (Refseq here) ; mmseqs createdb RSComplete/*.gz mmseqsRefSeqCompleteDB; - create an index for the target db (in a temp folder ""tmp""); mmseqs createindex RefSeqCompleteDB tmp ; - load the target into memory for repeated searching; mmseqs touchdb mmseqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214
https://github.com/soedinglab/MMseqs2/issues/214:661,Performance,load,loaded,661,"## Expected Behavior; Hello Dr. Soeding,; I have been trying to use your program MMSEQs2 to match illumina metagenomic reads against the Refseq proteins database. ; This is the workflow I have followed so far; - create mmseqs db for the target (Refseq here) ; mmseqs createdb RSComplete/*.gz mmseqsRefSeqCompleteDB; - create an index for the target db (in a temp folder ""tmp""); mmseqs createindex RefSeqCompleteDB tmp ; - load the target into memory for repeated searching; mmseqs touchdb mmseqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214
https://github.com/soedinglab/MMseqs2/issues/214:744,Performance,load,load-mode,744,"## Expected Behavior; Hello Dr. Soeding,; I have been trying to use your program MMSEQs2 to match illumina metagenomic reads against the Refseq proteins database. ; This is the workflow I have followed so far; - create mmseqs db for the target (Refseq here) ; mmseqs createdb RSComplete/*.gz mmseqsRefSeqCompleteDB; - create an index for the target db (in a temp folder ""tmp""); mmseqs createindex RefSeqCompleteDB tmp ; - load the target into memory for repeated searching; mmseqs touchdb mmseqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214
https://github.com/soedinglab/MMseqs2/issues/214:1154,Performance,load,load-mode,1154,"atch illumina metagenomic reads against the Refseq proteins database. ; This is the workflow I have followed so far; - create mmseqs db for the target (Refseq here) ; mmseqs createdb RSComplete/*.gz mmseqsRefSeqCompleteDB; - create an index for the target db (in a temp folder ""tmp""); mmseqs createindex RefSeqCompleteDB tmp ; - load the target into memory for repeated searching; mmseqs touchdb mmseqsRefSeqCompleteDB. And then for a set of query files: ; - create mmseqs db for the query file; mmseqs createdb $file $outpath/$querydb; - search against the target db loaded in memory; mmseqs search $outpath/$querydb $db $outpath/$result_db tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5. Is this the correct way of processing multiple searches using mmseqs? Is there any way to speed up searches for large query sets and large database files?. Any information would be greatly appreciated.; Thanking you,. regards,; Dhwani Desai; ## Current Behavior; It does not seem to make a difference to the runtime when I try it with or without the --db-load-mode option. Is there a way to speed up these kinds of repeated searches?; ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; MMseqs2 Version: 73ce3b88754987122b4fc5e69a721beeecd677d0. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; installation (using Git):; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2; mkdir build; cd build; cmake -DCMAKE_BU",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214
https://github.com/soedinglab/MMseqs2/issues/216:40,Availability,error,error,40,"The `convertalis` command exits with an error when no match is found in the DB. Maybe this could be caught by the web server and an informative message could be displayed in the results page (instead of the standard `Error!`).; ```; mmseqs-web-worker_1 | easy-search /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/job.fasta /opt/mmseqs-web/databases/test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/alis_test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp --dont-shuffle --db-output --db-load-mode 2 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --search-type 3 --strand 2 --greedy-best-hits; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | MMseqs Version: 	d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | Substitution matrix 	blosum62.out; mmseqs-web-worker_1 | Add backtrace 	false; mmseqs-web-worker_1 | Alignment mode 	3; mmseqs-web-worker_1 | E-value threshold 	0.001; mmseqs-web-worker_1 | Seq. id. threshold 	0; mmseqs-web-worker_1 | Min. alignment length 	0; mmseqs-web-worker_1 | Seq. id. mode 	0; mmseqs-web-worker_1 | Alternative alignments 	0; mmseqs-web-worker_1 | Coverage threshold 	0; mmseqs-web-worker_1 | Coverage mode 	0; mmseqs-web-worker_1 | Max sequence length 	65535; mmseqs-web-worker_1 | Compositional bias 	1; mmseqs-web-worker_1 | Realign hits 	false; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:217,Availability,Error,Error,217,"The `convertalis` command exits with an error when no match is found in the DB. Maybe this could be caught by the web server and an informative message could be displayed in the results page (instead of the standard `Error!`).; ```; mmseqs-web-worker_1 | easy-search /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/job.fasta /opt/mmseqs-web/databases/test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/alis_test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp --dont-shuffle --db-output --db-load-mode 2 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --search-type 3 --strand 2 --greedy-best-hits; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | MMseqs Version: 	d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | Substitution matrix 	blosum62.out; mmseqs-web-worker_1 | Add backtrace 	false; mmseqs-web-worker_1 | Alignment mode 	3; mmseqs-web-worker_1 | E-value threshold 	0.001; mmseqs-web-worker_1 | Seq. id. threshold 	0; mmseqs-web-worker_1 | Min. alignment length 	0; mmseqs-web-worker_1 | Seq. id. mode 	0; mmseqs-web-worker_1 | Alternative alignments 	0; mmseqs-web-worker_1 | Coverage threshold 	0; mmseqs-web-worker_1 | Coverage mode 	0; mmseqs-web-worker_1 | Max sequence length 	65535; mmseqs-web-worker_1 | Compositional bias 	1; mmseqs-web-worker_1 | Realign hits 	false; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:2477,Availability,Mask,Mask,2477,lse; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Sensitivity 	5.7; mmseqs-web-worker_1 | K-mer size 	0; mmseqs-web-worker_1 | K-score 	2147483647; mmseqs-web-worker_1 | Alphabet size 	21; mmseqs-web-worker_1 | Max results per query 	300; mmseqs-web-worker_1 | Previous max results per query; mmseqs-web-worker_1 | Split database 	0; mmseqs-web-worker_1 | Split mode 	2; mmseqs-web-worker_1 | Split memory limit 	0; mmseqs-web-worker_1 | Diagonal scoring 	1; mmseqs-web-worker_1 | Exact k-mer matching 	0; mmseqs-web-worker_1 | Mask residues 	1; mmseqs-web-worker_1 | Mask lower case residues 	0; mmseqs-web-worker_1 | Minimum diagonal score 	15; mmseqs-web-worker_1 | Spaced k-mers 	1; mmseqs-web-worker_1 | Spaced k-mer pattern; mmseqs-web-worker_1 | Local temporary path; mmseqs-web-worker_1 | Rescore mode 	0; mmseqs-web-worker_1 | Remove hits by seq. id. and coverage 	false; mmseqs-web-worker_1 | Sort results 	0; mmseqs-web-worker_1 | Global diagonal rescoring 	false; mmseqs-web-worker_1 | Mask profile 	1; mmseqs-web-worker_1 | Profile e-value threshold 	0.001; mmseqs-web-worker_1 | Use global sequence weighting 	false; mmseqs-web-worker_1 | Filter MSA 	1; mmseqs-web-worker_1 | Maximum seq. id. threshold 	0.9; mmseqs-web-worker_1 | Minimum seq. id. 	0; mmseqs-web-worker_1 | Minimum score per column 	-20; mmseqs-web-worker_1 | Minimum coverage 	0; mmseqs-web-worker_1 | Select N most diverse seqs 	1000; mmseqs-web-worker_1 | Omit consensus 	fals,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:2517,Availability,Mask,Mask,2517,lse; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Sensitivity 	5.7; mmseqs-web-worker_1 | K-mer size 	0; mmseqs-web-worker_1 | K-score 	2147483647; mmseqs-web-worker_1 | Alphabet size 	21; mmseqs-web-worker_1 | Max results per query 	300; mmseqs-web-worker_1 | Previous max results per query; mmseqs-web-worker_1 | Split database 	0; mmseqs-web-worker_1 | Split mode 	2; mmseqs-web-worker_1 | Split memory limit 	0; mmseqs-web-worker_1 | Diagonal scoring 	1; mmseqs-web-worker_1 | Exact k-mer matching 	0; mmseqs-web-worker_1 | Mask residues 	1; mmseqs-web-worker_1 | Mask lower case residues 	0; mmseqs-web-worker_1 | Minimum diagonal score 	15; mmseqs-web-worker_1 | Spaced k-mers 	1; mmseqs-web-worker_1 | Spaced k-mer pattern; mmseqs-web-worker_1 | Local temporary path; mmseqs-web-worker_1 | Rescore mode 	0; mmseqs-web-worker_1 | Remove hits by seq. id. and coverage 	false; mmseqs-web-worker_1 | Sort results 	0; mmseqs-web-worker_1 | Global diagonal rescoring 	false; mmseqs-web-worker_1 | Mask profile 	1; mmseqs-web-worker_1 | Profile e-value threshold 	0.001; mmseqs-web-worker_1 | Use global sequence weighting 	false; mmseqs-web-worker_1 | Filter MSA 	1; mmseqs-web-worker_1 | Maximum seq. id. threshold 	0.9; mmseqs-web-worker_1 | Minimum seq. id. 	0; mmseqs-web-worker_1 | Minimum score per column 	-20; mmseqs-web-worker_1 | Minimum coverage 	0; mmseqs-web-worker_1 | Select N most diverse seqs 	1000; mmseqs-web-worker_1 | Omit consensus 	fals,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:2947,Availability,Mask,Mask,2947,"y 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Sensitivity 	5.7; mmseqs-web-worker_1 | K-mer size 	0; mmseqs-web-worker_1 | K-score 	2147483647; mmseqs-web-worker_1 | Alphabet size 	21; mmseqs-web-worker_1 | Max results per query 	300; mmseqs-web-worker_1 | Previous max results per query; mmseqs-web-worker_1 | Split database 	0; mmseqs-web-worker_1 | Split mode 	2; mmseqs-web-worker_1 | Split memory limit 	0; mmseqs-web-worker_1 | Diagonal scoring 	1; mmseqs-web-worker_1 | Exact k-mer matching 	0; mmseqs-web-worker_1 | Mask residues 	1; mmseqs-web-worker_1 | Mask lower case residues 	0; mmseqs-web-worker_1 | Minimum diagonal score 	15; mmseqs-web-worker_1 | Spaced k-mers 	1; mmseqs-web-worker_1 | Spaced k-mer pattern; mmseqs-web-worker_1 | Local temporary path; mmseqs-web-worker_1 | Rescore mode 	0; mmseqs-web-worker_1 | Remove hits by seq. id. and coverage 	false; mmseqs-web-worker_1 | Sort results 	0; mmseqs-web-worker_1 | Global diagonal rescoring 	false; mmseqs-web-worker_1 | Mask profile 	1; mmseqs-web-worker_1 | Profile e-value threshold 	0.001; mmseqs-web-worker_1 | Use global sequence weighting 	false; mmseqs-web-worker_1 | Filter MSA 	1; mmseqs-web-worker_1 | Maximum seq. id. threshold 	0.9; mmseqs-web-worker_1 | Minimum seq. id. 	0; mmseqs-web-worker_1 | Minimum score per column 	-20; mmseqs-web-worker_1 | Minimum coverage 	0; mmseqs-web-worker_1 | Select N most diverse seqs 	1000; mmseqs-web-worker_1 | Omit consensus 	false; mmseqs-web-worker_1 | Min codons in orf 	30; mmseqs-web-worker_1 | Max codons in length 	32734; mmseqs-web-worker_1 | Max orf gaps 	2147483647; mmseqs-web-worker_1 | Contig start mode 	2; mmseqs-web-worker_1 | Contig end mode 	2; mmseqs-web-worker_1 | Orf start mode 	1; mmseqs-web-worker_1 | Forward frames 	1,2,3; mmseqs-web-worker_1 | Reverse frames 	1,2,3; mmseqs-web-worker_1 | Translation table 	1; mmseqs-web-worker_1 | Use all table starts 	false; mmseqs-web-worker_1 | Offset of numeric ids ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:7232,Availability,mask,mask,7232,mp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; [=================================================================] 100.00% 0.02 0s 6ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 3ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 2ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 73ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Using 24 threads.; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Estimated memory consumption 12072 MB; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 2; mmseqs-web-worker_1 | Target db start 1 to 117752; [=========================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:7241,Availability,mask,mask-lower-case,7241,mp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; [=================================================================] 100.00% 0.02 0s 6ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 3ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 2ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 73ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Using 24 threads.; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Estimated memory consumption 12072 MB; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 2; mmseqs-web-worker_1 | Target db start 1 to 117752; [=========================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:14246,Availability,Error,Error,14246,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:14375,Availability,Error,Error,14375,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:7674,Energy Efficiency,consumption,consumption,7674,5175173681302479/search_tmp/2764711141857836142/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Using 24 threads.; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Estimated memory consumption 12072 MB; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 2; mmseqs-web-worker_1 | Target db start 1 to 117752; [=================================================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0.450000 k-mers per position; mmseqs-web-worker_1 | 0 DB matches per sequence; mmseqs-web-worker_1 | 0 overflows; mmseqs-web-worker_1 | 0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 2 sequences with 0 size result lists; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Time for prefiltering scores calculation: 0h 0m 0s 1ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 2ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/s,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:144,Integrability,message,message,144,"The `convertalis` command exits with an error when no match is found in the DB. Maybe this could be caught by the web server and an informative message could be displayed in the results page (instead of the standard `Error!`).; ```; mmseqs-web-worker_1 | easy-search /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/job.fasta /opt/mmseqs-web/databases/test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/alis_test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp --dont-shuffle --db-output --db-load-mode 2 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --search-type 3 --strand 2 --greedy-best-hits; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | MMseqs Version: 	d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | Substitution matrix 	blosum62.out; mmseqs-web-worker_1 | Add backtrace 	false; mmseqs-web-worker_1 | Alignment mode 	3; mmseqs-web-worker_1 | E-value threshold 	0.001; mmseqs-web-worker_1 | Seq. id. threshold 	0; mmseqs-web-worker_1 | Min. alignment length 	0; mmseqs-web-worker_1 | Seq. id. mode 	0; mmseqs-web-worker_1 | Alternative alignments 	0; mmseqs-web-worker_1 | Coverage threshold 	0; mmseqs-web-worker_1 | Coverage mode 	0; mmseqs-web-worker_1 | Max sequence length 	65535; mmseqs-web-worker_1 | Compositional bias 	1; mmseqs-web-worker_1 | Realign hits 	false; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:9577,Modifiability,extend,extend,9577,"h 0m 0s 1ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 2ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/aln --sub-mat blosum62.out -a 1 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; [=================================================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.000000 hits per query sequence.; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 49ms; mmseqs-web-worker_1 | offsetalignment /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvb",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:13601,Modifiability,extend,extend,13601,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:540,Performance,load,load-mode,540,"The `convertalis` command exits with an error when no match is found in the DB. Maybe this could be caught by the web server and an informative message could be displayed in the results page (instead of the standard `Error!`).; ```; mmseqs-web-worker_1 | easy-search /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/job.fasta /opt/mmseqs-web/databases/test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/alis_test_nt /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp --dont-shuffle --db-output --db-load-mode 2 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --search-type 3 --strand 2 --greedy-best-hits; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | MMseqs Version: 	d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | Substitution matrix 	blosum62.out; mmseqs-web-worker_1 | Add backtrace 	false; mmseqs-web-worker_1 | Alignment mode 	3; mmseqs-web-worker_1 | E-value threshold 	0.001; mmseqs-web-worker_1 | Seq. id. threshold 	0; mmseqs-web-worker_1 | Min. alignment length 	0; mmseqs-web-worker_1 | Seq. id. mode 	0; mmseqs-web-worker_1 | Alternative alignments 	0; mmseqs-web-worker_1 | Coverage threshold 	0; mmseqs-web-worker_1 | Coverage mode 	0; mmseqs-web-worker_1 | Max sequence length 	65535; mmseqs-web-worker_1 | Compositional bias 	1; mmseqs-web-worker_1 | Realign hits 	false; mmseqs-web-worker_1 | Max reject 	2147483647; mmseqs-web-worker_1 | Max accept 	2147483647; mmseqs-web-worker_1 | Include identical seq. id. 	false; mmseqs-web-worker_1 | Preload mode 	2; mmseqs-web-worker_1 | Pseudo count a 	1; mmseqs-web-worker_1 | Pseudo count b 	1.5; mmseqs-web-worker_1 | Score bias 	0; mmseqs-web-worker_1 | Gap open cost 	11; mmseqs-web-worker_1 | Gap extension cost 	1; mmseqs-web-worker_1 | Threads 	24; mmseqs-web-worker_1 | Compressed 	0; mmseqs-web-worker_1 | Verbosity 	3; mmseqs-web-worker_1 | Seed substitution matrix 	VTML80.out; mmseqs-web-worker_1 | Se",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:7330,Performance,load,load-mode,7330,mp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; [=================================================================] 100.00% 0.02 0s 6ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 3ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 2ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 73ms; mmseqs-web-worker_1 | prefilter /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Using 24 threads.; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Estimated memory consumption 12072 MB; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Process prefiltering step 1 of 1; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | k-mer similarity threshold: 0; mmseqs-web-worker_1 | Starting prefiltering scores calculation (step 1 of 1); mmseqs-web-worker_1 | Query db start 1 to 2; mmseqs-web-worker_1 | Target db start 1 to 117752; [=========================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:9513,Performance,load,load-mode,9513,"0 sequences passed prefiltering per query sequence; mmseqs-web-worker_1 | 0 median result list length; mmseqs-web-worker_1 | 2 sequences with 0 size result lists; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Time for prefiltering scores calculation: 0h 0m 0s 1ms; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 2ms; mmseqs-web-worker_1 | align /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/search/pref_0 /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/aln --sub-mat blosum62.out -a 1 --alignment-mode 3 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 5 --gap-extend 2 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Compute score, coverage and sequence identity; mmseqs-web-worker_1 | Query database size: 2 type: Nucleotide; mmseqs-web-worker_1 | Target database size: 117752 type: Nucleotide; mmseqs-web-worker_1 | Calculation of alignments; [=================================================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.00000",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:11145,Performance,load,load-mode,11145,================================] 100.00% 0.02 0s 0ms ] 0.00% 0.01 eta -; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | 0 alignments calculated.; mmseqs-web-worker_1 | 0 sequence pairs passed the thresholds (-nan of overall calculated).; mmseqs-web-worker_1 | 0.000000 hits per query sequence.; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 49ms; mmseqs-web-worker_1 | offsetalignment /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/query_seqs_split /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/search_tmp/2764711141857836142/aln /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result --chain-alignments 0 --merge-query 1 --search-type 3 --threads 24 --compressed 0 --db-load-mode 2 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Computing ORF lookup; mmseqs-web-worker_1 | Computing contig offsets; mmseqs-web-worker_1 | Computing contig lookup; mmseqs-web-worker_1 | Time for contig lookup: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Writing results to: /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result; mmseqs-web-worker_1 | [============================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:13629,Performance,load,load-mode,13629,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/216:14300,Safety,Abort,Aborted,14300,"79/result /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best -a 1 --overlap 0 -e 0.001 -c 0 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | [=================================================================] 100.00% 0.01 eta -; mmseqs-web-worker_1 | Can not map any alingment results for entry 0!; mmseqs-web-worker_1 | Time for merging files: 0h 0m 0s 0ms; mmseqs-web-worker_1 | Time for processing: 0h 0m 0s 1ms; mmseqs-web-worker_1 | terminate called after throwing an instance of 'std::logic_error'; mmseqs-web-worker_1 | what(): basic_string::_M_construct null not valid; mmseqs-web-worker_1 | convertalis /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/query /opt/mmseqs-web/databases/test_nt.idx /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/result_best /opt/mmseqs-web/jobs/vYdAT_ec8oNawUvbmVU_EReYhp8RCQJIJgbjtg/tmp/10765175173681302479/alis --sub-mat blosum62.out --format-mode 0 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln --translation-table 1 --gap-open 11 --gap-extend 1 --db-output 1 --db-load-mode 2 --search-type 3 --threads 24 --compressed 0 -v 3; mmseqs-web-worker_1 |; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Index version: 15; mmseqs-web-worker_1 | Generated by: d36dea228b039f652a7d3e1c79e3e8d40df83125; mmseqs-web-worker_1 | ScoreMatrix: nucleotide.out; mmseqs-web-worker_1 | Error: Convert Alignments died; mmseqs-web-worker_1 | Aborted (core dumped); mmseqs-web-worker_1 | 2019/07/02 08:52:20 Execution Error: exit status 1; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/216
https://github.com/soedinglab/MMseqs2/issues/217:147,Availability,down,downloaded,147,Hi there:). I am trying to use MMseqs2 to annotate sequences in ORF.fasta against database Refseq. One question maybe very obvious. The database I downloaded has >50 separated volumes. Wondering whether I need to concatenate all these volumes into one complete database? Looks MMseqs2 can only handle one database file. Thanks a lot in advance for your help!,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/217
https://github.com/soedinglab/MMseqs2/issues/218:267,Availability,error,error,267,"Hi!; I am running mmseqs cluster on an protein fasta file. According to the standard output the clustering went fine, and I can work with the output file for running subsequent commands (createtsv, etc). However, after running mmseqs cluster I also get the following error:. there must be an error: 3462516 deleted from 2208131 that now is empty, but not assigned to a cluster. Do you have any idea of what may be the cause, and whether this may interfere in the clustering?. Thanks!. Álvaro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/218
https://github.com/soedinglab/MMseqs2/issues/218:292,Availability,error,error,292,"Hi!; I am running mmseqs cluster on an protein fasta file. According to the standard output the clustering went fine, and I can work with the output file for running subsequent commands (createtsv, etc). However, after running mmseqs cluster I also get the following error:. there must be an error: 3462516 deleted from 2208131 that now is empty, but not assigned to a cluster. Do you have any idea of what may be the cause, and whether this may interfere in the clustering?. Thanks!. Álvaro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/218
https://github.com/soedinglab/MMseqs2/issues/219:216,Availability,avail,available,216,"Hi,; I used MMseqs2 to cluster the a list of proteins with 30% sequence identity cutoff, but I want to get a file in CD-HIT's CLSTR format, which I couldn't find. Is anything wrong with my command, or is MMseqs2 not available for getting the CLSTR format file?; Thanks,; Ci. #command:; mmseqs easy-cluser proteins.fa proteins_id30 tmp --min-seq-id 0.3",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/219
https://github.com/soedinglab/MMseqs2/issues/220:873,Availability,down,downloaded,873,"Please let me preface this with I'm sure I'm doing something silly, but for the life of me I can't figure out what. ## Expected Behavior. The number of proteins in the 70% set *should* be somewhere between the 90% and 50% sets. It definitely shouldn't be a larger set than the 50% group. ## Current Behavior. commands being run:; ```; mmseq easy-cluster uniprot_sprot.fasta id90 tmp9 --min-seq-id 0.9; mmseq easy-cluster uniprot_sprot.fasta id70 tmp7 --min-seq-id 0.7; mmseq easy-cluster uniprot_sprot.fasta id50 tmp5 --min-seq-id 0.5; ```; ```; grep ""Q07343"" id50_cluster.tsv ; Q07343	Q07343; Q07343	P14646. grep ""P14646"" id90_cluster.tsv ; P14646	P14646; P14646	Q07343. grep ""Q08493"" id70_cluster.tsv ; Q08493	Q08493; Q08493	Q08499; Q08493	P14270; Q08493	Q01063; Q08493	Q3UEI1; Q08493	P14646; Q08493	Q07343; ```. This was done on the Jul 15th 2019 version of Swiss-Prot (downloaded from UniProtKB on the 18th July). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9-d36de; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Homebrew; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; Homebrew: 2.1.7; Make: GNU Make 4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): support for both AVX2 and SSE available. Mem: 62 GiB; * Operating system and version: x86_64-pc linux 62.9 GiB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/220
https://github.com/soedinglab/MMseqs2/issues/220:1588,Availability,avail,available,1588,"Please let me preface this with I'm sure I'm doing something silly, but for the life of me I can't figure out what. ## Expected Behavior. The number of proteins in the 70% set *should* be somewhere between the 90% and 50% sets. It definitely shouldn't be a larger set than the 50% group. ## Current Behavior. commands being run:; ```; mmseq easy-cluster uniprot_sprot.fasta id90 tmp9 --min-seq-id 0.9; mmseq easy-cluster uniprot_sprot.fasta id70 tmp7 --min-seq-id 0.7; mmseq easy-cluster uniprot_sprot.fasta id50 tmp5 --min-seq-id 0.5; ```; ```; grep ""Q07343"" id50_cluster.tsv ; Q07343	Q07343; Q07343	P14646. grep ""P14646"" id90_cluster.tsv ; P14646	P14646; P14646	Q07343. grep ""Q08493"" id70_cluster.tsv ; Q08493	Q08493; Q08493	Q08499; Q08493	P14270; Q08493	Q01063; Q08493	Q3UEI1; Q08493	P14646; Q08493	Q07343; ```. This was done on the Jul 15th 2019 version of Swiss-Prot (downloaded from UniProtKB on the 18th July). ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 9-d36de; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.): Homebrew; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; Homebrew: 2.1.7; Make: GNU Make 4.1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): support for both AVX2 and SSE available. Mem: 62 GiB; * Operating system and version: x86_64-pc linux 62.9 GiB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/220
https://github.com/soedinglab/MMseqs2/issues/221:126,Availability,error,error,126,"If I run `mmseqs taxonomy` with version 9.d36de on a taxonomy database created with version 8.fac81, then I get the following error:. ```; [...]; Filter by numerical comparison to first row.; [=================================================================] 121.87K 21m 16s 334ms; Time for merging files: 1h 14m 39s 541ms; Time for processing: 2h 14m 15s 378ms; terminate called after throwing an instance of 'std::out_of_range'; terminate called recursively; terminate called recursively; what(): map::atAborted; Error: Lca died; ```. The database was created from uniclust90_2018_08.tar.gz. If I instead run `mmseqs taxonomy` with version 8.fac81, then the job finishes successfully. It appears that `mmseqs taxonomy` is not backwards-compatible, but it has no checks on the database to warn the user of this. Instead, the user gets a cryptic error message.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221
https://github.com/soedinglab/MMseqs2/issues/221:516,Availability,Error,Error,516,"If I run `mmseqs taxonomy` with version 9.d36de on a taxonomy database created with version 8.fac81, then I get the following error:. ```; [...]; Filter by numerical comparison to first row.; [=================================================================] 121.87K 21m 16s 334ms; Time for merging files: 1h 14m 39s 541ms; Time for processing: 2h 14m 15s 378ms; terminate called after throwing an instance of 'std::out_of_range'; terminate called recursively; terminate called recursively; what(): map::atAborted; Error: Lca died; ```. The database was created from uniclust90_2018_08.tar.gz. If I instead run `mmseqs taxonomy` with version 8.fac81, then the job finishes successfully. It appears that `mmseqs taxonomy` is not backwards-compatible, but it has no checks on the database to warn the user of this. Instead, the user gets a cryptic error message.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221
https://github.com/soedinglab/MMseqs2/issues/221:847,Availability,error,error,847,"If I run `mmseqs taxonomy` with version 9.d36de on a taxonomy database created with version 8.fac81, then I get the following error:. ```; [...]; Filter by numerical comparison to first row.; [=================================================================] 121.87K 21m 16s 334ms; Time for merging files: 1h 14m 39s 541ms; Time for processing: 2h 14m 15s 378ms; terminate called after throwing an instance of 'std::out_of_range'; terminate called recursively; terminate called recursively; what(): map::atAborted; Error: Lca died; ```. The database was created from uniclust90_2018_08.tar.gz. If I instead run `mmseqs taxonomy` with version 8.fac81, then the job finishes successfully. It appears that `mmseqs taxonomy` is not backwards-compatible, but it has no checks on the database to warn the user of this. Instead, the user gets a cryptic error message.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221
https://github.com/soedinglab/MMseqs2/issues/221:853,Integrability,message,message,853,"If I run `mmseqs taxonomy` with version 9.d36de on a taxonomy database created with version 8.fac81, then I get the following error:. ```; [...]; Filter by numerical comparison to first row.; [=================================================================] 121.87K 21m 16s 334ms; Time for merging files: 1h 14m 39s 541ms; Time for processing: 2h 14m 15s 378ms; terminate called after throwing an instance of 'std::out_of_range'; terminate called recursively; terminate called recursively; what(): map::atAborted; Error: Lca died; ```. The database was created from uniclust90_2018_08.tar.gz. If I instead run `mmseqs taxonomy` with version 8.fac81, then the job finishes successfully. It appears that `mmseqs taxonomy` is not backwards-compatible, but it has no checks on the database to warn the user of this. Instead, the user gets a cryptic error message.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221
https://github.com/soedinglab/MMseqs2/issues/222:741,Integrability,message,message,741,"When creating a taxonomy database via:. ```; mmseqs createdb target.fasta targetDB; mmseqs createtaxdb targetDB tmp; ```. ...how can the user know what taxonomy is given to each sequence in the tax database? There doesn't seem to be a subcommand for inspecting the taxonomy database. One could maybe to it with the `mmseqs filtertaxdb` command, but it requires a ""targetDB"" and a ""taxaDB""; however, the `mmseqs createtaxdb` doesn't seem to create any specific ""taxaDB"" file. . It appears that `mmseqs createtaxdb` doesn't warn about missing uniprot identifiers. It really doesn't provide any summary at all. I just tried provided a full `seqID <--> uniprot` mapping file versus a truncated file, and I got the same ""Database created"" output message, so it seems that even if there's really little to no taxonomic info in the taxonomy database, the database will still be created without the user knowing what info is actually in it. . I'm using version 9.d36de",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222
https://github.com/soedinglab/MMseqs2/issues/224:459,Availability,down,downstream,459,"I'm using `mmseqs 9.d36de`, and running `linclust` as in the following:. ```; # cluster; mmseqs linclust --threads 24 seq_db cluster_db tmp_dir. # creating _h file; mmseqs createsubdb cluster_db seq_db_h cluster_db_h. # get representative sequences for each cluster; mmseqs result2flat seq_db cluster_db output_rep_seqs.faa --use-fasta-header; ```. While the entire rep seq ID is unique (eg., `>1000000 2+209	3`), the base ID (eg., `>1000000`) is not, so any downstream tool that strips off the characters past the first space (` 2+209	3` in this example) will result in ambiguous mappings to the sequences.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/224
https://github.com/soedinglab/MMseqs2/issues/225:367,Testability,Test,Test-query,367,"## Expected Behavior; Identical sequences would return 0 mismatches and an identity of 1.0. ## Current Behavior; Identical sequences incorrectly labelled as having mismatches which lowers the identity % when run with default options. ## Steps to Reproduce (for bugs); Create two FASTA files, `query.fasta` and `target.fasta` with a single identical sequence: ; ```; >Test-query; RATQGISAWLASASLLQSQYANSFPWTF; ```. Then run the latest docker container (a73c7fd8ba9c); ```; docker run -v $(pwd):/data soedinglab/mmseqs2 mmseqs easy-search /data/query.fasta /data/target.fasta /data/test.m8 /data/tmp; ```. I was trying to compute the alignment to see which AA it thought was a mismatch, but interestingly adding `-a 1` changes the identity to 1.0. ## MMseqs Output (for bugs); ```; Test-query Test-target 0.954 28 1 0 1 28 1 28 3.965E-20 59; ```; MMSeqs2 reports an identity of 0.954 instead of 1. After alignment length (28), it reports 1 mismatch. Adding `-a 1` changes this to ; ```; Test-query Test-target 1.000 28 0 0 1 28 1 28 3.965E-20 59; ```. ## Context; I ran MMSeqs2 with 293 query sequences against 600,000 target sequences. A separate pairwise global alignment run I did identified 1,745 identical sequences across query and target whereas MMSeqs2 reported zero 100% identical matches. Adding `-a 1` seems to mostly correct this issue. Reading the options, it seems that `-a` exists just to return the aligned string, so I'm surprised to see it affects how identity / mismatches are calculated. ## Your Environment; I used the latest Docker container (a73c7fd8ba9c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/225
https://github.com/soedinglab/MMseqs2/issues/225:580,Testability,test,test,580,"## Expected Behavior; Identical sequences would return 0 mismatches and an identity of 1.0. ## Current Behavior; Identical sequences incorrectly labelled as having mismatches which lowers the identity % when run with default options. ## Steps to Reproduce (for bugs); Create two FASTA files, `query.fasta` and `target.fasta` with a single identical sequence: ; ```; >Test-query; RATQGISAWLASASLLQSQYANSFPWTF; ```. Then run the latest docker container (a73c7fd8ba9c); ```; docker run -v $(pwd):/data soedinglab/mmseqs2 mmseqs easy-search /data/query.fasta /data/target.fasta /data/test.m8 /data/tmp; ```. I was trying to compute the alignment to see which AA it thought was a mismatch, but interestingly adding `-a 1` changes the identity to 1.0. ## MMseqs Output (for bugs); ```; Test-query Test-target 0.954 28 1 0 1 28 1 28 3.965E-20 59; ```; MMSeqs2 reports an identity of 0.954 instead of 1. After alignment length (28), it reports 1 mismatch. Adding `-a 1` changes this to ; ```; Test-query Test-target 1.000 28 0 0 1 28 1 28 3.965E-20 59; ```. ## Context; I ran MMSeqs2 with 293 query sequences against 600,000 target sequences. A separate pairwise global alignment run I did identified 1,745 identical sequences across query and target whereas MMSeqs2 reported zero 100% identical matches. Adding `-a 1` seems to mostly correct this issue. Reading the options, it seems that `-a` exists just to return the aligned string, so I'm surprised to see it affects how identity / mismatches are calculated. ## Your Environment; I used the latest Docker container (a73c7fd8ba9c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/225
https://github.com/soedinglab/MMseqs2/issues/225:780,Testability,Test,Test-query,780,"## Expected Behavior; Identical sequences would return 0 mismatches and an identity of 1.0. ## Current Behavior; Identical sequences incorrectly labelled as having mismatches which lowers the identity % when run with default options. ## Steps to Reproduce (for bugs); Create two FASTA files, `query.fasta` and `target.fasta` with a single identical sequence: ; ```; >Test-query; RATQGISAWLASASLLQSQYANSFPWTF; ```. Then run the latest docker container (a73c7fd8ba9c); ```; docker run -v $(pwd):/data soedinglab/mmseqs2 mmseqs easy-search /data/query.fasta /data/target.fasta /data/test.m8 /data/tmp; ```. I was trying to compute the alignment to see which AA it thought was a mismatch, but interestingly adding `-a 1` changes the identity to 1.0. ## MMseqs Output (for bugs); ```; Test-query Test-target 0.954 28 1 0 1 28 1 28 3.965E-20 59; ```; MMSeqs2 reports an identity of 0.954 instead of 1. After alignment length (28), it reports 1 mismatch. Adding `-a 1` changes this to ; ```; Test-query Test-target 1.000 28 0 0 1 28 1 28 3.965E-20 59; ```. ## Context; I ran MMSeqs2 with 293 query sequences against 600,000 target sequences. A separate pairwise global alignment run I did identified 1,745 identical sequences across query and target whereas MMSeqs2 reported zero 100% identical matches. Adding `-a 1` seems to mostly correct this issue. Reading the options, it seems that `-a` exists just to return the aligned string, so I'm surprised to see it affects how identity / mismatches are calculated. ## Your Environment; I used the latest Docker container (a73c7fd8ba9c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/225
https://github.com/soedinglab/MMseqs2/issues/225:791,Testability,Test,Test-target,791,"## Expected Behavior; Identical sequences would return 0 mismatches and an identity of 1.0. ## Current Behavior; Identical sequences incorrectly labelled as having mismatches which lowers the identity % when run with default options. ## Steps to Reproduce (for bugs); Create two FASTA files, `query.fasta` and `target.fasta` with a single identical sequence: ; ```; >Test-query; RATQGISAWLASASLLQSQYANSFPWTF; ```. Then run the latest docker container (a73c7fd8ba9c); ```; docker run -v $(pwd):/data soedinglab/mmseqs2 mmseqs easy-search /data/query.fasta /data/target.fasta /data/test.m8 /data/tmp; ```. I was trying to compute the alignment to see which AA it thought was a mismatch, but interestingly adding `-a 1` changes the identity to 1.0. ## MMseqs Output (for bugs); ```; Test-query Test-target 0.954 28 1 0 1 28 1 28 3.965E-20 59; ```; MMSeqs2 reports an identity of 0.954 instead of 1. After alignment length (28), it reports 1 mismatch. Adding `-a 1` changes this to ; ```; Test-query Test-target 1.000 28 0 0 1 28 1 28 3.965E-20 59; ```. ## Context; I ran MMSeqs2 with 293 query sequences against 600,000 target sequences. A separate pairwise global alignment run I did identified 1,745 identical sequences across query and target whereas MMSeqs2 reported zero 100% identical matches. Adding `-a 1` seems to mostly correct this issue. Reading the options, it seems that `-a` exists just to return the aligned string, so I'm surprised to see it affects how identity / mismatches are calculated. ## Your Environment; I used the latest Docker container (a73c7fd8ba9c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/225
https://github.com/soedinglab/MMseqs2/issues/225:985,Testability,Test,Test-query,985,"## Expected Behavior; Identical sequences would return 0 mismatches and an identity of 1.0. ## Current Behavior; Identical sequences incorrectly labelled as having mismatches which lowers the identity % when run with default options. ## Steps to Reproduce (for bugs); Create two FASTA files, `query.fasta` and `target.fasta` with a single identical sequence: ; ```; >Test-query; RATQGISAWLASASLLQSQYANSFPWTF; ```. Then run the latest docker container (a73c7fd8ba9c); ```; docker run -v $(pwd):/data soedinglab/mmseqs2 mmseqs easy-search /data/query.fasta /data/target.fasta /data/test.m8 /data/tmp; ```. I was trying to compute the alignment to see which AA it thought was a mismatch, but interestingly adding `-a 1` changes the identity to 1.0. ## MMseqs Output (for bugs); ```; Test-query Test-target 0.954 28 1 0 1 28 1 28 3.965E-20 59; ```; MMSeqs2 reports an identity of 0.954 instead of 1. After alignment length (28), it reports 1 mismatch. Adding `-a 1` changes this to ; ```; Test-query Test-target 1.000 28 0 0 1 28 1 28 3.965E-20 59; ```. ## Context; I ran MMSeqs2 with 293 query sequences against 600,000 target sequences. A separate pairwise global alignment run I did identified 1,745 identical sequences across query and target whereas MMSeqs2 reported zero 100% identical matches. Adding `-a 1` seems to mostly correct this issue. Reading the options, it seems that `-a` exists just to return the aligned string, so I'm surprised to see it affects how identity / mismatches are calculated. ## Your Environment; I used the latest Docker container (a73c7fd8ba9c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/225
https://github.com/soedinglab/MMseqs2/issues/225:996,Testability,Test,Test-target,996,"## Expected Behavior; Identical sequences would return 0 mismatches and an identity of 1.0. ## Current Behavior; Identical sequences incorrectly labelled as having mismatches which lowers the identity % when run with default options. ## Steps to Reproduce (for bugs); Create two FASTA files, `query.fasta` and `target.fasta` with a single identical sequence: ; ```; >Test-query; RATQGISAWLASASLLQSQYANSFPWTF; ```. Then run the latest docker container (a73c7fd8ba9c); ```; docker run -v $(pwd):/data soedinglab/mmseqs2 mmseqs easy-search /data/query.fasta /data/target.fasta /data/test.m8 /data/tmp; ```. I was trying to compute the alignment to see which AA it thought was a mismatch, but interestingly adding `-a 1` changes the identity to 1.0. ## MMseqs Output (for bugs); ```; Test-query Test-target 0.954 28 1 0 1 28 1 28 3.965E-20 59; ```; MMSeqs2 reports an identity of 0.954 instead of 1. After alignment length (28), it reports 1 mismatch. Adding `-a 1` changes this to ; ```; Test-query Test-target 1.000 28 0 0 1 28 1 28 3.965E-20 59; ```. ## Context; I ran MMSeqs2 with 293 query sequences against 600,000 target sequences. A separate pairwise global alignment run I did identified 1,745 identical sequences across query and target whereas MMSeqs2 reported zero 100% identical matches. Adding `-a 1` seems to mostly correct this issue. Reading the options, it seems that `-a` exists just to return the aligned string, so I'm surprised to see it affects how identity / mismatches are calculated. ## Your Environment; I used the latest Docker container (a73c7fd8ba9c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/225
https://github.com/soedinglab/MMseqs2/issues/226:211,Availability,avail,available,211,"Might be missing something with the command syntax, but shouldn't it be possible to pull out alignment stats into an m8 formatted file from a mmseqs taxonomy command? . ## Expected Behavior; Alignment file made available for convertalis too *.m8 format. ## Current Behavior; No alignment file created with -a flag using mmseqs2 taxonomy. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. mmseqs taxonomy $OUT/seqtable_queryDB $DB $OUT/taxonomyResult tmp_aa -a --start-sens 1 --sens-steps 3 -s 7 --search-type 2 \; --tax-lineage true --lca-ranks ""superkingdom:phylum:class:order:family:genus:species"";. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. taxonomy results come out perfect, but there are no alignment files for convertalis",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/226
https://github.com/soedinglab/MMseqs2/issues/229:113,Availability,error,errors,113,"## Expected Behavior; MSA completes. ## Current Behavior; Currently, the result2msa command seems to be throwing errors on any operating system and build I try. Also perhaps worth noting it only happens on certain input sequences for whatever reason (you can see from my Windows attempt, it aborts halfway through). ## Steps to Reproduce (for bugs); create db; index db; search db with query file; try to run result2msa -> crash; Files can be supplied as requested. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Ubuntu, self-compile:. mmseqs result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa; result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/test",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229
https://github.com/soedinglab/MMseqs2/issues/229:1727,Availability,fault,fault,1727,"t3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa; result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkout2/mmseqs_f; iles/out.mm_search plsworkout2/mmseqs_files/out.mm_msa. MMseqs Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 0.001; Allow deletions false; Add internal id. false; Compositional bias 1; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 8; Compress MSA false; Summarize headers false; Summary prefix cl; Omit consensus false; Skip query false; Gap open cost 11; Gap extension cost 1; Compressed 0; Verbosity 3. Start computing multiple sequence alignments.; Query database size: 19 type: Aminoacid; Ta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229
https://github.com/soedinglab/MMseqs2/issues/229:291,Safety,abort,aborts,291,"## Expected Behavior; MSA completes. ## Current Behavior; Currently, the result2msa command seems to be throwing errors on any operating system and build I try. Also perhaps worth noting it only happens on certain input sequences for whatever reason (you can see from my Windows attempt, it aborts halfway through). ## Steps to Reproduce (for bugs); create db; index db; search db with query file; try to run result2msa -> crash; Files can be supplied as requested. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output. Ubuntu, self-compile:. mmseqs result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa; result2msa /hdd/mmtestoutput3/mmseqs_files/in.mmdb /hdd/humanref/jhhutargetDB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/test",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229
https://github.com/soedinglab/MMseqs2/issues/229:1859,Testability,test,testtargetDB,1859,"DB /hdd/mmtestoutput3/mmseqs_files//out.mm_search /hdd/mmtestoutput3/mmseqs_files//out.mm_msa . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkout2/mmseqs_f; iles/out.mm_search plsworkout2/mmseqs_files/out.mm_msa. MMseqs Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 0.001; Allow deletions false; Add internal id. false; Compositional bias 1; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 8; Compress MSA false; Summarize headers false; Summary prefix cl; Omit consensus false; Skip query false; Gap open cost 11; Gap extension cost 1; Compressed 0; Verbosity 3. Start computing multiple sequence alignments.; Query database size: 19 type: Aminoacid; Target database size: 20197 type: Aminoacid; [> ] 0.00% 1 eta; [===> ] 5.56% 2 eta; [=======> ] 11.11% 3 eta; [==========> ] 16.67% 4 eta; [=============",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229
https://github.com/soedinglab/MMseqs2/issues/229:1997,Testability,test,testtargetDB,1997,"3789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 	0.001; Allow deletions 	false; Add internal id. 	false; Compositional bias 	1; Filter MSA 	0; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Threads 	4; Compress MSA 	false; Summarize headers 	false; Summary prefix 	cl; Omit consensus 	false; Skip query 	false; Gap open cost 	11; Gap extension cost 	1; Compressed 	0; Verbosity 	3. Start computing multiple sequence alignments.; Query database size: 11 type: Aminoacid; Target database size: 20667 type: Aminoacid; [> ] 0.00% 1 eta [======> ] 10.00% 2 etaSegmentation fault (core dumped). Windows 7 static compile (different db/query file):. F:\>mmseqs result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkou; t2/mmseqs_files/out.mm_search plsworkout2/mmseqs_files/out.mm_msa; result2msa plsworkout2/mmseqs_files/in.mmdb db/testtargetDB plsworkout2/mmseqs_f; iles/out.mm_search plsworkout2/mmseqs_files/out.mm_msa. MMseqs Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Profile e-value threshold 0.001; Allow deletions false; Add internal id. false; Compositional bias 1; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 8; Compress MSA false; Summarize headers false; Summary prefix cl; Omit consensus false; Skip query false; Gap open cost 11; Gap extension cost 1; Compressed 0; Verbosity 3. Start computing multiple sequence alignments.; Query database size: 19 type: Aminoacid; Target database size: 20197 type: Aminoacid; [> ] 0.00% 1 eta; [===> ] 5.56% 2 eta; [=======> ] 11.11% 3 eta; [==========> ] 16.67% 4 eta; [==============> ] 22.22% 5 eta; [==================> ] 27.78% 6 eta; [=====================> ] 33.33% 7 eta; [=========================> ] 38.89% 8 eta",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229
https://github.com/soedinglab/MMseqs2/issues/230:405,Availability,error,errors,405,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/230:799,Availability,error,errors,799,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/230:955,Availability,error,error,955,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/230:1239,Availability,ERROR,ERROR,1239,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/230:1336,Availability,ERROR,ERROR,1336,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/230:1481,Availability,error,error,1481,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/230:1730,Availability,error,error,1730,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/230:96,Deployability,update,update,96,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/230:445,Deployability,pipeline,pipeline,445,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/230:1736,Integrability,message,message,1736,"Hi,. I am using a strategy that I have been using for some time successfully but since the last update, it has stopped working. The idea is to group the sequences and generate an MSA for each cluster to generate models for each MSA and compare all models with hhsearch. So after compiling my cluster, I use `createseqfiledb` and then use` apply` with clustalo. Exactly the apply step has returned me some errors and it never finishes. The usual pipeline is:; ```; # .... a lot of clusters hierarchically prepared ; mmseqs mergeclusters sbps.DB sbps.CLU $(\ls -d1t id_0cov_0.8evalue_* | tac | sed 's/$/\/MMseqsClust/' | xargs ) --threads 30 ; mmseqs createtsv sbps.DB sbps.DB sbps.CLU sbps.CLU.tsv --threads 40. mmseqs createseqfiledb sbps.DB sbps.CLU sbps.CLU.SEQ --threads 30 --min-sequences 3. ## errors from this point; mmseqs apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --output-order=input-order --threads=1 --iter=5 ; ```. The error is exemplified by this:; ```; apply sbps.CLU.SEQ sbps.CLU.SEQ.MSA --threads 30 -- clustalo -i - --threads=1 --iter=5 . MMseqs Version:	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Threads 	30; Compressed	0; Verbosity 	3. Start applying.; write stdin1: Bad address ] 0.00% 1 eta -; ERROR: Sequence 'WP_078846918.1/28-316' has 0 residues; FATAL: Reading sequence file '-' failed; ERROR: Sequence 'WP_082295029.1/41-339' has 0 residues ] 2.09% 29 eta 2h 51m 21s ; FATAL: Reading sequence file '-' failed; Entry 30 exited with error code 1!. ```. I may share the `sbps.DB` and `sbps.CLU` and associated files to check, but I'm sure that they are fine. Just tell me how to send to you. But I don't know if the issue happens in `createseqfiledb` but since it doesn't return any error message and the files seem okay, the problem may be the STDIN.; Searching sequences like `WP_082295029.1/41-339` in the files I was able to find it and the sequence is the same as the initial fasta file. . Thanks in advance.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230
https://github.com/soedinglab/MMseqs2/issues/231:189,Performance,perform,perform,189,"[mmseqs2.log.txt](https://github.com/soedinglab/MMseqs2/files/3654776/mmseqs2.log.txt); ## Expected Behavior; To be faster. ## Current Behavior; It takes the double of time than Diamond to perform the same task with similar results over the same query and target database. ## Steps to Reproduce (for bugs); time diamond blastx -d /d/Databases/Kegg/sram/kegg -q MOMZ_moomz1_200m.fna -o MO; MZ_moomz1_200m.kegg.raw --sensitive --max-target-seqs 1; real 32m12.614s; user 1091m19.492s; sys 34m5.028s. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1; real 56m26.161s; user 2146m1.584s; sys 37m49.528s. ## Your Environment; MMseqs2 Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; 40 cores Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz; 128 GB main memory; Query Fasta: 516296 metagenomic sequences (454 FLX), average seq size ~400bp; No other processes were running during the tests (besides those elementary to the SO)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231
https://github.com/soedinglab/MMseqs2/issues/231:9,Testability,log,log,9,"[mmseqs2.log.txt](https://github.com/soedinglab/MMseqs2/files/3654776/mmseqs2.log.txt); ## Expected Behavior; To be faster. ## Current Behavior; It takes the double of time than Diamond to perform the same task with similar results over the same query and target database. ## Steps to Reproduce (for bugs); time diamond blastx -d /d/Databases/Kegg/sram/kegg -q MOMZ_moomz1_200m.fna -o MO; MZ_moomz1_200m.kegg.raw --sensitive --max-target-seqs 1; real 32m12.614s; user 1091m19.492s; sys 34m5.028s. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1; real 56m26.161s; user 2146m1.584s; sys 37m49.528s. ## Your Environment; MMseqs2 Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; 40 cores Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz; 128 GB main memory; Query Fasta: 516296 metagenomic sequences (454 FLX), average seq size ~400bp; No other processes were running during the tests (besides those elementary to the SO)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231
https://github.com/soedinglab/MMseqs2/issues/231:78,Testability,log,log,78,"[mmseqs2.log.txt](https://github.com/soedinglab/MMseqs2/files/3654776/mmseqs2.log.txt); ## Expected Behavior; To be faster. ## Current Behavior; It takes the double of time than Diamond to perform the same task with similar results over the same query and target database. ## Steps to Reproduce (for bugs); time diamond blastx -d /d/Databases/Kegg/sram/kegg -q MOMZ_moomz1_200m.fna -o MO; MZ_moomz1_200m.kegg.raw --sensitive --max-target-seqs 1; real 32m12.614s; user 1091m19.492s; sys 34m5.028s. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1; real 56m26.161s; user 2146m1.584s; sys 37m49.528s. ## Your Environment; MMseqs2 Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; 40 cores Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz; 128 GB main memory; Query Fasta: 516296 metagenomic sequences (454 FLX), average seq size ~400bp; No other processes were running during the tests (besides those elementary to the SO)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231
https://github.com/soedinglab/MMseqs2/issues/231:986,Testability,test,tests,986,"[mmseqs2.log.txt](https://github.com/soedinglab/MMseqs2/files/3654776/mmseqs2.log.txt); ## Expected Behavior; To be faster. ## Current Behavior; It takes the double of time than Diamond to perform the same task with similar results over the same query and target database. ## Steps to Reproduce (for bugs); time diamond blastx -d /d/Databases/Kegg/sram/kegg -q MOMZ_moomz1_200m.fna -o MO; MZ_moomz1_200m.kegg.raw --sensitive --max-target-seqs 1; real 32m12.614s; user 1091m19.492s; sys 34m5.028s. time mmseqs easy-search MOMZ_moomz1_200m.fna /d/Databases/Kegg/sram/mmseqs/ke; gg mmseqs_results2.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1; real 56m26.161s; user 2146m1.584s; sys 37m49.528s. ## Your Environment; MMseqs2 Version: 4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; 40 cores Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz; 128 GB main memory; Query Fasta: 516296 metagenomic sequences (454 FLX), average seq size ~400bp; No other processes were running during the tests (besides those elementary to the SO)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231
https://github.com/soedinglab/MMseqs2/issues/232:658,Availability,error,error,658,"## Expected Behavior; Generation of the taxonomy results properly; ## Current Behavior; It uses all the memory of the node, even with a 750 Gb RAM (and 48 processors). ## Steps to Reproduce (for bugs). ```; dbdir='/mnt/lustre/scratch/aauladell/databases/unirefdb'. mmseqs createdb ${dbdir}/uniref90.fasta ${dbdir}/unirefDB; mmseqs createtaxdb ${dbdir}/unirefDB ${dbdir}/tmp/. #mmseqs createdb data/annotation/putative_genes/nuc_genes.fna data/annotation/putative_genes/nuc_mmseq_DB. mmseqs taxonomy --search-type 3 data/annotation/putative_genes/nuc_mmseq_DB ${dbdir}/unirefDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```; ## MMseqs Output (for bugs); SLURM error: . ```; slurmstepd: error: Job 214300 exceeded memory limit (227774476 > 144179200), being killed; slurmstepd: error: Exceeded job memory limit; slurmstepd: error: *** JOB 214300 ON c02 CANCELLED AT 2019-09-29T10:38:40 ***; ```. Output process: ; ```; extractorfs data/annotation/putative_genes/nuc_mmseq_DB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start; -mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 48 --compressed 0 -v 3. [=================================================================] 339.18K 2s 173ms; Time for merging files: 0h 0m 2s 768ms; Time for merging files: 0h 0m 4s 126ms; Time for processing: 0h 0m 16s 671ms; translatenucs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/232:684,Availability,error,error,684,"## Expected Behavior; Generation of the taxonomy results properly; ## Current Behavior; It uses all the memory of the node, even with a 750 Gb RAM (and 48 processors). ## Steps to Reproduce (for bugs). ```; dbdir='/mnt/lustre/scratch/aauladell/databases/unirefdb'. mmseqs createdb ${dbdir}/uniref90.fasta ${dbdir}/unirefDB; mmseqs createtaxdb ${dbdir}/unirefDB ${dbdir}/tmp/. #mmseqs createdb data/annotation/putative_genes/nuc_genes.fna data/annotation/putative_genes/nuc_mmseq_DB. mmseqs taxonomy --search-type 3 data/annotation/putative_genes/nuc_mmseq_DB ${dbdir}/unirefDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```; ## MMseqs Output (for bugs); SLURM error: . ```; slurmstepd: error: Job 214300 exceeded memory limit (227774476 > 144179200), being killed; slurmstepd: error: Exceeded job memory limit; slurmstepd: error: *** JOB 214300 ON c02 CANCELLED AT 2019-09-29T10:38:40 ***; ```. Output process: ; ```; extractorfs data/annotation/putative_genes/nuc_mmseq_DB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start; -mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 48 --compressed 0 -v 3. [=================================================================] 339.18K 2s 173ms; Time for merging files: 0h 0m 2s 768ms; Time for merging files: 0h 0m 4s 126ms; Time for processing: 0h 0m 16s 671ms; translatenucs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/232:775,Availability,error,error,775,"## Expected Behavior; Generation of the taxonomy results properly; ## Current Behavior; It uses all the memory of the node, even with a 750 Gb RAM (and 48 processors). ## Steps to Reproduce (for bugs). ```; dbdir='/mnt/lustre/scratch/aauladell/databases/unirefdb'. mmseqs createdb ${dbdir}/uniref90.fasta ${dbdir}/unirefDB; mmseqs createtaxdb ${dbdir}/unirefDB ${dbdir}/tmp/. #mmseqs createdb data/annotation/putative_genes/nuc_genes.fna data/annotation/putative_genes/nuc_mmseq_DB. mmseqs taxonomy --search-type 3 data/annotation/putative_genes/nuc_mmseq_DB ${dbdir}/unirefDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```; ## MMseqs Output (for bugs); SLURM error: . ```; slurmstepd: error: Job 214300 exceeded memory limit (227774476 > 144179200), being killed; slurmstepd: error: Exceeded job memory limit; slurmstepd: error: *** JOB 214300 ON c02 CANCELLED AT 2019-09-29T10:38:40 ***; ```. Output process: ; ```; extractorfs data/annotation/putative_genes/nuc_mmseq_DB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start; -mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 48 --compressed 0 -v 3. [=================================================================] 339.18K 2s 173ms; Time for merging files: 0h 0m 2s 768ms; Time for merging files: 0h 0m 4s 126ms; Time for processing: 0h 0m 16s 671ms; translatenucs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/232:821,Availability,error,error,821,"## Expected Behavior; Generation of the taxonomy results properly; ## Current Behavior; It uses all the memory of the node, even with a 750 Gb RAM (and 48 processors). ## Steps to Reproduce (for bugs). ```; dbdir='/mnt/lustre/scratch/aauladell/databases/unirefdb'. mmseqs createdb ${dbdir}/uniref90.fasta ${dbdir}/unirefDB; mmseqs createtaxdb ${dbdir}/unirefDB ${dbdir}/tmp/. #mmseqs createdb data/annotation/putative_genes/nuc_genes.fna data/annotation/putative_genes/nuc_mmseq_DB. mmseqs taxonomy --search-type 3 data/annotation/putative_genes/nuc_mmseq_DB ${dbdir}/unirefDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```; ## MMseqs Output (for bugs); SLURM error: . ```; slurmstepd: error: Job 214300 exceeded memory limit (227774476 > 144179200), being killed; slurmstepd: error: Exceeded job memory limit; slurmstepd: error: *** JOB 214300 ON c02 CANCELLED AT 2019-09-29T10:38:40 ***; ```. Output process: ; ```; extractorfs data/annotation/putative_genes/nuc_mmseq_DB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start; -mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 48 --compressed 0 -v 3. [=================================================================] 339.18K 2s 173ms; Time for merging files: 0h 0m 2s 768ms; Time for merging files: 0h 0m 4s 126ms; Time for processing: 0h 0m 16s 671ms; translatenucs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/232:2574,Availability,mask,mask,2574," 0m 16s 671ms; translatenucs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/232:2583,Availability,mask,mask-lower-case,2583," 0m 16s 671ms; translatenucs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/232:3109,Availability,Mask,Masked,3109,"11215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 750 Gb, 48 processors.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/232:2826,Energy Efficiency,consumption,consumption,2826,"11215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 750 Gb, 48 processors.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/232:2672,Performance,load,load-mode,2672," 0m 16s 671ms; translatenucs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/232:3237,Performance,perform,perform,3237,"11215513/q_orfs_aa; --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 48. [=================================================================] 3.22M 2s 59ms; Time for merging files: 0h 0m 3s 83ms; Time for processing: 0h 0m 6s 661ms; prefilter /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14502658769203238512/tmp_hsp1/3393216153911215513/q_orfs_aa /mnt/lustre/scratch/aauladell/databases/unirefdb/unirefDB /mnt/lustre/scratch/aauladell/databases/unirefdb/tmp//14; 502658769203238512/tmp_hsp1/3393216153911215513/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c; 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 48 --compressed 0 -v 3 -s; 5.7. Using 48 threads.; Query database size: 3215536 type: Aminoacid; Estimated memory consumption: 437G; Target database size: 99657864 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 99.66M 6m 33s 605ms; Index table: Masked residues: 620383436; Index table: fill; [==; ```. ## Context; From a selection of 300.000 small sequences, I intended to perform the taxonomy using UNIREF90. But it crashes each time even though the database should be able to be used for this kind of analysis. . ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: 15c7762; * Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 750 Gb, 48 processors.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232
https://github.com/soedinglab/MMseqs2/issues/234:598,Availability,error,error,598,"## Expected Behavior. I should get a result_mmseqs2 and tmp file corresponding to the research. I ran the following command to do so: . `/beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5`. ## Current Behavior. I get the following error message : . ```; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; eludoc@pbil-deb:/beegfs/data/eludoc/these/NCBI_protein_viruses$ /beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5. search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:634,Availability,fault,fault,634,"## Expected Behavior. I should get a result_mmseqs2 and tmp file corresponding to the research. I ran the following command to do so: . `/beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5`. ## Current Behavior. I get the following error message : . ```; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; eludoc@pbil-deb:/beegfs/data/eludoc/these/NCBI_protein_viruses$ /beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5. search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:641,Availability,Error,Error,641,"## Expected Behavior. I should get a result_mmseqs2 and tmp file corresponding to the research. I ran the following command to do so: . `/beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5`. ## Current Behavior. I get the following error message : . ```; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; eludoc@pbil-deb:/beegfs/data/eludoc/these/NCBI_protein_viruses$ /beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5. search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:664,Availability,Error,Error,664,"## Expected Behavior. I should get a result_mmseqs2 and tmp file corresponding to the research. I ran the following command to do so: . `/beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5`. ## Current Behavior. I get the following error message : . ```; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; eludoc@pbil-deb:/beegfs/data/eludoc/these/NCBI_protein_viruses$ /beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5. search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:2575,Availability,Mask,Mask,2575,"seqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:2593,Availability,Mask,Mask,2593,"seqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:2795,Availability,Mask,Mask,2795,"dd backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:4971,Availability,Mask,Mask,4971,"seqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:4989,Availability,Mask,Mask,4989,"seqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slic",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:5191,Availability,Mask,Mask,5191,"dd backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	5; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:6692,Availability,mask,mask,6692," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:6701,Availability,mask,mask-lower-case,6701," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:7100,Availability,fault,fault,7100," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:7107,Availability,Error,Error,7107," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:7130,Availability,Error,Error,7130," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:7024,Energy Efficiency,consumption,consumption,7024," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:604,Integrability,message,message,604,"## Expected Behavior. I should get a result_mmseqs2 and tmp file corresponding to the research. I ran the following command to do so: . `/beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5`. ## Current Behavior. I get the following error message : . ```; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders. ```; eludoc@pbil-deb:/beegfs/data/eludoc/these/NCBI_protein_viruses$ /beegfs/data/eludoc/TOOLS/MMseqs2/build/bin/mmseqs search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5. search /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/Wasmannia_auropunctata_mmseqs2_db /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/result_mmseqs2 /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm -a -s 7.5 -e 0.01 --threads 5 . MMseqs Version: 	8c79865b60025674b9c825fd7238bd0b95503bc7; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.01; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/234:6790,Performance,load,load-mode,6790," profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. prefilter /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/q_orfs_aa /beegfs/data/eludoc/these/NCBI_protein_viruses/mmseqs2_viral_db.idx /beegfs/data/eludoc/these/Genomes/Wasmannia_auropunctata/run_mmseqs2_V/tpm/7813851864696837275/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 5 --compressed 0 -v 3 -s 7.5 . Index version: 16; Generated by: 8c79865b60025674b9c825fd7238bd0b95503bc7; ScoreMatrix: VTML80.out; Query database size: 5539077 type: Aminoacid; Estimated memory consumption: 3G; Target database size: 849970 type: Aminoacid; Segmentation fault; Error: Prefilter died; Error: Search step died; ```. Have you any idea what is going on?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234
https://github.com/soedinglab/MMseqs2/issues/235:618,Integrability,wrap,wrapper,618,"This more a feature request!. would someone have time and competence to create a python module similar to the one for vsearch (https://github.com/qiime2/q2-feature-classifier/tree/master/q2_feature_classifier) so that we can classify with multithreading in qiime2?. blast or vsearch runs typically take over 1 day and more for 50k long ONT reads which is really very long and I am dreaming of the speedup seen in the mmseqs2 paper. my current qiime2 execution looks like this in top but I have little knowledge of what it should translate to with mmseqs2; if I could have an equivalent, I may try to hack the [vsearch wrapper code](https://github.com/qiime2/q2-feature-classifier/blob/master/q2_feature_classifier/_vsearch.py) but my python skills are not that great. `qiime feature-classifier classify-consensus-vsearch --i-query rep-seqs.qza --i-reference-reads /data/biodata/MetONTIIME_DB/rrnDB_operons_sequence.qza --i-reference-taxonomy /data/biodata/MetONTIIME_DB/rrnDB_operons_taxonomy.qza --p-perc-identity 0.77 --p-query-cov 0.8 --p-maxaccepts 1 --p-strand both --p-min-consensus 0.51 --p-unassignable-label Unassigned --p-threads 24 --o-classification taxonomy.qza`. Thanks for any help on this. PS:I do not dare to double post on the qiime2 page as this is often seen as offending by developers.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235
https://github.com/soedinglab/MMseqs2/issues/238:29,Availability,error,errors,29,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:359,Availability,error,errors,359,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:712,Availability,mask,mask,712,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:721,Availability,mask,mask-lower-case,721,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:1228,Availability,mask,mask,1228,"uster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Than",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:1237,Availability,mask,mask-lower-case,1237,"uster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Than",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:1594,Availability,Error,Error,1594,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:1619,Availability,Error,Error,1619,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:1958,Availability,error,error,1958,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:375,Energy Efficiency,allocate,allocate,375,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:1485,Energy Efficiency,consumption,consumption,1485,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:1577,Energy Efficiency,allocate,allocate,1577,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:837,Modifiability,extend,extendab,837,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:1353,Modifiability,extend,extendab,1353,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:786,Security,hash,hash-shift,786,"HI, I am getting some memory errors when running the cluster module. The amount of memory I have on my cluster is 100GB and the number of threads is 8. When I run the cluster command as below. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/tem",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/238:1302,Security,hash,hash-shift,1302,"0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8`. I get errors ""Can not allocate memory"". kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . kmermatcher identifiers_sagata_ebi_Orfleton/linclust_out/all_samples_oct31_db identifiers_sagata_ebi_Orfleton/temp_linclust/2197966930512906334/linclust/5695683676022713592/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out -; -alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendab; le 0 --skip-n-repeat-kmer 0 --threads 8 --compressed 0 -v 3 . Database size: 1032373897 type: Aminoacid. Estimated memory consumption 330652 MB; Process file into 3 parts; Generate k-mers list for 1 split; Can not allocate memory; Error: kmermatcher died; Error: linclust died. Then when I try and maximize the amount of memory that can be used by adding the --split-memory-limit command like so. `mmseqs cluster -c 0.9 --min-seq-id 1.0 ${output_folder}/all_samples_oct31_db ${output_folder}/all_seqs_clu_100 ${temp_folder} --remove-tmp-files --threads 8 --split-memory-limit 100000`. I get the error . identifiers_sagata_ebi_Orfleton/temp_linclust/352147678829955415/linclust/9188580091420820903/linclust.sh: line 26: 24508 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}. Do you know what is wrong? Thank you very much. Best,; Sam",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238
https://github.com/soedinglab/MMseqs2/issues/239:221,Availability,error,error,221,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239
https://github.com/soedinglab/MMseqs2/issues/239:744,Availability,error,error,744,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239
https://github.com/soedinglab/MMseqs2/issues/239:1888,Availability,Mask,Mask,1888," the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 10; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239
https://github.com/soedinglab/MMseqs2/issues/239:1905,Availability,Mask,Mask,1905," the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 10; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239
https://github.com/soedinglab/MMseqs2/issues/239:2097,Availability,Mask,Mask,2097,"matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 10; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; ```. ## Context; I ran 1000 parallel jobs, and there are 20+ failed files while other files have no problems. And for those failed files, there is no e",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239
https://github.com/soedinglab/MMseqs2/issues/239:3100,Availability,error,error,3100,"y 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Use global sequence weighting false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 10; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Chain overlapping alignments 0; Merge query 1; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files true; ```. ## Context; I ran 1000 parallel jobs, and there are 20+ failed files while other files have no problems. And for those failed files, there is no error msg if I run them manually. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; `f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e`; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; self-compiled; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; `cmake version 3.10.2`; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:; NAME=""Ubuntu""; VERSION=""18.04.3 LTS (Bionic Beaver)""",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239
https://github.com/soedinglab/MMseqs2/issues/239:227,Integrability,message,messages,227,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239
https://github.com/soedinglab/MMseqs2/issues/239:441,Modifiability,variab,variable,441,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239
https://github.com/soedinglab/MMseqs2/issues/239:143,Performance,perform,performance,143,"## Expected Behavior; Run rbh using computer clusters.; ## Current Behavior; I am running 'mmseqs rbh' within 1000 jobs in parallel using High-performance computing. But there are always some jobs failed due to different error messages(`STDERR`). ## Steps to Reproduce (for bugs); this is my cmd to run rbh:; ```sh; $ mmseqs rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files; ```; so `$db_name` is a variable and for parallel jobs, it's the element of my name list. ; ## MMseqs Output (for bugs); there are several kinds of `STDERR` files:; ```sh; Could not delete /userfolder/rbh/result/tmp/latest!; ```; or; ```sh; Could not write file tmp/rbh.sh!; ```; and ; ```sh; Failed to execute tmp/rbh.sh with error 26.; ```; Even though the `STDERR` files are different, all `STDOUT` are quite similar: it seems that they all collapse in the middle of the process. The corresponding output is ; ```sh; rbh ../../ecoli_data/ecoliDB ../alldata_db/$db_name ""${db_name}rbh"" tmp --remove-tmp-files. MMseqs Version: f05f8c51d6e9c7c0b15fbd533e4b678303f50b3e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 0; E-value threshold 0.001; Seq. id. threshold 0; Min. alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 28; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; K-mer size 0; K-score 2147483647; Alphabet size 21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 0; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Lo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/239
https://github.com/soedinglab/MMseqs2/issues/240:154,Deployability,release,release,154,"The user guide and the cli help say different things about the `-s` parameter. The user guide says the following, both in the pdf bundled with the latest release and in the latest wiki version (https://github.com/soedinglab/mmseqs2/wiki#search-workflow). > ```; > -s [float] Target sensitivity in the range [1:8.5] (default=4).; > ```; > Adjusts the sensitivity of the prefiltering and influences the prefiltering run time. 1.0 fastest -; 8.5 sensitive. The sensitivity between 8 to 8.5 should be as sensitive as BLAST. For detailed; explanation see section Computation of Prefiltering Scores using mmseqs prefilter. The cli help (`mmseqs search --help`) says:. > ```; > -s FLOAT sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive (range 1.0-7.5) [5.700]; > ``` . As defined here:. https://github.com/soedinglab/MMseqs2/blob/5ae5503a923ec4338464d09cc1ff4bc3680727da/src/commons/Parameters.cpp#L30. I'm wondering about this since I'd like to search at a sensitivity similar to BLAST and since the cli doesn't reject values bigger than 7.5. MMseqs2 Version: 6d92cd21676ccc36531f2852f7eb747f6389435f (Release 10-6d92c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240
https://github.com/soedinglab/MMseqs2/issues/240:1104,Deployability,Release,Release,1104,"The user guide and the cli help say different things about the `-s` parameter. The user guide says the following, both in the pdf bundled with the latest release and in the latest wiki version (https://github.com/soedinglab/mmseqs2/wiki#search-workflow). > ```; > -s [float] Target sensitivity in the range [1:8.5] (default=4).; > ```; > Adjusts the sensitivity of the prefiltering and influences the prefiltering run time. 1.0 fastest -; 8.5 sensitive. The sensitivity between 8 to 8.5 should be as sensitive as BLAST. For detailed; explanation see section Computation of Prefiltering Scores using mmseqs prefilter. The cli help (`mmseqs search --help`) says:. > ```; > -s FLOAT sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive (range 1.0-7.5) [5.700]; > ``` . As defined here:. https://github.com/soedinglab/MMseqs2/blob/5ae5503a923ec4338464d09cc1ff4bc3680727da/src/commons/Parameters.cpp#L30. I'm wondering about this since I'd like to search at a sensitivity similar to BLAST and since the cli doesn't reject values bigger than 7.5. MMseqs2 Version: 6d92cd21676ccc36531f2852f7eb747f6389435f (Release 10-6d92c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240
https://github.com/soedinglab/MMseqs2/issues/240:9,Usability,guid,guide,9,"The user guide and the cli help say different things about the `-s` parameter. The user guide says the following, both in the pdf bundled with the latest release and in the latest wiki version (https://github.com/soedinglab/mmseqs2/wiki#search-workflow). > ```; > -s [float] Target sensitivity in the range [1:8.5] (default=4).; > ```; > Adjusts the sensitivity of the prefiltering and influences the prefiltering run time. 1.0 fastest -; 8.5 sensitive. The sensitivity between 8 to 8.5 should be as sensitive as BLAST. For detailed; explanation see section Computation of Prefiltering Scores using mmseqs prefilter. The cli help (`mmseqs search --help`) says:. > ```; > -s FLOAT sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive (range 1.0-7.5) [5.700]; > ``` . As defined here:. https://github.com/soedinglab/MMseqs2/blob/5ae5503a923ec4338464d09cc1ff4bc3680727da/src/commons/Parameters.cpp#L30. I'm wondering about this since I'd like to search at a sensitivity similar to BLAST and since the cli doesn't reject values bigger than 7.5. MMseqs2 Version: 6d92cd21676ccc36531f2852f7eb747f6389435f (Release 10-6d92c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240
https://github.com/soedinglab/MMseqs2/issues/240:88,Usability,guid,guide,88,"The user guide and the cli help say different things about the `-s` parameter. The user guide says the following, both in the pdf bundled with the latest release and in the latest wiki version (https://github.com/soedinglab/mmseqs2/wiki#search-workflow). > ```; > -s [float] Target sensitivity in the range [1:8.5] (default=4).; > ```; > Adjusts the sensitivity of the prefiltering and influences the prefiltering run time. 1.0 fastest -; 8.5 sensitive. The sensitivity between 8 to 8.5 should be as sensitive as BLAST. For detailed; explanation see section Computation of Prefiltering Scores using mmseqs prefilter. The cli help (`mmseqs search --help`) says:. > ```; > -s FLOAT sensitivity: 1.0 faster; 4.0 fast default; 7.5 sensitive (range 1.0-7.5) [5.700]; > ``` . As defined here:. https://github.com/soedinglab/MMseqs2/blob/5ae5503a923ec4338464d09cc1ff4bc3680727da/src/commons/Parameters.cpp#L30. I'm wondering about this since I'd like to search at a sensitivity similar to BLAST and since the cli doesn't reject values bigger than 7.5. MMseqs2 Version: 6d92cd21676ccc36531f2852f7eb747f6389435f (Release 10-6d92c)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240
https://github.com/soedinglab/MMseqs2/issues/241:509,Availability,Down,Download,509,"Hi all, . I am trying to use mmseqs taxonomy to obtain the putative linage of some proteins from a metagenomic project. The problem I am suffering is that I have some strange results. For intance the LCA is telling me that a certain protein probaly belong to Arabidopsis genera, but no hits were found when using mmseqs search over the same database. How can be that possible? any clue? Here is the code I am using to build the database and both searches:. ##################################; #!/bin/bash. #--Download Uniprot DB; wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz; wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_trembl.fasta.gz. tar -xzf uniprot_sprot.fasta.gz; tar -xzf uniprot_trembl.fasta.gz. cat uniprot_sprot.fasta uniprot_trembl > uniprot.fasta. #--Create DB + taxonomy; mmseqs createdb uniprot.fasta uniprotDB; mmseqs createtaxdb uniprotDB tmp. #######################; Taxonomy search. mmseqs taxonomy queryDB uniprotDB taxoDB tmp -s 6; mmseqs createtsv queryDB taxoDB query.lca. Standard seach. mmseqs search queryDB uniprotDB searchDB tmp -s 6; mmseqs convertalis queryDB taxoDB searchDB query.mmseqs",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/241
https://github.com/soedinglab/MMseqs2/issues/244:60,Deployability,release,release,60,"Hello there, . I want to create a taxonomy db from the GTDB release 89. . I have found that Annotree presents a file with all the predicted gene sequences here:; [https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/](https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/). From this I could obtain a db easily and generate a tab-separating mapping file explicitly pointing to a genome: . ```; NZ_FWXU01000077.1_1 RS_GCF_900176345.1; NZ_FWXU01000059.1_5 RS_GCF_900176345.1; NZ_FWXU01000047.1_9 RS_GCF_900176345.1; NZ_FWXU01000020.1_25 RS_GCF_900176345.1; NZ_FWXU01000020.1_57 RS_GCF_900176345.1; NZ_FWXU01000020.1_89 RS_GCF_900176345.1; NZ_FWXU01000018.1_9 RS_GCF_900176345.1; NZ_FWXU01000018.1_41 RS_GCF_900176345.1; NZ_FWXU01000018.1_73 RS_GCF_900176345.1; NZ_FWXU01000018.1_105 RS_GCF_900176345.1; ```; There is also a taxonomy file [here](https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/) in which for each genome there is the taxonomic information in the following structure: . ```; RS_GCF_900234795.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium extorquens; RS_GCF_000012905.2	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhodobacterales;f__Rhodobacteraceae;g__Rhodobacter_A;s__Rhodobacter_A sphaeroides; GB_GCA_003096615.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium organophilum; GB_GCA_002709955.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__UBA8366;f__GCA-2696645;g__GCA-2696645;s__GCA-2696645 sp002709955; RS_GCF_001556125.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Bosea;s__Bosea sp001556125; RS_GCF_001555965.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Sphingomonadales;f__Sphingomonadaceae;g__Sphingomonas;s__Sphingomonas sp001555965; RS_GCF_900101505.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/244
https://github.com/soedinglab/MMseqs2/issues/244:905,Deployability,release,releases,905,"Hello there, . I want to create a taxonomy db from the GTDB release 89. . I have found that Annotree presents a file with all the predicted gene sequences here:; [https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/](https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/). From this I could obtain a db easily and generate a tab-separating mapping file explicitly pointing to a genome: . ```; NZ_FWXU01000077.1_1 RS_GCF_900176345.1; NZ_FWXU01000059.1_5 RS_GCF_900176345.1; NZ_FWXU01000047.1_9 RS_GCF_900176345.1; NZ_FWXU01000020.1_25 RS_GCF_900176345.1; NZ_FWXU01000020.1_57 RS_GCF_900176345.1; NZ_FWXU01000020.1_89 RS_GCF_900176345.1; NZ_FWXU01000018.1_9 RS_GCF_900176345.1; NZ_FWXU01000018.1_41 RS_GCF_900176345.1; NZ_FWXU01000018.1_73 RS_GCF_900176345.1; NZ_FWXU01000018.1_105 RS_GCF_900176345.1; ```; There is also a taxonomy file [here](https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/) in which for each genome there is the taxonomic information in the following structure: . ```; RS_GCF_900234795.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium extorquens; RS_GCF_000012905.2	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhodobacterales;f__Rhodobacteraceae;g__Rhodobacter_A;s__Rhodobacter_A sphaeroides; GB_GCA_003096615.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium organophilum; GB_GCA_002709955.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__UBA8366;f__GCA-2696645;g__GCA-2696645;s__GCA-2696645 sp002709955; RS_GCF_001556125.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Bosea;s__Bosea sp001556125; RS_GCF_001555965.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Sphingomonadales;f__Sphingomonadaceae;g__Sphingomonas;s__Sphingomonas sp001555965; RS_GCF_900101505.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/244
https://github.com/soedinglab/MMseqs2/issues/244:130,Safety,predict,predicted,130,"Hello there, . I want to create a taxonomy db from the GTDB release 89. . I have found that Annotree presents a file with all the predicted gene sequences here:; [https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/](https://data.ace.uq.edu.au/public/misc_downloads/annotree/r89/). From this I could obtain a db easily and generate a tab-separating mapping file explicitly pointing to a genome: . ```; NZ_FWXU01000077.1_1 RS_GCF_900176345.1; NZ_FWXU01000059.1_5 RS_GCF_900176345.1; NZ_FWXU01000047.1_9 RS_GCF_900176345.1; NZ_FWXU01000020.1_25 RS_GCF_900176345.1; NZ_FWXU01000020.1_57 RS_GCF_900176345.1; NZ_FWXU01000020.1_89 RS_GCF_900176345.1; NZ_FWXU01000018.1_9 RS_GCF_900176345.1; NZ_FWXU01000018.1_41 RS_GCF_900176345.1; NZ_FWXU01000018.1_73 RS_GCF_900176345.1; NZ_FWXU01000018.1_105 RS_GCF_900176345.1; ```; There is also a taxonomy file [here](https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/) in which for each genome there is the taxonomic information in the following structure: . ```; RS_GCF_900234795.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium extorquens; RS_GCF_000012905.2	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhodobacterales;f__Rhodobacteraceae;g__Rhodobacter_A;s__Rhodobacter_A sphaeroides; GB_GCA_003096615.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Methylobacterium;s__Methylobacterium organophilum; GB_GCA_002709955.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__UBA8366;f__GCA-2696645;g__GCA-2696645;s__GCA-2696645 sp002709955; RS_GCF_001556125.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Rhizobiales;f__Beijerinckiaceae;g__Bosea;s__Bosea sp001556125; RS_GCF_001555965.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacteria;o__Sphingomonadales;f__Sphingomonadaceae;g__Sphingomonas;s__Sphingomonas sp001555965; RS_GCF_900101505.1	d__Bacteria;p__Proteobacteria;c__Alphaproteobacte",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/244
https://github.com/soedinglab/MMseqs2/issues/245:479,Usability,intuit,intuitive,479,"I have a question regarding the choice of linclust parameters in the Steinegger et al. 2019 paper. These are the parameters:. --kmer-per-seq 80 --cluster-mode 2 **--cov-mode 1 -c 0.9** --min-seq-id from 50% to 90%. My question concerns the part in bold:. if I understand well, it means that the query must cover at least 90% of the target to be listed in the cluster, is that so?. If that is the case, could you explain to me the rationale behind this? Somehow, to me seems more intuitive that it is the query which should kind of fit into the target. Even if it's much shorter, but still similar, I would expect it to be in the same cluster (or it shouldn't be?). Thanks a lot for your clarification,. G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/245
https://github.com/soedinglab/MMseqs2/issues/248:430,Availability,error,error,430,"Hello. I would like to obtain the taxids for each hit sequence in the alignment results file. . According to the [wiki](https://github.com/soedinglab/MMseqs2/wiki#custom-alignment-format-with-convertalis), it seems that this is possible with convertalis by using the ""taxid"" tag in the format description given with the flag ""format-output"". However, although I use the latest version of mmseqs (10.6d92c), the program returns an error: ""Format code taxid does not exist."". Am I doing something wrong ?. `convertalis ALL.PEP.mms nr.mmdb ALL.PEP_VS_nr.mmseqsout.tax ALL.PEP_VS_nr.mms.m8 --format-output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,empty,qlen,tlen,taxid,theader . MMseqs Version: 10.6d92c; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Alignment format 0; Format alignment output query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,empty,qlen,tlen,taxid,theader; Translation table 1; Gap open cost 11; Gap extension cost 1; Database output false; Preload mode 0; Search type 0; Threads 128; Compressed 0; Verbosity 3. Format code taxid does not exist.`. I have prepared my target database using the following series of steps: createdb, createdbindex and createtaxdb. After the search step, I added taxonomic information to the results database with the command addtaxonomy. Thank you for your help; Guillaume",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248
https://github.com/soedinglab/MMseqs2/pull/250:801,Availability,down,download,801,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250
https://github.com/soedinglab/MMseqs2/pull/250:974,Availability,down,downloads,974,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250
https://github.com/soedinglab/MMseqs2/pull/250:70,Modifiability,config,configured,70,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250
https://github.com/soedinglab/MMseqs2/pull/250:681,Safety,avoid,avoids,681,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250
https://github.com/soedinglab/MMseqs2/pull/250:1083,Testability,log,logo,1083,"Hi!. I copied the tutorial from the wiki into a Jupyter notebook, and configured binder to be able to run it. Here is an example: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/luizirber/MMseqs2/tutorial_in_binder?filepath=tutorial%2Ftutorial.ipynb). ## Notes. - I'm building MMseqs2 from master, but you can also pick a specific tag to put in the binder link. ## TODO. - [ ] Link in README.md? (or at least back in the wiki?); - [ ] Tutorial from wiki failed for me because `--report-mode` is missing in the bioconda package?; - [ ] Preload data during the `postBuild` step in binder? Not sure about this one, since it changes the tutorial a bit, but avoids redownloading everything during runtime.; * Need to at least preload the taxdump, I think binder is blocking the download (is it an FTP link? [binder](https://github.com/binder-examples/getting-data/blob/4c9deceab9e4fbe095e704a3aa11671321e0584f/README.md#large-public-files) blocks FTP downloads...); - [ ] Clean up outputs (don't want to spoil what is the mystery pathogen!); - [ ] Fix path to logo in the intro",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250
https://github.com/soedinglab/MMseqs2/pull/251:24,Availability,down,download,24,"From #250. Binder can't download data from FTP websites (only git and https), but both links used in `data/createtaxdb.sh` also work over HTTPS (despite having `ftp.` in the URL...)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/251
https://github.com/soedinglab/MMseqs2/issues/252:33,Deployability,rolling,rolling,33,"I think I've found a typo on the rolling hash function of linclust, at line; https://github.com/soedinglab/MMseqs2/blob/11e2736028cc12a6523b507b061158903f8de317/src/linclust/kmermatcher.cpp#L55; I guess it should be; ```; h ^= RoL(RAND[x_first], (rol*(length-1)) % 16);; ```; with rol instead of the fixed 5 ? Probably you define rol=5 somewhere so in practice no harm is done. (In the Supplementary Material of the paper it's `5` but I noticed that now is more general...)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252
https://github.com/soedinglab/MMseqs2/issues/252:41,Security,hash,hash,41,"I think I've found a typo on the rolling hash function of linclust, at line; https://github.com/soedinglab/MMseqs2/blob/11e2736028cc12a6523b507b061158903f8de317/src/linclust/kmermatcher.cpp#L55; I guess it should be; ```; h ^= RoL(RAND[x_first], (rol*(length-1)) % 16);; ```; with rol instead of the fixed 5 ? Probably you define rol=5 somewhere so in practice no harm is done. (In the Supplementary Material of the paper it's `5` but I noticed that now is more general...)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/252
https://github.com/soedinglab/MMseqs2/issues/253:156,Availability,avail,available,156,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:583,Availability,Error,Error,583,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:675,Availability,error,error,675,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:3230,Availability,mask,mask,3230,"--reverse-frames 1 --threads 8 --compressed 0 -v 3 ; ; =[===============================================================] 10 0s 1ms; =Time for merging into tmp/274686171214568767/query_seqs_h by mergeResults: 0h 0m 0s 0ms; Time for merging into tmp/274686171214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:3239,Availability,mask,mask-lower-case,3239,"--reverse-frames 1 --threads 8 --compressed 0 -v 3 ; ; =[===============================================================] 10 0s 1ms; =Time for merging into tmp/274686171214568767/query_seqs_h by mergeResults: 0h 0m 0s 0ms; Time for merging into tmp/274686171214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:3443,Availability,Error,Error,3443,"qs_h by mergeResults: 0h 0m 0s 0ms; Time for merging into tmp/274686171214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7; ATCTCGTCCCGAGAATTCTAAGCCTCAACATCTATGAGTTATGAGGTTAGCCGAAAAAGCACGTGGTGGCGCCCACCGACTGTTCCCAGACTGTAGCTCT; >8; TTGTTCTGTCAAGGCCCGACCTTCATCGCGGCCGATTCCTTCTGCGGACCATACCGTCCTGATACTTTGGTCATGTTTCC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:3466,Availability,Error,Error,3466,"qs_h by mergeResults: 0h 0m 0s 0ms; Time for merging into tmp/274686171214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7; ATCTCGTCCCGAGAATTCTAAGCCTCAACATCTATGAGTTATGAGGTTAGCCGAAAAAGCACGTGGTGGCGCCCACCGACTGTTCCCAGACTGTAGCTCT; >8; TTGTTCTGTCAAGGCCCGACCTTCATCGCGGCCGATTCCTTCTGCGGACCATACCGTCCTGATACTTTGGTCATGTTTCC",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:3499,Availability,error,error,3499,"214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7; ATCTCGTCCCGAGAATTCTAAGCCTCAACATCTATGAGTTATGAGGTTAGCCGAAAAAGCACGTGGTGGCGCCCACCGACTGTTCCCAGACTGTAGCTCT; >8; TTGTTCTGTCAAGGCCCGACCTTCATCGCGGCCGATTCCTTCTGCGGACCATACCGTCCTGATACTTTGGTCATGTTTCCGTTGTAGGAGTGAACCCACT; >9; TGCCTTTGCGTCTTAATACCAATGAAAAACCTATGCACTTTGTA",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:66,Deployability,integrat,integration,66,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:66,Integrability,integrat,integration,66,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:3328,Performance,load,load-mode,3328,"--reverse-frames 1 --threads 8 --compressed 0 -v 3 ; ; =[===============================================================] 10 0s 1ms; =Time for merging into tmp/274686171214568767/query_seqs_h by mergeResults: 0h 0m 0s 0ms; Time for merging into tmp/274686171214568767/query_seqs by mergeResults: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 6ms; splitsequence tmp/274686171214568767/query_seqs tmp/274686171214568767/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --threads 8 --compressed 0 -v 3 ; ; Time for processing: 0h 0m 0s 1ms; prefilter tmp/274686171214568767/query_seqs_split tmp/274686171214568767/target_seqs_split tmp/274686171214568767/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size 21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 4G -c 0.99 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 2.0 ; ; Query database size: 20 type: Nucleotide; Error: Prefilter died; Error: Search step died. Command error:; Cannot fit databased into 4G. Please use a computer with more main memory.; ```. fasta file content is:; ```; >1; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >2; ACCCCCGGAGCTTGGCAGCTCCTGGGGTATCATGGAGCCTGTGGTTCATCCCGTCGGATATCAAACTTCGTCTTGATAAAGCCCCCCGCTCGGGAGTACC; >3; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATTTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >4; AGAGAAGATGTCTACTGAGTTGTGCGATCCCTGCACTTCAGCTAAGGAAGCTACCAATATGTAGTTTCTGAGTCTCACGACAGACCTCGCGCGTAGATTG; >5; CCATGCGTAGAGCTAACGAGCCAGCGGAAAGCGTGAGGCGCTTTTAAGCATGGCGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTAGGTTCG; >6; CCATGCGTAGAGCTTACGAGCCAGCGGAAAGCGTGAGGCGCTATTAAGCATGGGGAGTAAGTGATCCAACGCTTCGGATATGACTATATACTTACGTTCG; >7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/253:78,Testability,test,test,78,"Hello,; I'm running `mmseqs search` on Travis virtual machine for integration test purpose.; The issue I have is that mmseqs requires more memory than it's available on the machine.; The dataset I'm using consists of 10 sequences, where each is 100 nucleotides long.; Is there a possibility to overcome this behaviour?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb dna.fasta queryDB; mmseqs createdb dna.fasta targetDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99; ```. ## MMseqs Output (for bugs); ```; Error executing process > 'search (1)'. Caused by:; Process `search (1)` terminated with an error exit status (1). Command executed:. mmseqs createdb query.1.fasta queryDB; mmseqs search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G; mmseqs createtsv queryDB targetDB outputDB chunk_alignment_tsv. Command exit status:; 1. Command output:; Omit consensus 568767/qfalse; Min codons in orf 	30; Max codons in length uery_seq32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode _seqs_sp2; Orf start mode a:VTML801; Forward frames corr 1 -1,2,3; Reverse frames 1.5 --th1,2,3; Translation table 	1; Translate orf de 0; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query se a com1; Search type 	3; Number search iterations 	1; Start sensitivity work/ac/4; Search steps 	1; Run a seq-profile search in slice modeging to false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false; ; search queryDB targetDB outputDB tmp -a -s 2 --alignment-mode 3 --search-type 3 --min-seq-id 0.95 -c 0.99 --split-memory-limit 4G ; ; MMseqs Version: 	6d92cd21676ccc36531f2852f7eb747f6389435f; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	true; Alignment mode 	3; E-value thresho",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253
https://github.com/soedinglab/MMseqs2/issues/256:1286,Availability,error,error,1286,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256
https://github.com/soedinglab/MMseqs2/issues/256:1410,Availability,error,error,1410,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256
https://github.com/soedinglab/MMseqs2/issues/256:363,Deployability,release,release,363,"## Expected Behavior. The generation of LCA taxonomy through the following command. . ```sh; mmseqs taxonomy --threads 36 --search-type 3 \; --lca-ranks species:genus:family:order:class:phylum:superkingdom \; data/annotation/putative_genes/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs versio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256
https://github.com/soedinglab/MMseqs2/issues/256:1626,Safety,Abort,Aborted,1626,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256
https://github.com/soedinglab/MMseqs2/issues/256:1717,Testability,log,log,1717,"s/nuc_mmseq_DB \; ${dbdir}/gtdb_54kDB data/04_taxgenes/taxresdb ${dbdir}/tmp/; ```. The taxonomy DB is made through the last release of GTDB without applying a cluster, as discussed in #244 . . The db is as follows: . ```; -rw-r--r-- 1 aauladell bio 54G 28 nov 11:05 gtdb_54kDB; -rw-r--r-- 1 aauladell bio 4 28 nov 11:07 gtdb_54kDB.dbtype; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 3,0G 28 nov 11:00 gtdb_54kDB_h; -rw-r--r-- 1 aauladell bio 4 28 nov 11:01 gtdb_54kDB_h.dbtype; -rw-r--r-- 1 aauladell bio 3,9G 28 nov 11:09 gtdb_54kDB_h.index; -rw-r--r-- 1 aauladell bio 4,3G 28 nov 11:08 gtdb_54kDB.index; -rw-r--r-- 1 aauladell bio 4,6G 28 nov 11:14 gtdb_54kDB.lookup; -rw-r--r-- 1 aauladell bio 2,7G 28 nov 15:43 gtdb_54kDB_mapping; -rw-r--r-- 1 aauladell bio 0 28 nov 15:43 gtdb_54kDB_merged.dmp; -rw----r-- 1 aauladell bio 1,8M 28 nov 15:43 gtdb_54kDB_names.dmp; -rw----r-- 1 aauladell bio 3,0M 28 nov 15:43 gtdb_54kDB_nodes.dmp; ```. ## Current Behavior. Instead, it raises an `out_of_range` error with a `terminate called recursively` after running for 20 hours. . ## MMseqs Output (for bugs). Raises the following error: ; ```; terminate called recursively; terminate called after throwing an instance of 'std::out_of_range/mnt/lustre/scratch/aauladell/databases/gtdb-r89_54k/tmp//14536420861195881021/taxonomy.sh: line 99: 34258 Aborted ""$MMSEQS"" lca ""${TARGET}"" ""${LCA_SOURCE}"" ""${RESULTS}"" ${LCA_PAR}; ```. The output log: ; [mmseqs_lca_log.txt](https://github.com/soedinglab/MMseqs2/files/3955181/mmseqs_lca_log.txt). ## Context; Taxonomic classification of a gene catalog with around 500000 seqs. ; ; ## Your Environment. MMseqs2 Version: 0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Which MMseqs version was used: statically compiled (Statically-compiled, self-compiled, Homebrew, etc.): statically compiled; Server specifications (especially CPU support for AVX2/SSE and amount of system memory):AVX2 supported, 36 threads and 400 Gb RAM.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256
https://github.com/soedinglab/MMseqs2/issues/257:49,Energy Efficiency,schedul,scheduler,49,"Hello. I am running MMSEQS through the SLURM job scheduler on our institute cluster. In the mmseqs SEARCH command line of my SLURM script, I specify a temporary directory on the /tmp of the compute node. However, during execution, I have a file named like ""core.181135"" which is created and which reaches a phenomenal size (>400GB) in the folder where my slurm script is located and from where I launch the sbatch command. The ""181135"" number corresponds to the process id of the mmseqs job on the compute node. I was wondering if anyone around here could have any idea of the origin of this bizarre behavior of the program. The command line is like (I also attach the SLURM script to this post):. `mmseqs search /shared/projects/phycovir/JGI/MMSEQS/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep.mms /shared/bank/nr/current/mmseqs/nr.mmdb /shared/projects/phycovir/JGI/MMSEQS/NR/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep_VS_nr.mms.rsltDB /tmp/tmp_mmseqs.181126 --remove-tmp-files true --threads 64 -a -e 1E-5 -v 3`. I hope it's clear enough; Thanks for the help; Guillaume. ## Your Environment; mmseqs2/10-6d92c. [MMSEQ-SEARCH-69.SLURM.txt](https://github.com/soedinglab/MMseqs2/files/3956903/MMSEQ-SEARCH-69.SLURM.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257
https://github.com/soedinglab/MMseqs2/issues/257:1024,Usability,clear,clear,1024,"Hello. I am running MMSEQS through the SLURM job scheduler on our institute cluster. In the mmseqs SEARCH command line of my SLURM script, I specify a temporary directory on the /tmp of the compute node. However, during execution, I have a file named like ""core.181135"" which is created and which reaches a phenomenal size (>400GB) in the folder where my slurm script is located and from where I launch the sbatch command. The ""181135"" number corresponds to the process id of the mmseqs job on the compute node. I was wondering if anyone around here could have any idea of the origin of this bizarre behavior of the program. The command line is like (I also attach the SLURM script to this post):. `mmseqs search /shared/projects/phycovir/JGI/MMSEQS/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep.mms /shared/bank/nr/current/mmseqs/nr.mmdb /shared/projects/phycovir/JGI/MMSEQS/NR/ScafRef-ALLDATES.COASSEMBLY.lgmin2000.pep_VS_nr.mms.rsltDB /tmp/tmp_mmseqs.181126 --remove-tmp-files true --threads 64 -a -e 1E-5 -v 3`. I hope it's clear enough; Thanks for the help; Guillaume. ## Your Environment; mmseqs2/10-6d92c. [MMSEQ-SEARCH-69.SLURM.txt](https://github.com/soedinglab/MMseqs2/files/3956903/MMSEQ-SEARCH-69.SLURM.txt)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257
https://github.com/soedinglab/MMseqs2/issues/258:3944,Availability,Mask,Mask,3944,"all50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:3962,Availability,Mask,Mask,3962,"all50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:4515,Availability,mask,mask,4515,"rnative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:4524,Availability,mask,mask-lower-case,4524,"rnative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:4929,Availability,mask,mask,4929,"t k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:4938,Availability,mask,mask-lower-case,4938,"t k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:12679,Availability,Down,Downloaded,12679,"0m 0s 4ms; Time for merging to clust: 0h 0m 0s 19ms; Time for processing: 0h 0m 0s 101ms; mergeclusters experiments/small.mm.db experiments/small50.mm.db experiments/tmp//6404161245249296443/pre_clust experiments/tmp//6404161245249296443/clust --threads 12 --compressed 0 -v 3 . Clustering step 1; [=================================================================] 100.00% 24.60K 0s 9ms ; Clustering step 2; [=================================================================] 100.00% 24.39K 0s 43ms ; Write merged clustering; [=================================================================] 100.00% 25.00K 0s 65ms ; Time for merging to small50.mm.db: 0h 0m 0s 22ms; Time for processing: 0h 0m 0s 112ms; user@user:~$ ./mmseqs/bin/mmseqs createseqfiledb experiments/small.mm.db experiments/small50.mm.db experiments/small50_seq; createseqfiledb experiments/small.mm.db experiments/small50.mm.db experiments/small50_seq . MMseqs Version:	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Min sequences	1; Max sequences	2147483647; HH format 	false; Threads 	12; Compressed 	0; Verbosity 	3. Time for merging to small50_seq: 0h 0m 0s 12ms; Time for processing: 0h 0m 0s 75ms; user@user:~$ ./mmseqs/bin/mmseqs result2flat experiments/small.mm.db experiments/small.mm.db experiments/small50_seq experiments/small50_seq.fa; result2flat experiments/small.mm.db experiments/small.mm.db experiments/small50_seq experiments/small50_seq.fa . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Use fasta header	false; Verbosity 	3. Time for processing: 0h 0m 0s 107ms; ```. ## Context. Input file (small_sample.fa): https://gist.github.com/tomblaze/818f17864d3afeb5475b054a66169571. Output file (small50_seq.fa): https://gist.github.com/tomblaze/e7840473fcfb4992ec709327c358d679. ## Your Environment; Ubuntu 16.04 (this output from my computer, but bug also occurred on an AWS run). MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1. Downloaded from https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:5162,Energy Efficiency,Reduce,Reduced,5162,"porary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 2",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:5284,Energy Efficiency,consumption,consumption,5284,"iments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 24.84K eta 0s ; Time for processing: 0h 0m 0s 48ms; clust experiments/small.mm.db experiments/tmp//6404161245249296443/pref_rescore1 experiment",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:3384,Integrability,wrap,wrapped,3384,"riments/small.mm.db experiments/small.mm.db experiments/small50_seq experiments/small50_seq.fa`. ## MMseqs Output (for bugs). Full session output:. ```; user@user:~$ ./mmseqs/bin/mmseqs createdb experiments/small_sample.fa experiments/small.mm.db; Converting sequences; [24948] 0s 72ms; Time for merging to small.mm.db_h: 0h 0m 0s 37ms; Time for merging to small.mm.db: 0h 0m 0s 16ms; Database type: Aminoacid; Time for merging to small.mm.db.lookup: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 204ms; user@user:~$ ./mmseqs/bin/mmseqs linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-m",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:5819,Integrability,wrap,wrapped-scoring,5819,"62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 24.84K eta 0s ; Time for processing: 0h 0m 0s 48ms; clust experiments/small.mm.db experiments/tmp//6404161245249296443/pref_rescore1 experiments/tmp//6404161245249296443/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 25.00K 0s 9ms ; Sort entries; Find missing connections; Found 597 new connections.; Reconstruct initial order; [=================================================================] 100.00% 25.00K 0s 17ms ; Add missing connections; [=========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:8377,Integrability,wrap,wrapped-scoring,8377," 0m 0s 2ms; Time for processing: 0h 0m 0s 6ms; createsubdb experiments/tmp//6404161245249296443/order_redundancy experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 6ms; filterdb experiments/tmp//6404161245249296443/pref_filter1 experiments/tmp//6404161245249296443/pref_filter2 --filter-file experiments/tmp//6404161245249296443/order_redundancy . Filtering using file(s); [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 21ms; Time for processing: 0h 0m 0s 56ms; rescorediagonal experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_filter2 experiments/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:9092,Integrability,wrap,wrapped-scoring,9092,"onal experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_filter2 experiments/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target database size: 24598 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 24.60K 0s 159ms ; Time for merging to aln: 0h 0m 0s 22ms. 25322 alignments calculated.; 24830 sequence pairs passed the thresholds (0.980570 of overall calculated).; 1.009432 hits per query sequence.; Time for processing: 0h 0m 0s 211ms; clust experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/aln experiments/tmp//6404161245249296443/clust --cluster-mode 0 --max-iterations 1000 --simil",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:4057,Modifiability,extend,extendable,4057,"all50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:4640,Modifiability,extend,extendable,4640,"	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:5054,Modifiability,extend,extendable,5054," only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:9392,Modifiability,extend,extend,9392,"--filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target database size: 24598 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 24.60K 0s 159ms ; Time for merging to aln: 0h 0m 0s 22ms. 25322 alignments calculated.; 24830 sequence pairs passed the thresholds (0.980570 of overall calculated).; 1.009432 hits per query sequence.; Time for processing: 0h 0m 0s 211ms; clust experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/aln experiments/tmp//6404161245249296443/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 24.60K 0s 10ms ; Sort entries; Find missing connections; Found 232 new connections.; Reconstruct initial order; [=========================================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:5979,Performance,load,load-mode,5979,"ode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 25.00K 0s 11ms ; Time for merging to pref_rescore1: 0h 0m 0s 8ms==================>] 99.34% 24.84K eta 0s ; Time for processing: 0h 0m 0s 48ms; clust experiments/small.mm.db experiments/tmp//6404161245249296443/pref_rescore1 experiments/tmp//6404161245249296443/pre_clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 25.00K 0s 9ms ; Sort entries; Find missing connections; Found 597 new connections.; Reconstruct initial order; [=================================================================] 100.00% 25.00K 0s 17ms ; Add missing connections; [=================================================================] 100.00% 25.00K 0s 1ms . Time for read in: 0h 0m 0s 42ms; Total time: 0h 0m 0s 47ms. Size of the",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:8537,Performance,load,load-mode,8537,"1245249296443/pref experiments/tmp//6404161245249296443/pref_filter1 -v 3 --subdb-mode 1 . Time for merging to pref_filter1: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 6ms; filterdb experiments/tmp//6404161245249296443/pref_filter1 experiments/tmp//6404161245249296443/pref_filter2 --filter-file experiments/tmp//6404161245249296443/order_redundancy . Filtering using file(s); [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_filter2: 0h 0m 0s 21ms; Time for processing: 0h 0m 0s 56ms; rescorediagonal experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_filter2 experiments/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target databas",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:9327,Performance,load,load-mode,9327,"ts/tmp//6404161245249296443/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [=================================================================] 100.00% 24.60K 0s 11ms ; Time for merging to pref_rescore2: 0h 0m 0s 19ms=================>] 99.48% 24.47K eta 0s ; Time for processing: 0h 0m 0s 59ms; align experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/pref_rescore2 experiments/tmp//6404161245249296443/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 12 --compressed 0 -v 3 . Compute score and coverage; Query database size: 24598 type: Aminoacid; Target database size: 24598 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 24.60K 0s 159ms ; Time for merging to aln: 0h 0m 0s 22ms. 25322 alignments calculated.; 24830 sequence pairs passed the thresholds (0.980570 of overall calculated).; 1.009432 hits per query sequence.; Time for processing: 0h 0m 0s 211ms; clust experiments/tmp//6404161245249296443/input_step_redundancy experiments/tmp//6404161245249296443/aln experiments/tmp//6404161245249296443/clust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 12 --compressed 0 -v 3 . Clustering mode: Set Cover; [=================================================================] 100.00% 24.60K 0s 10ms ; Sort entries",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:4012,Security,hash,hash,4012,"all50.mm.db experiments/tmp/ --min-seq-id 0.5; linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5 . MMseqs Version: 	02be0c4ea6183fce9cf45521a8c145d10f3928c1; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Threads 	12; Compressed 	0; Verbosity 	3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0.5; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:4589,Security,hash,hash-shift,4589,"	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Alphabet size 	21; K-mers per sequence 	21; scale k-mers per sequence 	0; Adjust k-mer length 	false; Mask residues 	0; Mask lower case residues 	0; K-mer size 	0; Shift hash 	5; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:5003,Security,hash,hash-shift,5003," only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	false; Force restart with latest tmp 	false; MPI runner 	. Set cluster mode SET COVER.; kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . kmermatcher experiments/small.mm.db experiments/tmp//6404161245249296443/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.5 --kmer-per-seq 21 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3 . Database size: 25000 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) . Estimated memory consumption 8 MB; Generate k-mers list for 1 split; [=================================================================] 100.00% 25.00K 0s 120ms ; Sort kmer 0h 0m 0s 37ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 219ms; rescorediagonal experiments/small.mm.db experiments/small.mm.db experiments/tmp//6404161245249296443/pref experiments/tmp//6404161245249296443/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 12 --compressed 0 -v 3 . [========================",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:1965,Testability,log,log,1965,"GAAVGYWRFRDTPIGMRYPPHLVRQLIISGLLYLVTLIGVIYLLEYNLNRSIEIILVLLPALPGIWFLVSLGRAIASLDELQRFIQLEGIAIGFGITAMAALTYGLLGMAGVPQVSWMYVPVVMVFGWFLGKMWTLWRYR*; >E6GnE9; >PYRss2; MKKAMATSKSQFKTMDEYIATFPENVRDVLEKLRRTIMESAPKAEETISYGMPAFKLNGKSLVYFAAWKNHIGFYPAGPSAIKAFKKELSPFRQAKGTIQFPLDKPIPIDLVKKIVKFRVEENESKKK*; ```. Where in original input file, we see:. ```; >PJB17I; MQKRSICVFCGASDGIDSAYGAAADTLGRLIASHKMRLVYGAGDVGLMGRVARAAQKDGAATFGVIPKHLVNWEVGKTDLTTYIITENMHERKKVMFMNSDAIALLPGGAGSLDEFFEVLTWAQLGLHDKPIVLININSYWGPLLALLDHVIAQGFAKENIKDFFQIAVTPEEAMSKLA*; ```. ... and elsewhere in file ... ```; >E6GnE9; MNNKTGIQPIDEYIAAFPEEVQEKLISIYRLIAGDVPEATVKISYGMPTFVLNGNLVHFAAFKNHIGFYPAPSGIQAFQEELAGYKTSKGAIQFPLDKPVPYELISKITAFRVAENVKNN*; ```. It seems that PJB17I should cluster with E7HKRc (they're ~50% identical) but then I would expect the output to be:. ```; >PJB17I; >PJB17I; MQKRSICVFCGASDGIDSAYGAA...; >E7HKRc; MFKRSVCVFCGSRKGRNPAHE...; ```. Based on latest documentation. ## Steps to Reproduce (for bugs). Just the commands (see full log below):. `user@user:~$ ./mmseqs/bin/mmseqs createdb experiments/small_sample.fa experiments/small.mm.db`; `user@user:~$ ./mmseqs/bin/mmseqs linclust experiments/small.mm.db experiments/small50.mm.db experiments/tmp/ --min-seq-id 0.5`; `user@user:~$ ./mmseqs/bin/mmseqs createseqfiledb experiments/small.mm.db experiments/small50.mm.db experiments/small50_seq`; `user@user:~$ ./mmseqs/bin/mmseqs result2flat experiments/small.mm.db experiments/small.mm.db experiments/small50_seq experiments/small50_seq.fa`. ## MMseqs Output (for bugs). Full session output:. ```; user@user:~$ ./mmseqs/bin/mmseqs createdb experiments/small_sample.fa experiments/small.mm.db; Converting sequences; [24948] 0s 72ms; Time for merging to small.mm.db_h: 0h 0m 0s 37ms; Time for merging to small.mm.db: 0h 0m 0s 16ms; Database type: Aminoacid; Time for merging to small.mm.db.lookup: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 204ms; user@user:~$ ./mmseqs/bin/mmseqs linclust experiments/small.mm.db experimen",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/258:23,Usability,simpl,simple,23,"Hope I am not making a simple mistake but output seems to be not what I expect. Thanks for any help. ## Expected Behavior; Fasta-formatted cluster results have output following documentation. ## Current Behavior; Fasta-formatted cluster results have empty lines that don't seem to correspond to correct clustering. Examples:. ```; >Pip8wV; >Pip8wV; MQKNLIQRYIPLSDKNWFCTGGPARFYTEPETTQEFVKSLEFANLHNLELFILGKGANILISDNGFDGLVIKPNLQQISHQDYDNDHALVHAQAGACIKDLITYCLKNNMTGPEEFSGIPGTIGGSVYINIHYFNFFLSDFLYNAQVIHKKTGDIFTVTKNWFNFGYDKSKLFEKEYFLVQATFKLKKITPIKAAYATGRSIEIIRHRNARYPNSGTCGSFFRNFLDSEVTLNIAGTEKKMIYVGYYLDKLGVKGNLNVGGASVSHKHANMIVNTNNATSTDIINLARQMQKLVQENFGITPQPECQLIGFKKYPLL*; >PJB17I; >E7HKRc; MFKRSVCVFCGSRKGRNPAHEAAATDLGTALAQNDMRLVYGAGDVGLMGAVARAAQAAGGETFGVIPDHLVKWEVGKTDLTRYIVTETMHERKKVMFMNCDAVVVLPGGAGSLDEYFEVLTWRQIGLHEKPVFLLNTEGYWTKLIHLIDHVIDEGFADASLRDYTTVVDTVQDLMDGLGATGR*; ```. and . ```; >S2LnDK; >S2LnDK; MNNKSENQSSQGDARRGMLIGMALGMGIGAVIGLVLGDISSGFIIGMGIGAAVGYWRFRDTPIGMRYPPHLVRQLIISGLLYLVTLIGVIYLLEYNLNRSIEIILVLLPALPGIWFLVSLGRAIASLDELQRFIQLEGIAIGFGITAMAALTYGLLGMAGVPQVSWMYVPVVMVFGWFLGKMWTLWRYR*; >E6GnE9; >PYRss2; MKKAMATSKSQFKTMDEYIATFPENVRDVLEKLRRTIMESAPKAEETISYGMPAFKLNGKSLVYFAAWKNHIGFYPAGPSAIKAFKKELSPFRQAKGTIQFPLDKPIPIDLVKKIVKFRVEENESKKK*; ```. Where in original input file, we see:. ```; >PJB17I; MQKRSICVFCGASDGIDSAYGAAADTLGRLIASHKMRLVYGAGDVGLMGRVARAAQKDGAATFGVIPKHLVNWEVGKTDLTTYIITENMHERKKVMFMNSDAIALLPGGAGSLDEFFEVLTWAQLGLHDKPIVLININSYWGPLLALLDHVIAQGFAKENIKDFFQIAVTPEEAMSKLA*; ```. ... and elsewhere in file ... ```; >E6GnE9; MNNKTGIQPIDEYIAAFPEEVQEKLISIYRLIAGDVPEATVKISYGMPTFVLNGNLVHFAAFKNHIGFYPAPSGIQAFQEELAGYKTSKGAIQFPLDKPVPYELISKITAFRVAENVKNN*; ```. It seems that PJB17I should cluster with E7HKRc (they're ~50% identical) but then I would expect the output to be:. ```; >PJB17I; >PJB17I; MQKRSICVFCGASDGIDSAYGAA...; >E7HKRc; MFKRSVCVFCGSRKGRNPAHE...; ```. Based on latest documentation. ## Steps to Reproduce (for bugs). Just the commands (see full log below):. `user@user:~$ ./mmseqs/",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258
https://github.com/soedinglab/MMseqs2/issues/259:771,Availability,fault,fault,771,"eotides against the PFAM profile database. ## Current Behavior; Segfault when reaching the `search` step (after `extractorfs`). ## Steps to Reproduce (for bugs); ```; module load MMseqs2/10-6d92c-foss-2018b; cd /Pfam/directory/. mmseqs convertmsa Pfam-A.full.gz pfam_msa_db; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1; mmseqs createindex pfam_profile tmp -k 6 -s 7. PFAM=""location/of/pfam_profile""; K1M=""location/of/input/fasta""; ORFS=""where/to/save/orfs""; RES=""location/of/final/result"". cd ; mmseqs createdb ${K1M} ${ORFS}; mmseqs search ${ORFS} ${PFAM} ${RES} tmp -k 5 -s 7. module unload MMseqs2/10-6d92c-foss-2018b; ```. ## MMseqs Output (for bugs); ```; Caught signal 11 (Segmentation fault: address not mapped to object at address 0x7f6b77d84270); ==== backtrace (tid: 1754) ====; 0 0x0000000000142e40 __memcpy_ssse3() :0; 1 0x00000000004d8b86 PrefilteringIndexReader::getIndexTable() ???:0; 2 0x00000000004cc0c6 Prefiltering::runSplit() ???:0; 3 0x00000000004cc90d Prefiltering::runSplits() ???:0; 4 0x00000000004cd10d Prefiltering::runMpiSplits() ???:0; 5 0x00000000004c2974 prefilter() ???:0; 6 0x000000000044a7d6 runCommand() ???:0; 7 0x0000000000442d29 main() ???:0; 8 0x0000000000021c05 __libc_start_main() ???:0; 9 0x000000000044a46c _start() ???:0; =================================; tmp/14557808422999051349/searchtargetprofile.sh: line 28: 1754 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/; ```. ## Context; I want to find candidate transcription factors in a non-model organism. By aligning translated bulk RNA-seq reads against Pfam, I hope to get matches against known transcription factor families or DNA binding domains. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: release 10-6d92c-foss-2018b; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for the runs: 1 core, 30Gb memory. CPUs support AVX2, as far as ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259
https://github.com/soedinglab/MMseqs2/issues/259:1455,Availability,fault,fault,1455,"Behavior; Segfault when reaching the `search` step (after `extractorfs`). ## Steps to Reproduce (for bugs); ```; module load MMseqs2/10-6d92c-foss-2018b; cd /Pfam/directory/. mmseqs convertmsa Pfam-A.full.gz pfam_msa_db; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1; mmseqs createindex pfam_profile tmp -k 6 -s 7. PFAM=""location/of/pfam_profile""; K1M=""location/of/input/fasta""; ORFS=""where/to/save/orfs""; RES=""location/of/final/result"". cd ; mmseqs createdb ${K1M} ${ORFS}; mmseqs search ${ORFS} ${PFAM} ${RES} tmp -k 5 -s 7. module unload MMseqs2/10-6d92c-foss-2018b; ```. ## MMseqs Output (for bugs); ```; Caught signal 11 (Segmentation fault: address not mapped to object at address 0x7f6b77d84270); ==== backtrace (tid: 1754) ====; 0 0x0000000000142e40 __memcpy_ssse3() :0; 1 0x00000000004d8b86 PrefilteringIndexReader::getIndexTable() ???:0; 2 0x00000000004cc0c6 Prefiltering::runSplit() ???:0; 3 0x00000000004cc90d Prefiltering::runSplits() ???:0; 4 0x00000000004cd10d Prefiltering::runMpiSplits() ???:0; 5 0x00000000004c2974 prefilter() ???:0; 6 0x000000000044a7d6 runCommand() ???:0; 7 0x0000000000442d29 main() ???:0; 8 0x0000000000021c05 __libc_start_main() ???:0; 9 0x000000000044a46c _start() ???:0; =================================; tmp/14557808422999051349/searchtargetprofile.sh: line 28: 1754 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/; ```. ## Context; I want to find candidate transcription factors in a non-model organism. By aligning translated bulk RNA-seq reads against Pfam, I hope to get matches against known transcription factor families or DNA binding domains. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: release 10-6d92c-foss-2018b; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for the runs: 1 core, 30Gb memory. CPUs support AVX2, as far as I can tell.; * Operating system and version: CentOS 7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259
https://github.com/soedinglab/MMseqs2/issues/259:1881,Deployability,release,release,1881,"Behavior; Segfault when reaching the `search` step (after `extractorfs`). ## Steps to Reproduce (for bugs); ```; module load MMseqs2/10-6d92c-foss-2018b; cd /Pfam/directory/. mmseqs convertmsa Pfam-A.full.gz pfam_msa_db; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1; mmseqs createindex pfam_profile tmp -k 6 -s 7. PFAM=""location/of/pfam_profile""; K1M=""location/of/input/fasta""; ORFS=""where/to/save/orfs""; RES=""location/of/final/result"". cd ; mmseqs createdb ${K1M} ${ORFS}; mmseqs search ${ORFS} ${PFAM} ${RES} tmp -k 5 -s 7. module unload MMseqs2/10-6d92c-foss-2018b; ```. ## MMseqs Output (for bugs); ```; Caught signal 11 (Segmentation fault: address not mapped to object at address 0x7f6b77d84270); ==== backtrace (tid: 1754) ====; 0 0x0000000000142e40 __memcpy_ssse3() :0; 1 0x00000000004d8b86 PrefilteringIndexReader::getIndexTable() ???:0; 2 0x00000000004cc0c6 Prefiltering::runSplit() ???:0; 3 0x00000000004cc90d Prefiltering::runSplits() ???:0; 4 0x00000000004cd10d Prefiltering::runMpiSplits() ???:0; 5 0x00000000004c2974 prefilter() ???:0; 6 0x000000000044a7d6 runCommand() ???:0; 7 0x0000000000442d29 main() ???:0; 8 0x0000000000021c05 __libc_start_main() ???:0; 9 0x000000000044a46c _start() ???:0; =================================; tmp/14557808422999051349/searchtargetprofile.sh: line 28: 1754 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/; ```. ## Context; I want to find candidate transcription factors in a non-model organism. By aligning translated bulk RNA-seq reads against Pfam, I hope to get matches against known transcription factor families or DNA binding domains. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: release 10-6d92c-foss-2018b; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): for the runs: 1 core, 30Gb memory. CPUs support AVX2, as far as I can tell.; * Operating system and version: CentOS 7",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259
https://github.com/soedinglab/MMseqs2/issues/259:238,Performance,load,load,238,"## Expected Behavior; Search a query database of translated nucleotides against the PFAM profile database. ## Current Behavior; Segfault when reaching the `search` step (after `extractorfs`). ## Steps to Reproduce (for bugs); ```; module load MMseqs2/10-6d92c-foss-2018b; cd /Pfam/directory/. mmseqs convertmsa Pfam-A.full.gz pfam_msa_db; mmseqs msa2profile pfam_msa_db pfam_profile --match-mode 1; mmseqs createindex pfam_profile tmp -k 6 -s 7. PFAM=""location/of/pfam_profile""; K1M=""location/of/input/fasta""; ORFS=""where/to/save/orfs""; RES=""location/of/final/result"". cd ; mmseqs createdb ${K1M} ${ORFS}; mmseqs search ${ORFS} ${PFAM} ${RES} tmp -k 5 -s 7. module unload MMseqs2/10-6d92c-foss-2018b; ```. ## MMseqs Output (for bugs); ```; Caught signal 11 (Segmentation fault: address not mapped to object at address 0x7f6b77d84270); ==== backtrace (tid: 1754) ====; 0 0x0000000000142e40 __memcpy_ssse3() :0; 1 0x00000000004d8b86 PrefilteringIndexReader::getIndexTable() ???:0; 2 0x00000000004cc0c6 Prefiltering::runSplit() ???:0; 3 0x00000000004cc90d Prefiltering::runSplits() ???:0; 4 0x00000000004cd10d Prefiltering::runMpiSplits() ???:0; 5 0x00000000004c2974 prefilter() ???:0; 6 0x000000000044a7d6 runCommand() ???:0; 7 0x0000000000442d29 main() ???:0; 8 0x0000000000021c05 __libc_start_main() ???:0; 9 0x000000000044a46c _start() ???:0; =================================; tmp/14557808422999051349/searchtargetprofile.sh: line 28: 1754 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/; ```. ## Context; I want to find candidate transcription factors in a non-model organism. By aligning translated bulk RNA-seq reads against Pfam, I hope to get matches against known transcription factor families or DNA binding domains. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used: release 10-6d92c-foss-2018b; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory): ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259
https://github.com/soedinglab/MMseqs2/issues/261:237,Availability,fault,fault,237,"## Expected Behavior; clusthash uses all threads and result2flat produces a complete fasta file (not ending in %) ; ## Current Behavior; clusthash seems to use only 1 of all given threads, and eventually result2flat breaks ""segmentation fault"" ; ## Steps to Reproduce (for bugs); Ran from the terminal in the same directory as a contigs fasta file (DNA) (named ""cated_sk100.fna""):; THREADS=10; mkdir resultsDB scafDB ; mmseqs createdb cated_sk100.fna scafDB/cated_sk100; mmseqs clusthash scafDB/cated_sk100 resultsDB/resultDB --min-seq-id 0.99 --threads $THREADS; mmseqs clust scafDB/cated_sk100 resultsDB/resultDB clusterDB --threads $THREADS; mmseqs result2repseq scafDB/cated_sk100 clusterDB DB_clu_rep; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header. When ""Compute 1 unique hashes."" is printed, there are 10 resultsDB files and 10 resultDB.index files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261
https://github.com/soedinglab/MMseqs2/issues/261:1663,Availability,fault,fault,1663,"DB_clu_rep; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header. When ""Compute 1 unique hashes."" is printed, there are 10 resultsDB files and 10 resultDB.index files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261
https://github.com/soedinglab/MMseqs2/issues/261:2313,Availability,error,errors,2313,"s, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; Personal machine: (48a037a2e2cf5ea140c6c5de357b7147e5310b4d); CPU: Intel Core i7-8700 6-Core model: bits: 64 type: L2 cache: 12.0 MiB ; Memory: 15.33 GB; * Operating system and version:; Personal machine: Linux Mint 19.2 Tina Kernel: 4.15.0-72-generic x86_64; ; Server: Linux 3.10.0-693.el7.x86_64. Thanks for developing and maintaining this totally amazing tool !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261
https://github.com/soedinglab/MMseqs2/issues/261:1434,Integrability,message,message,1434,"/cated_sk100; mmseqs clusthash scafDB/cated_sk100 resultsDB/resultDB --min-seq-id 0.99 --threads $THREADS; mmseqs clust scafDB/cated_sk100 resultsDB/resultDB clusterDB --threads $THREADS; mmseqs result2repseq scafDB/cated_sk100 clusterDB DB_clu_rep; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header. When ""Compute 1 unique hashes."" is printed, there are 10 resultsDB files and 10 resultDB.index files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Yo",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261
https://github.com/soedinglab/MMseqs2/issues/261:3027,Performance,cache,cache,3027,"s, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; Personal machine: (48a037a2e2cf5ea140c6c5de357b7147e5310b4d); CPU: Intel Core i7-8700 6-Core model: bits: 64 type: L2 cache: 12.0 MiB ; Memory: 15.33 GB; * Operating system and version:; Personal machine: Linux Mint 19.2 Tina Kernel: 4.15.0-72-generic x86_64; ; Server: Linux 3.10.0-693.el7.x86_64. Thanks for developing and maintaining this totally amazing tool !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261
https://github.com/soedinglab/MMseqs2/issues/261:1846,Safety,redund,redundancy,1846," files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261
https://github.com/soedinglab/MMseqs2/issues/261:2376,Safety,predict,predictor,2376,"s, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file. This fasta file size <1gb but I first tried to run this process on a >80gb file on remote compute node and was concerned when I saw the job was using only a small part of the resources.; Not part of this issue but realted; also tried to do the same thing with a large protein file but I get invalid fasta entry errors (maybe because of the ""*"" marking STOPs left by the ORF predictor, but that wouldn't happen in the nucleic acid file example above). ## Your Environment; * Git commit used:; I tried on my personal machine and a compute node (PBS), similar behaviour in both. ; Personal machine MMseqs2 Version: 48a037a2e2cf5ea140c6c5de357b7147e5310b4d.; Server MMseqs2 Version: 2a8c5f00f820c5c9a577676707095ef17bcff04a.; * Which MMseqs version was used: Statically-compiled; * Server specifications:; Server: (2a8c5f00f820c5c9a577676707095ef17bcff04a); CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; Personal machine: (48a037a2e2cf5ea140c6c5de357b7147e5310b4d); CPU: Intel Core i7-8700 6-Core model: bits: 64 type: L2 cache: 12.0 MiB ; Memory: 15.33 GB; * Operating system and version:; Personal machine: Linux Mint 19.2 Tina Kernel: 4.15.0-72-generic x86_64; ; Server: Linux 3.10.0-693.el7.x86_64. Thanks for developing and maintaining this totally amazing tool !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261
https://github.com/soedinglab/MMseqs2/issues/261:835,Security,hash,hashes,835,"## Expected Behavior; clusthash uses all threads and result2flat produces a complete fasta file (not ending in %) ; ## Current Behavior; clusthash seems to use only 1 of all given threads, and eventually result2flat breaks ""segmentation fault"" ; ## Steps to Reproduce (for bugs); Ran from the terminal in the same directory as a contigs fasta file (DNA) (named ""cated_sk100.fna""):; THREADS=10; mkdir resultsDB scafDB ; mmseqs createdb cated_sk100.fna scafDB/cated_sk100; mmseqs clusthash scafDB/cated_sk100 resultsDB/resultDB --min-seq-id 0.99 --threads $THREADS; mmseqs clust scafDB/cated_sk100 resultsDB/resultDB clusterDB --threads $THREADS; mmseqs result2repseq scafDB/cated_sk100 clusterDB DB_clu_rep; mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header. When ""Compute 1 unique hashes."" is printed, there are 10 resultsDB files and 10 resultDB.index files, however, only one (resultDB.index.7) is getting larger with time (and is > 0 in size). Meanwhile only one thread seems to be utilized (around 8% of the total 10 threads given).; When the clusthash finishes there is one resultsDB.index file, and 10 resultsDB files, 8 with zero size, and resultsDB.index7 and resultsDB.index both with the same size). After this, the process breaks in the last command: ; `mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header`; With the message:; `result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep scafs_reps.fasta --use-fasta-header . MMseqs Version: 	48a037a2e2cf5ea140c6c5de357b7147e5310b4d; Use fasta header	true; Verbosity 	3. [1] 18252 segmentation fault (core dumped) mmseqs result2flat scafDB/cated_sk100 scafDB/cated_sk100 DB_clu_rep`. ## MMseqs Output (for bugs); Which output should I upload?. ## Context; I'm trying to remove redundancy by collapsing sequences that are either highly similar (99%) or are also contained within longer sequences from other fasta entries in the file.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261
https://github.com/soedinglab/MMseqs2/issues/262:707,Availability,error,errors,707,"I wonder if it would make more sense for the help string for mergedbs to read ... ```; Usage: mmseqs mergedbs <i:sequenceDB> <o:resultDB> <i:sequenceDB2> ... <i:sequenceDBn> [options]; ```. instead of the way it does as follows:; ```; [saladi@brnode06]~/get3_history/queryseqs% mmseqs mergedbs -h; Usage: mmseqs mergedbs <i:sequenceDB> <o:resultDB> <i:resultDB1> ... <i:resultDBn> [options]. Merge multiple DBs into a single DB, based on IDs (names) of entries; By Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Options:; Misc:; --prefixes STR Comma separated list of prefixes for each entry []. Common:; --compressed INT write results in compressed format [0]; -v INT verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info [3]; ```. ```; [saladi@brnode06]~/get3_history/queryseqs% mmseqs version; f644744a81f751d49cb6908b93a16722f5c6d489; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/262
https://github.com/soedinglab/MMseqs2/pull/263:109,Usability,clear,clearer,109,"I was a little confused by the way the description for `--idx-entry-type` was written. I think this makes it clearer. I'm actually not quite sure what the difference between `sequence` vs `src sequence` and `header` vs `src header`. Though I haven't looked closely at the docs either, so that's probably on me...",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/263
https://github.com/soedinglab/MMseqs2/issues/265:955,Availability,error,error,955,"ther, it didn't work out (I don't know if size was the issue, but I was in a hurry), so I split the file in two and clustered each separately (that worked). I then combined two outputs (*rep_seq.fasta) into a single file that I wanted to cluster once more (cca 75 mil sequences). However, it always dies in the same way, although I tried changing memory settings and threads. This file is not bigger than the previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265
https://github.com/soedinglab/MMseqs2/issues/265:2314,Availability,Error,Error,2314," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265
https://github.com/soedinglab/MMseqs2/issues/265:2342,Availability,Error,Error,2342," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265
https://github.com/soedinglab/MMseqs2/issues/265:647,Deployability,install,installed,647,"Hi,. I have quite a big number of protein sequences that I want to cluster. I tried to cluster them together, it didn't work out (I don't know if size was the issue, but I was in a hurry), so I split the file in two and clustered each separately (that worked). I then combined two outputs (*rep_seq.fasta) into a single file that I wanted to cluster once more (cca 75 mil sequences). However, it always dies in the same way, although I tried changing memory settings and threads. This file is not bigger than the previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 21474836",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265
https://github.com/soedinglab/MMseqs2/issues/265:1819,Integrability,wrap,wrapped-scoring,1819," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265
https://github.com/soedinglab/MMseqs2/issues/265:2119,Modifiability,extend,extend,2119," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265
https://github.com/soedinglab/MMseqs2/issues/265:2054,Performance,load,load-mode,2054," previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as used for previous clustering, the file is not bigger, I have no idea what is the issue. Any help is appreciated, thanks,; G",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265
https://github.com/soedinglab/MMseqs2/issues/265:1344,Safety,Abort,Aborted,1344,"er, it always dies in the same way, although I tried changing memory settings and threads. This file is not bigger than the previous ones.; All the sequence names are unique. MMseqs2 Version: 102e4299ba2788f492a9212c777ca09f6d6ea0f0; (I don't remember how I installed it, I think with cmake). Command:; mmseqs easy-linclustallMG_plass_rep.fasta allMG_plass_comb_minid90_cm1_c90 tmpP --min-seq-id 0.9 --threads 22 --kmer-per-seq 80 --cluster-mode 2 --cov-mode 1 -c 0.9 --split-memory-limit 150G. Output:; stderr:; terminate called after throwing an instance of 'Sls::error'; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; terminate called recursively; tmpP/10678025033020444421/clu_tmp/1344998481088077811/linclust.sh: line 75: 6661 Aborted $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}. stdout:; align tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 2 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.9 --cov-mode 1 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 22 --compressed 0 -v 3 . Compute score and coverage; Query database size: 77815083 type: Aminoacid; Target database size: 77815083 type: Aminoacid; Calculation of alignments; [Error: Alignment step died; Error: Search died. The command is the same as u",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265
https://github.com/soedinglab/MMseqs2/issues/266:713,Performance,perform,performed,713,"Dear MMseqs2 team,. I got some wired results which I could not explain by myself. I hope you can help me with it. ## Expected Behavior; I was expecting MMseqs2 to be more sensitive if using default options (*spaced-kmer-mode* enabled and *kmer-matching* disabled). ## Current Behavior; Using MMseqs2 search with default options (*spaced-kmer-mode* enabled and *kmer-matching* disabled), the program found less results than if disabling *spaced-kmer-mode* and enabling *kmer-matching*. ## Context; I thought that MMseqs2 uses spaced seeds and no exact k-mer matching to increase the sensitivity during search. I was curious to see how many alignments are found by MMseqs2 exclusively because of this. Therefore, I performed two searches with MMseqs2 search either using spaced seeds and no exact k-mer matching or the opposite. Surprisingly, I looks like using no spaced seeds and an exact k-mer matching increases the programs sensitivity as there are more results found. Do you have an explanation for this results?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/266
https://github.com/soedinglab/MMseqs2/issues/267:585,Safety,avoid,avoid,585,"I will appreciate if you can help me with a couple of questions regarding; MMseqs2. I've been running it using both approaches, for the alignment against; sequence dbs (mmseq search -> convertalis) and for the taxonomical binning; (mmseq taxonomy -> taxonomyreport), either with a single sequences set or; multiple sets after de-multiplexing barcodes from sequencing run. * The first question is if it is possible to get a taxonomy report directly from; ""search"" option or the other way around, say here get search alignments (or; convertalis-like) from ""taxonomy"" option, in order to avoid two runs of mmseqs; (one for search and one for taxonomy).; * The second question relates to merging the mmseq output, either from search or; taxonomy options, after running mmseqs2 separately on each sequence bin. Is it; possible to get convertalis or taxonomyreport from the output from several; mmseqs ""search"" or ""taxonomy"" runs?. Thanks for your assistance on those questions... Josep F. ## Environment. * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; MMseqs2 from github, version: 5fcc48fbf4f6697e73e1e2a4b3f53c6cdf87e8f1; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; 4 AMD Opteron 6386 SE (avx/sse4_1/sse4_2), 64 cores, 512GB RAM; * Operating system and version:; Linux 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1+deb9u5 (2019-08-11)",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/267
https://github.com/soedinglab/MMseqs2/issues/268:1313,Deployability,install,install,1313,"## Expected Behavior; Using these lines I tried to create a tsv file containing all alignment details for all clustered sequences, including the singletons:. ```; mmseqs cluster sequenceDB resultDb tmp; mmseqs createtsv sequenceDB sequenceDB resultDb resultDb.tsv; mmseqs align sequenceDB sequenceDB resultDb alignDB -a --add-self-matches; mmseqs convertalis sequenceDB sequenceDB alignDB alignDB.tsv; ```. ## Current Behavior; Looking at the resultDb.tsv file and the alignDB.tsv files I see differences between the number of sequences in the former compared to the latter. The resultDb.tsv contains all parent-child combinations for all sequences that I used to cluster, which is what I expect. However, the alignDB.tsv file contains far less alignment details. At first I thought that the singletons were left out, but that doesn't seem to be the case. Am I missing something? Or is this a bug?. ## Steps to Reproduce (for bugs); ```; mmseqs createdb /mmseqs/examples/DB.fasta DB; mmseqs cluster DB resultDB tmp; mmseqs createtsv DB DB resultDB resultDB.tsv; mmseqs align DB DB resultDB alignDB -a --add-self-matches; mmseqs convertalis DB DB alignDB alignDB.tsv; wc -l alignDB.tsv; > 19924; wc -l resultDB.tsv; > 20000; ```. ## Environment; MMseqs2 Version: ""c5ebe52978a9e944d73bad70cfb538c91309dd8e""; Statcs install AVX2 for linux; Server supports AVX2, 64 cpu's 500G memory; Operating System: CentOS Linux 7 (Core) CPE OS Name: cpe:/o:centos:centos:7 Kernel: Linux 3.10.0-1062.4.1.el7.x86_64 Architecture: x86-64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268
https://github.com/soedinglab/MMseqs2/issues/269:406,Availability,avail,available,406,"Hi; we are continuously updating a large cluster DB with new data, and one of the steps that are taking longer is when the new sequences are updated with the old keys using the function `joinAndReplace`. We are using this function for other purposes and we added to the sorting parts `--parallel` and `--buffer-size` to speed up and reduce the I/O needed for the sorting. I think it would be great to have available these options if `sort` is modern enough and fallback to the original `joinAndReplace` if `sort` doesn't support these options. What do you think?. Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269
https://github.com/soedinglab/MMseqs2/issues/269:11,Deployability,continuous,continuously,11,"Hi; we are continuously updating a large cluster DB with new data, and one of the steps that are taking longer is when the new sequences are updated with the old keys using the function `joinAndReplace`. We are using this function for other purposes and we added to the sorting parts `--parallel` and `--buffer-size` to speed up and reduce the I/O needed for the sorting. I think it would be great to have available these options if `sort` is modern enough and fallback to the original `joinAndReplace` if `sort` doesn't support these options. What do you think?. Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269
https://github.com/soedinglab/MMseqs2/issues/269:141,Deployability,update,updated,141,"Hi; we are continuously updating a large cluster DB with new data, and one of the steps that are taking longer is when the new sequences are updated with the old keys using the function `joinAndReplace`. We are using this function for other purposes and we added to the sorting parts `--parallel` and `--buffer-size` to speed up and reduce the I/O needed for the sorting. I think it would be great to have available these options if `sort` is modern enough and fallback to the original `joinAndReplace` if `sort` doesn't support these options. What do you think?. Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269
https://github.com/soedinglab/MMseqs2/issues/269:333,Energy Efficiency,reduce,reduce,333,"Hi; we are continuously updating a large cluster DB with new data, and one of the steps that are taking longer is when the new sequences are updated with the old keys using the function `joinAndReplace`. We are using this function for other purposes and we added to the sorting parts `--parallel` and `--buffer-size` to speed up and reduce the I/O needed for the sorting. I think it would be great to have available these options if `sort` is modern enough and fallback to the original `joinAndReplace` if `sort` doesn't support these options. What do you think?. Antonio",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/269
https://github.com/soedinglab/MMseqs2/issues/270:37,Safety,predict,predictions,37,"## Expected Behavior. I'm using gene predictions form Refseq. They unified the gene names, so that the same gene in different genomes has the same name, e.g. `WP_012419350.1`. Now I can pass this perfectly trough linclust, createtsv and result2repseq . The two identical proteins get clustered to the same cluster. And some end up as cluster representative. Which then put them multiple times in the `result2flat` output. . I wondered if mmseqs uses the sequence names, what if the sequences are different but the names are the same?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/270
https://github.com/soedinglab/MMseqs2/issues/271:34,Availability,down,download,34,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271
https://github.com/soedinglab/MMseqs2/issues/271:128,Availability,error,error,128,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271
https://github.com/soedinglab/MMseqs2/issues/271:580,Availability,error,error,580,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271
https://github.com/soedinglab/MMseqs2/issues/271:134,Integrability,message,message,134,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271
https://github.com/soedinglab/MMseqs2/issues/271:586,Integrability,message,message,586,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271
https://github.com/soedinglab/MMseqs2/issues/271:404,Testability,test,testdb,404,"## Expected Behavior; I try to do download database but the commande line give in the manual doesn't work. ## Current Behavior; error message : ; ' Invalid Command: databases; Did you mean ""mmseqs clusterupdate""? '. ## Steps to Reproduce (for bugs); Please make sure to execute the reproduction steps with newly recreated and empty tmp folders.; i use this line :; 'mmseqs databases UniProtKB/Swiss-Prot testdb/swissprot tmp'. ## MMseqs Output (for bugs); Please make sure to also post the complete output of MMseqs. You can use gist.github.com for large output.; no output, just error message; ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; * Operating system and version:",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271
https://github.com/soedinglab/MMseqs2/issues/272:269,Availability,error,error,269,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/272:526,Availability,Error,Error,526,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/272:1177,Availability,error,error,1177,"ut when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/272:1479,Availability,Error,Error,1479,"e? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment. * _Git commit used:_ 2f66ae897fc813450fa5ef0c78123bd3c41c4717; * _Which MMseqs version was used_: Compilation from source; * _Cmake versions used_: cmake version 3.5.1; * Op",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/272:32,Deployability,update,update,32,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/272:68,Deployability,update,update,68,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/272:704,Deployability,update,updated,704,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/272:1093,Deployability,update,update,1093,"ut when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/272:275,Integrability,message,message,275,"## Expected Behavior; I want to update my clusters after a database update (in which I add new sequences but also delete sequences compared to the old database). ; The clusterupdate command works, but when I try to convert the cluster database to a tsv file, I have an error message related to the index (see below). I tried the same thing on a new database where I just added sequences and it worked perfectly, so I assume the problem comes from the fact that I remove sequences from the old database? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result data",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/272:1485,Integrability,message,message,1485,"e? . ## Current Behavior; Error when trying to generate the tsv file. ; In the cluster database obtained after clusterupdate ('CLU_updated') the removed sequences still appear, but they are absent of the updated sequence database ('DB_updated'). ## Steps to Reproduce (for bugs); 1) Creation of old DB (oldDB.fa : 17 amino acid sequences); ` mmseqs createdb oldDB.fa DB_old`; 2) Clustering of old DB; `mmseqs cluster DB_old CLU_old tmp`. 3) Creation of new DB (newDB.fa : 13 sequences are identical with the old DB, 4 were removed, 4 were added); `mmseqs createdb newDB.fa DB_new`; 4) Cluster update; `mmseqs clusterupdate DB_old DB_new CLU_old DB_updated CLU_updated tmp`; No error there, but even though sequences of numeric identifiers 12 , 11 , 16 , 15 in the old db have been removed, they appear in the CLU_updated file. They do not appear in the DB_updated files. 5) Conversion of cluster DB in tsv :; `mmseqs createtsv DB_updated DB_updated CLU_updated clusters.tsv`; => Error message, generation of empty files : clusters.tsv.1 ... clusters.tsv.7 and clusters.tsv.index.1 ... clusters.tsv.index.7. ## MMseqs Output (for bugs); ```; Program call:; createtsv DB_updated DB_updated CLU_updated clusters.tsv . MMseqs Version: 	2f66ae897fc813450fa5ef0c78123bd3c41c4717; first sequence as respresentative	false; Target column 	1; Add Full Header 	false; Database Output 	false; Threads 	8; Compressed 	0; Verbosity 	3. Query database: DB_updated; Touch data file DB_updated_h ... Done.; Result database: CLU_updated; Start writing to clusters.tsv; Invalid database read for database data file=DB_updated_h, database index=DB_updated_h.index; getData: local id (4294967295) >= db size (17); ```. ## Context; Providing context helps us come up with a solution and improve our documentation for the future. ## Your Environment. * _Git commit used:_ 2f66ae897fc813450fa5ef0c78123bd3c41c4717; * _Which MMseqs version was used_: Compilation from source; * _Cmake versions used_: cmake version 3.5.1; * Op",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272
https://github.com/soedinglab/MMseqs2/issues/273:358,Availability,error,error,358,"## Expected Behavior; I try to use easy-linsearch and linsearch but both have same issue : empty files; First, I have try easy-linsearch with the line :; ""$ mmseqs easy-linsearch /work/cbelliardo/6-ensembl_clust/metag_G-rosea.fa /bighub/hub/DB/mmseq_swissprot/swissprot out tmp --search-type 2 -v 3 --threads 8""; but the output ( out file ) is empty without error message. Then i have try whit linsearch cmd.; $ mmseqs createdb metag_G-rosea.fa queryDB; $ mmseqs linsearch queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB tmp; $ mmseqs convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 ; I have the same issue. . The metag_G-rosea.fa file is a fasta file with 80 charactere by line. I have try with search and it's work really well. so, the file seems to be ok. ## MMseqs Output (for bugs); createdb metag_G-rosea.fa queryDB . MMseqs Version: 	10.6d92c; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [; Time for merging into queryDB_h by mergeResults: 0h 0m 0s 107ms; Time for merging into queryDB by mergeResults: 0h 0m 0s 116ms; Time for merging into queryDB.lookup by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 479ms; Tmp tmp folder does not exist or is not a directory.; extractorfs queryDB tmp/2730103712073724212/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames; 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 101 0s 57ms; Time for merging into tmp/2730103712073724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:2270,Availability,mask,mask,2270,"esults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 479ms; Tmp tmp folder does not exist or is not a directory.; extractorfs queryDB tmp/2730103712073724212/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames; 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 101 0s 57ms; Time for merging into tmp/2730103712073724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa by mergeResults: 0h 0m 0s 182ms; Time for processing: 0h 0m 0s 869ms; kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:2615,Availability,mask,mask,2615,"-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 101 0s 57ms; Time for merging into tmp/2730103712073724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa by mergeResults: 0h 0m 0s 182ms; Time for processing: 0h 0m 0s 869ms; kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/reverse_ungapaln --sub-mat nucl:nucleotide.out; ,aa:blosum62.out --rescore-mode 2 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:7861,Deployability,install,install,7861,"=============================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 2ms; Writing results to: resultDB; ==[===============================================================] 101 0s 3ms. Time for merging into resultDB by mergeResults: 0h 0m 0s 169ms; Time for processing: 0h 0m 1s 64ms; convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 . MMseqs Version: 	10.6d92c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	64; Compressed 	0; Verbosity 	3. [=================================================================] 101 0s 8ms; Time for merging into resultDB.m8 by mergeResults: 0h 0m 0s 160ms; Time for processing: 0h 0m 1s 306ms. ## Context; There is no informations in the manual about this cmd, maybe i miss up some steps . ## Your Environment; I use the version 10.6d92c install with conda. * Server specifications; 512 GO RAM; 64 CPU. * Operating system and version: linux last release. Thanks a lot for your help !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:7969,Deployability,release,release,7969,"=============================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 2ms; Writing results to: resultDB; ==[===============================================================] 101 0s 3ms. Time for merging into resultDB by mergeResults: 0h 0m 0s 169ms; Time for processing: 0h 0m 1s 64ms; convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 . MMseqs Version: 	10.6d92c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	64; Compressed 	0; Verbosity 	3. [=================================================================] 101 0s 8ms; Time for merging into resultDB.m8 by mergeResults: 0h 0m 0s 160ms; Time for processing: 0h 0m 1s 306ms. ## Context; There is no informations in the manual about this cmd, maybe i miss up some steps . ## Your Environment; I use the version 10.6d92c install with conda. * Server specifications; 512 GO RAM; 64 CPU. * Operating system and version: linux last release. Thanks a lot for your help !",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:2777,Energy Efficiency,consumption,consumption,2777,"73724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa by mergeResults: 0h 0m 0s 182ms; Time for processing: 0h 0m 0s 869ms; kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/reverse_ungapaln --sub-mat nucl:nucleotide.out; ,aa:blosum62.out --rescore-mode 2 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed; 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; [=================================================================] 323 0s 253ms; Time for mergin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:2795,Energy Efficiency,Reduce,Reduced,2795,"73724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa by mergeResults: 0h 0m 0s 182ms; Time for processing: 0h 0m 0s 869ms; kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . kmersearch tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/search/pref --seed-sub-mat nucl:nucleotide.out,aa:blosum62.out --kmer-per-seq 21 --mask 0 --ma; sk-lower-case 0 --cov-mode 0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/reverse_ungapaln --sub-mat nucl:nucleotide.out; ,aa:blosum62.out --rescore-mode 2 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed; 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; [=================================================================] 323 0s 253ms; Time for mergin",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:364,Integrability,message,message,364,"## Expected Behavior; I try to use easy-linsearch and linsearch but both have same issue : empty files; First, I have try easy-linsearch with the line :; ""$ mmseqs easy-linsearch /work/cbelliardo/6-ensembl_clust/metag_G-rosea.fa /bighub/hub/DB/mmseq_swissprot/swissprot out tmp --search-type 2 -v 3 --threads 8""; but the output ( out file ) is empty without error message. Then i have try whit linsearch cmd.; $ mmseqs createdb metag_G-rosea.fa queryDB; $ mmseqs linsearch queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB tmp; $ mmseqs convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 ; I have the same issue. . The metag_G-rosea.fa file is a fasta file with 80 charactere by line. I have try with search and it's work really well. so, the file seems to be ok. ## MMseqs Output (for bugs); createdb metag_G-rosea.fa queryDB . MMseqs Version: 	10.6d92c; Max sequence length 	65535; Split seq. by length 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. Assuming DNA database, forcing parameter --dont-split-seq-by-len true; Converting sequences; [; Time for merging into queryDB_h by mergeResults: 0h 0m 0s 107ms; Time for merging into queryDB by mergeResults: 0h 0m 0s 116ms; Time for merging into queryDB.lookup by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 479ms; Tmp tmp folder does not exist or is not a directory.; extractorfs queryDB tmp/2730103712073724212/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames; 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --threads 64 --compressed 0 -v 3 . [=================================================================] 101 0s 57ms; Time for merging into tmp/2730103712073724212/q_orfs_aa_h by mergeResults: 0h 0m 0s 174ms; Time for merging into tmp/2730103712073724212/q_orfs_aa b",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:4961,Modifiability,extend,extend,4961,"h 0m 0s 177ms; Time for processing: 0h 0m 0s 855ms; filterdb tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/pref_filter --filter-file tmp/2730103712073724212/search/reverse_ungapaln --positive-filter 0 . Filtering with filter files.; [=================================================================] 323 0s 12ms; Time for merging into tmp/2730103712073724212/search/pref_filter by mergeResults: 0h 0m 0s 171ms; Time for processing: 0h 0m 0s 397ms; align /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref_filter tmp/2730103712073724212/search/reverse_aln --sub-mat nucl:nucleotide.out,aa:blos; um62.out -a 0 --alignment-mode 2 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offse",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:5829,Modifiability,extend,extend,5829,"47483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offsets.; [=================================================================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:3687,Performance,load,load-mode,3687,"0 -c 0 --max-seq-len 65535 --pick-n-sim-kmer 1 --split-memory-limit 0 --threads 64 --compressed 0 -v 3 . Estimated memory consumption 4 MB; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X) ; Process file into 1 parts; Generate k-mers list 0; [=================================================================] 14.93K 0s 32ms. Time for fill: 0h 0m 0s 35ms; Sort kmer ... Time for sort: 0h 0m 0s 39ms; Time to find k-mers: 0h 0m 0s 608ms; Time to sort: 0h 0m 0s 0ms; Time for merging into tmp/2730103712073724212/search/pref by mergeResults: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 729ms; rescorediagonal /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/reverse_ungapaln --sub-mat nucl:nucleotide.out; ,aa:blosum62.out --rescore-mode 2 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 64 --compressed; 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; [=================================================================] 323 0s 253ms; Time for merging into tmp/2730103712073724212/search/reverse_ungapaln by mergeResults: 0h 0m 0s 177ms; Time for processing: 0h 0m 0s 855ms; filterdb tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/pref_filter --filter-file tmp/2730103712073724212/search/reverse_ungapaln --positive-filter 0 . Filtering with filter files.; [=================================================================] 323 0s 12ms; Time for merging into tmp/2730103712073724212/search/pref_filter by mergeResults: 0h 0m 0s 171ms; Time for processing: 0h 0m 0s 397ms; align /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref_filter tmp/2730103712073724212/search/reverse_aln --sub-mat nucl:nucleotide.out,aa:blos; um62.out ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:4896,Performance,load,load-mode,4896,"x: :; [=================================================================] 323 0s 253ms; Time for merging into tmp/2730103712073724212/search/reverse_ungapaln by mergeResults: 0h 0m 0s 177ms; Time for processing: 0h 0m 0s 855ms; filterdb tmp/2730103712073724212/search/pref tmp/2730103712073724212/search/pref_filter --filter-file tmp/2730103712073724212/search/reverse_ungapaln --positive-filter 0 . Filtering with filter files.; [=================================================================] 323 0s 12ms; Time for merging into tmp/2730103712073724212/search/pref_filter by mergeResults: 0h 0m 0s 171ms; Time for processing: 0h 0m 0s 397ms; align /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/pref_filter tmp/2730103712073724212/search/reverse_aln --sub-mat nucl:nucleotide.out,aa:blos; um62.out -a 0 --alignment-mode 2 -e 100000 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:5871,Performance,load,load-mode,5871,"47483647 --max-accept 2; 147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Compute score and coverage; Query database size: 561568 type: Aminoacid; Target database size: 14926 type: Aminoacid; Calculation of alignments; [=================================================================] 323 0s 62ms; Time for merging into tmp/2730103712073724212/search/reverse_aln by mergeResults: 0h 0m 0s 109ms. 335 alignments calculated.; 323 sequence pairs passed the thresholds (0.964179 of overall calculated).; 1.000000 hits per query sequence.; Time for processing: 0h 0m 0s 427ms; swapresults /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offsets.; [=================================================================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/273:6676,Performance,load,load-mode,6676,"073724212/q_orfs_aa tmp/2730103712073724212/search/reverse_aln tmp/2730103712073724212/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out ; -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 64 --compressed 0 --db-load-mode 0 -v 3 . Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing offsets.; [=================================================================] 323 0s 3ms. Reading results.; [=================================================================] 323 0s 0ms. Output database: tmp/2730103712073724212/aln; [=================================================================] 14.93K 0s 154ms. Time for merging into tmp/2730103712073724212/aln by mergeResults: 0h 0m 0s 147ms; Time for processing: 0h 0m 0s 394ms; offsetalignment queryDB tmp/2730103712073724212/q_orfs_aa /bighub/hub/DB/mmseq_swissprot/swissprot.linidx /bighub/hub/DB/mmseq_swissprot/swissprot.linidx tmp/2730103712073724212/aln resultDB --chain-alignments 0; --merge-query 1 --search-type 0 --threads 64 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 10.6d92c; ScoreMatrix: :; Computing ORF lookup; Computing contig offsets; Computing contig lookup; Time for contig lookup: 0h 0m 0s 2ms; Writing results to: resultDB; ==[===============================================================] 101 0s 3ms. Time for merging into resultDB by mergeResults: 0h 0m 0s 169ms; Time for processing: 0h 0m 1s 64ms; convertalis queryDB /bighub/hub/DB/mmseq_swissprot/swissprot resultDB resultDB.m8 . MMseqs Version: 	10.6d92c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	11; Gap extension cost 	1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	64; Compressed 	0; Verbosity 	3. [=================================================================] 101 0s 8ms; Time for merging into res",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273
https://github.com/soedinglab/MMseqs2/issues/274:482,Availability,Error,Error,482,"## Expected Behavior; mmseqs2 successfully linclust a 49 sequence protein fasta. ## Current Behavior; mmseqs2 complain Kmer array overflow. ## Steps to Reproduce (for bugs); ```bash; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs createdb DB.fasta DB -v 1; mkdir tmp; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs linclust DB DB_clu tmp -c 0.9 --cov-mode 1 --threads 1 -v 1; ```. ## MMseqs Output (for bugs); ```; Kmer array overflow. currKmerArrayOffset=0, kmerBufferPos=1024, kmerArraySize=1024.; Error: kmermatcher died; ```. ## Context; The input file DB.fasta and all intermediate files are attached.; [linclust_3300021621.zip](https://github.com/soedinglab/MMseqs2/files/4199615/linclust_3300021621.zip). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; ``MMseqs2 Version: 481696b5f426f991211894d8a855bf9d60065c8f``; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt; * Operating system and version:; ```; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274
https://github.com/soedinglab/MMseqs2/issues/274:1826,Deployability,release,release,1826,"## Expected Behavior; mmseqs2 successfully linclust a 49 sequence protein fasta. ## Current Behavior; mmseqs2 complain Kmer array overflow. ## Steps to Reproduce (for bugs); ```bash; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs createdb DB.fasta DB -v 1; mkdir tmp; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs linclust DB DB_clu tmp -c 0.9 --cov-mode 1 --threads 1 -v 1; ```. ## MMseqs Output (for bugs); ```; Kmer array overflow. currKmerArrayOffset=0, kmerBufferPos=1024, kmerArraySize=1024.; Error: kmermatcher died; ```. ## Context; The input file DB.fasta and all intermediate files are attached.; [linclust_3300021621.zip](https://github.com/soedinglab/MMseqs2/files/4199615/linclust_3300021621.zip). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; ``MMseqs2 Version: 481696b5f426f991211894d8a855bf9d60065c8f``; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt; * Operating system and version:; ```; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274
https://github.com/soedinglab/MMseqs2/issues/274:1851,Deployability,Release,Release,1851,"## Expected Behavior; mmseqs2 successfully linclust a 49 sequence protein fasta. ## Current Behavior; mmseqs2 complain Kmer array overflow. ## Steps to Reproduce (for bugs); ```bash; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs createdb DB.fasta DB -v 1; mkdir tmp; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs linclust DB DB_clu tmp -c 0.9 --cov-mode 1 --threads 1 -v 1; ```. ## MMseqs Output (for bugs); ```; Kmer array overflow. currKmerArrayOffset=0, kmerBufferPos=1024, kmerArraySize=1024.; Error: kmermatcher died; ```. ## Context; The input file DB.fasta and all intermediate files are attached.; [linclust_3300021621.zip](https://github.com/soedinglab/MMseqs2/files/4199615/linclust_3300021621.zip). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; ``MMseqs2 Version: 481696b5f426f991211894d8a855bf9d60065c8f``; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt; * Operating system and version:; ```; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274
https://github.com/soedinglab/MMseqs2/issues/274:1459,Energy Efficiency,monitor,monitor,1459,"## Expected Behavior; mmseqs2 successfully linclust a 49 sequence protein fasta. ## Current Behavior; mmseqs2 complain Kmer array overflow. ## Steps to Reproduce (for bugs); ```bash; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs createdb DB.fasta DB -v 1; mkdir tmp; ~/seqdb/JGI/script/mmseqs2/bin/mmseqs linclust DB DB_clu tmp -c 0.9 --cov-mode 1 --threads 1 -v 1; ```. ## MMseqs Output (for bugs); ```; Kmer array overflow. currKmerArrayOffset=0, kmerBufferPos=1024, kmerArraySize=1024.; Error: kmermatcher died; ```. ## Context; The input file DB.fasta and all intermediate files are attached.; [linclust_3300021621.zip](https://github.com/soedinglab/MMseqs2/files/4199615/linclust_3300021621.zip). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters):; ``MMseqs2 Version: 481696b5f426f991211894d8a855bf9d60065c8f``; * Which MMseqs version was used (Statically-compiled, self-compiled, Homebrew, etc.):; https://mmseqs.com/latest/mmseqs-linux-sse41.tar.gz; * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt; * Operating system and version:; ```; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274
https://github.com/soedinglab/MMseqs2/issues/277:172,Testability,benchmark,benchmark,172,"## Expected Behavior; You run the same command with 1, 2 or more cores, and the outputfile is the same.; ## Current Behavior; The output file slightly differs. For a small benchmark, I ran blast, diamond and mmseqs with 1, 2 and 3 cores. While blast and diamond produce files with identical MD5 values, mmseqs does not. I checked further if maybe the order of the output is different, but the actual output is slightly different.; In 2 cases I get 162855 lines, in one case 162854 lines. In all combinations 162850 lines are identical, the remaining 4-5 lines are not.; All these hits are in the lower identity range. ## Steps to Reproduce (for bugs); Run a search with 1 or 2 cores.; EDIT: I can't provide the used database, since it's a non-public in-house database.; EDIT2: Does not always seem to happen though :/. ## Your Environment; MMseqs2 Version: 10.6d92c; Intel(R) Xeon(R) CPU E5-2609 v3 @ 1.90GHz; Ubuntu 18.04.4 LTS",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277
https://github.com/soedinglab/MMseqs2/issues/278:10,Availability,down,downloaded,10,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:2650,Availability,Mask,Mask,2650,"S/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false; LCA ranks; Taxon blacklist 12908,28384; Show taxonomic lineage false; LCA mode 4; Taxonomy output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:2667,Availability,Mask,Mask,2667,"S/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false; LCA ranks; Taxon blacklist 12908,28384; Show taxonomic lineage false; LCA mode 4; Taxonomy output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:2859,Availability,Mask,Mask,2859," backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Omit consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Disk space limit 0; MPI runner; Force restart with latest tmp false; Remove temporary files false; LCA ranks; Taxon blacklist 12908,28384; Show taxonomic lineage false; LCA mode 4; Taxonomy output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:4496,Availability,mask,mask,4496,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:4505,Availability,mask,mask-lower-case,4505,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:72,Deployability,pipeline,pipeline,72,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:470,Energy Efficiency,efficient,efficient,470,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:4956,Energy Efficiency,consumption,consumption,4956,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:1904,Integrability,wrap,wrapped,1904,"mseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; zdrop 40; Threads 8; Compressed 0; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern; Local temporary path; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile e-value threshold 0.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:4594,Performance,load,load-mode,4594,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:5079,Performance,optimiz,optimize,5079,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:195,Safety,Avoid,Avoid,195,"Hello,. I downloaded and set up the Uniref100 database for the taxonomy pipeline according to the instructions, but when I run the taxonomy command, the output says `Computed index is too large. Avoid using the index`. It also says `split was set to 5 but at least 8 are required. Please run with default paramerters` even though I never adjusted the default. Are these things I should be worried about, and could I be doing something different to make this search more efficient? I know it is a huge database. Full traceback of commands below. Thank you in advance,; -Matt. ## Commands to set up the taxonomy database; ```; mmseqs databases UniRef100 uniref100.mmseqs tmp. mmseqs createtaxdb uniref100.mmseqs tmp --threads 8; createtaxdb uniref100.mmseqs tmp --threads 8. mmseqs createindex uniref100.mmseqs tmp --threads 8; createindex uniref100.mmseqs tmp --threads 8; ```. ## Search commands; ```; mmseqs createdb N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.faa N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db. mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_42; 5.proteins.taxonomy temp --threads 8; ```. ## Full traceback of search command; ```; mmseqs taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8; Tmp temp folder does not exist or is not a directory.; Create dir temp; taxonomy ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.taxonomy temp --threads 8. MMseqs Version: ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1; Seq. id. threshold 0; Min alignment length 0; Seq. id",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/278:5141,Safety,Avoid,Avoid,5141,"my output mode 0. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. search ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs temp/9118733262229857306/first temp/9118733262229857306/tmp_hsp1 --alignment-mode 2 -e 1 --threads 8 -s 5.7 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1. prefilter ../N4_005_008G1_Pseudomonas_aeruginosa_66_425.proteins.db /LAB_DATA/DATABASES/UniRef100/uniref100.mmseqs.idx temp/9118733262229857306/tmp_hsp1/5064659849361391999/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --s; plit 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 -s 5.7. Index version: 16; Generated by: 98c37f3c32b222632ada6011504380e91351276b; ScoreMatrix: VTML80.out; Query database size: 6282 type: Aminoacid; split was set to 5 but at least 8 are required. Please run with default paramerters; Target split mode. Searching through 5 splits; Estimated memory consumption: 138G; Process needs more than 113G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; Target database size: 213522593 type: Aminoacid; Process prefiltering step 1 of 5. k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 5); Query db start 1 to 6282; Target db start 1 to 42795128; ```",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/278
https://github.com/soedinglab/MMseqs2/issues/279:1237,Availability,down,down,1237,"## Information. Hi,. I am a bit confused with the MMseqs2 suite modules. If I understood correctly:. - when I do `mmseqs search args`, it uses the algorithm described in https://www.nature.com/nbt/journal/vaop/ncurrent/full/nbt.3988.html (3 stages: prefilter, ungapped alignment, gapped SW alignment. The last one generates similarity file, giving the % of similarity for each pair of sequences); - when I run `mmseqs linclust args`, it executes the algorithm described in https://www.nature.com/articles/s41467-018-04964-5; - For `mmseqs cluster`, I saw that it is slower than linclust, but also way more sensitive. So, I am using this module, to cluster sequences with min-seq-id = 0.8 (default of mmseqs). But I do not understand what is used. In the userguide, I saw :. > mmseqs cluster: Clusters sequences by similarity. It compares all sequences in the sequence DB with each other using mmseqs search, filters alignments according to userspecified criteria (max. E-value, min. coverage,. . . ), and runs mmseqs clust to group similar sequences together into cluster' (p.17). At the same time, in p.22, I saw:. > The cascaded clustering workflow first runs linclust, our linear-time clustering module, that can produce clustering’s down to 50% sequence identity in very short time. To achieve lower sequence identities and/or to further improve the resulting clusters, we continue with three cascaded clustering steps. Cascaded clustering being the default for `mmseqs cluster`, this would mean that the search module is not used?. When using `mmseqs search args` I can get the similarity file in blast format (using convertalis). Therefore, is it also possible to get this file at the end of clustering step, if it uses mmseqs search algorithm as I saw p.14?. I don't know if my questions are really clear. Please do not hesitate to ask me if you need some more information. Thanks a lot for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279
https://github.com/soedinglab/MMseqs2/issues/279:1806,Usability,clear,clear,1806,"## Information. Hi,. I am a bit confused with the MMseqs2 suite modules. If I understood correctly:. - when I do `mmseqs search args`, it uses the algorithm described in https://www.nature.com/nbt/journal/vaop/ncurrent/full/nbt.3988.html (3 stages: prefilter, ungapped alignment, gapped SW alignment. The last one generates similarity file, giving the % of similarity for each pair of sequences); - when I run `mmseqs linclust args`, it executes the algorithm described in https://www.nature.com/articles/s41467-018-04964-5; - For `mmseqs cluster`, I saw that it is slower than linclust, but also way more sensitive. So, I am using this module, to cluster sequences with min-seq-id = 0.8 (default of mmseqs). But I do not understand what is used. In the userguide, I saw :. > mmseqs cluster: Clusters sequences by similarity. It compares all sequences in the sequence DB with each other using mmseqs search, filters alignments according to userspecified criteria (max. E-value, min. coverage,. . . ), and runs mmseqs clust to group similar sequences together into cluster' (p.17). At the same time, in p.22, I saw:. > The cascaded clustering workflow first runs linclust, our linear-time clustering module, that can produce clustering’s down to 50% sequence identity in very short time. To achieve lower sequence identities and/or to further improve the resulting clusters, we continue with three cascaded clustering steps. Cascaded clustering being the default for `mmseqs cluster`, this would mean that the search module is not used?. When using `mmseqs search args` I can get the similarity file in blast format (using convertalis). Therefore, is it also possible to get this file at the end of clustering step, if it uses mmseqs search algorithm as I saw p.14?. I don't know if my questions are really clear. Please do not hesitate to ask me if you need some more information. Thanks a lot for your help!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/279
https://github.com/soedinglab/MMseqs2/issues/280:780,Availability,mask,mask,780,"## Expected Behavior; createindex creates the index .; ## Current Behavior; createindex crashes when indexing a ~150gb nucl. DB; ## Steps to Reproduce (for bugs); `mmseqs createdb ./cated_sk100_reps.fna ./MMseqs2DB/MMseqs2DB --dbtype 0 --compressed 1`; `mmseqs createindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280
https://github.com/soedinglab/MMseqs2/issues/280:789,Availability,mask,mask-lower-case,789,"## Expected Behavior; createindex creates the index .; ## Current Behavior; createindex crashes when indexing a ~150gb nucl. DB; ## Steps to Reproduce (for bugs); `mmseqs createdb ./cated_sk100_reps.fna ./MMseqs2DB/MMseqs2DB --dbtype 0 --compressed 1`; `mmseqs createindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280
https://github.com/soedinglab/MMseqs2/issues/280:1533,Availability,fault,fault,1533,"ateindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; Any help is appreciated, hopefully I didn't miss something obvious :-); ## Your Environment; `MMseqs2 Version: f966bfa62a2b52d4821e908ac9e25808d1be0b81`; Using the avx2 binary, ; CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; OS: Linux 3.10.0-693.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280
https://github.com/soedinglab/MMseqs2/issues/280:1604,Availability,Error,Error,1604,"ateindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; Any help is appreciated, hopefully I didn't miss something obvious :-); ## Your Environment; `MMseqs2 Version: f966bfa62a2b52d4821e908ac9e25808d1be0b81`; Using the avx2 binary, ; CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; OS: Linux 3.10.0-693.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280
https://github.com/soedinglab/MMseqs2/issues/280:1001,Energy Efficiency,consumption,consumption,1001,"./MMseqs2DB/MMseqs2DB --dbtype 0 --compressed 1`; `mmseqs createindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; Any help is appreciated, hopefully I didn't miss something obvious :-); ## Your Environment; `MMseqs2 Version: f966bfa62a2b52d4821e908ac9e25808d1be0b81`; Using the avx2 binary, ; CPU: Intel(R) Xeon(R) Pl",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280
https://github.com/soedinglab/MMseqs2/issues/280:1700,Energy Efficiency,reduce,reduce,1700,"ateindex ./MMseqs2DB/MMseqs2DB ./tmp --threads 48 --search-type 3 `; ## MMseqs Output (for bugs); Didn't collect the stdout/errr =\ only have these from the terminal; ```; Time for merging to nucl_split_seq_h: 0h 5m 44s 19ms; Time for merging to nucl_split_seq: 0h 4m 40s 563ms; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [>                                                                ] 0.00% 1 eta ./tmp/11929725182862116610/createindex.sh: line 56: 16913 Segmentation fault      ""$MMSEQS"" $INDEXER ""$2/nucl_split_seq"" ""$INPUT"" $INDEX_PAR; Error: indexdb died; ```. ## Context; I'll need to reuse this DB several times, objective is to reduce overall runtime. ; Also, I noticed that seven *.idx[0-6] and seven *.idx.index[0-6] are created in the dir ./MMseqs2DB/ , but only the file MMseqs2DB.idx.0 isn't 0 bytes in size / increases (don't know if this is realted, but it reaches almost exactly 150.0GB (size when createindex crashed).; Any help is appreciated, hopefully I didn't miss something obvious :-); ## Your Environment; `MMseqs2 Version: f966bfa62a2b52d4821e908ac9e25808d1be0b81`; Using the avx2 binary, ; CPU: Intel(R) Xeon(R) Platinum 8168; Memory: 366 GB; OS: Linux 3.10.0-693.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280
https://github.com/soedinglab/MMseqs2/issues/281:571,Availability,avail,available,571,"## Expected Behavior; To provide at least one hit per query.; ## Current Behavior; There are no hits reported for most queries.; I tried mmseqs search (sequence to sequence) with -e 1 (hoping to get at least one hit for each query) with -s 4 and 7.5 followed by mmseqs filterdb --extract-lines 1 and mmseqs convertalis to m8 format.; I would like an advise on how to make mmseqs report the best hit for each query sequence. As I understand it has some quality filters that result in 0 hits passing it for many queries. If that is the case, how to make it report the best available hit?",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281
https://github.com/soedinglab/MMseqs2/issues/282:85,Availability,fault,fault,85,"I am trying to get the msa of a nucleotide cluster results and I have a segmentation fault. mmseqs result2msa all.mmseq all.mmseq all.cluster.subset all.msa --summarize --max-seq-id 1 --diff 1461 --qsc -50 --omit-consensus. Segment violation. When I use Aminoacid sequence, software works well.",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/282
https://github.com/soedinglab/MMseqs2/issues/283:743,Availability,Mask,Mask,743,"## Expected Behavior; When query has 10,000 sequences; Query database size: 10,000 type: Aminoacid; ## Current Behavior; Query database size: 3125 type: Aminoacid. ## Steps to Reproduce (for bugs); Running search or prefilter. ## MMseqs Output (for bugs); MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0; Coverage mode 	0; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id.	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	64; Compressed 	0; Verbosity 	3. Query database size: 3125 type: Aminoacid; Estimated memory consumption: 193G; Target database size: 37233987 type: Aminoacid; Index table k-mer threshold: 141 at k-mer size 7 ; Index table: counting k-mers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283
https://github.com/soedinglab/MMseqs2/issues/283:761,Availability,Mask,Mask,761,"## Expected Behavior; When query has 10,000 sequences; Query database size: 10,000 type: Aminoacid; ## Current Behavior; Query database size: 3125 type: Aminoacid. ## Steps to Reproduce (for bugs); Running search or prefilter. ## MMseqs Output (for bugs); MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0; Coverage mode 	0; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id.	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	64; Compressed 	0; Verbosity 	3. Query database size: 3125 type: Aminoacid; Estimated memory consumption: 193G; Target database size: 37233987 type: Aminoacid; Index table k-mer threshold: 141 at k-mer size 7 ; Index table: counting k-mers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283
https://github.com/soedinglab/MMseqs2/issues/283:1077,Energy Efficiency,consumption,consumption,1077,"## Expected Behavior; When query has 10,000 sequences; Query database size: 10,000 type: Aminoacid; ## Current Behavior; Query database size: 3125 type: Aminoacid. ## Steps to Reproduce (for bugs); Running search or prefilter. ## MMseqs Output (for bugs); MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max sequence length 	65535; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Coverage threshold 	0; Coverage mode 	0; Compositional bias 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Include identical seq. id.	false; Spaced k-mers 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Local temporary path 	; Threads 	64; Compressed 	0; Verbosity 	3. Query database size: 3125 type: Aminoacid; Estimated memory consumption: 193G; Target database size: 37233987 type: Aminoacid; Index table k-mer threshold: 141 at k-mer size 7 ; Index table: counting k-mers",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283
https://github.com/soedinglab/MMseqs2/issues/284:1602,Availability,Mask,Mask,1602,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:1619,Availability,Mask,Mask,1619,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2388,Availability,mask,mask,2388,"de 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2397,Availability,mask,mask-lower-case,2397,"de 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermat",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2808,Availability,mask,mask,2808,"s by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2817,Availability,mask,mask-lower-case,2817,"s by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:3355,Availability,Error,Error,3355,"; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment database: 45461840; Number of clusters: 44582196; Writing results 0h 0m 16s 390ms; ```. ## Your Environment. Version with error: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Version without error: 14014cd0ec50049f796f153ea8a72164ff4b8b45. Both are self compiled on the s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:3509,Availability,error,errors,3509," --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment database: 45461840; Number of clusters: 44582196; Writing results 0h 0m 16s 390ms; ```. ## Your Environment. Version with error: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Version without error: 14014cd0ec50049f796f153ea8a72164ff4b8b45. Both are self compiled on the same operating system (Debian 9 Stretch). . uname -mrs gives; Linux 4.19.0-0.bpo.6-amd64 x86_64. Running on 8 core 60gb machine (with 2 hypert",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:4185,Availability,error,error,4185,"it 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment database: 45461840; Number of clusters: 44582196; Writing results 0h 0m 16s 390ms; ```. ## Your Environment. Version with error: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Version without error: 14014cd0ec50049f796f153ea8a72164ff4b8b45. Both are self compiled on the same operating system (Debian 9 Stretch). . uname -mrs gives; Linux 4.19.0-0.bpo.6-amd64 x86_64. Running on 8 core 60gb machine (with 2 hyperthreads). Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:4254,Availability,error,error,4254,"it 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment database: 45461840; Number of clusters: 44582196; Writing results 0h 0m 16s 390ms; ```. ## Your Environment. Version with error: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Version without error: 14014cd0ec50049f796f153ea8a72164ff4b8b45. Both are self compiled on the same operating system (Debian 9 Stretch). . uname -mrs gives; Linux 4.19.0-0.bpo.6-amd64 x86_64. Running on 8 core 60gb machine (with 2 hyperthreads). Thank you!",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2083,Deployability,install,installed,2083,"hold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:3049,Energy Efficiency,Reduce,Reduced,3049,"e multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment datab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:3338,Energy Efficiency,allocate,allocate,3338,"; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment database: 45461840; Number of clusters: 44582196; Writing results 0h 0m 16s 390ms; ```. ## Your Environment. Version with error: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Version without error: 14014cd0ec50049f796f153ea8a72164ff4b8b45. Both are self compiled on the s",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:1030,Integrability,wrap,wrapped,1030," --split-memory-limit keyword should mitigate memory requirements; ## Current Behavior; Works only with standard MMSeqs2 compiled version, but not with MPI compiled version. . ## Steps to Reproduce (for bugs); Working on 60gb machine with 8cpus (each with 2 hyper threads); ${MMSeqs_bin}/mmseqs createDB in.fasta inDB; ${MMSeqs_bin}/mmseqs cluster inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 3G. Replacing {MMSeqs_bin} with {MMSeqs_non_MPI_bin} results in correct behavior without crashing. ## MMseqs Output (for bugs). ```; mmseqs linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd pa",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2131,Integrability,message,message,2131,"hold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:1716,Modifiability,extend,extendable,1716,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2519,Modifiability,extend,extendable,2519,"le k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2939,Modifiability,extend,extendable,2939,"e multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment datab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:1669,Security,hash,hash,1669,"uDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 ; --split-memory-limit 500; linclust inDB cluDB tmp --min-seq-id 0.6 -c 0.7 -e 1e-10 --split-memory-limit 500; MMseqs Version: aa175d63658d9aa2e908325a6fd40e9dbb260c9a-MPI; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 16; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 1e-10; Seq. id. threshold 0.6; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.7; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 21; Spaced k-mers 0; Scale k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2462,Security,hash,hash-shift,2462,"le k-mers per sequence 0; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 500M; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner; Set cluster mode SET COVER.; beignet-opencl-icd: no supported GPU found, this is probably the wrong opencl-icd package for this hardware; (If you have multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/284:2882,Security,hash,hash-shift,2882,"e multiple ICDs installed and OpenCL works, you can ignore this message); MPI Init; Rank: 0 Size: 1; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; kmermatcher inDB tmp/9757835994511295515/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.6 --kmer-per-seq 21 --spaced-kmer-; mode 0 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.7 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 500M ; --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3; Database size: 62947276 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X); Not enough memory to process at once need to split; [=================================================================] 100.00% 62.95M 2m 27s 641ms; Process file into 51 parts; Can not allocate memory; Error: kmermatcher died; ```. However, for the non MPI version, it works fine. The only difference from normal behavior is possibly the top part of these errors:. ```; Sequence 45461797 does not contain any sequence for key 62885869!; Sequence 45461798 does not contain any sequence for key 62886128!; [=================================================================] 100.00% 461.84K 2s 387ms; Sequence 45461799 does not contain any sequence for key 62888288!; Add missing connections; [=================================================================] 100.00% 45.46M 1s 608ms; Time for read in: 0h 0m 28s 571ms; Total time: 0h 0m 40s 655ms; Size of the sequence database: 45461840; Size of the alignment datab",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284
https://github.com/soedinglab/MMseqs2/issues/287:4453,Availability,mask,mask,4453,"ode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 177.98K 0s 684ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 101ms; Time for merging to q_orfs_aa: 0h 0m 0s 105ms; Time for processing: 0h 0m 1s 79ms; prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:4462,Availability,mask,mask-lower-case,4462,"ode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 24 --compressed 0 -v 3 . [=================================================================] 177.98K 0s 684ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 101ms; Time for merging to q_orfs_aa: 0h 0m 0s 105ms; Time for processing: 0h 0m 1s 79ms; prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:5270,Availability,mask,mask,5270,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:5279,Availability,mask,mask-lower-case,5279,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:6087,Availability,mask,mask,6087,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:6096,Availability,mask,mask-lower-case,6096,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:6904,Availability,mask,mask,6904,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:6913,Availability,mask,mask-lower-case,6913,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:7721,Availability,mask,mask,7721,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:7730,Availability,mask,mask-lower-case,7730,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:8538,Availability,mask,mask,8538,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:8547,Availability,mask,mask-lower-case,8547,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:9355,Availability,mask,mask,9355,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:9364,Availability,mask,mask-lower-case,9364,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:10172,Availability,mask,mask,10172,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:10181,Availability,mask,mask-lower-case,10181,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:10989,Availability,mask,mask,10989,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:10998,Availability,mask,mask-lower-case,10998,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:11806,Availability,mask,mask,11806,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:11815,Availability,mask,mask-lower-case,11815,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:12623,Availability,mask,mask,12623,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:12632,Availability,mask,mask-lower-case,12632,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:13440,Availability,mask,mask,13440,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:13449,Availability,mask,mask-lower-case,13449,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:14257,Availability,mask,mask,14257,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:14266,Availability,mask,mask-lower-case,14266,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:15074,Availability,mask,mask,15074,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:15083,Availability,mask,mask-lower-case,15083,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:15891,Availability,mask,mask,15891,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:15900,Availability,mask,mask-lower-case,15900,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:16708,Availability,mask,mask,16708,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:16717,Availability,mask,mask-lower-case,16717,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:17525,Availability,mask,mask,17525,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:17534,Availability,mask,mask-lower-case,17534,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:18342,Availability,mask,mask,18342,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:18351,Availability,mask,mask-lower-case,18351,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:19159,Availability,mask,mask,19159,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:19168,Availability,mask,mask-lower-case,19168,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:19976,Availability,mask,mask,19976,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:19985,Availability,mask,mask-lower-case,19985,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:20793,Availability,mask,mask,20793,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:20802,Availability,mask,mask-lower-case,20802,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:21610,Availability,mask,mask,21610,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:21619,Availability,mask,mask-lower-case,21619,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:22427,Availability,mask,mask,22427,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:22436,Availability,mask,mask-lower-case,22436,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:23244,Availability,mask,mask,23244,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:23253,Availability,mask,mask-lower-case,23253,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:24061,Availability,mask,mask,24061,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:24070,Availability,mask,mask-lower-case,24070,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:24878,Availability,mask,mask,24878,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:24887,Availability,mask,mask-lower-case,24887,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:25695,Availability,mask,mask,25695,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:25704,Availability,mask,mask-lower-case,25704,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads ",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:26512,Availability,mask,mask,26512,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimate",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:26521,Availability,mask,mask-lower-case,26521,"t,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . prefilter /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/q_orfs_aa /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/target /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0 --sub-mat nucl:/home/ralsalla/mmseqs/matrices/blosum80.out,aa:/home/ralsalla/mmseqs/matrices/blosum80.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.5 . Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimate",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:30271,Availability,Mask,Masked,30271,pe: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer th,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:30545,Availability,Mask,Masked,30545,base size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:30738,Availability,Mask,Masked,30738,id; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Query database size: 313794 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Ind,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:30850,Availability,Mask,Masked,30850,e: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 a,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:31042,Availability,Mask,Masked,31042,tion: 977M; Target database size: 2 type: Aminoacid; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Maske,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:31235,Availability,Mask,Masked,31235,=======] 2 0s 24ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 26ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [==================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:31641,Availability,Mask,Masked,31641,; [=================================================================] 2 0s 68ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:31752,Availability,Mask,Masked,31752,0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 1ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:32041,Availability,Mask,Masked,32041,sked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Ind,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:32168,Availability,Mask,Masked,32168,======================================] 2 0s 46ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [==================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:32280,Availability,Mask,Masked,32280, 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; In,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:32443,Availability,Mask,Masked,32443,114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 33ms; Index table: Masked residues: 0; [=================================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked res,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:32666,Availability,Mask,Masked,32666,==========================================================] 2 0s 2ms; Index table: Masked residues: 0; Index table: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer th,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:32778,Availability,Mask,Masked,32778,le: counting k-mers; [=================Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ================================================[=================================================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [==================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:32971,Availability,Mask,Masked,32971,=========================================] 2 0s 51ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; ] 2 0s 57ms; Index table: Masked residues: 0; [=================================================================] 2 0s 41ms; Index table: Masked residues: 0; [=================================================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:33325,Availability,Mask,Masked,33325,======================================] 2 0s 25ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:33437,Availability,Mask,Masked,33437,e: Masked residues: 0; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: M,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:33549,Availability,Mask,Masked,33549,ble: counting k-mers; [=================================================================] 2 0s 10ms; Index table: Masked residues: 0; [=================================================================] 2 0s 59ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; ,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:33823,Availability,Mask,Masked,33823, 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 19ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 0ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: Masked residues: 0; [=================================================================] 2 0s 15ms; Index table: Masked residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:34440,Availability,Mask,Masked,34440, residues: 0; [=================================================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [======================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:34473,Availability,Mask,Masked,34473,===============================================] 2 0s 66ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index ta,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:34647,Availability,Mask,Masked,34647,Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 43ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [================================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:34902,Availability,Mask,Masked,34902,: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fi,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:34948,Availability,Mask,Masked,34948,: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fill; [=========================================,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:34981,Availability,Mask,Masked,34981,le k-mer threshold: 114 at k-mer size 6 ; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: counting k-mers; [=================================================================] 2 0s 62ms; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fill; [=================================================================] 2 0s 0m,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:35288,Availability,Mask,Masked,35288,mers; Index table k-mer threshold: 114 at k-mer size 6 ; [=================================================================] 2 0s 34ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 21ms; Index table: fill; Index table: fill; [=================================================================] 2 0,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:35482,Availability,Mask,Masked,35482,ues: 0; Index table: counting k-mers; Index table: counting k-mers; [=[=================================================================] 2 0s 21ms; Index table: Masked residues: 0; ================================================================[=================================================================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 21ms; Index table: fill; Index table: fill; [=================================================================] 2 0s 0ms; [=================================================================] 2 0s 47ms; Index table: fill; [=================================================================] 2 0s 12ms; Index tabl,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:35773,Availability,Mask,Masked,35773,=====================] 2 0s 28ms; [=================================================================] 2 0s 18ms; Index table: Masked residues: 0; ] 2 0s 28ms; Index table: Masked residues: 0; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 22ms; [=================================================================] 2 0s 72ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 2 0s 138ms; Index table: Masked residues: 0; Index table k-mer threshold: 114 at k-mer size 6 ; Index table: counting k-mers; Index table: fill; [=================================================================] 2 0s 15ms; [=================================================================] 2 0s 44ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 2 0s 19ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 21ms; Index table: fill; Index table: fill; [=================================================================] 2 0s 0ms; [=================================================================] 2 0s 47ms; Index table: fill; [=================================================================] 2 0s 12ms; Index table: fill; [=================================================================] 2 0s 4ms; Index table: fill; [=================================================================] 2 0s 0ms; Index table: fill; [=================================================================] 2 0s 0ms; Index tabl,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:45044,Availability,Error,Error,45044," 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specif",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:45067,Availability,Error,Error,45067," 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specif",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:45092,Availability,Error,Error,45092," 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Process prefiltering step 1 of 1. k-mer similarity threshold: 114; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specif",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:45867,Deployability,RELEASE,RELEASE,45867,"ref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slots with 8 slots per host with a total requested memory of 199992.00 MB; * Operating system and version:; uname -a; Linux nodecn104 3.10.0-957.21.3.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:45939,Deployability,install,install,45939,"ref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slots with 8 slots per host with a total requested memory of 199992.00 MB; * Operating system and version:; uname -a; Linux nodecn104 3.10.0-957.21.3.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:45992,Deployability,install,install,45992,"ref_0.index.1!; Could not delete /scratch_space/ralsalla/tmp/tmp_Query/14787809421693788807/search_tmp/2554525338348426027/search/pref_0.index.1!; //-------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; //-------------------------------------------------------; //--------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[58909,1],22]; Exit code: 1; //--------------------------------------------------------------------------; Error: Prefilter died; Error: Search step died; Error: Search died. ## Context; Running mmseqs2 with openMPI on a high performance cluster (LSF). ## Your Environment; Include as many relevant details about the environment you experienced the bug in.; * Git commit used (The string after ""MMseqs Version:"" when you execute MMseqs without any parameters): 3863af9ac6d30f3b17620254f3a4a05b7f6b7010; * Which MMseqs version was used: (Statically-compiled, self-compiled, Homebrew, etc.): self-compiled with Open MPI version 1.10.3; * For self-compiled and Homebrew: Compiler and Cmake versions used and their invocation:; mpic++/ 4.8.5 20150623 (Red Hat 4.8.5-36); cmake/3.12.3 ; module load cmake/3.12.3 ; module load openmpi/gcc/64/1.10.3 ; cd mmseqs2; mkdir build ; cd build ; CC=mpicc CXX=mpic++ cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/hpcf/authorized_apps/rhel7_apps/mmseqs2/install/11-e1a1c_sse4.1 -DHAVE_SSE4_1=1 ; make; make install. * Server specifications (especially CPU support for AVX2/SSE and amount of system memory):; LSF with SSE4 support. The job was submitted using 24 slots with 8 slots per host with a total requested memory of 199992.00 MB; * Operating system and version:; uname -a; Linux nodecn104 3.10.0-957.21.3.el7.x86_64",MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:26744,Energy Efficiency,consumption,consumption,26744,,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:26866,Energy Efficiency,consumption,consumption,26866,,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:26988,Energy Efficiency,consumption,consumption,26988,,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:27110,Energy Efficiency,consumption,consumption,27110,,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
https://github.com/soedinglab/MMseqs2/issues/287:27232,Energy Efficiency,consumption,consumption,27232,,MatchSource.ISSUE,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/287
